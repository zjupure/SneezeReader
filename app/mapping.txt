android.support.design.R -> android.support.design.a:
android.support.design.R$anim -> android.support.design.b:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_grow_fade_in_from_bottom -> abc_grow_fade_in_from_bottom
    int abc_popup_enter -> abc_popup_enter
    int abc_popup_exit -> abc_popup_exit
    int abc_shrink_fade_out_from_bottom -> abc_shrink_fade_out_from_bottom
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
    int design_fab_in -> design_fab_in
    int design_fab_out -> design_fab_out
    int design_snackbar_in -> design_snackbar_in
    int design_snackbar_out -> design_snackbar_out
android.support.design.R$attr -> android.support.design.c:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarPopupTheme -> actionBarPopupTheme
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarTheme -> actionBarTheme
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionOverflowMenuStyle -> actionOverflowMenuStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int alertDialogButtonGroupStyle -> alertDialogButtonGroupStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int arrowHeadLength -> arrowHeadLength
    int arrowShaftLength -> arrowShaftLength
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int backgroundTint -> backgroundTint
    int backgroundTintMode -> backgroundTintMode
    int barLength -> barLength
    int behavior_overlapTop -> behavior_overlapTop
    int borderWidth -> borderWidth
    int borderlessButtonStyle -> borderlessButtonStyle
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarNegativeButtonStyle -> buttonBarNegativeButtonStyle
    int buttonBarNeutralButtonStyle -> buttonBarNeutralButtonStyle
    int buttonBarPositiveButtonStyle -> buttonBarPositiveButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int buttonPanelSideLayout -> buttonPanelSideLayout
    int buttonStyle -> buttonStyle
    int buttonStyleSmall -> buttonStyleSmall
    int buttonTint -> buttonTint
    int buttonTintMode -> buttonTintMode
    int checkboxStyle -> checkboxStyle
    int checkedTextViewStyle -> checkedTextViewStyle
    int closeIcon -> closeIcon
    int closeItemLayout -> closeItemLayout
    int collapseContentDescription -> collapseContentDescription
    int collapseIcon -> collapseIcon
    int collapsedTitleGravity -> collapsedTitleGravity
    int collapsedTitleTextAppearance -> collapsedTitleTextAppearance
    int color -> color
    int colorAccent -> colorAccent
    int colorButtonNormal -> colorButtonNormal
    int colorControlActivated -> colorControlActivated
    int colorControlHighlight -> colorControlHighlight
    int colorControlNormal -> colorControlNormal
    int colorPrimary -> colorPrimary
    int colorPrimaryDark -> colorPrimaryDark
    int colorSwitchThumbNormal -> colorSwitchThumbNormal
    int commitIcon -> commitIcon
    int contentInsetEnd -> contentInsetEnd
    int contentInsetLeft -> contentInsetLeft
    int contentInsetRight -> contentInsetRight
    int contentInsetStart -> contentInsetStart
    int contentScrim -> contentScrim
    int controlBackground -> controlBackground
    int customNavigationLayout -> customNavigationLayout
    int defaultQueryHint -> defaultQueryHint
    int dialogPreferredPadding -> dialogPreferredPadding
    int dialogTheme -> dialogTheme
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int drawableSize -> drawableSize
    int drawerArrowStyle -> drawerArrowStyle
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int editTextBackground -> editTextBackground
    int editTextColor -> editTextColor
    int editTextStyle -> editTextStyle
    int elevation -> elevation
    int errorEnabled -> errorEnabled
    int errorTextAppearance -> errorTextAppearance
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int expanded -> expanded
    int expandedTitleGravity -> expandedTitleGravity
    int expandedTitleMargin -> expandedTitleMargin
    int expandedTitleMarginBottom -> expandedTitleMarginBottom
    int expandedTitleMarginEnd -> expandedTitleMarginEnd
    int expandedTitleMarginStart -> expandedTitleMarginStart
    int expandedTitleMarginTop -> expandedTitleMarginTop
    int expandedTitleTextAppearance -> expandedTitleTextAppearance
    int fabSize -> fabSize
    int gapBetweenBars -> gapBetweenBars
    int goIcon -> goIcon
    int headerLayout -> headerLayout
    int height -> height
    int hideOnContentScroll -> hideOnContentScroll
    int hintAnimationEnabled -> hintAnimationEnabled
    int hintTextAppearance -> hintTextAppearance
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int insetForeground -> insetForeground
    int isLightTheme -> isLightTheme
    int itemBackground -> itemBackground
    int itemIconTint -> itemIconTint
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int itemTextColor -> itemTextColor
    int keylines -> keylines
    int layout -> layout
    int layout_anchor -> layout_anchor
    int layout_anchorGravity -> layout_anchorGravity
    int layout_behavior -> layout_behavior
    int layout_collapseMode -> layout_collapseMode
    int layout_collapseParallaxMultiplier -> layout_collapseParallaxMultiplier
    int layout_keyline -> layout_keyline
    int layout_scrollFlags -> layout_scrollFlags
    int layout_scrollInterpolator -> layout_scrollInterpolator
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listDividerAlertDialog -> listDividerAlertDialog
    int listItemLayout -> listItemLayout
    int listLayout -> listLayout
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int logoDescription -> logoDescription
    int maxActionInlineWidth -> maxActionInlineWidth
    int maxButtonHeight -> maxButtonHeight
    int measureWithLargestChild -> measureWithLargestChild
    int menu -> menu
    int multiChoiceItemLayout -> multiChoiceItemLayout
    int navigationContentDescription -> navigationContentDescription
    int navigationIcon -> navigationIcon
    int navigationMode -> navigationMode
    int overlapAnchor -> overlapAnchor
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelBackground -> panelBackground
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupTheme -> popupTheme
    int popupWindowStyle -> popupWindowStyle
    int preserveIconSpacing -> preserveIconSpacing
    int pressedTranslationZ -> pressedTranslationZ
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryBackground -> queryBackground
    int queryHint -> queryHint
    int radioButtonStyle -> radioButtonStyle
    int ratingBarStyle -> ratingBarStyle
    int rippleColor -> rippleColor
    int searchHintIcon -> searchHintIcon
    int searchIcon -> searchIcon
    int searchViewStyle -> searchViewStyle
    int selectableItemBackground -> selectableItemBackground
    int selectableItemBackgroundBorderless -> selectableItemBackgroundBorderless
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int showText -> showText
    int singleChoiceItemLayout -> singleChoiceItemLayout
    int spinBars -> spinBars
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerStyle -> spinnerStyle
    int splitTrack -> splitTrack
    int state_above_anchor -> state_above_anchor
    int statusBarBackground -> statusBarBackground
    int statusBarScrim -> statusBarScrim
    int submitBackground -> submitBackground
    int subtitle -> subtitle
    int subtitleTextAppearance -> subtitleTextAppearance
    int subtitleTextColor -> subtitleTextColor
    int subtitleTextStyle -> subtitleTextStyle
    int suggestionRowLayout -> suggestionRowLayout
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchStyle -> switchStyle
    int switchTextAppearance -> switchTextAppearance
    int tabBackground -> tabBackground
    int tabContentStart -> tabContentStart
    int tabGravity -> tabGravity
    int tabIndicatorColor -> tabIndicatorColor
    int tabIndicatorHeight -> tabIndicatorHeight
    int tabMaxWidth -> tabMaxWidth
    int tabMinWidth -> tabMinWidth
    int tabMode -> tabMode
    int tabPadding -> tabPadding
    int tabPaddingBottom -> tabPaddingBottom
    int tabPaddingEnd -> tabPaddingEnd
    int tabPaddingStart -> tabPaddingStart
    int tabPaddingTop -> tabPaddingTop
    int tabSelectedTextColor -> tabSelectedTextColor
    int tabTextAppearance -> tabTextAppearance
    int tabTextColor -> tabTextColor
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorAlertDialogListItem -> textColorAlertDialogListItem
    int textColorSearchUrl -> textColorSearchUrl
    int theme -> theme
    int thickness -> thickness
    int thumbTextPadding -> thumbTextPadding
    int title -> title
    int titleEnabled -> titleEnabled
    int titleMarginBottom -> titleMarginBottom
    int titleMarginEnd -> titleMarginEnd
    int titleMarginStart -> titleMarginStart
    int titleMarginTop -> titleMarginTop
    int titleMargins -> titleMargins
    int titleTextAppearance -> titleTextAppearance
    int titleTextColor -> titleTextColor
    int titleTextStyle -> titleTextStyle
    int toolbarId -> toolbarId
    int toolbarNavigationButtonStyle -> toolbarNavigationButtonStyle
    int toolbarStyle -> toolbarStyle
    int track -> track
    int voiceIcon -> voiceIcon
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
android.support.design.R$color -> android.support.design.d:
    int abc_background_cache_hint_selector_material_dark -> abc_background_cache_hint_selector_material_dark
    int abc_background_cache_hint_selector_material_light -> abc_background_cache_hint_selector_material_light
    int abc_color_highlight_material -> abc_color_highlight_material
    int abc_input_method_navigation_guard -> abc_input_method_navigation_guard
    int abc_primary_text_disable_only_material_dark -> abc_primary_text_disable_only_material_dark
    int abc_primary_text_disable_only_material_light -> abc_primary_text_disable_only_material_light
    int abc_primary_text_material_dark -> abc_primary_text_material_dark
    int abc_primary_text_material_light -> abc_primary_text_material_light
    int abc_search_url_text -> abc_search_url_text
    int abc_search_url_text_normal -> abc_search_url_text_normal
    int abc_search_url_text_pressed -> abc_search_url_text_pressed
    int abc_search_url_text_selected -> abc_search_url_text_selected
    int abc_secondary_text_material_dark -> abc_secondary_text_material_dark
    int abc_secondary_text_material_light -> abc_secondary_text_material_light
    int accent_material_dark -> accent_material_dark
    int accent_material_light -> accent_material_light
    int background_floating_material_dark -> background_floating_material_dark
    int background_floating_material_light -> background_floating_material_light
    int background_material_dark -> background_material_dark
    int background_material_light -> background_material_light
    int bright_foreground_disabled_material_dark -> bright_foreground_disabled_material_dark
    int bright_foreground_disabled_material_light -> bright_foreground_disabled_material_light
    int bright_foreground_inverse_material_dark -> bright_foreground_inverse_material_dark
    int bright_foreground_inverse_material_light -> bright_foreground_inverse_material_light
    int bright_foreground_material_dark -> bright_foreground_material_dark
    int bright_foreground_material_light -> bright_foreground_material_light
    int button_material_dark -> button_material_dark
    int button_material_light -> button_material_light
    int design_fab_shadow_end_color -> design_fab_shadow_end_color
    int design_fab_shadow_mid_color -> design_fab_shadow_mid_color
    int design_fab_shadow_start_color -> design_fab_shadow_start_color
    int design_fab_stroke_end_inner_color -> design_fab_stroke_end_inner_color
    int design_fab_stroke_end_outer_color -> design_fab_stroke_end_outer_color
    int design_fab_stroke_top_inner_color -> design_fab_stroke_top_inner_color
    int design_fab_stroke_top_outer_color -> design_fab_stroke_top_outer_color
    int design_snackbar_background_color -> design_snackbar_background_color
    int design_textinput_error_color -> design_textinput_error_color
    int dim_foreground_disabled_material_dark -> dim_foreground_disabled_material_dark
    int dim_foreground_disabled_material_light -> dim_foreground_disabled_material_light
    int dim_foreground_material_dark -> dim_foreground_material_dark
    int dim_foreground_material_light -> dim_foreground_material_light
    int foreground_material_dark -> foreground_material_dark
    int foreground_material_light -> foreground_material_light
    int highlighted_text_material_dark -> highlighted_text_material_dark
    int highlighted_text_material_light -> highlighted_text_material_light
    int hint_foreground_material_dark -> hint_foreground_material_dark
    int hint_foreground_material_light -> hint_foreground_material_light
    int material_blue_grey_800 -> material_blue_grey_800
    int material_blue_grey_900 -> material_blue_grey_900
    int material_blue_grey_950 -> material_blue_grey_950
    int material_deep_teal_200 -> material_deep_teal_200
    int material_deep_teal_500 -> material_deep_teal_500
    int material_grey_100 -> material_grey_100
    int material_grey_300 -> material_grey_300
    int material_grey_50 -> material_grey_50
    int material_grey_600 -> material_grey_600
    int material_grey_800 -> material_grey_800
    int material_grey_850 -> material_grey_850
    int material_grey_900 -> material_grey_900
    int primary_dark_material_dark -> primary_dark_material_dark
    int primary_dark_material_light -> primary_dark_material_light
    int primary_material_dark -> primary_material_dark
    int primary_material_light -> primary_material_light
    int primary_text_default_material_dark -> primary_text_default_material_dark
    int primary_text_default_material_light -> primary_text_default_material_light
    int primary_text_disabled_material_dark -> primary_text_disabled_material_dark
    int primary_text_disabled_material_light -> primary_text_disabled_material_light
    int ripple_material_dark -> ripple_material_dark
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_dark -> secondary_text_default_material_dark
    int secondary_text_default_material_light -> secondary_text_default_material_light
    int secondary_text_disabled_material_dark -> secondary_text_disabled_material_dark
    int secondary_text_disabled_material_light -> secondary_text_disabled_material_light
    int switch_thumb_disabled_material_dark -> switch_thumb_disabled_material_dark
    int switch_thumb_disabled_material_light -> switch_thumb_disabled_material_light
    int switch_thumb_material_dark -> switch_thumb_material_dark
    int switch_thumb_material_light -> switch_thumb_material_light
    int switch_thumb_normal_material_dark -> switch_thumb_normal_material_dark
    int switch_thumb_normal_material_light -> switch_thumb_normal_material_light
android.support.design.R$dimen -> android.support.design.e:
    int abc_action_bar_content_inset_material -> abc_action_bar_content_inset_material
    int abc_action_bar_default_height_material -> abc_action_bar_default_height_material
    int abc_action_bar_default_padding_end_material -> abc_action_bar_default_padding_end_material
    int abc_action_bar_default_padding_start_material -> abc_action_bar_default_padding_start_material
    int abc_action_bar_icon_vertical_padding_material -> abc_action_bar_icon_vertical_padding_material
    int abc_action_bar_overflow_padding_end_material -> abc_action_bar_overflow_padding_end_material
    int abc_action_bar_overflow_padding_start_material -> abc_action_bar_overflow_padding_start_material
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin_material -> abc_action_bar_subtitle_bottom_margin_material
    int abc_action_bar_subtitle_top_margin_material -> abc_action_bar_subtitle_top_margin_material
    int abc_action_button_min_height_material -> abc_action_button_min_height_material
    int abc_action_button_min_width_material -> abc_action_button_min_width_material
    int abc_action_button_min_width_overflow_material -> abc_action_button_min_width_overflow_material
    int abc_alert_dialog_button_bar_height -> abc_alert_dialog_button_bar_height
    int abc_button_inset_horizontal_material -> abc_button_inset_horizontal_material
    int abc_button_inset_vertical_material -> abc_button_inset_vertical_material
    int abc_button_padding_horizontal_material -> abc_button_padding_horizontal_material
    int abc_button_padding_vertical_material -> abc_button_padding_vertical_material
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_control_corner_material -> abc_control_corner_material
    int abc_control_inset_material -> abc_control_inset_material
    int abc_control_padding_material -> abc_control_padding_material
    int abc_dialog_list_padding_vertical_material -> abc_dialog_list_padding_vertical_material
    int abc_dialog_min_width_major -> abc_dialog_min_width_major
    int abc_dialog_min_width_minor -> abc_dialog_min_width_minor
    int abc_dialog_padding_material -> abc_dialog_padding_material
    int abc_dialog_padding_top_material -> abc_dialog_padding_top_material
    int abc_disabled_alpha_material_dark -> abc_disabled_alpha_material_dark
    int abc_disabled_alpha_material_light -> abc_disabled_alpha_material_light
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_edit_text_inset_bottom_material -> abc_edit_text_inset_bottom_material
    int abc_edit_text_inset_horizontal_material -> abc_edit_text_inset_horizontal_material
    int abc_edit_text_inset_top_material -> abc_edit_text_inset_top_material
    int abc_floating_window_z -> abc_floating_window_z
    int abc_list_item_padding_horizontal_material -> abc_list_item_padding_horizontal_material
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_search_view_text_min_width -> abc_search_view_text_min_width
    int abc_switch_padding -> abc_switch_padding
    int abc_text_size_body_1_material -> abc_text_size_body_1_material
    int abc_text_size_body_2_material -> abc_text_size_body_2_material
    int abc_text_size_button_material -> abc_text_size_button_material
    int abc_text_size_caption_material -> abc_text_size_caption_material
    int abc_text_size_display_1_material -> abc_text_size_display_1_material
    int abc_text_size_display_2_material -> abc_text_size_display_2_material
    int abc_text_size_display_3_material -> abc_text_size_display_3_material
    int abc_text_size_display_4_material -> abc_text_size_display_4_material
    int abc_text_size_headline_material -> abc_text_size_headline_material
    int abc_text_size_large_material -> abc_text_size_large_material
    int abc_text_size_medium_material -> abc_text_size_medium_material
    int abc_text_size_menu_material -> abc_text_size_menu_material
    int abc_text_size_small_material -> abc_text_size_small_material
    int abc_text_size_subhead_material -> abc_text_size_subhead_material
    int abc_text_size_subtitle_material_toolbar -> abc_text_size_subtitle_material_toolbar
    int abc_text_size_title_material -> abc_text_size_title_material
    int abc_text_size_title_material_toolbar -> abc_text_size_title_material_toolbar
    int design_appbar_elevation -> design_appbar_elevation
    int design_fab_border_width -> design_fab_border_width
    int design_fab_content_size -> design_fab_content_size
    int design_fab_elevation -> design_fab_elevation
    int design_fab_size_mini -> design_fab_size_mini
    int design_fab_size_normal -> design_fab_size_normal
    int design_fab_translation_z_pressed -> design_fab_translation_z_pressed
    int design_navigation_elevation -> design_navigation_elevation
    int design_navigation_icon_padding -> design_navigation_icon_padding
    int design_navigation_icon_size -> design_navigation_icon_size
    int design_navigation_max_width -> design_navigation_max_width
    int design_navigation_padding_bottom -> design_navigation_padding_bottom
    int design_navigation_padding_top_default -> design_navigation_padding_top_default
    int design_navigation_separator_vertical_padding -> design_navigation_separator_vertical_padding
    int design_snackbar_action_inline_max_width -> design_snackbar_action_inline_max_width
    int design_snackbar_background_corner_radius -> design_snackbar_background_corner_radius
    int design_snackbar_elevation -> design_snackbar_elevation
    int design_snackbar_extra_spacing_horizontal -> design_snackbar_extra_spacing_horizontal
    int design_snackbar_max_width -> design_snackbar_max_width
    int design_snackbar_min_width -> design_snackbar_min_width
    int design_snackbar_padding_horizontal -> design_snackbar_padding_horizontal
    int design_snackbar_padding_vertical -> design_snackbar_padding_vertical
    int design_snackbar_padding_vertical_2lines -> design_snackbar_padding_vertical_2lines
    int design_snackbar_text_size -> design_snackbar_text_size
    int design_tab_max_width -> design_tab_max_width
    int design_tab_min_width -> design_tab_min_width
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
    int disabled_alpha_material_dark -> disabled_alpha_material_dark
    int disabled_alpha_material_light -> disabled_alpha_material_light
    int highlight_alpha_material_colored -> highlight_alpha_material_colored
    int highlight_alpha_material_dark -> highlight_alpha_material_dark
    int highlight_alpha_material_light -> highlight_alpha_material_light
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_subtext_size -> notification_subtext_size
android.support.design.R$drawable -> android.support.design.f:
    int abc_ab_share_pack_mtrl_alpha -> abc_ab_share_pack_mtrl_alpha
    int abc_action_bar_item_background_material -> abc_action_bar_item_background_material
    int abc_btn_borderless_material -> abc_btn_borderless_material
    int abc_btn_check_material -> abc_btn_check_material
    int abc_btn_check_to_on_mtrl_000 -> abc_btn_check_to_on_mtrl_000
    int abc_btn_check_to_on_mtrl_015 -> abc_btn_check_to_on_mtrl_015
    int abc_btn_colored_material -> abc_btn_colored_material
    int abc_btn_default_mtrl_shape -> abc_btn_default_mtrl_shape
    int abc_btn_radio_material -> abc_btn_radio_material
    int abc_btn_radio_to_on_mtrl_000 -> abc_btn_radio_to_on_mtrl_000
    int abc_btn_radio_to_on_mtrl_015 -> abc_btn_radio_to_on_mtrl_015
    int abc_btn_rating_star_off_mtrl_alpha -> abc_btn_rating_star_off_mtrl_alpha
    int abc_btn_rating_star_on_mtrl_alpha -> abc_btn_rating_star_on_mtrl_alpha
    int abc_btn_switch_to_on_mtrl_00001 -> abc_btn_switch_to_on_mtrl_00001
    int abc_btn_switch_to_on_mtrl_00012 -> abc_btn_switch_to_on_mtrl_00012
    int abc_cab_background_internal_bg -> abc_cab_background_internal_bg
    int abc_cab_background_top_material -> abc_cab_background_top_material
    int abc_cab_background_top_mtrl_alpha -> abc_cab_background_top_mtrl_alpha
    int abc_control_background_material -> abc_control_background_material
    int abc_dialog_material_background_dark -> abc_dialog_material_background_dark
    int abc_dialog_material_background_light -> abc_dialog_material_background_light
    int abc_edit_text_material -> abc_edit_text_material
    int abc_ic_ab_back_mtrl_am_alpha -> abc_ic_ab_back_mtrl_am_alpha
    int abc_ic_clear_mtrl_alpha -> abc_ic_clear_mtrl_alpha
    int abc_ic_commit_search_api_mtrl_alpha -> abc_ic_commit_search_api_mtrl_alpha
    int abc_ic_go_search_api_mtrl_alpha -> abc_ic_go_search_api_mtrl_alpha
    int abc_ic_menu_copy_mtrl_am_alpha -> abc_ic_menu_copy_mtrl_am_alpha
    int abc_ic_menu_cut_mtrl_alpha -> abc_ic_menu_cut_mtrl_alpha
    int abc_ic_menu_moreoverflow_mtrl_alpha -> abc_ic_menu_moreoverflow_mtrl_alpha
    int abc_ic_menu_paste_mtrl_am_alpha -> abc_ic_menu_paste_mtrl_am_alpha
    int abc_ic_menu_selectall_mtrl_alpha -> abc_ic_menu_selectall_mtrl_alpha
    int abc_ic_menu_share_mtrl_alpha -> abc_ic_menu_share_mtrl_alpha
    int abc_ic_search_api_mtrl_alpha -> abc_ic_search_api_mtrl_alpha
    int abc_ic_voice_search_api_mtrl_alpha -> abc_ic_voice_search_api_mtrl_alpha
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_mtrl_alpha -> abc_list_divider_mtrl_alpha
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_hardkey_panel_mtrl_mult -> abc_menu_hardkey_panel_mtrl_mult
    int abc_popup_background_mtrl_mult -> abc_popup_background_mtrl_mult
    int abc_ratingbar_full_material -> abc_ratingbar_full_material
    int abc_spinner_mtrl_am_alpha -> abc_spinner_mtrl_am_alpha
    int abc_spinner_textfield_background_material -> abc_spinner_textfield_background_material
    int abc_switch_thumb_material -> abc_switch_thumb_material
    int abc_switch_track_mtrl_alpha -> abc_switch_track_mtrl_alpha
    int abc_tab_indicator_material -> abc_tab_indicator_material
    int abc_tab_indicator_mtrl_alpha -> abc_tab_indicator_mtrl_alpha
    int abc_text_cursor_material -> abc_text_cursor_material
    int abc_textfield_activated_mtrl_alpha -> abc_textfield_activated_mtrl_alpha
    int abc_textfield_default_mtrl_alpha -> abc_textfield_default_mtrl_alpha
    int abc_textfield_search_activated_mtrl_alpha -> abc_textfield_search_activated_mtrl_alpha
    int abc_textfield_search_default_mtrl_alpha -> abc_textfield_search_default_mtrl_alpha
    int abc_textfield_search_material -> abc_textfield_search_material
    int design_fab_background -> design_fab_background
    int design_snackbar_background -> design_snackbar_background
    int notification_template_icon_bg -> notification_template_icon_bg
android.support.design.R$id -> android.support.design.g:
    int action0 -> action0
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_root -> action_bar_root
    int action_bar_spinner -> action_bar_spinner
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_divider -> action_divider
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int alertTitle -> alertTitle
    int always -> always
    int beginning -> beginning
    int bottom -> bottom
    int buttonPanel -> buttonPanel
    int cancel_action -> cancel_action
    int center -> center
    int center_horizontal -> center_horizontal
    int center_vertical -> center_vertical
    int checkbox -> checkbox
    int chronometer -> chronometer
    int clip_horizontal -> clip_horizontal
    int clip_vertical -> clip_vertical
    int collapseActionView -> collapseActionView
    int contentPanel -> contentPanel
    int custom -> custom
    int customPanel -> customPanel
    int decor_content_parent -> decor_content_parent
    int default_activity_button -> default_activity_button
    int disableHome -> disableHome
    int edit_query -> edit_query
    int end -> end
    int end_padder -> end_padder
    int enterAlways -> enterAlways
    int enterAlwaysCollapsed -> enterAlwaysCollapsed
    int exitUntilCollapsed -> exitUntilCollapsed
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int fill -> fill
    int fill_horizontal -> fill_horizontal
    int fill_vertical -> fill_vertical
    int fixed -> fixed
    int home -> home
    int homeAsUp -> homeAsUp
    int icon -> icon
    int ifRoom -> ifRoom
    int image -> image
    int info -> info
    int left -> left
    int line1 -> line1
    int line3 -> line3
    int listMode -> listMode
    int list_item -> list_item
    int media_actions -> media_actions
    int middle -> middle
    int mini -> mini
    int multiply -> multiply
    int never -> never
    int none -> none
    int normal -> normal
    int parallax -> parallax
    int parentPanel -> parentPanel
    int pin -> pin
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int right -> right
    int screen -> screen
    int scroll -> scroll
    int scrollView -> scrollView
    int scrollable -> scrollable
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int select_dialog_listview -> select_dialog_listview
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int snackbar_action -> snackbar_action
    int snackbar_text -> snackbar_text
    int split_action_bar -> split_action_bar
    int src_atop -> src_atop
    int src_in -> src_in
    int src_over -> src_over
    int start -> start
    int status_bar_latest_event_content -> status_bar_latest_event_content
    int submit_area -> submit_area
    int tabMode -> tabMode
    int text -> text
    int text2 -> text2
    int textSpacerNoButtons -> textSpacerNoButtons
    int time -> time
    int title -> title
    int title_template -> title_template
    int top -> top
    int topPanel -> topPanel
    int up -> up
    int useLogo -> useLogo
    int view_offset_helper -> view_offset_helper
    int withText -> withText
    int wrap_content -> wrap_content
android.support.design.R$layout -> android.support.design.h:
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_up_container -> abc_action_bar_up_container
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item_material -> abc_action_mode_close_item_material
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_alert_dialog_material -> abc_alert_dialog_material
    int abc_dialog_title_material -> abc_dialog_title_material
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen_content_include -> abc_screen_content_include
    int abc_screen_simple -> abc_screen_simple
    int abc_screen_simple_overlay_action_mode -> abc_screen_simple_overlay_action_mode
    int abc_screen_toolbar -> abc_screen_toolbar
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_select_dialog_material -> abc_select_dialog_material
    int design_layout_snackbar -> design_layout_snackbar
    int design_layout_snackbar_include -> design_layout_snackbar_include
    int design_layout_tab_icon -> design_layout_tab_icon
    int design_layout_tab_text -> design_layout_tab_text
    int design_navigation_item -> design_navigation_item
    int design_navigation_item_header -> design_navigation_item_header
    int design_navigation_item_separator -> design_navigation_item_separator
    int design_navigation_item_subheader -> design_navigation_item_subheader
    int design_navigation_menu -> design_navigation_menu
    int notification_media_action -> notification_media_action
    int notification_media_cancel_action -> notification_media_cancel_action
    int notification_template_big_media -> notification_template_big_media
    int notification_template_big_media_narrow -> notification_template_big_media_narrow
    int notification_template_lines -> notification_template_lines
    int notification_template_media -> notification_template_media
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    int select_dialog_item_material -> select_dialog_item_material
    int select_dialog_multichoice_material -> select_dialog_multichoice_material
    int select_dialog_singlechoice_material -> select_dialog_singlechoice_material
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
android.support.design.R$style -> android.support.design.i:
    int AlertDialog_AppCompat -> AlertDialog_AppCompat
    int AlertDialog_AppCompat_Light -> AlertDialog_AppCompat_Light
    int Animation_AppCompat_Dialog -> Animation_AppCompat_Dialog
    int Animation_AppCompat_DropDownUp -> Animation_AppCompat_DropDownUp
    int Base_AlertDialog_AppCompat -> Base_AlertDialog_AppCompat
    int Base_AlertDialog_AppCompat_Light -> Base_AlertDialog_AppCompat_Light
    int Base_Animation_AppCompat_Dialog -> Base_Animation_AppCompat_Dialog
    int Base_Animation_AppCompat_DropDownUp -> Base_Animation_AppCompat_DropDownUp
    int Base_DialogWindowTitleBackground_AppCompat -> Base_DialogWindowTitleBackground_AppCompat
    int Base_DialogWindowTitle_AppCompat -> Base_DialogWindowTitle_AppCompat
    int Base_TextAppearance_AppCompat -> Base_TextAppearance_AppCompat
    int Base_TextAppearance_AppCompat_Body1 -> Base_TextAppearance_AppCompat_Body1
    int Base_TextAppearance_AppCompat_Body2 -> Base_TextAppearance_AppCompat_Body2
    int Base_TextAppearance_AppCompat_Button -> Base_TextAppearance_AppCompat_Button
    int Base_TextAppearance_AppCompat_Caption -> Base_TextAppearance_AppCompat_Caption
    int Base_TextAppearance_AppCompat_Display1 -> Base_TextAppearance_AppCompat_Display1
    int Base_TextAppearance_AppCompat_Display2 -> Base_TextAppearance_AppCompat_Display2
    int Base_TextAppearance_AppCompat_Display3 -> Base_TextAppearance_AppCompat_Display3
    int Base_TextAppearance_AppCompat_Display4 -> Base_TextAppearance_AppCompat_Display4
    int Base_TextAppearance_AppCompat_Headline -> Base_TextAppearance_AppCompat_Headline
    int Base_TextAppearance_AppCompat_Inverse -> Base_TextAppearance_AppCompat_Inverse
    int Base_TextAppearance_AppCompat_Large -> Base_TextAppearance_AppCompat_Large
    int Base_TextAppearance_AppCompat_Large_Inverse -> Base_TextAppearance_AppCompat_Large_Inverse
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Medium -> Base_TextAppearance_AppCompat_Medium
    int Base_TextAppearance_AppCompat_Medium_Inverse -> Base_TextAppearance_AppCompat_Medium_Inverse
    int Base_TextAppearance_AppCompat_Menu -> Base_TextAppearance_AppCompat_Menu
    int Base_TextAppearance_AppCompat_SearchResult -> Base_TextAppearance_AppCompat_SearchResult
    int Base_TextAppearance_AppCompat_SearchResult_Subtitle -> Base_TextAppearance_AppCompat_SearchResult_Subtitle
    int Base_TextAppearance_AppCompat_SearchResult_Title -> Base_TextAppearance_AppCompat_SearchResult_Title
    int Base_TextAppearance_AppCompat_Small -> Base_TextAppearance_AppCompat_Small
    int Base_TextAppearance_AppCompat_Small_Inverse -> Base_TextAppearance_AppCompat_Small_Inverse
    int Base_TextAppearance_AppCompat_Subhead -> Base_TextAppearance_AppCompat_Subhead
    int Base_TextAppearance_AppCompat_Subhead_Inverse -> Base_TextAppearance_AppCompat_Subhead_Inverse
    int Base_TextAppearance_AppCompat_Title -> Base_TextAppearance_AppCompat_Title
    int Base_TextAppearance_AppCompat_Title_Inverse -> Base_TextAppearance_AppCompat_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu -> Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Title -> Base_TextAppearance_AppCompat_Widget_ActionMode_Title
    int Base_TextAppearance_AppCompat_Widget_Button -> Base_TextAppearance_AppCompat_Widget_Button
    int Base_TextAppearance_AppCompat_Widget_Button_Inverse -> Base_TextAppearance_AppCompat_Widget_Button_Inverse
    int Base_TextAppearance_AppCompat_Widget_DropDownItem -> Base_TextAppearance_AppCompat_Widget_DropDownItem
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Widget_Switch -> Base_TextAppearance_AppCompat_Widget_Switch
    int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Title -> Base_TextAppearance_Widget_AppCompat_Toolbar_Title
    int Base_ThemeOverlay_AppCompat -> Base_ThemeOverlay_AppCompat
    int Base_ThemeOverlay_AppCompat_ActionBar -> Base_ThemeOverlay_AppCompat_ActionBar
    int Base_ThemeOverlay_AppCompat_Dark -> Base_ThemeOverlay_AppCompat_Dark
    int Base_ThemeOverlay_AppCompat_Dark_ActionBar -> Base_ThemeOverlay_AppCompat_Dark_ActionBar
    int Base_ThemeOverlay_AppCompat_Light -> Base_ThemeOverlay_AppCompat_Light
    int Base_Theme_AppCompat -> Base_Theme_AppCompat
    int Base_Theme_AppCompat_CompactMenu -> Base_Theme_AppCompat_CompactMenu
    int Base_Theme_AppCompat_Dialog -> Base_Theme_AppCompat_Dialog
    int Base_Theme_AppCompat_DialogWhenLarge -> Base_Theme_AppCompat_DialogWhenLarge
    int Base_Theme_AppCompat_Dialog_Alert -> Base_Theme_AppCompat_Dialog_Alert
    int Base_Theme_AppCompat_Dialog_FixedSize -> Base_Theme_AppCompat_Dialog_FixedSize
    int Base_Theme_AppCompat_Dialog_MinWidth -> Base_Theme_AppCompat_Dialog_MinWidth
    int Base_Theme_AppCompat_Light -> Base_Theme_AppCompat_Light
    int Base_Theme_AppCompat_Light_DarkActionBar -> Base_Theme_AppCompat_Light_DarkActionBar
    int Base_Theme_AppCompat_Light_Dialog -> Base_Theme_AppCompat_Light_Dialog
    int Base_Theme_AppCompat_Light_DialogWhenLarge -> Base_Theme_AppCompat_Light_DialogWhenLarge
    int Base_Theme_AppCompat_Light_Dialog_Alert -> Base_Theme_AppCompat_Light_Dialog_Alert
    int Base_Theme_AppCompat_Light_Dialog_FixedSize -> Base_Theme_AppCompat_Light_Dialog_FixedSize
    int Base_Theme_AppCompat_Light_Dialog_MinWidth -> Base_Theme_AppCompat_Light_Dialog_MinWidth
    int Base_V11_Theme_AppCompat_Dialog -> Base_V11_Theme_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Light_Dialog -> Base_V11_Theme_AppCompat_Light_Dialog
    int Base_V12_Widget_AppCompat_AutoCompleteTextView -> Base_V12_Widget_AppCompat_AutoCompleteTextView
    int Base_V12_Widget_AppCompat_EditText -> Base_V12_Widget_AppCompat_EditText
    int Base_V21_Theme_AppCompat -> Base_V21_Theme_AppCompat
    int Base_V21_Theme_AppCompat_Dialog -> Base_V21_Theme_AppCompat_Dialog
    int Base_V21_Theme_AppCompat_Light -> Base_V21_Theme_AppCompat_Light
    int Base_V21_Theme_AppCompat_Light_Dialog -> Base_V21_Theme_AppCompat_Light_Dialog
    int Base_V22_Theme_AppCompat -> Base_V22_Theme_AppCompat
    int Base_V22_Theme_AppCompat_Light -> Base_V22_Theme_AppCompat_Light
    int Base_V23_Theme_AppCompat -> Base_V23_Theme_AppCompat
    int Base_V23_Theme_AppCompat_Light -> Base_V23_Theme_AppCompat_Light
    int Base_V7_Theme_AppCompat -> Base_V7_Theme_AppCompat
    int Base_V7_Theme_AppCompat_Dialog -> Base_V7_Theme_AppCompat_Dialog
    int Base_V7_Theme_AppCompat_Light -> Base_V7_Theme_AppCompat_Light
    int Base_V7_Theme_AppCompat_Light_Dialog -> Base_V7_Theme_AppCompat_Light_Dialog
    int Base_V7_Widget_AppCompat_AutoCompleteTextView -> Base_V7_Widget_AppCompat_AutoCompleteTextView
    int Base_V7_Widget_AppCompat_EditText -> Base_V7_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_ActionBar -> Base_Widget_AppCompat_ActionBar
    int Base_Widget_AppCompat_ActionBar_Solid -> Base_Widget_AppCompat_ActionBar_Solid
    int Base_Widget_AppCompat_ActionBar_TabBar -> Base_Widget_AppCompat_ActionBar_TabBar
    int Base_Widget_AppCompat_ActionBar_TabText -> Base_Widget_AppCompat_ActionBar_TabText
    int Base_Widget_AppCompat_ActionBar_TabView -> Base_Widget_AppCompat_ActionBar_TabView
    int Base_Widget_AppCompat_ActionButton -> Base_Widget_AppCompat_ActionButton
    int Base_Widget_AppCompat_ActionButton_CloseMode -> Base_Widget_AppCompat_ActionButton_CloseMode
    int Base_Widget_AppCompat_ActionButton_Overflow -> Base_Widget_AppCompat_ActionButton_Overflow
    int Base_Widget_AppCompat_ActionMode -> Base_Widget_AppCompat_ActionMode
    int Base_Widget_AppCompat_ActivityChooserView -> Base_Widget_AppCompat_ActivityChooserView
    int Base_Widget_AppCompat_AutoCompleteTextView -> Base_Widget_AppCompat_AutoCompleteTextView
    int Base_Widget_AppCompat_Button -> Base_Widget_AppCompat_Button
    int Base_Widget_AppCompat_ButtonBar -> Base_Widget_AppCompat_ButtonBar
    int Base_Widget_AppCompat_ButtonBar_AlertDialog -> Base_Widget_AppCompat_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Borderless -> Base_Widget_AppCompat_Button_Borderless
    int Base_Widget_AppCompat_Button_Borderless_Colored -> Base_Widget_AppCompat_Button_Borderless_Colored
    int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog -> Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Colored -> Base_Widget_AppCompat_Button_Colored
    int Base_Widget_AppCompat_Button_Small -> Base_Widget_AppCompat_Button_Small
    int Base_Widget_AppCompat_CompoundButton_CheckBox -> Base_Widget_AppCompat_CompoundButton_CheckBox
    int Base_Widget_AppCompat_CompoundButton_RadioButton -> Base_Widget_AppCompat_CompoundButton_RadioButton
    int Base_Widget_AppCompat_CompoundButton_Switch -> Base_Widget_AppCompat_CompoundButton_Switch
    int Base_Widget_AppCompat_DrawerArrowToggle -> Base_Widget_AppCompat_DrawerArrowToggle
    int Base_Widget_AppCompat_DrawerArrowToggle_Common -> Base_Widget_AppCompat_DrawerArrowToggle_Common
    int Base_Widget_AppCompat_DropDownItem_Spinner -> Base_Widget_AppCompat_DropDownItem_Spinner
    int Base_Widget_AppCompat_EditText -> Base_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_Light_ActionBar -> Base_Widget_AppCompat_Light_ActionBar
    int Base_Widget_AppCompat_Light_ActionBar_Solid -> Base_Widget_AppCompat_Light_ActionBar_Solid
    int Base_Widget_AppCompat_Light_ActionBar_TabBar -> Base_Widget_AppCompat_Light_ActionBar_TabBar
    int Base_Widget_AppCompat_Light_ActionBar_TabText -> Base_Widget_AppCompat_Light_ActionBar_TabText
    int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Base_Widget_AppCompat_Light_ActionBar_TabView -> Base_Widget_AppCompat_Light_ActionBar_TabView
    int Base_Widget_AppCompat_Light_PopupMenu -> Base_Widget_AppCompat_Light_PopupMenu
    int Base_Widget_AppCompat_Light_PopupMenu_Overflow -> Base_Widget_AppCompat_Light_PopupMenu_Overflow
    int Base_Widget_AppCompat_ListPopupWindow -> Base_Widget_AppCompat_ListPopupWindow
    int Base_Widget_AppCompat_ListView -> Base_Widget_AppCompat_ListView
    int Base_Widget_AppCompat_ListView_DropDown -> Base_Widget_AppCompat_ListView_DropDown
    int Base_Widget_AppCompat_ListView_Menu -> Base_Widget_AppCompat_ListView_Menu
    int Base_Widget_AppCompat_PopupMenu -> Base_Widget_AppCompat_PopupMenu
    int Base_Widget_AppCompat_PopupMenu_Overflow -> Base_Widget_AppCompat_PopupMenu_Overflow
    int Base_Widget_AppCompat_PopupWindow -> Base_Widget_AppCompat_PopupWindow
    int Base_Widget_AppCompat_ProgressBar -> Base_Widget_AppCompat_ProgressBar
    int Base_Widget_AppCompat_ProgressBar_Horizontal -> Base_Widget_AppCompat_ProgressBar_Horizontal
    int Base_Widget_AppCompat_RatingBar -> Base_Widget_AppCompat_RatingBar
    int Base_Widget_AppCompat_SearchView -> Base_Widget_AppCompat_SearchView
    int Base_Widget_AppCompat_SearchView_ActionBar -> Base_Widget_AppCompat_SearchView_ActionBar
    int Base_Widget_AppCompat_Spinner -> Base_Widget_AppCompat_Spinner
    int Base_Widget_AppCompat_Spinner_Underlined -> Base_Widget_AppCompat_Spinner_Underlined
    int Base_Widget_AppCompat_TextView_SpinnerItem -> Base_Widget_AppCompat_TextView_SpinnerItem
    int Base_Widget_AppCompat_Toolbar -> Base_Widget_AppCompat_Toolbar
    int Base_Widget_AppCompat_Toolbar_Button_Navigation -> Base_Widget_AppCompat_Toolbar_Button_Navigation
    int Base_Widget_Design_TabLayout -> Base_Widget_Design_TabLayout
    int Platform_AppCompat -> Platform_AppCompat
    int Platform_AppCompat_Light -> Platform_AppCompat_Light
    int Platform_ThemeOverlay_AppCompat -> Platform_ThemeOverlay_AppCompat
    int Platform_ThemeOverlay_AppCompat_Dark -> Platform_ThemeOverlay_AppCompat_Dark
    int Platform_ThemeOverlay_AppCompat_Light -> Platform_ThemeOverlay_AppCompat_Light
    int Platform_V11_AppCompat -> Platform_V11_AppCompat
    int Platform_V11_AppCompat_Light -> Platform_V11_AppCompat_Light
    int Platform_V14_AppCompat -> Platform_V14_AppCompat
    int Platform_V14_AppCompat_Light -> Platform_V14_AppCompat_Light
    int Platform_Widget_AppCompat_Spinner -> Platform_Widget_AppCompat_Spinner
    int RtlOverlay_DialogWindowTitle_AppCompat -> RtlOverlay_DialogWindowTitle_AppCompat
    int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem -> RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
    int RtlOverlay_Widget_AppCompat_ActionButton_Overflow -> RtlOverlay_Widget_AppCompat_ActionButton_Overflow
    int RtlOverlay_Widget_AppCompat_DialogTitle_Icon -> RtlOverlay_Widget_AppCompat_DialogTitle_Icon
    int RtlOverlay_Widget_AppCompat_PopupMenuItem -> RtlOverlay_Widget_AppCompat_PopupMenuItem
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup -> RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text -> RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
    int RtlOverlay_Widget_AppCompat_SearchView_MagIcon -> RtlOverlay_Widget_AppCompat_SearchView_MagIcon
    int RtlOverlay_Widget_AppCompat_Search_DropDown -> RtlOverlay_Widget_AppCompat_Search_DropDown
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Query -> RtlOverlay_Widget_AppCompat_Search_DropDown_Query
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Text -> RtlOverlay_Widget_AppCompat_Search_DropDown_Text
    int TextAppearance_AppCompat -> TextAppearance_AppCompat
    int TextAppearance_AppCompat_Body1 -> TextAppearance_AppCompat_Body1
    int TextAppearance_AppCompat_Body2 -> TextAppearance_AppCompat_Body2
    int TextAppearance_AppCompat_Button -> TextAppearance_AppCompat_Button
    int TextAppearance_AppCompat_Caption -> TextAppearance_AppCompat_Caption
    int TextAppearance_AppCompat_Display1 -> TextAppearance_AppCompat_Display1
    int TextAppearance_AppCompat_Display2 -> TextAppearance_AppCompat_Display2
    int TextAppearance_AppCompat_Display3 -> TextAppearance_AppCompat_Display3
    int TextAppearance_AppCompat_Display4 -> TextAppearance_AppCompat_Display4
    int TextAppearance_AppCompat_Headline -> TextAppearance_AppCompat_Headline
    int TextAppearance_AppCompat_Inverse -> TextAppearance_AppCompat_Inverse
    int TextAppearance_AppCompat_Large -> TextAppearance_AppCompat_Large
    int TextAppearance_AppCompat_Large_Inverse -> TextAppearance_AppCompat_Large_Inverse
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Medium -> TextAppearance_AppCompat_Medium
    int TextAppearance_AppCompat_Medium_Inverse -> TextAppearance_AppCompat_Medium_Inverse
    int TextAppearance_AppCompat_Menu -> TextAppearance_AppCompat_Menu
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Small -> TextAppearance_AppCompat_Small
    int TextAppearance_AppCompat_Small_Inverse -> TextAppearance_AppCompat_Small_Inverse
    int TextAppearance_AppCompat_Subhead -> TextAppearance_AppCompat_Subhead
    int TextAppearance_AppCompat_Subhead_Inverse -> TextAppearance_AppCompat_Subhead_Inverse
    int TextAppearance_AppCompat_Title -> TextAppearance_AppCompat_Title
    int TextAppearance_AppCompat_Title_Inverse -> TextAppearance_AppCompat_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Button -> TextAppearance_AppCompat_Widget_Button
    int TextAppearance_AppCompat_Widget_Button_Inverse -> TextAppearance_AppCompat_Widget_Button_Inverse
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Widget_Switch -> TextAppearance_AppCompat_Widget_Switch
    int TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int TextAppearance_Design_CollapsingToolbar_Expanded -> TextAppearance_Design_CollapsingToolbar_Expanded
    int TextAppearance_Design_Error -> TextAppearance_Design_Error
    int TextAppearance_Design_Hint -> TextAppearance_Design_Hint
    int TextAppearance_Design_Snackbar_Message -> TextAppearance_Design_Snackbar_Message
    int TextAppearance_Design_Tab -> TextAppearance_Design_Tab
    int TextAppearance_StatusBar_EventContent -> TextAppearance_StatusBar_EventContent
    int TextAppearance_StatusBar_EventContent_Info -> TextAppearance_StatusBar_EventContent_Info
    int TextAppearance_StatusBar_EventContent_Line2 -> TextAppearance_StatusBar_EventContent_Line2
    int TextAppearance_StatusBar_EventContent_Time -> TextAppearance_StatusBar_EventContent_Time
    int TextAppearance_StatusBar_EventContent_Title -> TextAppearance_StatusBar_EventContent_Title
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int TextAppearance_Widget_AppCompat_Toolbar_Title -> TextAppearance_Widget_AppCompat_Toolbar_Title
    int ThemeOverlay_AppCompat -> ThemeOverlay_AppCompat
    int ThemeOverlay_AppCompat_ActionBar -> ThemeOverlay_AppCompat_ActionBar
    int ThemeOverlay_AppCompat_Dark -> ThemeOverlay_AppCompat_Dark
    int ThemeOverlay_AppCompat_Dark_ActionBar -> ThemeOverlay_AppCompat_Dark_ActionBar
    int ThemeOverlay_AppCompat_Light -> ThemeOverlay_AppCompat_Light
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_Dialog -> Theme_AppCompat_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Dialog_Alert -> Theme_AppCompat_Dialog_Alert
    int Theme_AppCompat_Dialog_MinWidth -> Theme_AppCompat_Dialog_MinWidth
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_Dialog -> Theme_AppCompat_Light_Dialog
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_AppCompat_Light_Dialog_Alert -> Theme_AppCompat_Light_Dialog_Alert
    int Theme_AppCompat_Light_Dialog_MinWidth -> Theme_AppCompat_Light_Dialog_MinWidth
    int Theme_AppCompat_Light_NoActionBar -> Theme_AppCompat_Light_NoActionBar
    int Theme_AppCompat_NoActionBar -> Theme_AppCompat_NoActionBar
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Button -> Widget_AppCompat_Button
    int Widget_AppCompat_ButtonBar -> Widget_AppCompat_ButtonBar
    int Widget_AppCompat_ButtonBar_AlertDialog -> Widget_AppCompat_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Borderless -> Widget_AppCompat_Button_Borderless
    int Widget_AppCompat_Button_Borderless_Colored -> Widget_AppCompat_Button_Borderless_Colored
    int Widget_AppCompat_Button_ButtonBar_AlertDialog -> Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Colored -> Widget_AppCompat_Button_Colored
    int Widget_AppCompat_Button_Small -> Widget_AppCompat_Button_Small
    int Widget_AppCompat_CompoundButton_CheckBox -> Widget_AppCompat_CompoundButton_CheckBox
    int Widget_AppCompat_CompoundButton_RadioButton -> Widget_AppCompat_CompoundButton_RadioButton
    int Widget_AppCompat_CompoundButton_Switch -> Widget_AppCompat_CompoundButton_Switch
    int Widget_AppCompat_DrawerArrowToggle -> Widget_AppCompat_DrawerArrowToggle
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_EditText -> Widget_AppCompat_EditText
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_PopupMenu_Overflow -> Widget_AppCompat_Light_PopupMenu_Overflow
    int Widget_AppCompat_Light_SearchView -> Widget_AppCompat_Light_SearchView
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView -> Widget_AppCompat_ListView
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_PopupMenu_Overflow -> Widget_AppCompat_PopupMenu_Overflow
    int Widget_AppCompat_PopupWindow -> Widget_AppCompat_PopupWindow
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_RatingBar -> Widget_AppCompat_RatingBar
    int Widget_AppCompat_SearchView -> Widget_AppCompat_SearchView
    int Widget_AppCompat_SearchView_ActionBar -> Widget_AppCompat_SearchView_ActionBar
    int Widget_AppCompat_Spinner -> Widget_AppCompat_Spinner
    int Widget_AppCompat_Spinner_DropDown -> Widget_AppCompat_Spinner_DropDown
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
    int Widget_AppCompat_Spinner_Underlined -> Widget_AppCompat_Spinner_Underlined
    int Widget_AppCompat_TextView_SpinnerItem -> Widget_AppCompat_TextView_SpinnerItem
    int Widget_AppCompat_Toolbar -> Widget_AppCompat_Toolbar
    int Widget_AppCompat_Toolbar_Button_Navigation -> Widget_AppCompat_Toolbar_Button_Navigation
    int Widget_Design_AppBarLayout -> Widget_Design_AppBarLayout
    int Widget_Design_CollapsingToolbar -> Widget_Design_CollapsingToolbar
    int Widget_Design_CoordinatorLayout -> Widget_Design_CoordinatorLayout
    int Widget_Design_FloatingActionButton -> Widget_Design_FloatingActionButton
    int Widget_Design_NavigationView -> Widget_Design_NavigationView
    int Widget_Design_ScrimInsetsFrameLayout -> Widget_Design_ScrimInsetsFrameLayout
    int Widget_Design_Snackbar -> Widget_Design_Snackbar
    int Widget_Design_TabLayout -> Widget_Design_TabLayout
    int Widget_Design_TextInputLayout -> Widget_Design_TextInputLayout
android.support.design.R$styleable -> android.support.design.j:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_layout -> AlertDialog_android_layout
    int AlertDialog_buttonPanelSideLayout -> AlertDialog_buttonPanelSideLayout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int[] AppBarLayout -> AppBarLayout
    int[] AppBarLayout_LayoutParams -> AppBarLayout_LayoutParams
    int AppBarLayout_LayoutParams_layout_scrollFlags -> AppBarLayout_LayoutParams_layout_scrollFlags
    int AppBarLayout_LayoutParams_layout_scrollInterpolator -> AppBarLayout_LayoutParams_layout_scrollInterpolator
    int AppBarLayout_android_background -> AppBarLayout_android_background
    int AppBarLayout_elevation -> AppBarLayout_elevation
    int AppBarLayout_expanded -> AppBarLayout_expanded
    int[] AppCompatTextView -> AppCompatTextView
    int AppCompatTextView_android_textAppearance -> AppCompatTextView_android_textAppearance
    int AppCompatTextView_textAllCaps -> AppCompatTextView_textAllCaps
    int[] CollapsingAppBarLayout_LayoutParams -> CollapsingAppBarLayout_LayoutParams
    int CollapsingAppBarLayout_LayoutParams_layout_collapseMode -> CollapsingAppBarLayout_LayoutParams_layout_collapseMode
    int CollapsingAppBarLayout_LayoutParams_layout_collapseParallaxMultiplier -> CollapsingAppBarLayout_LayoutParams_layout_collapseParallaxMultiplier
    int[] CollapsingToolbarLayout -> CollapsingToolbarLayout
    int CollapsingToolbarLayout_collapsedTitleGravity -> CollapsingToolbarLayout_collapsedTitleGravity
    int CollapsingToolbarLayout_collapsedTitleTextAppearance -> CollapsingToolbarLayout_collapsedTitleTextAppearance
    int CollapsingToolbarLayout_contentScrim -> CollapsingToolbarLayout_contentScrim
    int CollapsingToolbarLayout_expandedTitleGravity -> CollapsingToolbarLayout_expandedTitleGravity
    int CollapsingToolbarLayout_expandedTitleMargin -> CollapsingToolbarLayout_expandedTitleMargin
    int CollapsingToolbarLayout_expandedTitleMarginBottom -> CollapsingToolbarLayout_expandedTitleMarginBottom
    int CollapsingToolbarLayout_expandedTitleMarginEnd -> CollapsingToolbarLayout_expandedTitleMarginEnd
    int CollapsingToolbarLayout_expandedTitleMarginStart -> CollapsingToolbarLayout_expandedTitleMarginStart
    int CollapsingToolbarLayout_expandedTitleMarginTop -> CollapsingToolbarLayout_expandedTitleMarginTop
    int CollapsingToolbarLayout_expandedTitleTextAppearance -> CollapsingToolbarLayout_expandedTitleTextAppearance
    int CollapsingToolbarLayout_statusBarScrim -> CollapsingToolbarLayout_statusBarScrim
    int CollapsingToolbarLayout_title -> CollapsingToolbarLayout_title
    int CollapsingToolbarLayout_titleEnabled -> CollapsingToolbarLayout_titleEnabled
    int CollapsingToolbarLayout_toolbarId -> CollapsingToolbarLayout_toolbarId
    int[] CompoundButton -> CompoundButton
    int CompoundButton_android_button -> CompoundButton_android_button
    int CompoundButton_buttonTint -> CompoundButton_buttonTint
    int CompoundButton_buttonTintMode -> CompoundButton_buttonTintMode
    int[] CoordinatorLayout -> CoordinatorLayout
    int[] CoordinatorLayout_LayoutParams -> CoordinatorLayout_LayoutParams
    int CoordinatorLayout_LayoutParams_android_layout_gravity -> CoordinatorLayout_LayoutParams_android_layout_gravity
    int CoordinatorLayout_LayoutParams_layout_anchor -> CoordinatorLayout_LayoutParams_layout_anchor
    int CoordinatorLayout_LayoutParams_layout_anchorGravity -> CoordinatorLayout_LayoutParams_layout_anchorGravity
    int CoordinatorLayout_LayoutParams_layout_behavior -> CoordinatorLayout_LayoutParams_layout_behavior
    int CoordinatorLayout_LayoutParams_layout_keyline -> CoordinatorLayout_LayoutParams_layout_keyline
    int CoordinatorLayout_keylines -> CoordinatorLayout_keylines
    int CoordinatorLayout_statusBarBackground -> CoordinatorLayout_statusBarBackground
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_arrowHeadLength -> DrawerArrowToggle_arrowHeadLength
    int DrawerArrowToggle_arrowShaftLength -> DrawerArrowToggle_arrowShaftLength
    int DrawerArrowToggle_barLength -> DrawerArrowToggle_barLength
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int[] FloatingActionButton -> FloatingActionButton
    int FloatingActionButton_android_background -> FloatingActionButton_android_background
    int FloatingActionButton_backgroundTint -> FloatingActionButton_backgroundTint
    int FloatingActionButton_backgroundTintMode -> FloatingActionButton_backgroundTintMode
    int FloatingActionButton_borderWidth -> FloatingActionButton_borderWidth
    int FloatingActionButton_elevation -> FloatingActionButton_elevation
    int FloatingActionButton_fabSize -> FloatingActionButton_fabSize
    int FloatingActionButton_pressedTranslationZ -> FloatingActionButton_pressedTranslationZ
    int FloatingActionButton_rippleColor -> FloatingActionButton_rippleColor
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int[] NavigationView -> NavigationView
    int NavigationView_android_background -> NavigationView_android_background
    int NavigationView_android_fitsSystemWindows -> NavigationView_android_fitsSystemWindows
    int NavigationView_android_maxWidth -> NavigationView_android_maxWidth
    int NavigationView_elevation -> NavigationView_elevation
    int NavigationView_headerLayout -> NavigationView_headerLayout
    int NavigationView_itemBackground -> NavigationView_itemBackground
    int NavigationView_itemIconTint -> NavigationView_itemIconTint
    int NavigationView_itemTextAppearance -> NavigationView_itemTextAppearance
    int NavigationView_itemTextColor -> NavigationView_itemTextColor
    int NavigationView_menu -> NavigationView_menu
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] ScrimInsetsFrameLayout -> ScrimInsetsFrameLayout
    int ScrimInsetsFrameLayout_insetForeground -> ScrimInsetsFrameLayout_insetForeground
    int[] ScrollingViewBehavior_Params -> ScrollingViewBehavior_Params
    int ScrollingViewBehavior_Params_behavior_overlapTop -> ScrollingViewBehavior_Params_behavior_overlapTop
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_defaultQueryHint -> SearchView_defaultQueryHint
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchHintIcon -> SearchView_searchHintIcon
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] SnackbarLayout -> SnackbarLayout
    int SnackbarLayout_android_maxWidth -> SnackbarLayout_android_maxWidth
    int SnackbarLayout_elevation -> SnackbarLayout_elevation
    int SnackbarLayout_maxActionInlineWidth -> SnackbarLayout_maxActionInlineWidth
    int[] Spinner -> Spinner
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_popupTheme -> Spinner_popupTheme
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_track -> SwitchCompat_track
    int[] TabLayout -> TabLayout
    int TabLayout_tabBackground -> TabLayout_tabBackground
    int TabLayout_tabContentStart -> TabLayout_tabContentStart
    int TabLayout_tabGravity -> TabLayout_tabGravity
    int TabLayout_tabIndicatorColor -> TabLayout_tabIndicatorColor
    int TabLayout_tabIndicatorHeight -> TabLayout_tabIndicatorHeight
    int TabLayout_tabMaxWidth -> TabLayout_tabMaxWidth
    int TabLayout_tabMinWidth -> TabLayout_tabMinWidth
    int TabLayout_tabMode -> TabLayout_tabMode
    int TabLayout_tabPadding -> TabLayout_tabPadding
    int TabLayout_tabPaddingBottom -> TabLayout_tabPaddingBottom
    int TabLayout_tabPaddingEnd -> TabLayout_tabPaddingEnd
    int TabLayout_tabPaddingStart -> TabLayout_tabPaddingStart
    int TabLayout_tabPaddingTop -> TabLayout_tabPaddingTop
    int TabLayout_tabSelectedTextColor -> TabLayout_tabSelectedTextColor
    int TabLayout_tabTextAppearance -> TabLayout_tabTextAppearance
    int TabLayout_tabTextColor -> TabLayout_tabTextColor
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int TextAppearance_textAllCaps -> TextAppearance_textAllCaps
    int[] TextInputLayout -> TextInputLayout
    int TextInputLayout_android_hint -> TextInputLayout_android_hint
    int TextInputLayout_android_textColorHint -> TextInputLayout_android_textColorHint
    int TextInputLayout_errorEnabled -> TextInputLayout_errorEnabled
    int TextInputLayout_errorTextAppearance -> TextInputLayout_errorTextAppearance
    int TextInputLayout_hintAnimationEnabled -> TextInputLayout_hintAnimationEnabled
    int TextInputLayout_hintTextAppearance -> TextInputLayout_hintTextAppearance
    int[] Theme -> Theme
    int Theme_actionBarDivider -> Theme_actionBarDivider
    int Theme_actionBarItemBackground -> Theme_actionBarItemBackground
    int Theme_actionBarPopupTheme -> Theme_actionBarPopupTheme
    int Theme_actionBarSize -> Theme_actionBarSize
    int Theme_actionBarSplitStyle -> Theme_actionBarSplitStyle
    int Theme_actionBarStyle -> Theme_actionBarStyle
    int Theme_actionBarTabBarStyle -> Theme_actionBarTabBarStyle
    int Theme_actionBarTabStyle -> Theme_actionBarTabStyle
    int Theme_actionBarTabTextStyle -> Theme_actionBarTabTextStyle
    int Theme_actionBarTheme -> Theme_actionBarTheme
    int Theme_actionBarWidgetTheme -> Theme_actionBarWidgetTheme
    int Theme_actionButtonStyle -> Theme_actionButtonStyle
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_actionMenuTextAppearance -> Theme_actionMenuTextAppearance
    int Theme_actionMenuTextColor -> Theme_actionMenuTextColor
    int Theme_actionModeBackground -> Theme_actionModeBackground
    int Theme_actionModeCloseButtonStyle -> Theme_actionModeCloseButtonStyle
    int Theme_actionModeCloseDrawable -> Theme_actionModeCloseDrawable
    int Theme_actionModeCopyDrawable -> Theme_actionModeCopyDrawable
    int Theme_actionModeCutDrawable -> Theme_actionModeCutDrawable
    int Theme_actionModeFindDrawable -> Theme_actionModeFindDrawable
    int Theme_actionModePasteDrawable -> Theme_actionModePasteDrawable
    int Theme_actionModePopupWindowStyle -> Theme_actionModePopupWindowStyle
    int Theme_actionModeSelectAllDrawable -> Theme_actionModeSelectAllDrawable
    int Theme_actionModeShareDrawable -> Theme_actionModeShareDrawable
    int Theme_actionModeSplitBackground -> Theme_actionModeSplitBackground
    int Theme_actionModeStyle -> Theme_actionModeStyle
    int Theme_actionModeWebSearchDrawable -> Theme_actionModeWebSearchDrawable
    int Theme_actionOverflowButtonStyle -> Theme_actionOverflowButtonStyle
    int Theme_actionOverflowMenuStyle -> Theme_actionOverflowMenuStyle
    int Theme_activityChooserViewStyle -> Theme_activityChooserViewStyle
    int Theme_alertDialogButtonGroupStyle -> Theme_alertDialogButtonGroupStyle
    int Theme_alertDialogCenterButtons -> Theme_alertDialogCenterButtons
    int Theme_alertDialogStyle -> Theme_alertDialogStyle
    int Theme_alertDialogTheme -> Theme_alertDialogTheme
    int Theme_android_windowAnimationStyle -> Theme_android_windowAnimationStyle
    int Theme_android_windowIsFloating -> Theme_android_windowIsFloating
    int Theme_autoCompleteTextViewStyle -> Theme_autoCompleteTextViewStyle
    int Theme_borderlessButtonStyle -> Theme_borderlessButtonStyle
    int Theme_buttonBarButtonStyle -> Theme_buttonBarButtonStyle
    int Theme_buttonBarNegativeButtonStyle -> Theme_buttonBarNegativeButtonStyle
    int Theme_buttonBarNeutralButtonStyle -> Theme_buttonBarNeutralButtonStyle
    int Theme_buttonBarPositiveButtonStyle -> Theme_buttonBarPositiveButtonStyle
    int Theme_buttonBarStyle -> Theme_buttonBarStyle
    int Theme_buttonStyle -> Theme_buttonStyle
    int Theme_buttonStyleSmall -> Theme_buttonStyleSmall
    int Theme_checkboxStyle -> Theme_checkboxStyle
    int Theme_checkedTextViewStyle -> Theme_checkedTextViewStyle
    int Theme_colorAccent -> Theme_colorAccent
    int Theme_colorButtonNormal -> Theme_colorButtonNormal
    int Theme_colorControlActivated -> Theme_colorControlActivated
    int Theme_colorControlHighlight -> Theme_colorControlHighlight
    int Theme_colorControlNormal -> Theme_colorControlNormal
    int Theme_colorPrimary -> Theme_colorPrimary
    int Theme_colorPrimaryDark -> Theme_colorPrimaryDark
    int Theme_colorSwitchThumbNormal -> Theme_colorSwitchThumbNormal
    int Theme_controlBackground -> Theme_controlBackground
    int Theme_dialogPreferredPadding -> Theme_dialogPreferredPadding
    int Theme_dialogTheme -> Theme_dialogTheme
    int Theme_dividerHorizontal -> Theme_dividerHorizontal
    int Theme_dividerVertical -> Theme_dividerVertical
    int Theme_dropDownListViewStyle -> Theme_dropDownListViewStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_editTextBackground -> Theme_editTextBackground
    int Theme_editTextColor -> Theme_editTextColor
    int Theme_editTextStyle -> Theme_editTextStyle
    int Theme_homeAsUpIndicator -> Theme_homeAsUpIndicator
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_listDividerAlertDialog -> Theme_listDividerAlertDialog
    int Theme_listPopupWindowStyle -> Theme_listPopupWindowStyle
    int Theme_listPreferredItemHeight -> Theme_listPreferredItemHeight
    int Theme_listPreferredItemHeightLarge -> Theme_listPreferredItemHeightLarge
    int Theme_listPreferredItemHeightSmall -> Theme_listPreferredItemHeightSmall
    int Theme_listPreferredItemPaddingLeft -> Theme_listPreferredItemPaddingLeft
    int Theme_listPreferredItemPaddingRight -> Theme_listPreferredItemPaddingRight
    int Theme_panelBackground -> Theme_panelBackground
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int Theme_popupWindowStyle -> Theme_popupWindowStyle
    int Theme_radioButtonStyle -> Theme_radioButtonStyle
    int Theme_ratingBarStyle -> Theme_ratingBarStyle
    int Theme_searchViewStyle -> Theme_searchViewStyle
    int Theme_selectableItemBackground -> Theme_selectableItemBackground
    int Theme_selectableItemBackgroundBorderless -> Theme_selectableItemBackgroundBorderless
    int Theme_spinnerDropDownItemStyle -> Theme_spinnerDropDownItemStyle
    int Theme_spinnerStyle -> Theme_spinnerStyle
    int Theme_switchStyle -> Theme_switchStyle
    int Theme_textAppearanceLargePopupMenu -> Theme_textAppearanceLargePopupMenu
    int Theme_textAppearanceListItem -> Theme_textAppearanceListItem
    int Theme_textAppearanceListItemSmall -> Theme_textAppearanceListItemSmall
    int Theme_textAppearanceSearchResultSubtitle -> Theme_textAppearanceSearchResultSubtitle
    int Theme_textAppearanceSearchResultTitle -> Theme_textAppearanceSearchResultTitle
    int Theme_textAppearanceSmallPopupMenu -> Theme_textAppearanceSmallPopupMenu
    int Theme_textColorAlertDialogListItem -> Theme_textColorAlertDialogListItem
    int Theme_textColorSearchUrl -> Theme_textColorSearchUrl
    int Theme_toolbarNavigationButtonStyle -> Theme_toolbarNavigationButtonStyle
    int Theme_toolbarStyle -> Theme_toolbarStyle
    int Theme_windowActionBar -> Theme_windowActionBar
    int Theme_windowActionBarOverlay -> Theme_windowActionBarOverlay
    int Theme_windowActionModeOverlay -> Theme_windowActionModeOverlay
    int Theme_windowFixedHeightMajor -> Theme_windowFixedHeightMajor
    int Theme_windowFixedHeightMinor -> Theme_windowFixedHeightMinor
    int Theme_windowFixedWidthMajor -> Theme_windowFixedWidthMajor
    int Theme_windowFixedWidthMinor -> Theme_windowFixedWidthMinor
    int Theme_windowMinWidthMajor -> Theme_windowMinWidthMajor
    int Theme_windowMinWidthMinor -> Theme_windowMinWidthMinor
    int Theme_windowNoTitle -> Theme_windowNoTitle
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_logo -> Toolbar_logo
    int Toolbar_logoDescription -> Toolbar_logoDescription
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_subtitleTextColor -> Toolbar_subtitleTextColor
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int Toolbar_titleTextColor -> Toolbar_titleTextColor
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int ViewBackgroundHelper_android_background -> ViewBackgroundHelper_android_background
    int ViewBackgroundHelper_backgroundTint -> ViewBackgroundHelper_backgroundTint
    int ViewBackgroundHelper_backgroundTintMode -> ViewBackgroundHelper_backgroundTintMode
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
    int View_android_focusable -> View_android_focusable
    int View_android_theme -> View_android_theme
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int View_theme -> View_theme
android.support.design.internal.NavigationMenu -> android.support.design.internal.a:
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
android.support.design.internal.NavigationMenuItemView -> android.support.design.internal.NavigationMenuItemView:
    int[] CHECKED_STATE_SET -> a
    int mIconSize -> b
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> c
    android.content.res.ColorStateList mIconTintList -> d
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    android.graphics.drawable.StateListDrawable createDefaultBackground() -> b
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setTitle(java.lang.CharSequence) -> setTitle
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean prefersCondensedTitle() -> a
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
android.support.design.internal.NavigationMenuPresenter -> android.support.design.internal.b:
    android.support.design.internal.NavigationMenuView mMenuView -> a
    android.widget.LinearLayout mHeader -> b
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> c
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> d
    int mId -> e
    android.support.design.internal.NavigationMenuPresenter$NavigationMenuAdapter mAdapter -> f
    android.view.LayoutInflater mLayoutInflater -> g
    int mTextAppearance -> h
    boolean mTextAppearanceSet -> i
    android.content.res.ColorStateList mTextColor -> j
    android.content.res.ColorStateList mIconTintList -> k
    android.graphics.drawable.Drawable mItemBackground -> l
    int mPaddingTopDefault -> m
    int mPaddingSeparator -> n
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    void updateMenuView(boolean) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> a
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    int getId() -> b
    void setId(int) -> a
    android.os.Parcelable onSaveInstanceState() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void setCheckedItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    android.view.View inflateHeaderView(int) -> b
    void addHeaderView(android.view.View) -> a
    android.content.res.ColorStateList getItemTintList() -> d
    void setItemIconTintList(android.content.res.ColorStateList) -> a
    android.content.res.ColorStateList getItemTextColor() -> e
    void setItemTextColor(android.content.res.ColorStateList) -> b
    void setItemTextAppearance(int) -> c
    android.graphics.drawable.Drawable getItemBackground() -> f
    void setItemBackground(android.graphics.drawable.Drawable) -> a
    void setUpdateSuspended(boolean) -> b
    android.view.LayoutInflater access$000(android.support.design.internal.NavigationMenuPresenter) -> a
    android.content.res.ColorStateList access$100(android.support.design.internal.NavigationMenuPresenter) -> b
    boolean access$200(android.support.design.internal.NavigationMenuPresenter) -> c
    int access$300(android.support.design.internal.NavigationMenuPresenter) -> d
    android.content.res.ColorStateList access$400(android.support.design.internal.NavigationMenuPresenter) -> e
    android.graphics.drawable.Drawable access$500(android.support.design.internal.NavigationMenuPresenter) -> f
    android.support.v7.internal.view.menu.MenuBuilder access$600(android.support.design.internal.NavigationMenuPresenter) -> g
    int access$700(android.support.design.internal.NavigationMenuPresenter) -> h
android.support.design.internal.NavigationMenuPresenter$NavigationMenuAdapter -> android.support.design.internal.c:
    java.util.ArrayList mItems -> b
    android.support.v7.internal.view.menu.MenuItemImpl mCheckedItem -> c
    android.graphics.drawable.ColorDrawable mTransparentIcon -> d
    boolean mUpdateSuspended -> e
    android.support.design.internal.NavigationMenuPresenter this$0 -> a
    int getCount() -> getCount
    android.support.design.internal.NavigationMenuPresenter$NavigationMenuItem getItem(int) -> a
    long getItemId(int) -> getItemId
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    void notifyDataSetChanged() -> notifyDataSetChanged
    void prepareMenuItems() -> b
    void appendTransparentIconIfMissing(int,int) -> a
    void setCheckedItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    android.os.Bundle createInstanceState() -> a
    void restoreInstanceState(android.os.Bundle) -> a
    void setUpdateSuspended(boolean) -> a
    java.lang.Object getItem(int) -> getItem
android.support.design.internal.NavigationMenuPresenter$NavigationMenuItem -> android.support.design.internal.d:
    android.support.v7.internal.view.menu.MenuItemImpl mMenuItem -> a
    int mPaddingTop -> b
    int mPaddingBottom -> c
    android.support.design.internal.NavigationMenuPresenter$NavigationMenuItem of(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    android.support.design.internal.NavigationMenuPresenter$NavigationMenuItem separator(int,int) -> a
    boolean isSeparator() -> a
    int getPaddingTop() -> b
    int getPaddingBottom() -> c
    android.support.v7.internal.view.menu.MenuItemImpl getMenuItem() -> d
    boolean isEnabled() -> e
android.support.design.internal.NavigationMenuView -> android.support.design.internal.NavigationMenuView:
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    int getWindowAnimations() -> getWindowAnimations
android.support.design.internal.NavigationSubMenu -> android.support.design.internal.e:
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    void notifyParent() -> t
android.support.design.internal.ScrimInsetsFrameLayout -> android.support.design.internal.ScrimInsetsFrameLayout:
    android.graphics.drawable.Drawable mInsetForeground -> a
    android.graphics.Rect mInsets -> b
    android.graphics.Rect mTempRect -> c
    void draw(android.graphics.Canvas) -> draw
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.graphics.Rect access$000(android.support.design.internal.ScrimInsetsFrameLayout) -> a
    android.graphics.Rect access$002(android.support.design.internal.ScrimInsetsFrameLayout,android.graphics.Rect) -> a
    android.graphics.drawable.Drawable access$100(android.support.design.internal.ScrimInsetsFrameLayout) -> b
android.support.design.internal.ScrimInsetsFrameLayout$1 -> android.support.design.internal.f:
    android.support.design.internal.ScrimInsetsFrameLayout this$0 -> a
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
android.support.design.widget.AnimationUtils -> android.support.design.widget.a:
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> a
    android.view.animation.Interpolator FAST_OUT_SLOW_IN_INTERPOLATOR -> b
    android.view.animation.Interpolator DECELERATE_INTERPOLATOR -> c
    float lerp(float,float,float) -> a
    int lerp(int,int,float) -> a
android.support.design.widget.AnimationUtils$AnimationListenerAdapter -> android.support.design.widget.b:
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.design.widget.AppBarLayout -> android.support.design.widget.AppBarLayout:
    int mTotalScrollRange -> b
    int mDownPreScrollRange -> c
    int mDownScrollRange -> d
    boolean mHaveChildWithInterpolator -> a
    float mTargetElevation -> e
    int mPendingAction -> f
    android.support.v4.view.WindowInsetsCompat mLastInsets -> g
    java.util.List mListeners -> h
    void addOnOffsetChangedListener(android.support.design.widget.AppBarLayout$OnOffsetChangedListener) -> a
    void removeOnOffsetChangedListener(android.support.design.widget.AppBarLayout$OnOffsetChangedListener) -> b
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setOrientation(int) -> setOrientation
    void setExpanded(boolean) -> setExpanded
    void setExpanded(boolean,boolean) -> setExpanded
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.design.widget.AppBarLayout$LayoutParams generateDefaultLayoutParams() -> a
    android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean hasChildWithInterpolator() -> b
    int getTotalScrollRange() -> getTotalScrollRange
    boolean hasScrollableChildren() -> c
    int getUpNestedPreScrollRange() -> getUpNestedPreScrollRange
    int getDownNestedPreScrollRange() -> getDownNestedPreScrollRange
    int getDownNestedScrollRange() -> getDownNestedScrollRange
    int getMinimumHeightForVisibleOverlappingContent() -> getMinimumHeightForVisibleOverlappingContent
    void setTargetElevation(float) -> setTargetElevation
    float getTargetElevation() -> getTargetElevation
    int getPendingAction() -> getPendingAction
    void resetPendingAction() -> d
    void setWindowInsets(android.support.v4.view.WindowInsetsCompat) -> setWindowInsets
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.design.widget.AppBarLayout,android.support.v4.view.WindowInsetsCompat) -> a
    java.util.List access$200(android.support.design.widget.AppBarLayout) -> a
android.support.design.widget.AppBarLayout$1 -> android.support.design.widget.c:
    android.support.design.widget.AppBarLayout this$0 -> a
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
android.support.design.widget.AppBarLayout$Behavior -> android.support.design.widget.AppBarLayout$Behavior:
    int mOffsetDelta -> a
    boolean mSkipNestedPreScroll -> b
    java.lang.Runnable mFlingRunnable -> c
    android.support.v4.widget.ScrollerCompat mScroller -> d
    android.support.design.widget.ValueAnimatorCompat mAnimator -> e
    int mOffsetToChildIndexOnLayout -> f
    boolean mOffsetToChildIndexOnLayoutIsMinHeight -> g
    float mOffsetToChildIndexOnLayoutPerc -> h
    boolean mIsBeingDragged -> i
    int mActivePointerId -> j
    int mLastMotionY -> k
    int mTouchSlop -> l
    java.lang.ref.WeakReference mLastNestedScrollingChildRef -> m
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,android.view.View,int) -> a
    void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int[]) -> a
    void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int,int) -> a
    void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View) -> a
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.MotionEvent) -> a
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.MotionEvent) -> b
    boolean onNestedFling(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,float,float,boolean) -> a
    void animateOffsetTo(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int) -> c
    boolean fling(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,float) -> a
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int) -> a
    int scroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int) -> b
    boolean canDragAppBarLayout() -> c
    int setAppBarTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int) -> b
    int setAppBarTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int) -> a
    void dispatchOffsetUpdates(android.support.design.widget.AppBarLayout) -> a
    int interpolateOffset(android.support.design.widget.AppBarLayout,int) -> a
    int getTopBottomOffsetForScrollingSibling() -> a
    android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> a
    void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.os.Parcelable) -> a
    int getTopAndBottomOffset() -> b
    boolean setTopAndBottomOffset(int) -> a
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> a
    android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View) -> a
    void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> a
    boolean onNestedFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> a
    void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> a
    void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> a
    void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> a
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> a
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> a
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> b
    android.support.v4.widget.ScrollerCompat access$100(android.support.design.widget.AppBarLayout$Behavior) -> a
android.support.design.widget.AppBarLayout$Behavior$1 -> android.support.design.widget.d:
    android.support.design.widget.CoordinatorLayout val$coordinatorLayout -> a
    android.support.design.widget.AppBarLayout val$child -> b
    android.support.design.widget.AppBarLayout$Behavior this$0 -> c
    void onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat) -> a
android.support.design.widget.AppBarLayout$Behavior$FlingRunnable -> android.support.design.widget.e:
    android.support.design.widget.CoordinatorLayout mParent -> b
    android.support.design.widget.AppBarLayout mLayout -> c
    android.support.design.widget.AppBarLayout$Behavior this$0 -> a
    void run() -> run
android.support.design.widget.AppBarLayout$Behavior$SavedState -> android.support.design.widget.AppBarLayout$Behavior$SavedState:
    int firstVisibleChildIndex -> a
    float firstVisibileChildPercentageShown -> b
    boolean firstVisibileChildAtMinimumHeight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.design.widget.AppBarLayout$Behavior$SavedState$1 -> android.support.design.widget.f:
    android.support.design.widget.AppBarLayout$Behavior$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.design.widget.AppBarLayout$Behavior$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.design.widget.AppBarLayout$LayoutParams -> android.support.design.widget.AppBarLayout$LayoutParams:
    int mScrollFlags -> a
    android.view.animation.Interpolator mScrollInterpolator -> b
    int getScrollFlags() -> a
    android.view.animation.Interpolator getScrollInterpolator() -> b
android.support.design.widget.AppBarLayout$OnOffsetChangedListener -> android.support.design.widget.g:
    void onOffsetChanged(android.support.design.widget.AppBarLayout,int) -> a
android.support.design.widget.AppBarLayout$ScrollingViewBehavior -> android.support.design.widget.AppBarLayout$ScrollingViewBehavior:
    int mOverlayTop -> a
    boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> b
    boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> a
    boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> c
    android.support.design.widget.AppBarLayout findFirstAppBarLayout(java.util.List) -> a
    int getTopAndBottomOffset() -> b
    boolean setTopAndBottomOffset(int) -> a
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> a
android.support.design.widget.CircularBorderDrawable -> android.support.design.widget.h:
    android.graphics.Paint mPaint -> a
    android.graphics.Rect mRect -> b
    android.graphics.RectF mRectF -> c
    float mBorderWidth -> d
    int mTopOuterStrokeColor -> e
    int mTopInnerStrokeColor -> f
    int mBottomOuterStrokeColor -> g
    int mBottomInnerStrokeColor -> h
    int mTintColor -> i
    boolean mInvalidateShader -> j
    void setGradientColors(int,int,int,int) -> a
    void setBorderWidth(float) -> a
    void draw(android.graphics.Canvas) -> draw
    boolean getPadding(android.graphics.Rect) -> getPadding
    void setAlpha(int) -> setAlpha
    void setTintColor(int) -> a
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    android.graphics.Shader createGradientShader() -> a
android.support.design.widget.CircularBorderDrawableLollipop -> android.support.design.widget.i:
    android.content.res.ColorStateList mTint -> e
    android.graphics.PorterDuff$Mode mTintMode -> f
    android.graphics.PorterDuffColorFilter mTintFilter -> g
    void draw(android.graphics.Canvas) -> draw
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    void getOutline(android.graphics.Outline) -> getOutline
    android.graphics.PorterDuffColorFilter updateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> a
android.support.design.widget.CollapsingTextHelper -> android.support.design.widget.j:
    boolean USE_SCALING_TEXTURE -> a
    android.graphics.Paint DEBUG_DRAW_PAINT -> b
    android.view.View mView -> c
    boolean mDrawTitle -> d
    float mExpandedFraction -> e
    android.graphics.Rect mExpandedBounds -> f
    android.graphics.Rect mCollapsedBounds -> g
    android.graphics.RectF mCurrentBounds -> h
    int mExpandedTextGravity -> i
    int mCollapsedTextGravity -> j
    float mExpandedTextSize -> k
    float mCollapsedTextSize -> l
    int mExpandedTextColor -> m
    int mCollapsedTextColor -> n
    float mExpandedDrawY -> o
    float mCollapsedDrawY -> p
    float mExpandedDrawX -> q
    float mCollapsedDrawX -> r
    float mCurrentDrawX -> s
    float mCurrentDrawY -> t
    java.lang.CharSequence mText -> u
    java.lang.CharSequence mTextToDraw -> v
    boolean mIsRtl -> w
    boolean mUseTexture -> x
    android.graphics.Bitmap mExpandedTitleTexture -> y
    android.graphics.Paint mTexturePaint -> z
    float mTextureAscent -> A
    float mTextureDescent -> B
    float mScale -> C
    float mCurrentTextSize -> D
    boolean mBoundsChanged -> E
    android.text.TextPaint mTextPaint -> F
    android.view.animation.Interpolator mPositionInterpolator -> G
    android.view.animation.Interpolator mTextSizeInterpolator -> H
    void setTextSizeInterpolator(android.view.animation.Interpolator) -> a
    void setPositionInterpolator(android.view.animation.Interpolator) -> b
    void setExpandedTextSize(float) -> a
    void setCollapsedTextColor(int) -> a
    void setExpandedTextColor(int) -> b
    void setExpandedBounds(int,int,int,int) -> a
    void setCollapsedBounds(int,int,int,int) -> b
    void onBoundsChanged() -> a
    void setExpandedTextGravity(int) -> c
    int getExpandedTextGravity() -> b
    void setCollapsedTextGravity(int) -> d
    int getCollapsedTextGravity() -> c
    void setCollapsedTextAppearance(int) -> e
    void setExpandedTextAppearance(int) -> f
    void setTypeface(android.graphics.Typeface) -> a
    android.graphics.Typeface getTypeface() -> d
    void setExpansionFraction(float) -> b
    float getExpansionFraction() -> e
    float getCollapsedTextSize() -> f
    void calculateCurrentOffsets() -> j
    void calculateBaseOffsets() -> k
    void interpolateBounds(float) -> c
    void draw(android.graphics.Canvas) -> a
    boolean calculateIsRtl(java.lang.CharSequence) -> b
    void setInterpolatedTextSize(float) -> d
    void ensureExpandedTexture() -> l
    void recalculate() -> g
    void setText(java.lang.CharSequence) -> a
    java.lang.CharSequence getText() -> h
    void clearTexture() -> m
    boolean isClose(float,float) -> a
    int getCollapsedTextColor() -> i
    int blendColors(int,int,float) -> a
    float lerp(float,float,float,android.view.animation.Interpolator) -> a
    boolean rectEquals(android.graphics.Rect,int,int,int,int) -> a
android.support.design.widget.CollapsingToolbarLayout -> android.support.design.widget.CollapsingToolbarLayout:
    boolean mRefreshToolbar -> a
    int mToolbarId -> b
    android.support.v7.widget.Toolbar mToolbar -> c
    android.view.View mDummyView -> d
    int mExpandedMarginLeft -> e
    int mExpandedMarginTop -> f
    int mExpandedMarginRight -> g
    int mExpandedMarginBottom -> h
    android.graphics.Rect mTmpRect -> i
    android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper -> j
    boolean mCollapsingTitleEnabled -> k
    android.graphics.drawable.Drawable mContentScrim -> l
    android.graphics.drawable.Drawable mStatusBarScrim -> m
    int mScrimAlpha -> n
    boolean mScrimsAreShown -> o
    android.support.design.widget.ValueAnimatorCompat mScrimAnimator -> p
    android.support.design.widget.AppBarLayout$OnOffsetChangedListener mOnOffsetChangedListener -> q
    int mCurrentOffset -> r
    android.support.v4.view.WindowInsetsCompat mLastInsets -> s
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void draw(android.graphics.Canvas) -> draw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void ensureToolbar() -> b
    void updateDummyView() -> c
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.support.design.widget.ViewOffsetHelper getViewOffsetHelper(android.view.View) -> b
    void setTitle(java.lang.CharSequence) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    void setTitleEnabled(boolean) -> setTitleEnabled
    void showScrim() -> d
    void hideScrim() -> e
    void animateScrim(int) -> a
    void setScrimAlpha(int) -> setScrimAlpha
    void setContentScrim(android.graphics.drawable.Drawable) -> setContentScrim
    void setContentScrimColor(int) -> setContentScrimColor
    void setContentScrimResource(int) -> setContentScrimResource
    android.graphics.drawable.Drawable getContentScrim() -> getContentScrim
    void setStatusBarScrim(android.graphics.drawable.Drawable) -> setStatusBarScrim
    void setStatusBarScrimColor(int) -> setStatusBarScrimColor
    void setStatusBarScrimResource(int) -> setStatusBarScrimResource
    android.graphics.drawable.Drawable getStatusBarScrim() -> getStatusBarScrim
    void setCollapsedTitleTextAppearance(int) -> setCollapsedTitleTextAppearance
    void setCollapsedTitleTextColor(int) -> setCollapsedTitleTextColor
    void setCollapsedTitleGravity(int) -> setCollapsedTitleGravity
    int getCollapsedTitleGravity() -> getCollapsedTitleGravity
    void setExpandedTitleTextAppearance(int) -> setExpandedTitleTextAppearance
    void setExpandedTitleColor(int) -> setExpandedTitleColor
    void setExpandedTitleGravity(int) -> setExpandedTitleGravity
    int getExpandedTitleGravity() -> getExpandedTitleGravity
    int getScrimTriggerOffset() -> getScrimTriggerOffset
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.design.widget.CollapsingToolbarLayout$LayoutParams generateDefaultLayoutParams() -> a
    android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.widget.FrameLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v4.view.WindowInsetsCompat access$002(android.support.design.widget.CollapsingToolbarLayout,android.support.v4.view.WindowInsetsCompat) -> a
    void access$200(android.support.design.widget.CollapsingToolbarLayout,int) -> a
    int access$302(android.support.design.widget.CollapsingToolbarLayout,int) -> b
    android.support.v4.view.WindowInsetsCompat access$000(android.support.design.widget.CollapsingToolbarLayout) -> a
    android.support.design.widget.ViewOffsetHelper access$400(android.view.View) -> a
    android.graphics.drawable.Drawable access$500(android.support.design.widget.CollapsingToolbarLayout) -> b
    android.graphics.drawable.Drawable access$600(android.support.design.widget.CollapsingToolbarLayout) -> c
    void access$700(android.support.design.widget.CollapsingToolbarLayout) -> d
    void access$800(android.support.design.widget.CollapsingToolbarLayout) -> e
    android.support.design.widget.CollapsingTextHelper access$900(android.support.design.widget.CollapsingToolbarLayout) -> f
android.support.design.widget.CollapsingToolbarLayout$1 -> android.support.design.widget.k:
    android.support.design.widget.CollapsingToolbarLayout this$0 -> a
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
android.support.design.widget.CollapsingToolbarLayout$2 -> android.support.design.widget.l:
    android.support.design.widget.CollapsingToolbarLayout this$0 -> a
    void onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat) -> a
android.support.design.widget.CollapsingToolbarLayout$LayoutParams -> android.support.design.widget.CollapsingToolbarLayout$LayoutParams:
    int mCollapseMode -> a
    float mParallaxMult -> b
    void setParallaxMultiplier(float) -> a
android.support.design.widget.CollapsingToolbarLayout$OffsetUpdateListener -> android.support.design.widget.m:
    android.support.design.widget.CollapsingToolbarLayout this$0 -> a
    void onOffsetChanged(android.support.design.widget.AppBarLayout,int) -> a
android.support.design.widget.CoordinatorLayout -> android.support.design.widget.CoordinatorLayout:
    java.lang.String WIDGET_PACKAGE_NAME -> a
    java.lang.Class[] CONSTRUCTOR_PARAMS -> b
    java.lang.ThreadLocal sConstructors -> c
    java.util.Comparator mLayoutDependencyComparator -> d
    java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR -> e
    android.support.design.widget.CoordinatorLayoutInsetsHelper INSETS_HELPER -> f
    java.util.List mDependencySortedChildren -> g
    java.util.List mTempList1 -> h
    java.util.List mTempDependenciesList -> i
    android.graphics.Rect mTempRect1 -> j
    android.graphics.Rect mTempRect2 -> k
    android.graphics.Rect mTempRect3 -> l
    int[] mTempIntPair -> m
    android.graphics.Paint mScrimPaint -> n
    boolean mIsAttachedToWindow -> o
    int[] mKeylines -> p
    android.view.View mBehaviorTouchView -> q
    android.view.View mNestedScrollingDirectChild -> r
    android.view.View mNestedScrollingTarget -> s
    android.support.design.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener -> t
    boolean mNeedsPreDrawListener -> u
    android.support.v4.view.WindowInsetsCompat mLastInsets -> v
    boolean mDrawStatusBarBackground -> w
    android.graphics.drawable.Drawable mStatusBarBackground -> x
    android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener -> y
    android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper -> z
    void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void setWindowInsets(android.support.v4.view.WindowInsetsCompat) -> setWindowInsets
    void resetTouchBehaviors() -> e
    void getTopSortedChildren(java.util.List) -> a
    boolean performIntercept(android.view.MotionEvent,int) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    int getKeyline(int) -> a
    android.support.design.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> a
    android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> a
    void prepareChildren() -> f
    void getDescendantRect(android.view.View,android.graphics.Rect) -> a
    int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    void onMeasureChild(android.view.View,int,int,int,int) -> a
    void onMeasure(int,int) -> onMeasure
    void dispatchChildApplyWindowInsets(android.support.v4.view.WindowInsetsCompat) -> a
    void onLayoutChild(android.view.View,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDraw(android.graphics.Canvas) -> onDraw
    void recordLastChildRect(android.view.View,android.graphics.Rect) -> b
    void getLastChildRect(android.view.View,android.graphics.Rect) -> c
    void getChildRect(android.view.View,boolean,android.graphics.Rect) -> a
    void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> a
    void layoutChildWithAnchor(android.view.View,android.view.View,int) -> a
    void layoutChildWithKeyline(android.view.View,int,int) -> b
    void layoutChild(android.view.View,int) -> c
    int resolveGravity(int) -> b
    int resolveKeylineGravity(int) -> c
    int resolveAnchoredChildGravity(int) -> d
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void dispatchOnDependentViewChanged(boolean) -> a
    void dispatchDependentViewRemoved(android.view.View) -> b
    void dispatchDependentViewsChanged(android.view.View) -> c
    java.util.List getDependencies(android.view.View) -> d
    void ensurePreDrawListener() -> a
    boolean hasDependencies(android.view.View) -> e
    void addPreDrawListener() -> b
    void removePreDrawListener() -> c
    void offsetChildToAnchor(android.view.View,int) -> b
    boolean isPointInChildBounds(android.view.View,int,int) -> a
    boolean doViewsOverlap(android.view.View,android.view.View) -> a
    android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    android.support.design.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> d
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.design.widget.CoordinatorLayout,android.support.v4.view.WindowInsetsCompat) -> a
    android.view.ViewGroup$OnHierarchyChangeListener access$100(android.support.design.widget.CoordinatorLayout) -> a
android.support.design.widget.CoordinatorLayout$1 -> android.support.design.widget.n:
    android.support.design.widget.CoordinatorLayout this$0 -> a
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.design.widget.CoordinatorLayout$ApplyInsetsListener -> android.support.design.widget.o:
    android.support.design.widget.CoordinatorLayout this$0 -> a
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
android.support.design.widget.CoordinatorLayout$Behavior -> android.support.design.widget.CoordinatorLayout$Behavior:
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> b
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> a
    int getScrimColor(android.support.design.widget.CoordinatorLayout,android.view.View) -> b
    float getScrimOpacity(android.support.design.widget.CoordinatorLayout,android.view.View) -> c
    boolean blocksInteractionBelow(android.support.design.widget.CoordinatorLayout,android.view.View) -> d
    boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> b
    boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> c
    void onDependentViewRemoved(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> d
    boolean isDirty(android.support.design.widget.CoordinatorLayout,android.view.View) -> e
    boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> a
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> a
    boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> a
    void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> a
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.support.design.widget.CoordinatorLayout,android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
    void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> a
    android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View) -> a
android.support.design.widget.CoordinatorLayout$DefaultBehavior -> android.support.design.widget.p:
    java.lang.Class value() -> a
android.support.design.widget.CoordinatorLayout$HierarchyChangeListener -> android.support.design.widget.q:
    android.support.design.widget.CoordinatorLayout this$0 -> a
    void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
android.support.design.widget.CoordinatorLayout$LayoutParams -> android.support.design.widget.r:
    android.support.design.widget.CoordinatorLayout$Behavior mBehavior -> a
    boolean mBehaviorResolved -> b
    int gravity -> c
    int anchorGravity -> d
    int keyline -> e
    int mAnchorId -> f
    android.view.View mAnchorView -> g
    android.view.View mAnchorDirectChild -> h
    boolean mDidBlockInteraction -> k
    boolean mDidAcceptNestedScroll -> l
    boolean mDidChangeAfterNestedScroll -> m
    android.graphics.Rect mLastChildRect -> i
    java.lang.Object mBehaviorTag -> j
    int getAnchorId() -> a
    android.support.design.widget.CoordinatorLayout$Behavior getBehavior() -> b
    void setBehavior(android.support.design.widget.CoordinatorLayout$Behavior) -> a
    void setLastChildRect(android.graphics.Rect) -> a
    android.graphics.Rect getLastChildRect() -> c
    boolean checkAnchorChanged() -> d
    boolean didBlockInteraction() -> e
    boolean isBlockingInteractionBelow(android.support.design.widget.CoordinatorLayout,android.view.View) -> a
    void resetTouchBehaviorTracking() -> f
    void resetNestedScroll() -> g
    void acceptNestedScroll(boolean) -> a
    boolean isNestedScrollAccepted() -> h
    boolean getChangedAfterNestedScroll() -> i
    void setChangedAfterNestedScroll(boolean) -> b
    void resetChangedAfterNestedScroll() -> j
    boolean dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> a
    android.view.View findAnchorView(android.support.design.widget.CoordinatorLayout,android.view.View) -> b
    boolean isDirty(android.support.design.widget.CoordinatorLayout,android.view.View) -> c
    void resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout) -> a
    boolean verifyAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout) -> b
android.support.design.widget.CoordinatorLayout$OnPreDrawListener -> android.support.design.widget.s:
    android.support.design.widget.CoordinatorLayout this$0 -> a
    boolean onPreDraw() -> onPreDraw
android.support.design.widget.CoordinatorLayout$SavedState -> android.support.design.widget.CoordinatorLayout$SavedState:
    android.util.SparseArray behaviorStates -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.design.widget.CoordinatorLayout$SavedState$1 -> android.support.design.widget.t:
    android.support.design.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.design.widget.CoordinatorLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.design.widget.CoordinatorLayout$ViewElevationComparator -> android.support.design.widget.u:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.design.widget.CoordinatorLayoutInsetsHelper -> android.support.design.widget.v:
    void setupForWindowInsets(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> a
android.support.design.widget.CoordinatorLayoutInsetsHelperLollipop -> android.support.design.widget.w:
    void setupForWindowInsets(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> a
android.support.design.widget.FloatingActionButton -> android.support.design.widget.FloatingActionButton:
    android.content.res.ColorStateList mBackgroundTint -> a
    android.graphics.PorterDuff$Mode mBackgroundTintMode -> b
    int mBorderWidth -> c
    int mRippleColor -> d
    int mSize -> e
    int mContentPadding -> f
    android.graphics.Rect mShadowPadding -> g
    android.support.design.widget.FloatingActionButtonImpl mImpl -> h
    void onMeasure(int,int) -> onMeasure
    void setRippleColor(int) -> setRippleColor
    android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void show() -> a
    void hide() -> b
    int getSizeDimension() -> getSizeDimension
    void drawableStateChanged() -> drawableStateChanged
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    int resolveAdjustedSize(int,int) -> a
    android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> a
    android.graphics.Rect access$000(android.support.design.widget.FloatingActionButton) -> a
    int access$100(android.support.design.widget.FloatingActionButton) -> b
    void access$201(android.support.design.widget.FloatingActionButton,android.graphics.drawable.Drawable) -> a
android.support.design.widget.FloatingActionButton$1 -> android.support.design.widget.x:
    android.support.design.widget.FloatingActionButton this$0 -> a
    float getRadius() -> a
    void setShadowPadding(int,int,int,int) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
android.support.design.widget.FloatingActionButton$Behavior -> android.support.design.widget.FloatingActionButton$Behavior:
    boolean SNACKBAR_BEHAVIOR_ENABLED -> a
    android.graphics.Rect mTmpRect -> b
    boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View) -> a
    boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View) -> b
    void onDependentViewRemoved(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View) -> c
    boolean updateFabVisibility(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.support.design.widget.FloatingActionButton) -> a
    void updateFabTranslationForSnackbar(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View) -> d
    float getFabTranslationYForSnackbar(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton) -> a
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,int) -> a
    void offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton) -> b
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> a
    void onDependentViewRemoved(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> d
    boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> c
    boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> b
android.support.design.widget.FloatingActionButtonEclairMr1 -> android.support.design.widget.y:
    android.graphics.drawable.Drawable mShapeDrawable -> g
    android.graphics.drawable.Drawable mRippleDrawable -> h
    android.graphics.drawable.Drawable mBorderDrawable -> i
    float mElevation -> j
    float mPressedTranslationZ -> k
    int mAnimationDuration -> l
    android.support.design.widget.StateListAnimator mStateListAnimator -> m
    android.support.design.widget.ShadowDrawableWrapper mShadowDrawable -> a
    boolean mIsHiding -> n
    void setBackgroundDrawable(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int,int) -> a
    void setBackgroundTintList(android.content.res.ColorStateList) -> a
    void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> a
    void setRippleColor(int) -> a
    void setElevation(float) -> a
    void setPressedTranslationZ(float) -> b
    void onDrawableStateChanged(int[]) -> a
    void jumpDrawableToCurrentState() -> a
    void hide() -> b
    void show() -> c
    void updatePadding() -> e
    android.view.animation.Animation setupAnimation(android.view.animation.Animation) -> a
    android.content.res.ColorStateList createColorStateList(int) -> b
    boolean access$202(android.support.design.widget.FloatingActionButtonEclairMr1,boolean) -> a
    float access$400(android.support.design.widget.FloatingActionButtonEclairMr1) -> a
    float access$500(android.support.design.widget.FloatingActionButtonEclairMr1) -> b
android.support.design.widget.FloatingActionButtonEclairMr1$1 -> android.support.design.widget.z:
    android.support.design.widget.FloatingActionButtonEclairMr1 this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.design.widget.FloatingActionButtonEclairMr1$BaseShadowAnimation -> android.support.design.widget.aa:
    float mShadowSizeStart -> b
    float mShadowSizeDiff -> c
    android.support.design.widget.FloatingActionButtonEclairMr1 this$0 -> a
    void reset() -> reset
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    float getTargetShadowSize() -> a
android.support.design.widget.FloatingActionButtonEclairMr1$ElevateToTranslationZAnimation -> android.support.design.widget.ab:
    android.support.design.widget.FloatingActionButtonEclairMr1 this$0 -> b
    float getTargetShadowSize() -> a
android.support.design.widget.FloatingActionButtonEclairMr1$ResetElevationAnimation -> android.support.design.widget.ac:
    android.support.design.widget.FloatingActionButtonEclairMr1 this$0 -> b
    float getTargetShadowSize() -> a
android.support.design.widget.FloatingActionButtonHoneycombMr1 -> android.support.design.widget.ad:
    boolean mIsHiding -> g
    void hide() -> b
    void show() -> c
    boolean access$002(android.support.design.widget.FloatingActionButtonHoneycombMr1,boolean) -> a
android.support.design.widget.FloatingActionButtonHoneycombMr1$1 -> android.support.design.widget.ae:
    android.support.design.widget.FloatingActionButtonHoneycombMr1 this$0 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.widget.FloatingActionButtonHoneycombMr1$2 -> android.support.design.widget.af:
    android.support.design.widget.FloatingActionButtonHoneycombMr1 this$0 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.design.widget.FloatingActionButtonImpl -> android.support.design.widget.ag:
    int[] PRESSED_ENABLED_STATE_SET -> b
    int[] FOCUSED_ENABLED_STATE_SET -> c
    int[] EMPTY_STATE_SET -> d
    android.view.View mView -> e
    android.support.design.widget.ShadowViewDelegate mShadowViewDelegate -> f
    void setBackgroundDrawable(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int,int) -> a
    void setBackgroundTintList(android.content.res.ColorStateList) -> a
    void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> a
    void setRippleColor(int) -> a
    void setElevation(float) -> a
    void setPressedTranslationZ(float) -> b
    void onDrawableStateChanged(int[]) -> a
    void jumpDrawableToCurrentState() -> a
    void hide() -> b
    void show() -> c
    android.graphics.drawable.Drawable createBorderDrawable(int,android.content.res.ColorStateList) -> a
    android.support.design.widget.CircularBorderDrawable newCircularDrawable() -> d
android.support.design.widget.FloatingActionButtonLollipop -> android.support.design.widget.ah:
    android.graphics.drawable.Drawable mShapeDrawable -> g
    android.graphics.drawable.RippleDrawable mRippleDrawable -> h
    android.graphics.drawable.Drawable mBorderDrawable -> i
    android.view.animation.Interpolator mInterpolator -> j
    void setBackgroundDrawable(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int,int) -> a
    void setBackgroundTintList(android.content.res.ColorStateList) -> a
    void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> a
    void setRippleColor(int) -> a
    void setElevation(float) -> a
    void setPressedTranslationZ(float) -> b
    void onDrawableStateChanged(int[]) -> a
    void jumpDrawableToCurrentState() -> a
    android.animation.Animator setupAnimator(android.animation.Animator) -> a
    android.support.design.widget.CircularBorderDrawable newCircularDrawable() -> d
android.support.design.widget.MathUtils -> android.support.design.widget.ai:
    int constrain(int,int,int) -> a
    float constrain(float,float,float) -> a
android.support.design.widget.NavigationView -> android.support.design.widget.NavigationView:
    int[] CHECKED_STATE_SET -> a
    int[] DISABLED_STATE_SET -> b
    android.support.design.internal.NavigationMenu mMenu -> c
    android.support.design.internal.NavigationMenuPresenter mPresenter -> d
    android.support.design.widget.NavigationView$OnNavigationItemSelectedListener mListener -> e
    int mMaxWidth -> f
    android.view.MenuInflater mMenuInflater -> g
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setNavigationItemSelectedListener(android.support.design.widget.NavigationView$OnNavigationItemSelectedListener) -> setNavigationItemSelectedListener
    void onMeasure(int,int) -> onMeasure
    void inflateMenu(int) -> a
    android.view.Menu getMenu() -> getMenu
    android.view.View inflateHeaderView(int) -> b
    android.content.res.ColorStateList getItemIconTintList() -> getItemIconTintList
    void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    void setItemBackgroundResource(int) -> setItemBackgroundResource
    void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    void setCheckedItem(int) -> setCheckedItem
    void setItemTextAppearance(int) -> setItemTextAppearance
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    android.content.res.ColorStateList createDefaultColorStateList(int) -> c
    android.support.design.widget.NavigationView$OnNavigationItemSelectedListener access$000(android.support.design.widget.NavigationView) -> a
android.support.design.widget.NavigationView$1 -> android.support.design.widget.aj:
    android.support.design.widget.NavigationView this$0 -> a
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.design.widget.NavigationView$OnNavigationItemSelectedListener -> android.support.design.widget.ak:
    boolean onNavigationItemSelected(android.view.MenuItem) -> a
android.support.design.widget.NavigationView$SavedState -> android.support.design.widget.NavigationView$SavedState:
    android.os.Bundle menuState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.design.widget.NavigationView$SavedState$1 -> android.support.design.widget.al:
    android.support.design.widget.NavigationView$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.design.widget.NavigationView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.design.widget.ShadowDrawableWrapper -> android.support.design.widget.am:
    double COS_45 -> a
    android.graphics.Paint mCornerShadowPaint -> b
    android.graphics.Paint mEdgeShadowPaint -> c
    android.graphics.RectF mContentBounds -> d
    float mCornerRadius -> e
    android.graphics.Path mCornerShadowPath -> f
    float mMaxShadowSize -> g
    float mRawMaxShadowSize -> h
    float mShadowSize -> i
    float mRawShadowSize -> j
    boolean mDirty -> k
    int mShadowStartColor -> l
    int mShadowMiddleColor -> m
    int mShadowEndColor -> n
    boolean mAddPaddingForCorners -> o
    boolean mPrintedShadowClipWarning -> p
    int toEven(float) -> c
    void setAddPaddingForCorners(boolean) -> a
    void setAlpha(int) -> setAlpha
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setShadowSize(float,float) -> a
    boolean getPadding(android.graphics.Rect) -> getPadding
    float calculateVerticalPadding(float,float,boolean) -> a
    float calculateHorizontalPadding(float,float,boolean) -> b
    int getOpacity() -> getOpacity
    void draw(android.graphics.Canvas) -> draw
    void drawShadow(android.graphics.Canvas) -> a
    void buildShadowCorners() -> c
    void buildComponents(android.graphics.Rect) -> a
    void setShadowSize(float) -> a
    void setMaxShadowSize(float) -> b
    float getShadowSize() -> a
android.support.design.widget.ShadowViewDelegate -> android.support.design.widget.an:
    float getRadius() -> a
    void setShadowPadding(int,int,int,int) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
android.support.design.widget.Snackbar -> android.support.design.widget.Snackbar:
    android.os.Handler sHandler -> a
    android.view.ViewGroup mParent -> b
    android.support.design.widget.Snackbar$SnackbarLayout mView -> c
    android.support.design.widget.Snackbar$Callback mCallback -> d
    android.support.design.widget.SnackbarManager$Callback mManagerCallback -> e
    void dispatchDismiss(int) -> b
    void showView() -> a
    void animateViewIn() -> b
    void animateViewOut(int) -> c
    void hideView(int) -> a
    void onViewHidden(int) -> d
    boolean isBeingDragged() -> c
    void access$000(android.support.design.widget.Snackbar,int) -> a
    android.support.design.widget.SnackbarManager$Callback access$200(android.support.design.widget.Snackbar) -> a
    void access$300(android.support.design.widget.Snackbar) -> b
    android.support.design.widget.Snackbar$SnackbarLayout access$400(android.support.design.widget.Snackbar) -> c
    android.support.design.widget.Snackbar$Callback access$500(android.support.design.widget.Snackbar) -> d
    void access$600(android.support.design.widget.Snackbar,int) -> b
android.support.design.widget.Snackbar$1 -> android.support.design.widget.ao:
    boolean handleMessage(android.os.Message) -> handleMessage
android.support.design.widget.Snackbar$4 -> android.support.design.widget.ap:
    android.support.design.widget.Snackbar this$0 -> a
    void onDismiss(android.view.View) -> a
    void onDragStateChanged(int) -> a
android.support.design.widget.Snackbar$5 -> android.support.design.widget.aq:
    android.support.design.widget.Snackbar this$0 -> a
    void onLayoutChange(android.view.View,int,int,int,int) -> a
android.support.design.widget.Snackbar$6 -> android.support.design.widget.ar:
    android.support.design.widget.Snackbar this$0 -> a
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.design.widget.Snackbar$7 -> android.support.design.widget.as:
    android.support.design.widget.Snackbar this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.design.widget.Snackbar$8 -> android.support.design.widget.at:
    int val$event -> a
    android.support.design.widget.Snackbar this$0 -> b
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.design.widget.Snackbar$9 -> android.support.design.widget.au:
    int val$event -> a
    android.support.design.widget.Snackbar this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.design.widget.Snackbar$Behavior -> android.support.design.widget.av:
    android.support.design.widget.Snackbar this$0 -> a
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.support.design.widget.Snackbar$SnackbarLayout,android.view.MotionEvent) -> a
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> b
android.support.design.widget.Snackbar$Callback -> android.support.design.widget.aw:
    void onDismissed(android.support.design.widget.Snackbar,int) -> a
    void onShown(android.support.design.widget.Snackbar) -> a
android.support.design.widget.Snackbar$SnackbarLayout -> android.support.design.widget.Snackbar$SnackbarLayout:
    android.widget.TextView mMessageView -> a
    android.widget.Button mActionView -> b
    int mMaxWidth -> c
    int mMaxInlineActionWidth -> d
    android.support.design.widget.Snackbar$SnackbarLayout$OnLayoutChangeListener mOnLayoutChangeListener -> e
    void onFinishInflate() -> onFinishInflate
    android.widget.TextView getMessageView() -> getMessageView
    android.widget.Button getActionView() -> getActionView
    void onMeasure(int,int) -> onMeasure
    void animateChildrenIn(int,int) -> a
    void animateChildrenOut(int,int) -> b
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setOnLayoutChangeListener(android.support.design.widget.Snackbar$SnackbarLayout$OnLayoutChangeListener) -> setOnLayoutChangeListener
    boolean updateViewsWithinLayout(int,int,int) -> a
    void updateTopBottomPadding(android.view.View,int,int) -> a
android.support.design.widget.Snackbar$SnackbarLayout$OnLayoutChangeListener -> android.support.design.widget.ax:
    void onLayoutChange(android.view.View,int,int,int,int) -> a
android.support.design.widget.SnackbarManager -> android.support.design.widget.ay:
    android.support.design.widget.SnackbarManager sSnackbarManager -> a
    java.lang.Object mLock -> b
    android.os.Handler mHandler -> c
    android.support.design.widget.SnackbarManager$SnackbarRecord mCurrentSnackbar -> d
    android.support.design.widget.SnackbarManager$SnackbarRecord mNextSnackbar -> e
    android.support.design.widget.SnackbarManager getInstance() -> a
    void dismiss(android.support.design.widget.SnackbarManager$Callback,int) -> a
    void onDismissed(android.support.design.widget.SnackbarManager$Callback) -> a
    void onShown(android.support.design.widget.SnackbarManager$Callback) -> b
    void cancelTimeout(android.support.design.widget.SnackbarManager$Callback) -> c
    void restoreTimeout(android.support.design.widget.SnackbarManager$Callback) -> d
    void showNextSnackbarLocked() -> b
    boolean cancelSnackbarLocked(android.support.design.widget.SnackbarManager$SnackbarRecord,int) -> a
    boolean isCurrentSnackbar(android.support.design.widget.SnackbarManager$Callback) -> e
    boolean isNextSnackbar(android.support.design.widget.SnackbarManager$Callback) -> f
    void scheduleTimeoutLocked(android.support.design.widget.SnackbarManager$SnackbarRecord) -> a
    void handleTimeout(android.support.design.widget.SnackbarManager$SnackbarRecord) -> b
    void access$000(android.support.design.widget.SnackbarManager,android.support.design.widget.SnackbarManager$SnackbarRecord) -> a
android.support.design.widget.SnackbarManager$1 -> android.support.design.widget.az:
    android.support.design.widget.SnackbarManager this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
android.support.design.widget.SnackbarManager$Callback -> android.support.design.widget.ba:
    void show() -> a
    void dismiss(int) -> a
android.support.design.widget.SnackbarManager$SnackbarRecord -> android.support.design.widget.bb:
    java.lang.ref.WeakReference callback -> a
    int duration -> b
    boolean isSnackbar(android.support.design.widget.SnackbarManager$Callback) -> a
    java.lang.ref.WeakReference access$200(android.support.design.widget.SnackbarManager$SnackbarRecord) -> a
    int access$100(android.support.design.widget.SnackbarManager$SnackbarRecord) -> b
android.support.design.widget.StateListAnimator -> android.support.design.widget.bc:
    java.util.ArrayList mTuples -> a
    android.support.design.widget.StateListAnimator$Tuple mLastMatch -> b
    android.view.animation.Animation mRunningAnimation -> c
    java.lang.ref.WeakReference mViewRef -> d
    android.view.animation.Animation$AnimationListener mAnimationListener -> e
    void addState(int[],android.view.animation.Animation) -> a
    android.view.View getTarget() -> a
    void setTarget(android.view.View) -> a
    void clearTarget() -> c
    void setState(int[]) -> a
    void start(android.support.design.widget.StateListAnimator$Tuple) -> a
    void cancel() -> d
    void jumpToCurrentState() -> b
    android.view.animation.Animation access$000(android.support.design.widget.StateListAnimator) -> a
    android.view.animation.Animation access$002(android.support.design.widget.StateListAnimator,android.view.animation.Animation) -> a
android.support.design.widget.StateListAnimator$1 -> android.support.design.widget.bd:
    android.support.design.widget.StateListAnimator this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.design.widget.StateListAnimator$Tuple -> android.support.design.widget.be:
    int[] mSpecs -> a
    android.view.animation.Animation mAnimation -> b
android.support.design.widget.SwipeDismissBehavior -> android.support.design.widget.SwipeDismissBehavior:
    android.support.v4.widget.ViewDragHelper mViewDragHelper -> a
    android.support.design.widget.SwipeDismissBehavior$OnDismissListener mListener -> b
    boolean mIgnoreEvents -> c
    float mSensitivity -> d
    boolean mSensitivitySet -> e
    int mSwipeDirection -> f
    float mDragDismissThreshold -> g
    float mAlphaStartSwipeDistance -> h
    float mAlphaEndSwipeDistance -> i
    android.support.v4.widget.ViewDragHelper$Callback mDragCallback -> j
    void setListener(android.support.design.widget.SwipeDismissBehavior$OnDismissListener) -> a
    void setSwipeDirection(int) -> a
    void setStartAlphaSwipeDistance(float) -> a
    void setEndAlphaSwipeDistance(float) -> b
    boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> b
    boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> a
    void ensureViewDragHelper(android.view.ViewGroup) -> a
    float clamp(float,float,float) -> c
    int clamp(int,int,int) -> b
    int getDragState() -> a
    float fraction(float,float,float) -> a
    android.support.design.widget.SwipeDismissBehavior$OnDismissListener access$000(android.support.design.widget.SwipeDismissBehavior) -> a
    android.support.v4.widget.ViewDragHelper access$100(android.support.design.widget.SwipeDismissBehavior) -> b
    int access$200(android.support.design.widget.SwipeDismissBehavior) -> c
    float access$300(android.support.design.widget.SwipeDismissBehavior) -> d
    int access$400(int,int,int) -> a
    float access$500(android.support.design.widget.SwipeDismissBehavior) -> e
    float access$600(android.support.design.widget.SwipeDismissBehavior) -> f
    float access$700(float,float,float) -> b
android.support.design.widget.SwipeDismissBehavior$1 -> android.support.design.widget.bf:
    int mOriginalCapturedViewLeft -> b
    android.support.design.widget.SwipeDismissBehavior this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewReleased(android.view.View,float,float) -> a
    boolean shouldDismiss(android.view.View,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
android.support.design.widget.SwipeDismissBehavior$OnDismissListener -> android.support.design.widget.bg:
    void onDismiss(android.view.View) -> a
    void onDragStateChanged(int) -> a
android.support.design.widget.SwipeDismissBehavior$SettleRunnable -> android.support.design.widget.bh:
    android.view.View mView -> b
    boolean mDismiss -> c
    android.support.design.widget.SwipeDismissBehavior this$0 -> a
    void run() -> run
android.support.design.widget.TabLayout -> android.support.design.widget.TabLayout:
    java.util.ArrayList mTabs -> a
    android.support.design.widget.TabLayout$Tab mSelectedTab -> b
    android.support.design.widget.TabLayout$SlidingTabStrip mTabStrip -> c
    int mTabPaddingStart -> d
    int mTabPaddingTop -> e
    int mTabPaddingEnd -> f
    int mTabPaddingBottom -> g
    int mTabTextAppearance -> h
    android.content.res.ColorStateList mTabTextColors -> i
    int mTabBackgroundResId -> j
    int mTabMinWidth -> k
    int mTabMaxWidth -> l
    int mRequestedTabMaxWidth -> m
    int mContentInsetStart -> n
    int mTabGravity -> o
    int mMode -> p
    android.support.design.widget.TabLayout$OnTabSelectedListener mOnTabSelectedListener -> q
    android.view.View$OnClickListener mTabClickListener -> r
    android.support.design.widget.ValueAnimatorCompat mScrollAnimator -> s
    android.support.design.widget.ValueAnimatorCompat mIndicatorAnimator -> t
    void setSelectedTabIndicatorColor(int) -> setSelectedTabIndicatorColor
    void setSelectedTabIndicatorHeight(int) -> setSelectedTabIndicatorHeight
    void setScrollPosition(int,float,boolean) -> setScrollPosition
    float getScrollPosition() -> getScrollPosition
    void addTab(android.support.design.widget.TabLayout$Tab) -> a
    void addTab(android.support.design.widget.TabLayout$Tab,boolean) -> a
    void setOnTabSelectedListener(android.support.design.widget.TabLayout$OnTabSelectedListener) -> setOnTabSelectedListener
    android.support.design.widget.TabLayout$Tab newTab() -> a
    int getTabCount() -> getTabCount
    android.support.design.widget.TabLayout$Tab getTabAt(int) -> a
    int getSelectedTabPosition() -> getSelectedTabPosition
    void removeAllTabs() -> b
    void setTabMode(int) -> setTabMode
    int getTabMode() -> getTabMode
    void setTabGravity(int) -> setTabGravity
    int getTabGravity() -> getTabGravity
    void setTabTextColors(android.content.res.ColorStateList) -> setTabTextColors
    android.content.res.ColorStateList getTabTextColors() -> getTabTextColors
    void setTabTextColors(int,int) -> setTabTextColors
    void setupWithViewPager(android.support.v4.view.ViewPager) -> setupWithViewPager
    void setTabsFromPagerAdapter(android.support.v4.view.PagerAdapter) -> setTabsFromPagerAdapter
    void updateAllTabs() -> c
    android.support.design.widget.TabLayout$TabView createTabView(android.support.design.widget.TabLayout$Tab) -> c
    void configureTab(android.support.design.widget.TabLayout$Tab,int) -> a
    void updateTab(int) -> b
    void addTabView(android.support.design.widget.TabLayout$Tab,boolean) -> c
    android.widget.LinearLayout$LayoutParams createLayoutParamsForTabs() -> d
    void updateTabViewLayoutParams(android.widget.LinearLayout$LayoutParams) -> a
    int dpToPx(int) -> c
    void onMeasure(int,int) -> onMeasure
    void animateToTab(int) -> d
    void setSelectedTabView(int) -> setSelectedTabView
    void selectTab(android.support.design.widget.TabLayout$Tab) -> b
    void selectTab(android.support.design.widget.TabLayout$Tab,boolean) -> b
    int calculateScrollXForTab(int,float) -> a
    void applyModeAndGravity() -> e
    void updateTabViewsLayoutParams() -> f
    android.content.res.ColorStateList createColorStateList(int,int) -> a
    android.content.res.ColorStateList loadTextColorFromTextAppearance(int) -> e
    void access$100(android.support.design.widget.TabLayout,int) -> a
    int access$200(android.support.design.widget.TabLayout) -> a
    int access$300(android.support.design.widget.TabLayout) -> b
    int access$400(android.support.design.widget.TabLayout) -> c
    int access$500(android.support.design.widget.TabLayout) -> d
    int access$600(android.support.design.widget.TabLayout) -> e
    int access$700(android.support.design.widget.TabLayout) -> f
    int access$800(android.support.design.widget.TabLayout) -> g
    int access$900(android.support.design.widget.TabLayout) -> h
    android.content.res.ColorStateList access$1000(android.support.design.widget.TabLayout) -> i
    int access$1100(android.support.design.widget.TabLayout) -> j
    int access$1200(android.support.design.widget.TabLayout) -> k
    int access$1300(android.support.design.widget.TabLayout,int) -> b
    int access$1202(android.support.design.widget.TabLayout,int) -> c
    void access$1400(android.support.design.widget.TabLayout) -> l
    android.support.design.widget.ValueAnimatorCompat access$1502(android.support.design.widget.TabLayout,android.support.design.widget.ValueAnimatorCompat) -> a
    float access$1900(android.support.design.widget.TabLayout) -> m
android.support.design.widget.TabLayout$1 -> android.support.design.widget.bi:
    android.support.design.widget.TabLayout this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.design.widget.TabLayout$2 -> android.support.design.widget.bj:
    android.support.design.widget.TabLayout this$0 -> a
    void onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat) -> a
android.support.design.widget.TabLayout$OnTabSelectedListener -> android.support.design.widget.bk:
    void onTabSelected(android.support.design.widget.TabLayout$Tab) -> a
    void onTabUnselected(android.support.design.widget.TabLayout$Tab) -> b
    void onTabReselected(android.support.design.widget.TabLayout$Tab) -> c
android.support.design.widget.TabLayout$SlidingTabStrip -> android.support.design.widget.bl:
    int mSelectedIndicatorHeight -> b
    android.graphics.Paint mSelectedIndicatorPaint -> c
    int mSelectedPosition -> d
    float mSelectionOffset -> e
    int mIndicatorLeft -> f
    int mIndicatorRight -> g
    android.support.design.widget.TabLayout this$0 -> a
    void setSelectedIndicatorColor(int) -> a
    void setSelectedIndicatorHeight(int) -> b
    boolean childrenNeedLayout() -> a
    void setIndicatorPositionFromTabPosition(int,float) -> a
    float getIndicatorPosition() -> b
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void updateIndicatorPosition() -> c
    void setIndicatorPosition(int,int) -> b
    void animateIndicatorToPosition(int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void access$1600(android.support.design.widget.TabLayout$SlidingTabStrip,int,int) -> a
    int access$1702(android.support.design.widget.TabLayout$SlidingTabStrip,int) -> a
    float access$1802(android.support.design.widget.TabLayout$SlidingTabStrip,float) -> a
android.support.design.widget.TabLayout$SlidingTabStrip$1 -> android.support.design.widget.bm:
    int val$startLeft -> a
    int val$targetLeft -> b
    int val$startRight -> c
    int val$targetRight -> d
    android.support.design.widget.TabLayout$SlidingTabStrip this$1 -> e
    void onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat) -> a
android.support.design.widget.TabLayout$SlidingTabStrip$2 -> android.support.design.widget.bn:
    int val$position -> a
    android.support.design.widget.TabLayout$SlidingTabStrip this$1 -> b
    void onAnimationEnd(android.support.design.widget.ValueAnimatorCompat) -> a
    void onAnimationCancel(android.support.design.widget.ValueAnimatorCompat) -> b
android.support.design.widget.TabLayout$Tab -> android.support.design.widget.bo:
    android.graphics.drawable.Drawable mIcon -> a
    java.lang.CharSequence mText -> b
    java.lang.CharSequence mContentDesc -> c
    int mPosition -> d
    android.view.View mCustomView -> e
    android.support.design.widget.TabLayout mParent -> f
    android.view.View getCustomView() -> a
    android.graphics.drawable.Drawable getIcon() -> b
    int getPosition() -> c
    void setPosition(int) -> a
    java.lang.CharSequence getText() -> d
    android.support.design.widget.TabLayout$Tab setText(java.lang.CharSequence) -> a
    void select() -> e
    java.lang.CharSequence getContentDescription() -> f
    android.support.design.widget.TabLayout access$000(android.support.design.widget.TabLayout$Tab) -> a
android.support.design.widget.TabLayout$TabLayoutOnPageChangeListener -> android.support.design.widget.bp:
    java.lang.ref.WeakReference mTabLayoutRef -> a
    int mPendingSelection -> b
    int mScrollState -> c
    void onPageScrollStateChanged(int) -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> b
android.support.design.widget.TabLayout$TabView -> android.support.design.widget.bq:
    android.support.design.widget.TabLayout$Tab mTab -> b
    android.widget.TextView mTextView -> c
    android.widget.ImageView mIconView -> d
    android.view.View mCustomView -> e
    android.widget.TextView mCustomTextView -> f
    android.widget.ImageView mCustomIconView -> g
    android.support.design.widget.TabLayout this$0 -> a
    void setSelected(boolean) -> setSelected
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onMeasure(int,int) -> onMeasure
    void update() -> a
    void updateTextAndIcon(android.support.design.widget.TabLayout$Tab,android.widget.TextView,android.widget.ImageView) -> a
    boolean onLongClick(android.view.View) -> onLongClick
    android.support.design.widget.TabLayout$Tab getTab() -> b
android.support.design.widget.TabLayout$ViewPagerOnTabSelectedListener -> android.support.design.widget.br:
    android.support.v4.view.ViewPager mViewPager -> a
    void onTabSelected(android.support.design.widget.TabLayout$Tab) -> a
    void onTabUnselected(android.support.design.widget.TabLayout$Tab) -> b
    void onTabReselected(android.support.design.widget.TabLayout$Tab) -> c
android.support.design.widget.TextInputLayout -> android.support.design.widget.TextInputLayout:
    android.widget.EditText mEditText -> a
    java.lang.CharSequence mHint -> b
    android.graphics.Paint mTmpPaint -> c
    boolean mErrorEnabled -> d
    android.widget.TextView mErrorView -> e
    int mErrorTextAppearance -> f
    android.content.res.ColorStateList mDefaultTextColor -> g
    android.content.res.ColorStateList mFocusedTextColor -> h
    android.support.design.widget.CollapsingTextHelper mCollapsingTextHelper -> i
    boolean mHintAnimationEnabled -> j
    android.support.design.widget.ValueAnimatorCompat mAnimator -> k
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void setEditText(android.widget.EditText) -> setEditText
    android.widget.LinearLayout$LayoutParams updateEditTextMargin(android.view.ViewGroup$LayoutParams) -> a
    void updateLabelVisibility(boolean) -> a
    android.widget.EditText getEditText() -> getEditText
    void setHint(java.lang.CharSequence) -> setHint
    java.lang.CharSequence getHint() -> getHint
    void setHintTextAppearance(int) -> setHintTextAppearance
    void setErrorEnabled(boolean) -> setErrorEnabled
    void setError(java.lang.CharSequence) -> setError
    java.lang.CharSequence getError() -> getError
    void setHintAnimationEnabled(boolean) -> setHintAnimationEnabled
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void refreshDrawableState() -> refreshDrawableState
    void collapseHint(boolean) -> b
    void expandHint(boolean) -> c
    void animateToExpansionFraction(float) -> a
    boolean arrayContains(int[],int) -> a
    void access$100(android.support.design.widget.TextInputLayout,boolean) -> a
    android.support.design.widget.CollapsingTextHelper access$200(android.support.design.widget.TextInputLayout) -> a
    android.widget.EditText access$300(android.support.design.widget.TextInputLayout) -> b
    android.widget.TextView access$400(android.support.design.widget.TextInputLayout) -> c
android.support.design.widget.TextInputLayout$1 -> android.support.design.widget.bs:
    android.support.design.widget.TextInputLayout this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
android.support.design.widget.TextInputLayout$2 -> android.support.design.widget.bt:
    android.support.design.widget.TextInputLayout this$0 -> a
    void onAnimationStart(android.view.View) -> a
android.support.design.widget.TextInputLayout$3 -> android.support.design.widget.bu:
    android.support.design.widget.TextInputLayout this$0 -> a
    void onAnimationEnd(android.view.View) -> b
android.support.design.widget.TextInputLayout$4 -> android.support.design.widget.bv:
    android.support.design.widget.TextInputLayout this$0 -> a
    void onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat) -> a
android.support.design.widget.TextInputLayout$TextInputAccessibilityDelegate -> android.support.design.widget.bw:
    android.support.design.widget.TextInputLayout this$0 -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.design.widget.ValueAnimatorCompat -> android.support.design.widget.bx:
    android.support.design.widget.ValueAnimatorCompat$Impl mImpl -> a
    void start() -> a
    boolean isRunning() -> b
    void setInterpolator(android.view.animation.Interpolator) -> a
    void setUpdateListener(android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener) -> a
    void setListener(android.support.design.widget.ValueAnimatorCompat$AnimatorListener) -> a
    void setIntValues(int,int) -> a
    int getAnimatedIntValue() -> c
    void setFloatValues(float,float) -> a
    float getAnimatedFloatValue() -> d
    void setDuration(int) -> a
    void cancel() -> e
    float getAnimatedFraction() -> f
android.support.design.widget.ValueAnimatorCompat$1 -> android.support.design.widget.by:
    android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener val$updateListener -> a
    android.support.design.widget.ValueAnimatorCompat this$0 -> b
    void onAnimationUpdate() -> a
android.support.design.widget.ValueAnimatorCompat$2 -> android.support.design.widget.bz:
    android.support.design.widget.ValueAnimatorCompat$AnimatorListener val$listener -> a
    android.support.design.widget.ValueAnimatorCompat this$0 -> b
    void onAnimationStart() -> a
    void onAnimationEnd() -> b
    void onAnimationCancel() -> c
android.support.design.widget.ValueAnimatorCompat$AnimatorListener -> android.support.design.widget.ca:
    void onAnimationStart(android.support.design.widget.ValueAnimatorCompat) -> c
    void onAnimationEnd(android.support.design.widget.ValueAnimatorCompat) -> a
    void onAnimationCancel(android.support.design.widget.ValueAnimatorCompat) -> b
android.support.design.widget.ValueAnimatorCompat$AnimatorListenerAdapter -> android.support.design.widget.cb:
    void onAnimationStart(android.support.design.widget.ValueAnimatorCompat) -> c
    void onAnimationEnd(android.support.design.widget.ValueAnimatorCompat) -> a
    void onAnimationCancel(android.support.design.widget.ValueAnimatorCompat) -> b
android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener -> android.support.design.widget.cc:
    void onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat) -> a
android.support.design.widget.ValueAnimatorCompat$Creator -> android.support.design.widget.cd:
    android.support.design.widget.ValueAnimatorCompat createAnimator() -> a
android.support.design.widget.ValueAnimatorCompat$Impl -> android.support.design.widget.ce:
    void start() -> a
    boolean isRunning() -> b
    void setInterpolator(android.view.animation.Interpolator) -> a
    void setListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy) -> a
    void setUpdateListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy) -> a
    void setIntValues(int,int) -> a
    int getAnimatedIntValue() -> c
    void setFloatValues(float,float) -> a
    float getAnimatedFloatValue() -> d
    void setDuration(int) -> a
    void cancel() -> e
    float getAnimatedFraction() -> f
android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy -> android.support.design.widget.cf:
    void onAnimationStart() -> a
    void onAnimationEnd() -> b
    void onAnimationCancel() -> c
android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy -> android.support.design.widget.cg:
    void onAnimationUpdate() -> a
android.support.design.widget.ValueAnimatorCompatImplEclairMr1 -> android.support.design.widget.ch:
    android.os.Handler sHandler -> a
    long mStartTime -> b
    boolean mIsRunning -> c
    int[] mIntValues -> d
    float[] mFloatValues -> e
    int mDuration -> f
    android.view.animation.Interpolator mInterpolator -> g
    android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy mListener -> h
    android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy mUpdateListener -> i
    float mAnimatedFraction -> j
    java.lang.Runnable mRunnable -> k
    void start() -> a
    boolean isRunning() -> b
    void setInterpolator(android.view.animation.Interpolator) -> a
    void setListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy) -> a
    void setUpdateListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy) -> a
    void setIntValues(int,int) -> a
    int getAnimatedIntValue() -> c
    void setFloatValues(float,float) -> a
    float getAnimatedFloatValue() -> d
    void setDuration(int) -> a
    void cancel() -> e
    float getAnimatedFraction() -> f
    void update() -> g
    void access$000(android.support.design.widget.ValueAnimatorCompatImplEclairMr1) -> a
android.support.design.widget.ValueAnimatorCompatImplEclairMr1$1 -> android.support.design.widget.ci:
    android.support.design.widget.ValueAnimatorCompatImplEclairMr1 this$0 -> a
    void run() -> run
android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 -> android.support.design.widget.cj:
    android.animation.ValueAnimator mValueAnimator -> a
    void start() -> a
    boolean isRunning() -> b
    void setInterpolator(android.view.animation.Interpolator) -> a
    void setUpdateListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy) -> a
    void setListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy) -> a
    void setIntValues(int,int) -> a
    int getAnimatedIntValue() -> c
    void setFloatValues(float,float) -> a
    float getAnimatedFloatValue() -> d
    void setDuration(int) -> a
    void cancel() -> e
    float getAnimatedFraction() -> f
android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$1 -> android.support.design.widget.ck:
    android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy val$updateListener -> a
    android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 this$0 -> b
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$2 -> android.support.design.widget.cl:
    android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy val$listener -> a
    android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 this$0 -> b
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
android.support.design.widget.ViewGroupUtils -> android.support.design.widget.cm:
    android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImpl IMPL -> a
    void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> a
    void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> b
android.support.design.widget.ViewGroupUtils$1 -> android.support.design.widget.cn:
android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImpl -> android.support.design.widget.co:
    void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> a
android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplBase -> android.support.design.widget.cp:
    void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> a
android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplHoneycomb -> android.support.design.widget.cq:
    void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> a
android.support.design.widget.ViewGroupUtilsHoneycomb -> android.support.design.widget.cr:
    java.lang.ThreadLocal sMatrix -> a
    java.lang.ThreadLocal sRectF -> b
    android.graphics.Matrix IDENTITY -> c
    void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> a
    void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> a
android.support.design.widget.ViewOffsetBehavior -> android.support.design.widget.ViewOffsetBehavior:
    android.support.design.widget.ViewOffsetHelper mViewOffsetHelper -> a
    int mTempTopBottomOffset -> b
    int mTempLeftRightOffset -> c
    boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> a
    boolean setTopAndBottomOffset(int) -> a
    int getTopAndBottomOffset() -> b
android.support.design.widget.ViewOffsetHelper -> android.support.design.widget.cs:
    android.view.View mView -> a
    int mLayoutTop -> b
    int mLayoutLeft -> c
    int mOffsetTop -> d
    int mOffsetLeft -> e
    void onViewLayout() -> a
    void updateOffsets() -> c
    void tickleParentInvalidationFlag(android.view.View) -> a
    boolean setTopAndBottomOffset(int) -> a
    boolean setLeftAndRightOffset(int) -> b
    int getTopAndBottomOffset() -> b
android.support.design.widget.ViewUtils -> android.support.design.widget.ct:
    android.support.design.widget.ValueAnimatorCompat$Creator DEFAULT_ANIMATOR_CREATOR -> a
    android.support.design.widget.ViewUtils$ViewUtilsImpl IMPL -> b
    void setBoundsViewOutlineProvider(android.view.View) -> a
    android.support.design.widget.ValueAnimatorCompat createAnimator() -> a
android.support.design.widget.ViewUtils$1 -> android.support.design.widget.cu:
    android.support.design.widget.ValueAnimatorCompat createAnimator() -> a
android.support.design.widget.ViewUtils$ViewUtilsImpl -> android.support.design.widget.cv:
    void setBoundsViewOutlineProvider(android.view.View) -> a
android.support.design.widget.ViewUtils$ViewUtilsImplBase -> android.support.design.widget.cw:
    void setBoundsViewOutlineProvider(android.view.View) -> a
android.support.design.widget.ViewUtils$ViewUtilsImplLollipop -> android.support.design.widget.cx:
    void setBoundsViewOutlineProvider(android.view.View) -> a
android.support.design.widget.ViewUtilsLollipop -> android.support.design.widget.cy:
    void setBoundsViewOutlineProvider(android.view.View) -> a
android.support.v4.animation.AnimatorCompatHelper -> android.support.v4.a.a:
    android.support.v4.animation.AnimatorProvider IMPL -> a
    void clearInterpolator(android.view.View) -> a
android.support.v4.animation.AnimatorProvider -> android.support.v4.a.b:
    void clearInterpolator(android.view.View) -> a
android.support.v4.animation.DonutAnimatorCompatProvider -> android.support.v4.a.c:
    void clearInterpolator(android.view.View) -> a
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider -> android.support.v4.a.d:
    android.animation.TimeInterpolator mDefaultInterpolator -> a
    void clearInterpolator(android.view.View) -> a
android.support.v4.app.ActivityCompat -> android.support.v4.app.a:
    void finishAffinity(android.app.Activity) -> a
    void finishAfterTransition(android.app.Activity) -> b
    void requestPermissions(android.app.Activity,java.lang.String[],int) -> a
    boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> a
android.support.v4.app.ActivityCompat$1 -> android.support.v4.app.b:
    java.lang.String[] val$permissions -> a
    android.app.Activity val$activity -> b
    int val$requestCode -> c
    void run() -> run
android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback -> android.support.v4.app.c:
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.d:
    void finishAfterTransition(android.app.Activity) -> a
android.support.v4.app.ActivityCompatApi23 -> android.support.v4.app.e:
    void requestPermissions(android.app.Activity,java.lang.String[],int) -> a
    boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> a
android.support.v4.app.ActivityCompatApi23$RequestPermissionsRequestCodeValidator -> android.support.v4.app.f:
    void validateRequestPermissionsRequestCode(int) -> a
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.g:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.h:
    void finishAffinity(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.i:
    boolean SUPPORTS_TRANSITIONS -> a
    android.support.v4.app.FragmentManagerImpl mManager -> b
    android.support.v4.app.BackStackRecord$Op mHead -> c
    android.support.v4.app.BackStackRecord$Op mTail -> d
    int mNumOp -> e
    int mEnterAnim -> f
    int mExitAnim -> g
    int mPopEnterAnim -> h
    int mPopExitAnim -> i
    int mTransition -> j
    int mTransitionStyle -> k
    boolean mAddToBackStack -> l
    boolean mAllowAddToBackStack -> m
    java.lang.String mName -> n
    boolean mCommitted -> o
    int mIndex -> p
    int mBreadCrumbTitleRes -> q
    java.lang.CharSequence mBreadCrumbTitleText -> r
    int mBreadCrumbShortTitleRes -> s
    java.lang.CharSequence mBreadCrumbShortTitleText -> t
    java.util.ArrayList mSharedElementSourceNames -> u
    java.util.ArrayList mSharedElementTargetNames -> v
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment) -> a
    void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment) -> b
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> b
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> a
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> a
    java.lang.String getName() -> c
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> a
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> a
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> b
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> a
    java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap,android.view.View) -> a
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> a
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> a
    void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList) -> a
    void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> a
    void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> a
    android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> a
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> a
    android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> b
    void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> a
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> a
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> a
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> b
    android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> a
    void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> a
    void access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> a
    void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
android.support.v4.app.BackStackRecord$1 -> android.support.v4.app.j:
    android.support.v4.app.Fragment val$inFragment -> a
    android.support.v4.app.BackStackRecord this$0 -> b
    android.view.View getView() -> a
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.k:
    android.view.View val$sceneRoot -> a
    java.lang.Object val$sharedElementTransition -> b
    java.util.ArrayList val$sharedElementTargets -> c
    android.support.v4.app.BackStackRecord$TransitionState val$state -> d
    boolean val$isBack -> e
    android.support.v4.app.Fragment val$inFragment -> f
    android.support.v4.app.Fragment val$outFragment -> g
    android.support.v4.app.BackStackRecord this$0 -> h
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.l:
    android.view.View val$sceneRoot -> a
    android.support.v4.app.BackStackRecord$TransitionState val$state -> b
    int val$containerId -> c
    java.lang.Object val$transition -> d
    android.support.v4.app.BackStackRecord this$0 -> e
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.m:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.n:
    android.support.v4.util.ArrayMap nameOverrides -> a
    java.util.ArrayList hiddenFragmentViews -> b
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> c
    android.view.View nonExistentView -> d
    android.support.v4.app.BackStackRecord this$0 -> e
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    java.util.ArrayList mSharedElementSourceNames -> j
    java.util.ArrayList mSharedElementTargetNames -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.o:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BaseFragmentActivityDonut -> android.support.v4.app.p:
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
android.support.v4.app.BaseFragmentActivityHoneycomb -> android.support.v4.app.q:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void dismissInternal(boolean) -> a
    int getTheme() -> a
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void setupDialog(android.app.Dialog,int) -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> a
    java.lang.Object USE_DEFAULT_TRANSITION -> j
    int mState -> k
    android.view.View mAnimatingAway -> l
    int mStateAfterAnimating -> m
    android.os.Bundle mSavedFragmentState -> n
    android.util.SparseArray mSavedViewState -> o
    int mIndex -> p
    java.lang.String mWho -> q
    android.os.Bundle mArguments -> r
    android.support.v4.app.Fragment mTarget -> s
    int mTargetIndex -> t
    int mTargetRequestCode -> u
    boolean mAdded -> v
    boolean mRemoving -> w
    boolean mResumed -> x
    boolean mFromLayout -> y
    boolean mInLayout -> z
    boolean mRestored -> A
    int mBackStackNesting -> B
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> C
    android.support.v4.app.FragmentHostCallback mHost -> D
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> E
    android.support.v4.app.Fragment mParentFragment -> F
    int mFragmentId -> G
    int mContainerId -> H
    java.lang.String mTag -> I
    boolean mHidden -> J
    boolean mDetached -> K
    boolean mRetainInstance -> L
    boolean mRetaining -> M
    boolean mHasMenu -> N
    boolean mMenuVisible -> O
    boolean mCalled -> P
    int mNextAnim -> Q
    android.view.ViewGroup mContainer -> R
    android.view.View mView -> S
    android.view.View mInnerView -> T
    boolean mDeferStart -> U
    boolean mUserVisibleHint -> V
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> W
    boolean mLoadersStarted -> X
    boolean mCheckedForLoaderManager -> Y
    java.lang.Object mEnterTransition -> Z
    java.lang.Object mReturnTransition -> aa
    java.lang.Object mExitTransition -> ab
    java.lang.Object mReenterTransition -> ac
    java.lang.Object mSharedElementEnterTransition -> ad
    java.lang.Object mSharedElementReturnTransition -> ae
    java.lang.Boolean mAllowReturnTransitionOverlap -> af
    java.lang.Boolean mAllowEnterTransitionOverlap -> ag
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> ah
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> ai
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> a
    void restoreViewState(android.os.Bundle) -> b
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.content.Context getContext() -> getContext
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    java.lang.Object getHost() -> getHost
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void requestPermissions(java.lang.String[],int) -> requestPermissions
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    boolean shouldShowRequestPermissionRationale(java.lang.String) -> shouldShowRequestPermissionRationale
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.content.Context) -> onAttach
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> c
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void setEnterTransition(java.lang.Object) -> setEnterTransition
    java.lang.Object getEnterTransition() -> getEnterTransition
    void setReturnTransition(java.lang.Object) -> setReturnTransition
    java.lang.Object getReturnTransition() -> getReturnTransition
    void setExitTransition(java.lang.Object) -> setExitTransition
    java.lang.Object getExitTransition() -> getExitTransition
    void setReenterTransition(java.lang.Object) -> setReenterTransition
    java.lang.Object getReenterTransition() -> getReenterTransition
    void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void instantiateChildFragmentManager() -> d
    void performCreate(android.os.Bundle) -> c
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void performActivityCreated(android.os.Bundle) -> d
    void performStart() -> e
    void performResume() -> f
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> g
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean performPrepareOptionsMenu(android.view.Menu) -> a
    boolean performOptionsItemSelected(android.view.MenuItem) -> a
    boolean performContextItemSelected(android.view.MenuItem) -> b
    void performOptionsMenuClosed(android.view.Menu) -> b
    void performSaveInstanceState(android.os.Bundle) -> e
    void performPause() -> h
    void performStop() -> i
    void performReallyStop() -> j
    void performDestroyView() -> k
    void performDestroy() -> l
android.support.v4.app.Fragment$1 -> android.support.v4.app.r:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View onFindViewById(int) -> a
    boolean onHasView() -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.s:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentController mFragments -> b
    boolean mCreated -> c
    boolean mResumed -> d
    boolean mStopped -> e
    boolean mReallyStopped -> f
    boolean mRetaining -> g
    boolean mOptionsMenuInvalidated -> h
    boolean mRequestedPermissionsFromFragment -> i
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void supportFinishAfterTransition() -> a_
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStateNotSaved() -> onStateNotSaved
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> b_
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> c
    void supportInvalidateOptionsMenu() -> d
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> e
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> f
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void validateRequestPermissionsRequestCode(int) -> a
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void requestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int) -> a
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void access$000(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment,java.lang.String[],int) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$HostCallbacks -> android.support.v4.app.u:
    android.support.v4.app.FragmentActivity this$0 -> a
    void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> a
    android.view.LayoutInflater onGetLayoutInflater() -> b
    android.support.v4.app.FragmentActivity onGetHost() -> c
    void onSupportInvalidateOptionsMenu() -> d
    void onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void onRequestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int) -> a
    boolean onShouldShowRequestPermissionRationale(java.lang.String) -> a
    boolean onHasWindowAnimations() -> e
    int onGetWindowAnimations() -> f
    void onAttachFragment(android.support.v4.app.Fragment) -> b
    android.view.View onFindViewById(int) -> a
    boolean onHasView() -> a
    java.lang.Object onGetHost() -> g
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.v:
    java.lang.Object custom -> a
    java.util.List fragments -> b
    android.support.v4.util.SimpleArrayMap loaders -> c
android.support.v4.app.FragmentContainer -> android.support.v4.app.w:
    android.view.View onFindViewById(int) -> a
    boolean onHasView() -> a
android.support.v4.app.FragmentController -> android.support.v4.app.x:
    android.support.v4.app.FragmentHostCallback mHost -> a
    android.support.v4.app.FragmentController createController(android.support.v4.app.FragmentHostCallback) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> a
    int getActiveFragmentsCount() -> b
    java.util.List getActiveFragments(java.util.List) -> a
    void attachHost(android.support.v4.app.Fragment) -> a
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    void noteStateNotSaved() -> c
    android.os.Parcelable saveAllState() -> d
    void restoreAllState(android.os.Parcelable,java.util.List) -> a
    java.util.List retainNonConfig() -> e
    void dispatchCreate() -> f
    void dispatchActivityCreated() -> g
    void dispatchStart() -> h
    void dispatchResume() -> i
    void dispatchPause() -> j
    void dispatchStop() -> k
    void dispatchReallyStop() -> l
    void dispatchDestroy() -> m
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> n
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    boolean execPendingActions() -> o
    void doLoaderStart() -> p
    void doLoaderStop(boolean) -> a
    void doLoaderDestroy() -> q
    void reportLoaderStart() -> r
    android.support.v4.util.SimpleArrayMap retainLoaderNonConfig() -> s
    void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap) -> a
    void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.FragmentHostCallback -> android.support.v4.app.y:
    android.app.Activity mActivity -> a
    android.content.Context mContext -> b
    android.os.Handler mHandler -> e
    int mWindowAnimations -> c
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> d
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> f
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> g
    boolean mCheckedForLoaderManager -> h
    boolean mLoadersStarted -> i
    void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> a
    android.view.LayoutInflater onGetLayoutInflater() -> b
    java.lang.Object onGetHost() -> g
    void onSupportInvalidateOptionsMenu() -> d
    void onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void onRequestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int) -> a
    boolean onShouldShowRequestPermissionRationale(java.lang.String) -> a
    boolean onHasWindowAnimations() -> e
    int onGetWindowAnimations() -> f
    android.view.View onFindViewById(int) -> a
    boolean onHasView() -> a
    android.app.Activity getActivity() -> h
    android.content.Context getContext() -> i
    android.os.Handler getHandler() -> j
    android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl() -> k
    void inactivateFragment(java.lang.String) -> b
    void onAttachFragment(android.support.v4.app.Fragment) -> b
    void doLoaderStart() -> l
    void doLoaderStop(boolean) -> a
    void doLoaderDestroy() -> m
    void reportLoaderStart() -> n
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
    android.support.v4.util.SimpleArrayMap retainLoaderNonConfig() -> o
    void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap) -> a
    void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> b
android.support.v4.app.FragmentManager -> android.support.v4.app.z:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    boolean popBackStackImmediate() -> c
    void popBackStack(int,int) -> a
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.aa:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.ab:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentHostCallback mHost -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    boolean modifiesAlpha(android.view.animation.Animation) -> a
    boolean shouldRunOnHWLayer(android.view.View,android.view.animation.Animation) -> a
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void popBackStack(int,int) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void setHWLayerAnimListenerIfAlpha(android.view.View,android.view.animation.Animation) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> u
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.List) -> a
    void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory() -> t
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.ac:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.ad:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.ae:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener -> android.support.v4.app.af:
    boolean mShouldRunOnHWLayer -> a
    android.view.View mView -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.ag:
    int[] Fragment -> a
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.ah:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.ai:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    long getItemId(int) -> b
    java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.aj:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void ensureHierarchy(android.content.Context) -> a
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.ak:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.al:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.am:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.an:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.ao:
    java.lang.String getTransitionName(android.view.View) -> a
    java.lang.Object cloneTransition(java.lang.Object) -> a
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map,android.view.View) -> a
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> a
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    void setEpicenter(java.lang.Object,android.view.View) -> a
    java.lang.Object wrapSharedElementTransition(java.lang.Object) -> b
    void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.Map,java.util.ArrayList) -> a
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> a
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.Map,java.util.ArrayList) -> a
    void bfsAddViewChildren(java.util.List,android.view.View) -> a
    boolean containedBeforeIndex(java.util.List,android.view.View,int) -> a
    void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> a
    android.graphics.Rect getBoundsOnScreen(android.view.View) -> c
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> b
    void findNamedViews(java.util.Map,android.view.View) -> a
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> a
    void removeTargets(java.lang.Object,java.util.ArrayList) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> b
    boolean hasSimpleTarget(android.transition.Transition) -> a
    boolean isNullOrEmpty(java.util.List) -> a
    void access$000(java.util.ArrayList,android.view.View) -> a
    android.graphics.Rect access$100(android.view.View) -> b
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.ap:
    android.graphics.Rect val$epicenter -> a
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.aq:
    android.view.View val$container -> a
    android.transition.Transition val$enterTransition -> b
    android.view.View val$nonExistentView -> c
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> d
    java.util.Map val$nameOverrides -> e
    java.util.Map val$renamedViews -> f
    java.util.ArrayList val$enteringViews -> g
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.ar:
    android.graphics.Rect mEpicenter -> b
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> a
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.as:
    android.view.View val$sceneRoot -> a
    android.transition.Transition val$enterTransition -> b
    java.util.ArrayList val$enteringViews -> c
    android.transition.Transition val$exitTransition -> d
    java.util.ArrayList val$exitingViews -> e
    android.transition.Transition val$sharedElementTransition -> f
    java.util.ArrayList val$sharedElementTargets -> g
    java.util.Map val$renamedViews -> h
    java.util.ArrayList val$hiddenViews -> i
    android.transition.Transition val$overallTransition -> j
    android.view.View val$nonExistentView -> k
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.at:
    android.view.View epicenter -> a
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.au:
    android.view.View getView() -> a
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    android.os.Handler mHandler -> i
    java.lang.Runnable mRequestFocus -> aj
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> ak
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void setListAdapter(android.widget.ListAdapter) -> a
    void setListShown(boolean,boolean) -> a
    void ensureList() -> a
android.support.v4.app.ListFragment$1 -> android.support.v4.app.av:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.aw:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.ax:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ay:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.az:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    android.support.v4.app.FragmentHostCallback mHost -> g
    void updateHostController(android.support.v4.app.FragmentHostCallback) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
    android.support.v4.app.FragmentHostCallback access$000(android.support.v4.app.LoaderManagerImpl) -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ba:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NavUtils -> android.support.v4.app.bb:
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> a
    java.lang.String getParentActivityName(android.app.Activity) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> b
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.bc:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.bd:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.be:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> b
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtilsJB -> android.support.v4.app.bf:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.bg:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
android.support.v4.app.SharedElementCallback -> android.support.v4.app.bh:
    int MAX_IMAGE_SIZE -> a
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> a
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> b
    void onMapSharedElements(java.util.List,java.util.Map) -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.bi:
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> a
    java.util.ArrayList mIntents -> b
    android.content.Context mSourceContext -> c
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> a
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> a
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> a
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> a
    java.util.Iterator iterator() -> iterator
    void startActivities() -> a
    void startActivities(android.os.Bundle) -> a
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.bj:
    android.content.Intent getSupportParentActivityIntent() -> a
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.bk:
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.bl:
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.bm:
android.support.v4.content.ContextCompat -> android.support.v4.content.a:
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
android.support.v4.content.ContextCompatApi21 -> android.support.v4.content.b:
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.c:
    void startActivities(android.content.Context,android.content.Intent[]) -> a
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.d:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> b
    int modeToMode(java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
    java.lang.String[] copyOf(java.lang.String[],int) -> a
    java.lang.Object[] copyOf(java.lang.Object[],int) -> a
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.e:
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.f:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.IntentCompat -> android.support.v4.content.g:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.h:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.i:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.j:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.k:
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.l:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.Loader -> android.support.v4.content.m:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    android.support.v4.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener -> c
    boolean mStarted -> d
    boolean mAbandoned -> e
    boolean mReset -> f
    boolean mContentChanged -> g
    boolean mProcessingChange -> h
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void registerOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener) -> a
    void unregisterOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener) -> b
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCanceledListener -> android.support.v4.content.n:
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.o:
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.p:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    void unregisterReceiver(android.content.BroadcastReceiver) -> a
    boolean sendBroadcast(android.content.Intent) -> a
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.q:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.r:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.s:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
android.support.v4.graphics.ColorUtils -> android.support.v4.b.a:
    int compositeColors(int,int) -> a
    int compositeAlpha(int,int) -> c
    int compositeComponent(int,int,int,int,int) -> a
    int setAlphaComponent(int,int) -> b
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.b.a.a:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> a
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> a
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> a
    void setTint(android.graphics.drawable.Drawable,int) -> a
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> a
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> a
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> c
    android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> d
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> b
    int getLayoutDirection(android.graphics.drawable.Drawable) -> e
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.b.a.b:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> a
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> a
    void setTint(android.graphics.drawable.Drawable,int) -> a
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> a
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> a
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> c
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> b
    int getLayoutDirection(android.graphics.drawable.Drawable) -> d
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.b.a.c:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> a
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> a
    void setTint(android.graphics.drawable.Drawable,int) -> a
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> a
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> a
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> c
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> b
    int getLayoutDirection(android.graphics.drawable.Drawable) -> d
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.b.a.d:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> c
android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl -> android.support.v4.b.a.e:
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> b
    int getLayoutDirection(android.graphics.drawable.Drawable) -> d
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.b.a.f:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> c
android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl -> android.support.v4.b.a.g:
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> a
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> a
    void setTint(android.graphics.drawable.Drawable,int) -> a
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> a
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> a
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> c
android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl -> android.support.v4.b.a.h:
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> c
android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl -> android.support.v4.b.a.i:
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> b
    int getLayoutDirection(android.graphics.drawable.Drawable) -> d
android.support.v4.graphics.drawable.DrawableCompatApi22 -> android.support.v4.b.a.j:
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableCompatApi23 -> android.support.v4.b.a.k:
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> a
    int getLayoutDirection(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableCompatBase -> android.support.v4.b.a.l:
    void setTint(android.graphics.drawable.Drawable,int) -> a
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> a
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> a
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.b.a.m:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> b
android.support.v4.graphics.drawable.DrawableCompatJellybeanMr1 -> android.support.v4.b.a.n:
    java.lang.reflect.Method sSetLayoutDirectionMethod -> a
    boolean sSetLayoutDirectionMethodFetched -> b
    java.lang.reflect.Method sGetLayoutDirectionMethod -> c
    boolean sGetLayoutDirectionMethodFetched -> d
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> a
    int getLayoutDirection(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.b.a.o:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> b
android.support.v4.graphics.drawable.DrawableCompatLollipop -> android.support.v4.b.a.p:
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> a
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> a
    void setTint(android.graphics.drawable.Drawable,int) -> a
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> a
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> a
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableWrapper -> android.support.v4.b.a.q:
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable getWrappedDrawable() -> a
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableWrapperDonut -> android.support.v4.b.a.r:
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> a
    android.content.res.ColorStateList mTintList -> c
    android.graphics.PorterDuff$Mode mTintMode -> d
    int mCurrentColor -> e
    android.graphics.PorterDuff$Mode mCurrentMode -> f
    boolean mColorFilterSet -> g
    android.graphics.drawable.Drawable mDrawable -> b
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable mutate() -> mutate
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    boolean onLevelChange(int) -> onLevelChange
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean updateTint(int[]) -> a
    android.graphics.drawable.Drawable getWrappedDrawable() -> a
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableWrapperHoneycomb -> android.support.v4.b.a.s:
    void jumpToCurrentState() -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableWrapperKitKat -> android.support.v4.b.a.t:
    void setAutoMirrored(boolean) -> setAutoMirrored
    boolean isAutoMirrored() -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableWrapperLollipop -> android.support.v4.b.a.u:
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void getOutline(android.graphics.Outline) -> getOutline
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    boolean canApplyTheme() -> canApplyTheme
    android.graphics.Rect getDirtyBounds() -> getDirtyBounds
android.support.v4.internal.view.SupportMenu -> android.support.v4.c.a.a:
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.c.a.b:
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> a
    android.support.v4.view.ActionProvider getSupportActionProvider() -> a
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> a
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.c.a.c:
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    java.lang.String mMediaId -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    java.lang.CharSequence mDescription -> d
    android.graphics.Bitmap mIcon -> e
    android.net.Uri mIconUri -> f
    android.os.Bundle mExtras -> g
    android.net.Uri mMediaUri -> h
    java.lang.Object mDescriptionObj -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    java.lang.Object getMediaDescription() -> a
    android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> a
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.a:
    android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.b:
    java.lang.String mMediaId -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    java.lang.CharSequence mDescription -> d
    android.graphics.Bitmap mIcon -> e
    android.net.Uri mIconUri -> f
    android.os.Bundle mExtras -> g
    android.net.Uri mMediaUri -> h
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> b
    android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> c
    android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> b
    android.support.v4.media.MediaDescriptionCompat build() -> a
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.c:
    java.lang.String getMediaId(java.lang.Object) -> a
    java.lang.CharSequence getTitle(java.lang.Object) -> b
    java.lang.CharSequence getSubtitle(java.lang.Object) -> c
    java.lang.CharSequence getDescription(java.lang.Object) -> d
    android.graphics.Bitmap getIconBitmap(java.lang.Object) -> e
    android.net.Uri getIconUri(java.lang.Object) -> f
    android.os.Bundle getExtras(java.lang.Object) -> g
    void writeToParcel(java.lang.Object,android.os.Parcel,int) -> a
    java.lang.Object fromParcel(android.os.Parcel) -> a
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.d:
    java.lang.Object newInstance() -> a
    void setMediaId(java.lang.Object,java.lang.String) -> a
    void setTitle(java.lang.Object,java.lang.CharSequence) -> a
    void setSubtitle(java.lang.Object,java.lang.CharSequence) -> b
    void setDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> a
    void setIconUri(java.lang.Object,android.net.Uri) -> a
    void setExtras(java.lang.Object,android.os.Bundle) -> a
    java.lang.Object build(java.lang.Object) -> a
android.support.v4.media.MediaDescriptionCompatApi23 -> android.support.v4.media.e:
    android.net.Uri getMediaUri(java.lang.Object) -> h
android.support.v4.media.MediaDescriptionCompatApi23$Builder -> android.support.v4.media.f:
    void setMediaUri(java.lang.Object,android.net.Uri) -> b
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> a
    java.lang.String[] PREFERRED_DESCRIPTION_ORDER -> b
    java.lang.String[] PREFERRED_BITMAP_ORDER -> c
    java.lang.String[] PREFERRED_URI_ORDER -> d
    android.os.Bundle mBundle -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.g:
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    int mRatingStyle -> a
    float mRatingValue -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.h:
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.RatingCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
android.support.v4.media.session.MediaSessionCompat$1 -> android.support.v4.media.session.a:
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    android.support.v4.media.MediaDescriptionCompat mDescription -> a
    long mId -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.b:
    android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    android.os.ResultReceiver mResultReceiver -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.c:
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    java.lang.Object mInner -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.d:
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    int volumeType -> a
    int audioStream -> b
    int controlType -> c
    int maxVolume -> d
    int currentVolume -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.e:
    android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    int mState -> a
    long mPosition -> b
    long mBufferedPosition -> c
    float mSpeed -> d
    long mActions -> e
    java.lang.CharSequence mErrorMessage -> f
    long mUpdateTime -> g
    java.util.List mCustomActions -> h
    long mActiveItemId -> i
    android.os.Bundle mExtras -> j
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.f:
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    java.lang.String mAction -> a
    java.lang.CharSequence mName -> b
    int mIcon -> c
    android.os.Bundle mExtras -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.g:
    android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.os.AsyncTaskCompat -> android.support.v4.d.a:
    android.os.AsyncTask executeParallel(android.os.AsyncTask,java.lang.Object[]) -> a
android.support.v4.os.AsyncTaskCompatHoneycomb -> android.support.v4.d.b:
    void executeParallel(android.os.AsyncTask,java.lang.Object[]) -> a
android.support.v4.os.ParcelableCompat -> android.support.v4.d.c:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.d.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.d.e:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.d.f:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.d.g:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.TraceCompat -> android.support.v4.d.h:
    void beginSection(java.lang.String) -> a
    void endSection() -> a
android.support.v4.os.TraceJellybeanMR2 -> android.support.v4.d.i:
    void beginSection(java.lang.String) -> a
    void endSection() -> a
android.support.v4.text.ICUCompat -> android.support.v4.e.a:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> a
    java.lang.String maximizeAndGetScript(java.util.Locale) -> a
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.e.b:
    java.lang.String maximizeAndGetScript(java.util.Locale) -> a
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.e.c:
    java.lang.String maximizeAndGetScript(java.util.Locale) -> a
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.e.d:
    java.lang.String maximizeAndGetScript(java.util.Locale) -> a
android.support.v4.text.ICUCompat$ICUCompatImplLollipop -> android.support.v4.e.e:
    java.lang.String maximizeAndGetScript(java.util.Locale) -> a
android.support.v4.text.ICUCompatApi23 -> android.support.v4.e.f:
    java.lang.reflect.Method sAddLikelySubtagsMethod -> a
    java.lang.String maximizeAndGetScript(java.util.Locale) -> a
android.support.v4.text.ICUCompatIcs -> android.support.v4.e.g:
    java.lang.reflect.Method sGetScriptMethod -> a
    java.lang.reflect.Method sAddLikelySubtagsMethod -> b
    java.lang.String maximizeAndGetScript(java.util.Locale) -> a
    java.lang.String getScript(java.lang.String) -> a
    java.lang.String addLikelySubtags(java.util.Locale) -> b
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.e.h:
    boolean isRtl(java.lang.CharSequence,int,int) -> a
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.e.i:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> a
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> b
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> c
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> d
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> e
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> f
    int isRtlText(int) -> c
    int isRtlTextOrFormat(int) -> d
    int access$100(int) -> a
    int access$200(int) -> b
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.e.j:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.e.k:
    boolean mLookForRtl -> c
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> a
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> b
    int checkRtl(java.lang.CharSequence,int,int) -> a
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.e.l:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> a
    int checkRtl(java.lang.CharSequence,int,int) -> a
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.e.m:
    int checkRtl(java.lang.CharSequence,int,int) -> a
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.e.n:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> a
    boolean defaultIsRtl() -> a
    boolean isRtl(java.lang.CharSequence,int,int) -> a
    boolean doCheck(java.lang.CharSequence,int,int) -> b
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.e.o:
    boolean mDefaultIsRtl -> a
    boolean defaultIsRtl() -> a
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.e.p:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> a
    boolean defaultIsRtl() -> a
android.support.v4.text.TextUtilsCompat -> android.support.v4.e.q:
    android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl IMPL -> b
    java.util.Locale ROOT -> a
    java.lang.String ARAB_SCRIPT_SUBTAG -> c
    java.lang.String HEBR_SCRIPT_SUBTAG -> d
    int getLayoutDirectionFromLocale(java.util.Locale) -> a
    java.lang.String access$000() -> a
    java.lang.String access$100() -> b
android.support.v4.text.TextUtilsCompat$1 -> android.support.v4.e.r:
android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl -> android.support.v4.e.s:
    int getLayoutDirectionFromLocale(java.util.Locale) -> a
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> b
android.support.v4.text.TextUtilsCompat$TextUtilsCompatJellybeanMr1Impl -> android.support.v4.e.t:
    int getLayoutDirectionFromLocale(java.util.Locale) -> a
android.support.v4.text.TextUtilsCompatJellybeanMr1 -> android.support.v4.e.u:
    int getLayoutDirectionFromLocale(java.util.Locale) -> a
android.support.v4.util.ArrayMap -> android.support.v4.f.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    boolean retainAll(java.util.Collection) -> a
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.f.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.f.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.f.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.f.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LruCache -> android.support.v4.f.f:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> b
    int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.f.g:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.f.h:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.f.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.f.j:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.f.k:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.f.l:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pools -> android.support.v4.f.m:
android.support.v4.util.Pools$Pool -> android.support.v4.f.n:
    java.lang.Object acquire() -> a
    boolean release(java.lang.Object) -> a
android.support.v4.util.Pools$SimplePool -> android.support.v4.f.o:
    java.lang.Object[] mPool -> a
    int mPoolSize -> b
    java.lang.Object acquire() -> a
    boolean release(java.lang.Object) -> a
    boolean isInPool(java.lang.Object) -> b
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.f.p:
    java.lang.Object mLock -> a
    java.lang.Object acquire() -> a
    boolean release(java.lang.Object) -> a
android.support.v4.util.SimpleArrayMap -> android.support.v4.f.q:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> a
    int indexOfValue(java.lang.Object) -> b
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.f.r:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void removeAt(int) -> b
    void gc() -> d
    void put(int,java.lang.Object) -> b
    int size() -> b
    int keyAt(int) -> c
    java.lang.Object valueAt(int) -> d
    int indexOfKey(int) -> e
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> a
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> b
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ActionProvider -> android.support.v4.view.n:
    android.content.Context mContext -> a
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> b
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> c
    android.view.View onCreateActionView() -> a
    android.view.View onCreateActionView(android.view.MenuItem) -> a
    boolean overridesItemVisibility() -> b
    boolean isVisible() -> c
    boolean onPerformDefaultAction() -> d
    boolean hasSubMenu() -> e
    void onPrepareSubMenu(android.view.SubMenu) -> a
    void subUiVisibilityChanged(boolean) -> a
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> a
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> a
    void reset() -> f
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.o:
    void onSubUiVisibilityChanged(boolean) -> b
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.p:
    void onActionProviderVisibilityChanged(boolean) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.q:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.s:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.t:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.u:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.v:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.w:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.z:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.aa:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.ab:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.LayoutInflaterCompat -> android.support.v4.view.ac:
    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl IMPL -> a
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl -> android.support.v4.view.ad:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase -> android.support.v4.view.ae:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 -> android.support.v4.view.af:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 -> android.support.v4.view.ag:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompatBase -> android.support.v4.view.ah:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper -> android.support.v4.view.ai:
    android.support.v4.view.LayoutInflaterFactory mDelegateFactory -> a
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    java.lang.String toString() -> toString
android.support.v4.view.LayoutInflaterCompatHC -> android.support.v4.view.aj:
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> a
    boolean sCheckedField -> b
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
    void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> a
android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC -> android.support.v4.view.ak:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.view.LayoutInflaterCompatLollipop -> android.support.v4.view.al:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterFactory -> android.support.v4.view.am:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.an:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> a
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.ao:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.ap:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.aq:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.ar:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
android.support.v4.view.MenuItemCompat -> android.support.v4.view.as:
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> a
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.at:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.au:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.av:
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.aw:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.ax:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> a
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> b
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.ay:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.az:
    boolean expandActionView(android.view.MenuItem) -> a
    boolean isActionViewExpanded(android.view.MenuItem) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.ba:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
    int getSource(android.view.MotionEvent) -> d
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.bb:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
    int getSource(android.view.MotionEvent) -> b
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.bc:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl -> android.support.v4.view.bd:
    int getSource(android.view.MotionEvent) -> b
android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl -> android.support.v4.view.be:
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.bf:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
    int getSource(android.view.MotionEvent) -> b
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.bg:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatGingerbread -> android.support.v4.view.bh:
    int getSource(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatHoneycombMr1 -> android.support.v4.view.bi:
    float getAxisValue(android.view.MotionEvent,int) -> a
android.support.v4.view.NestedScrollingChild -> android.support.v4.view.bj:
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    void stopNestedScroll() -> stopNestedScroll
android.support.v4.view.NestedScrollingChildHelper -> android.support.v4.view.bk:
    android.view.View mView -> a
    android.view.ViewParent mNestedScrollingParent -> b
    boolean mIsNestedScrollingEnabled -> c
    int[] mTempNestedScrollConsumed -> d
    void setNestedScrollingEnabled(boolean) -> a
    boolean isNestedScrollingEnabled() -> a
    boolean hasNestedScrollingParent() -> b
    boolean startNestedScroll(int) -> a
    void stopNestedScroll() -> c
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> a
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> a
    boolean dispatchNestedFling(float,float,boolean) -> a
    boolean dispatchNestedPreFling(float,float) -> a
android.support.v4.view.NestedScrollingParent -> android.support.v4.view.bl:
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
android.support.v4.view.NestedScrollingParentHelper -> android.support.v4.view.bm:
    android.view.ViewGroup mViewGroup -> a
    int mNestedScrollAxes -> b
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> a
    int getNestedScrollAxes() -> a
    void onStopNestedScroll(android.view.View) -> a
android.support.v4.view.OnApplyWindowInsetsListener -> android.support.v4.view.bn:
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.bo:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> c
    float getPageWidth(int) -> d
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.bp:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.bq:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.br:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.bs:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> b
    void onPageScrollStateChanged(int) -> a
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.bt:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.bu:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.bv:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.bw:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.bx:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScrollingView -> android.support.v4.view.by:
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
android.support.v4.view.TintableBackgroundView -> android.support.v4.view.bz:
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.ca:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.cb:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.cc:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.cd:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.ce:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.cf:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean hasAccessibilityDelegate(android.view.View) -> b
    boolean hasTransientState(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View) -> d
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> c
    float getAlpha(android.view.View) -> f
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> g
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> h
    android.view.ViewParent getParentForAccessibility(android.view.View) -> i
    boolean isOpaque(android.view.View) -> j
    int resolveSizeAndState(int,int,int) -> a
    int getMeasuredWidthAndState(android.view.View) -> k
    int getMeasuredState(android.view.View) -> l
    int combineMeasuredStates(int,int) -> a
    int getPaddingStart(android.view.View) -> m
    int getPaddingEnd(android.view.View) -> n
    void setPaddingRelative(android.view.View,int,int,int,int) -> b
    float getTranslationX(android.view.View) -> o
    float getTranslationY(android.view.View) -> p
    int getMinimumWidth(android.view.View) -> q
    int getMinimumHeight(android.view.View) -> r
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> s
    void setTranslationX(android.view.View,float) -> a
    void setTranslationY(android.view.View,float) -> b
    void setAlpha(android.view.View,float) -> c
    void setScaleX(android.view.View,float) -> d
    void setScaleY(android.view.View,float) -> e
    float getScaleX(android.view.View) -> t
    void setElevation(android.view.View,float) -> f
    float getElevation(android.view.View) -> u
    int getWindowSystemUiVisibility(android.view.View) -> v
    void requestApplyInsets(android.view.View) -> w
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
    boolean getFitsSystemWindows(android.view.View) -> x
    void setFitsSystemWindows(android.view.View,boolean) -> a
    void jumpDrawablesToCurrentState(android.view.View) -> y
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> a
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> b
    void setSaveFromParentEnabled(android.view.View,boolean) -> b
    void setActivated(android.view.View,boolean) -> c
    boolean hasOverlappingRendering(android.view.View) -> z
    boolean isPaddingRelative(android.view.View) -> A
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> a
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> a
    boolean isNestedScrollingEnabled(android.view.View) -> B
    void stopNestedScroll(android.view.View) -> C
    boolean isLaidOut(android.view.View) -> D
    float getZ(android.view.View) -> E
    void offsetTopAndBottom(android.view.View,int) -> d
    void offsetLeftAndRight(android.view.View,int) -> e
    boolean isAttachedToWindow(android.view.View) -> F
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.cg:
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean hasAccessibilityDelegate(android.view.View) -> b
    boolean hasTransientState(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View) -> d
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> c
    float getAlpha(android.view.View) -> f
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> g
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> h
    android.view.ViewParent getParentForAccessibility(android.view.View) -> i
    boolean isOpaque(android.view.View) -> j
    int resolveSizeAndState(int,int,int) -> a
    int getMeasuredWidthAndState(android.view.View) -> k
    int getMeasuredState(android.view.View) -> l
    int getPaddingStart(android.view.View) -> m
    int getPaddingEnd(android.view.View) -> n
    void setPaddingRelative(android.view.View,int,int,int,int) -> b
    boolean hasOverlappingRendering(android.view.View) -> o
    float getTranslationX(android.view.View) -> p
    float getTranslationY(android.view.View) -> q
    float getScaleX(android.view.View) -> r
    int getMinimumWidth(android.view.View) -> s
    int getMinimumHeight(android.view.View) -> t
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> u
    void setTranslationX(android.view.View,float) -> a
    void setTranslationY(android.view.View,float) -> b
    void setAlpha(android.view.View,float) -> c
    void setScaleX(android.view.View,float) -> d
    void setScaleY(android.view.View,float) -> e
    int getWindowSystemUiVisibility(android.view.View) -> v
    void requestApplyInsets(android.view.View) -> w
    void setElevation(android.view.View,float) -> f
    float getElevation(android.view.View) -> x
    float getTranslationZ(android.view.View) -> y
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
    boolean getFitsSystemWindows(android.view.View) -> z
    void setFitsSystemWindows(android.view.View,boolean) -> a
    void jumpDrawablesToCurrentState(android.view.View) -> A
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> a
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> b
    void setSaveFromParentEnabled(android.view.View,boolean) -> b
    void setActivated(android.view.View,boolean) -> c
    boolean isPaddingRelative(android.view.View) -> B
    boolean isNestedScrollingEnabled(android.view.View) -> C
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> a
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> a
    boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int) -> a
    boolean canScrollingViewScrollVertically(android.support.v4.view.ScrollingView,int) -> b
    void stopNestedScroll(android.view.View) -> D
    boolean isLaidOut(android.view.View) -> E
    int combineMeasuredStates(int,int) -> a
    float getZ(android.view.View) -> F
    boolean isAttachedToWindow(android.view.View) -> G
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ch:
    boolean isOpaque(android.view.View) -> j
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ci:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.cj:
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> f
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> g
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int resolveSizeAndState(int,int,int) -> a
    int getMeasuredWidthAndState(android.view.View) -> k
    int getMeasuredState(android.view.View) -> l
    float getTranslationX(android.view.View) -> p
    float getTranslationY(android.view.View) -> q
    void setTranslationX(android.view.View,float) -> a
    void setTranslationY(android.view.View,float) -> b
    void setAlpha(android.view.View,float) -> c
    void setScaleX(android.view.View,float) -> d
    void setScaleY(android.view.View,float) -> e
    float getScaleX(android.view.View) -> r
    void jumpDrawablesToCurrentState(android.view.View) -> A
    void setSaveFromParentEnabled(android.view.View,boolean) -> b
    void setActivated(android.view.View,boolean) -> c
    int combineMeasuredStates(int,int) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ck:
    java.lang.reflect.Field mAccessibilityDelegateField -> b
    boolean accessibilityDelegateCheckFailed -> c
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean hasAccessibilityDelegate(android.view.View) -> b
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> u
    void setFitsSystemWindows(android.view.View,boolean) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.cl:
    boolean hasTransientState(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View) -> d
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> c
    android.view.ViewParent getParentForAccessibility(android.view.View) -> i
    int getMinimumWidth(android.view.View) -> s
    int getMinimumHeight(android.view.View) -> t
    void requestApplyInsets(android.view.View) -> w
    boolean getFitsSystemWindows(android.view.View) -> z
    boolean hasOverlappingRendering(android.view.View) -> o
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.cm:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> h
    int getPaddingStart(android.view.View) -> m
    int getPaddingEnd(android.view.View) -> n
    void setPaddingRelative(android.view.View,int,int,int,int) -> b
    int getWindowSystemUiVisibility(android.view.View) -> v
    boolean isPaddingRelative(android.view.View) -> B
android.support.v4.view.ViewCompat$JbMr2ViewCompatImpl -> android.support.v4.view.cn:
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.co:
    void setImportantForAccessibility(android.view.View,int) -> c
    boolean isLaidOut(android.view.View) -> E
    boolean isAttachedToWindow(android.view.View) -> G
android.support.v4.view.ViewCompat$LollipopViewCompatImpl -> android.support.v4.view.cp:
    void requestApplyInsets(android.view.View) -> w
    void setElevation(android.view.View,float) -> f
    float getElevation(android.view.View) -> x
    float getTranslationZ(android.view.View) -> y
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> a
    boolean isNestedScrollingEnabled(android.view.View) -> C
    void stopNestedScroll(android.view.View) -> D
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> a
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> a
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> b
    float getZ(android.view.View) -> F
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.cq:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean hasAccessibilityDelegate(android.view.View) -> b
    boolean hasTransientState(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View) -> d
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> c
    float getAlpha(android.view.View) -> f
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> g
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> h
    android.view.ViewParent getParentForAccessibility(android.view.View) -> i
    boolean isOpaque(android.view.View) -> j
    int resolveSizeAndState(int,int,int) -> a
    int getMeasuredWidthAndState(android.view.View) -> k
    int getMeasuredState(android.view.View) -> l
    int getPaddingStart(android.view.View) -> m
    int getPaddingEnd(android.view.View) -> n
    void setPaddingRelative(android.view.View,int,int,int,int) -> b
    float getScaleX(android.view.View) -> r
    float getTranslationX(android.view.View) -> p
    float getTranslationY(android.view.View) -> q
    int getMinimumWidth(android.view.View) -> s
    int getMinimumHeight(android.view.View) -> t
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> u
    void setScaleX(android.view.View,float) -> d
    void setScaleY(android.view.View,float) -> e
    void setTranslationX(android.view.View,float) -> a
    void setTranslationY(android.view.View,float) -> b
    void setAlpha(android.view.View,float) -> c
    void setElevation(android.view.View,float) -> f
    float getElevation(android.view.View) -> x
    int getWindowSystemUiVisibility(android.view.View) -> v
    void requestApplyInsets(android.view.View) -> w
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
    boolean getFitsSystemWindows(android.view.View) -> z
    boolean hasOverlappingRendering(android.view.View) -> o
    void setFitsSystemWindows(android.view.View,boolean) -> a
    void jumpDrawablesToCurrentState(android.view.View) -> A
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> a
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> b
    void setSaveFromParentEnabled(android.view.View,boolean) -> b
    void setActivated(android.view.View,boolean) -> c
    boolean isPaddingRelative(android.view.View) -> B
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> a
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> a
    boolean isNestedScrollingEnabled(android.view.View) -> C
    void stopNestedScroll(android.view.View) -> D
    boolean isLaidOut(android.view.View) -> E
    int combineMeasuredStates(int,int) -> a
    float getZ(android.view.View) -> F
    boolean isAttachedToWindow(android.view.View) -> G
android.support.v4.view.ViewCompatBase -> android.support.v4.view.cr:
    java.lang.reflect.Field sMinWidthField -> a
    boolean sMinWidthFieldFetched -> b
    java.lang.reflect.Field sMinHeightField -> c
    boolean sMinHeightFieldFetched -> d
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> a
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> a
    boolean isLaidOut(android.view.View) -> a
    int getMinimumWidth(android.view.View) -> b
    int getMinimumHeight(android.view.View) -> c
    boolean isAttachedToWindow(android.view.View) -> d
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.cs:
    java.lang.reflect.Method sChildrenDrawingOrderMethod -> a
    boolean isOpaque(android.view.View) -> a
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ct:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.cu:
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> b
    int resolveSizeAndState(int,int,int) -> a
    int getMeasuredWidthAndState(android.view.View) -> c
    int getMeasuredState(android.view.View) -> d
    float getTranslationX(android.view.View) -> e
    float getTranslationY(android.view.View) -> f
    float getScaleX(android.view.View) -> g
    void setTranslationX(android.view.View,float) -> a
    void setTranslationY(android.view.View,float) -> b
    void setAlpha(android.view.View,float) -> c
    void setScaleX(android.view.View,float) -> d
    void setScaleY(android.view.View,float) -> e
    void jumpDrawablesToCurrentState(android.view.View) -> h
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
    void setActivated(android.view.View,boolean) -> b
    int combineMeasuredStates(int,int) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.cv:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
    void setFitsSystemWindows(android.view.View,boolean) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.cw:
    boolean hasTransientState(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> d
    int getMinimumWidth(android.view.View) -> e
    int getMinimumHeight(android.view.View) -> f
    void requestApplyInsets(android.view.View) -> g
    boolean getFitsSystemWindows(android.view.View) -> h
    boolean hasOverlappingRendering(android.view.View) -> i
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.cx:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
    int getPaddingStart(android.view.View) -> b
    int getPaddingEnd(android.view.View) -> c
    void setPaddingRelative(android.view.View,int,int,int,int) -> a
    int getWindowSystemUiVisibility(android.view.View) -> d
    boolean isPaddingRelative(android.view.View) -> e
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.cy:
    boolean isLaidOut(android.view.View) -> a
    boolean isAttachedToWindow(android.view.View) -> b
android.support.v4.view.ViewCompatLollipop -> android.support.v4.view.cz:
    void requestApplyInsets(android.view.View) -> a
    void setElevation(android.view.View,float) -> a
    float getElevation(android.view.View) -> b
    float getTranslationZ(android.view.View) -> c
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> a
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> a
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> a
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> b
    boolean isNestedScrollingEnabled(android.view.View) -> d
    void stopNestedScroll(android.view.View) -> e
    float getZ(android.view.View) -> f
android.support.v4.view.ViewCompatLollipop$1 -> android.support.v4.view.da:
    android.support.v4.view.OnApplyWindowInsetsListener val$listener -> a
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.db:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> b
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.dc:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> b
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.dd:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl -> android.support.v4.view.de:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> b
android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl -> android.support.v4.view.df:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> b
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.dg:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> b
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.dh:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatICS -> android.support.v4.view.di:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.dj:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.dk:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.dl:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.dm:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.dn:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl -> android.support.v4.view.do:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.dp:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.dq:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    java.util.List mOnPageChangeListeners -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> aa
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> ab
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> ac
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ad
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ae
    int mDrawingOrder -> af
    java.util.ArrayList mDrawingOrderedChildren -> ag
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ah
    java.lang.Runnable mEndScrollRunnable -> ai
    int mScrollState -> aj
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> b
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void dispatchOnPageScrolled(int,float,int) -> b
    void dispatchOnPageSelected(int) -> e
    void dispatchOnScrollStateChanged(int) -> f
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.dr:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ds:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.dt:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.du:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.dv:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.dw:
    android.support.v4.view.ViewPager this$0 -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.dx:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.dy:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> b
    void onPageScrollStateChanged(int) -> a
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.dz:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ea:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.eb:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ec:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ed:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> a
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ee:
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ef:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl -> android.support.v4.view.eg:
android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl -> android.support.v4.view.eh:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ei:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewParentCompatLollipop -> android.support.v4.view.ej:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ek:
    java.lang.ref.WeakReference mView -> b
    java.lang.Runnable mStartAction -> c
    java.lang.Runnable mEndAction -> d
    int mOldLayerType -> e
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> a
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> a
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> a
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> b
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> c
    long getDuration() -> a
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> a
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> b
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> d
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> e
    void cancel() -> b
    void start() -> c
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> a
    android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> a
    java.lang.Runnable access$100(android.support.v4.view.ViewPropertyAnimatorCompat) -> a
    java.lang.Runnable access$000(android.support.v4.view.ViewPropertyAnimatorCompat) -> b
    int access$402(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> a
    int access$400(android.support.v4.view.ViewPropertyAnimatorCompat) -> c
android.support.v4.view.ViewPropertyAnimatorCompat$1 -> android.support.v4.view.el:
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.em:
    java.util.WeakHashMap mStarterMap -> a
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> a
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> a
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> b
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> c
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> a
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> a
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> b
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> d
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> e
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> b
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> c
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> a
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> a
    void startAnimation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> d
    void removeStartMessage(android.view.View) -> a
    void postStartMessage(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> e
    void access$200(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> a
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter -> android.support.v4.view.en:
    java.lang.ref.WeakReference mViewRef -> a
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> b
    android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl this$0 -> c
    void run() -> run
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.eo:
    java.util.WeakHashMap mLayerMap -> b
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> a
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> a
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> b
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> c
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> a
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> a
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> b
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> d
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> e
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> b
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> c
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener -> android.support.v4.view.ep:
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> a
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.eq:
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.er:
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl -> android.support.v4.view.es:
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl -> android.support.v4.view.et:
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.eu:
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> a
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> a
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> a
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> b
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> a
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> d
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> e
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> b
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> b
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> c
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> c
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> a
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.ev:
    void setDuration(android.view.View,long) -> a
    void alpha(android.view.View,float) -> a
    void translationX(android.view.View,float) -> b
    void translationY(android.view.View,float) -> c
    long getDuration(android.view.View) -> a
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> a
    void setStartDelay(android.view.View,long) -> b
    void scaleX(android.view.View,float) -> d
    void scaleY(android.view.View,float) -> e
    void cancel(android.view.View) -> b
    void start(android.view.View) -> c
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.ew:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> a
    android.view.View val$view -> b
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.ex:
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompatJB$1 -> android.support.v4.view.ey:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> a
    android.view.View val$view -> b
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatKK -> android.support.v4.view.ez:
    void setUpdateListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompatKK$1 -> android.support.v4.view.fa:
    android.support.v4.view.ViewPropertyAnimatorUpdateListener val$listener -> a
    android.view.View val$view -> b
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.fb:
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v4.view.ViewPropertyAnimatorListenerAdapter -> android.support.v4.view.fc:
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v4.view.ViewPropertyAnimatorUpdateListener -> android.support.v4.view.fd:
    void onAnimationUpdate(android.view.View) -> a
android.support.v4.view.WindowInsetsCompat -> android.support.v4.view.fe:
    int getSystemWindowInsetLeft() -> a
    int getSystemWindowInsetTop() -> b
    int getSystemWindowInsetRight() -> c
    int getSystemWindowInsetBottom() -> d
    boolean isConsumed() -> e
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> f
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> a
android.support.v4.view.WindowInsetsCompatApi21 -> android.support.v4.view.ff:
    android.view.WindowInsets mSource -> a
    int getSystemWindowInsetLeft() -> a
    int getSystemWindowInsetTop() -> b
    int getSystemWindowInsetRight() -> c
    int getSystemWindowInsetBottom() -> d
    boolean isConsumed() -> e
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> f
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> a
    android.view.WindowInsets unwrap() -> g
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> a
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> a
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> b
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.a.b:
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl -> android.support.v4.view.a.c:
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.a.d:
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.a.e:
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompatKitKat -> android.support.v4.view.a.f:
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.g:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    boolean removeAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> a
    void setMovementGranularities(int) -> b
    int getMovementGranularities() -> c
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> d
    boolean isChecked() -> e
    boolean isFocusable() -> f
    void setFocusable(boolean) -> a
    boolean isFocused() -> g
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> h
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> i
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> j
    void setSelected(boolean) -> e
    boolean isClickable() -> k
    void setClickable(boolean) -> f
    boolean isLongClickable() -> l
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> m
    void setEnabled(boolean) -> h
    boolean isPassword() -> n
    boolean isScrollable() -> o
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> p
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> q
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> r
    void setText(java.lang.CharSequence) -> c
    java.lang.CharSequence getContentDescription() -> s
    void setContentDescription(java.lang.CharSequence) -> d
    void recycle() -> t
    java.lang.String getViewIdResourceName() -> u
    void setCollectionInfo(java.lang.Object) -> b
    void setCollectionItemInfo(java.lang.Object) -> c
    void setContentInvalid(boolean) -> j
    void setError(java.lang.CharSequence) -> e
    void setLabelFor(android.view.View) -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> c
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl access$000() -> v
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> android.support.v4.view.a.h:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT -> c
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION -> d
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK -> e
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK -> f
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS -> g
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS -> h
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> i
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> j
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT -> k
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT -> l
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD -> m
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD -> n
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY -> o
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE -> p
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT -> q
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION -> r
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND -> s
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE -> t
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS -> u
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT -> v
    java.lang.Object mAction -> w
    java.lang.Object access$100(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.a.i:
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> a
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> a
    boolean removeAction(java.lang.Object,java.lang.Object) -> a
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> a
    void setError(java.lang.Object,java.lang.CharSequence) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl -> android.support.v4.view.a.j:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.k:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> d
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void setText(java.lang.Object,java.lang.CharSequence) -> e
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    boolean removeAction(java.lang.Object,java.lang.Object) -> a
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> d
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    java.lang.CharSequence getText(java.lang.Object) -> f
    void setText(java.lang.Object,java.lang.CharSequence) -> e
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> b
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> c
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> a
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> a
    void setContentInvalid(java.lang.Object,boolean) -> j
    void setError(java.lang.Object,java.lang.CharSequence) -> a
    void setLabelFor(java.lang.Object,android.view.View) -> d
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.m:
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr1Impl -> android.support.v4.view.a.n:
    void setLabelFor(java.lang.Object,android.view.View) -> d
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.o:
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.p:
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> b
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> a
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> a
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> c
    void setContentInvalid(java.lang.Object,boolean) -> j
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.q:
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    boolean removeAction(java.lang.Object,java.lang.Object) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> s
    boolean isAccessibilityFocused(java.lang.Object) -> t
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> d
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void setText(java.lang.Object,java.lang.CharSequence) -> e
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> b
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> c
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> a
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> a
    void setContentInvalid(java.lang.Object,boolean) -> j
    void setError(java.lang.Object,java.lang.CharSequence) -> a
    void setLabelFor(java.lang.Object,android.view.View) -> d
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> android.support.v4.view.a.r:
    java.lang.Object mInfo -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> android.support.v4.view.a.s:
    java.lang.Object mInfo -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> a
    java.lang.Object access$300(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21 -> android.support.v4.view.a.t:
    boolean removeAction(java.lang.Object,java.lang.Object) -> a
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> a
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> a
    void setError(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.u:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.v:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    void setMovementGranularities(java.lang.Object,int) -> a
    int getMovementGranularities(java.lang.Object) -> b
    boolean isAccessibilityFocused(java.lang.Object) -> c
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr1 -> android.support.v4.view.a.w:
    void setLabelFor(java.lang.Object,android.view.View) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.x:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.a.y:
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> a
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> b
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> a
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean) -> a
    void setContentInvalid(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.z:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.aa:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.ab:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.ac:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.ad:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.ae:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.af:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.ag:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.ah:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.ai:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.aj:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.ak:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.al:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.am:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    void setScrollX(int) -> d
    void setScrollY(int) -> e
    void setMaxScrollX(int) -> f
    void setMaxScrollY(int) -> g
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.an:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollX(java.lang.Object,int) -> c
    void setScrollY(java.lang.Object,int) -> d
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> e
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.ao:
    void setMaxScrollX(java.lang.Object,int) -> f
    void setMaxScrollY(java.lang.Object,int) -> g
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.ap:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> e
    void setScrollX(java.lang.Object,int) -> c
    void setScrollY(java.lang.Object,int) -> d
    void setMaxScrollX(java.lang.Object,int) -> f
    void setMaxScrollY(java.lang.Object,int) -> g
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.aq:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ar:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setMaxScrollX(java.lang.Object,int) -> f
    void setMaxScrollY(java.lang.Object,int) -> g
    void setScrollX(java.lang.Object,int) -> c
    void setScrollY(java.lang.Object,int) -> d
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> e
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.as:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollX(java.lang.Object,int) -> c
    void setScrollY(java.lang.Object,int) -> d
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> e
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.a.at:
    void setMaxScrollX(java.lang.Object,int) -> a
    void setMaxScrollY(java.lang.Object,int) -> b
android.support.v4.view.animation.FastOutSlowInInterpolator -> android.support.v4.view.b.a:
    float[] VALUES -> a
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.LookupTableInterpolator -> android.support.v4.view.b.b:
    float[] mValues -> a
    float mStepSize -> b
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.a:
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> a
    android.view.animation.Interpolator mEdgeInterpolator -> b
    android.view.View mTarget -> c
    java.lang.Runnable mRunnable -> d
    float[] mRelativeEdges -> e
    float[] mMaximumEdges -> f
    int mEdgeType -> g
    int mActivationDelay -> h
    float[] mRelativeVelocity -> i
    float[] mMinimumVelocity -> j
    float[] mMaximumVelocity -> k
    boolean mAlreadyDelayed -> l
    boolean mNeedsReset -> m
    boolean mNeedsCancel -> n
    boolean mAnimating -> o
    boolean mEnabled -> p
    boolean mExclusive -> q
    int DEFAULT_ACTIVATION_DELAY -> r
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> a
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> a
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> b
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> c
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> a
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> d
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> e
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> b
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> c
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> d
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> a
    void startAnimating() -> b
    void requestStop() -> c
    float computeTargetVelocity(int,float,float,float) -> a
    void scrollTargetBy(int,int) -> a
    boolean canTargetScrollHorizontally(int) -> e
    boolean canTargetScrollVertically(int) -> f
    float getEdgeValue(float,float,float,float) -> a
    float constrainEdgeValue(float,float) -> f
    int constrain(int,int,int) -> b
    float constrain(float,float,float) -> b
    void cancelTargetTouch() -> d
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> a
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> b
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> a
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> c
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> d
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> b
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> e
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> c
    void access$600(android.support.v4.widget.AutoScrollHelper) -> f
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> g
    int access$800(int,int,int) -> a
    float access$900(float,float,float) -> a
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.b:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.c:
    int mRampUpDuration -> a
    int mRampDownDuration -> b
    float mTargetVelocityX -> c
    float mTargetVelocityY -> d
    long mStartTime -> e
    long mDeltaTime -> f
    int mDeltaX -> g
    int mDeltaY -> h
    long mStopTime -> i
    float mStopValue -> j
    int mEffectiveRampDown -> k
    void setRampUpDuration(int) -> a
    void setRampDownDuration(int) -> b
    void start() -> a
    void requestStop() -> b
    boolean isFinished() -> c
    float getValueAt(long) -> a
    float interpolateValue(float) -> a
    void computeScrollDelta() -> d
    void setTargetVelocity(float,float) -> a
    int getHorizontalDirection() -> e
    int getVerticalDirection() -> f
    int getDeltaX() -> g
    int getDeltaY() -> h
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.d:
    android.support.v4.widget.AutoScrollHelper this$0 -> a
    void run() -> run
android.support.v4.widget.CircleImageView -> android.support.v4.widget.e:
    android.view.animation.Animation$AnimationListener mListener -> a
    int mShadowRadius -> b
    boolean elevationSupported() -> a
    void onMeasure(int,int) -> onMeasure
    void setAnimationListener(android.view.animation.Animation$AnimationListener) -> a
    void onAnimationStart() -> onAnimationStart
    void onAnimationEnd() -> onAnimationEnd
    void setBackgroundColor(int) -> setBackgroundColor
    int access$002(android.support.v4.widget.CircleImageView,int) -> a
    int access$000(android.support.v4.widget.CircleImageView) -> a
android.support.v4.widget.CircleImageView$OvalShadow -> android.support.v4.widget.f:
    android.graphics.RadialGradient mRadialGradient -> b
    android.graphics.Paint mShadowPaint -> c
    int mCircleDiameter -> d
    android.support.v4.widget.CircleImageView this$0 -> a
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
android.support.v4.widget.CompoundButtonCompat -> android.support.v4.widget.g:
    android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatImpl IMPL -> a
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> a
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> a
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> a
android.support.v4.widget.CompoundButtonCompat$Api23CompoundButtonImpl -> android.support.v4.widget.h:
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> a
android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat -> android.support.v4.widget.i:
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> a
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> a
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> a
android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatImpl -> android.support.v4.widget.j:
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> a
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> a
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> a
android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl -> android.support.v4.widget.k:
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> a
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> a
android.support.v4.widget.CompoundButtonCompatApi23 -> android.support.v4.widget.l:
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> a
android.support.v4.widget.CompoundButtonCompatDonut -> android.support.v4.widget.m:
    java.lang.reflect.Field sButtonDrawableField -> a
    boolean sButtonDrawableFieldFetched -> b
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> a
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> a
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> a
android.support.v4.widget.CompoundButtonCompatLollipop -> android.support.v4.widget.n:
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> a
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> a
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    long mStartTime -> a
    boolean mPostedHide -> b
    boolean mPostedShow -> c
    boolean mDismissed -> d
    java.lang.Runnable mDelayedHide -> e
    java.lang.Runnable mDelayedShow -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> a
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> a
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> a
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> b
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> a
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.o:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.p:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.q:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.widget.Filter getFilter() -> getFilter
    void onContentChanged() -> b
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.r:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.s:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.t:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.u:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.v:
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getCursor() -> a
    void changeCursor(android.database.Cursor) -> a
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> b
    boolean CAN_HIDE_DESCENDANTS -> c
    boolean SET_DRAWER_SHADOW_FROM_ELEVATION -> d
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> e
    float mDrawerElevation -> f
    int mMinDrawerMargin -> g
    int mScrimColor -> h
    float mScrimOpacity -> i
    android.graphics.Paint mScrimPaint -> j
    android.support.v4.widget.ViewDragHelper mLeftDragger -> k
    android.support.v4.widget.ViewDragHelper mRightDragger -> l
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> m
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> n
    int mDrawerState -> o
    boolean mInLayout -> p
    boolean mFirstLayout -> q
    int mLockModeLeft -> r
    int mLockModeRight -> s
    boolean mDisallowInterceptRequested -> t
    boolean mChildrenCanceledTouch -> u
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> v
    float mInitialMotionX -> w
    float mInitialMotionY -> x
    android.graphics.drawable.Drawable mStatusBarBackground -> y
    android.graphics.drawable.Drawable mShadowLeftResolved -> z
    android.graphics.drawable.Drawable mShadowRightResolved -> A
    java.lang.CharSequence mTitleLeft -> B
    java.lang.CharSequence mTitleRight -> C
    java.lang.Object mLastInsets -> D
    boolean mDrawStatusBarBackground -> E
    android.graphics.drawable.Drawable mShadowStart -> F
    android.graphics.drawable.Drawable mShadowEnd -> G
    android.graphics.drawable.Drawable mShadowLeft -> H
    android.graphics.drawable.Drawable mShadowRight -> I
    java.util.ArrayList mNonDrawerViews -> J
    android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL -> a
    void setDrawerElevation(float) -> setDrawerElevation
    float getDrawerElevation() -> getDrawerElevation
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(android.view.View) -> a
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void updateChildrenImportantForAccessibility(android.view.View,boolean) -> a
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> b
    java.lang.String gravityToString(int) -> c
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void resolveShadowDrawables() -> f
    android.graphics.drawable.Drawable resolveLeftShadow() -> g
    android.graphics.drawable.Drawable resolveRightShadow() -> h
    boolean mirror(android.graphics.drawable.Drawable,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> m
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void openDrawer(int) -> d
    void closeDrawer(android.view.View) -> i
    void closeDrawer(int) -> e
    boolean isDrawerOpen(android.view.View) -> j
    boolean isDrawerOpen(int) -> f
    boolean isDrawerVisible(android.view.View) -> k
    boolean isDrawerVisible(int) -> g
    boolean hasPeekingDrawer() -> i
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    boolean hasVisibleDrawer() -> j
    android.view.View findVisibleDrawer() -> k
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibility(android.view.View) -> n
    int[] access$100() -> d
    boolean access$200() -> e
    android.view.View access$300(android.support.v4.widget.DrawerLayout) -> a
    boolean access$400(android.view.View) -> l
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.w:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.x:
    android.support.v4.widget.DrawerLayout this$0 -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl -> android.support.v4.widget.y:
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 -> android.support.v4.widget.z:
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase -> android.support.v4.widget.aa:
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.ab:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.ac:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.ad:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.ae:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.DrawerLayoutCompatApi21 -> android.support.v4.widget.af:
    int[] THEME_ATTRS -> a
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> a
android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener -> android.support.v4.widget.ag:
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.widget.DrawerLayoutImpl -> android.support.v4.widget.ah:
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.ai:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onPull(float,float) -> a
    boolean onRelease() -> c
    boolean onAbsorb(int) -> a
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.aj:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.ak:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.al:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl -> android.support.v4.widget.am:
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.an:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatLollipop -> android.support.v4.widget.ao:
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ap:
    android.widget.ListView mTarget -> a
    void scrollTargetBy(int,int) -> a
    boolean canTargetScrollHorizontally(int) -> e
    boolean canTargetScrollVertically(int) -> f
android.support.v4.widget.MaterialProgressDrawable -> android.support.v4.widget.aq:
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> b
    android.view.animation.Interpolator MATERIAL_INTERPOLATOR -> c
    int[] COLORS -> d
    java.util.ArrayList mAnimators -> e
    android.support.v4.widget.MaterialProgressDrawable$Ring mRing -> f
    float mRotation -> g
    android.content.res.Resources mResources -> h
    android.view.View mParent -> i
    android.view.animation.Animation mAnimation -> j
    float mRotationCount -> k
    double mWidth -> l
    double mHeight -> m
    boolean mFinishing -> a
    android.graphics.drawable.Drawable$Callback mCallback -> n
    void setSizeParameters(double,double,double,double,float,float) -> a
    void updateSizes(int) -> a
    void showArrow(boolean) -> a
    void setArrowScale(float) -> a
    void setStartEndTrim(float,float) -> a
    void setProgressRotation(float) -> b
    void setBackgroundColor(int) -> b
    void setColorSchemeColors(int[]) -> a
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setRotation(float) -> c
    int getOpacity() -> getOpacity
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    float getMinProgressArc(android.support.v4.widget.MaterialProgressDrawable$Ring) -> a
    int evaluateColorChange(float,int,int) -> a
    void updateRingColor(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> a
    void applyFinishTranslation(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> b
    void setupAnimators() -> b
    void access$000(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> a
    float access$100(android.support.v4.widget.MaterialProgressDrawable,android.support.v4.widget.MaterialProgressDrawable$Ring) -> a
    void access$200(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> b
    android.view.animation.Interpolator access$300() -> a
    float access$400(android.support.v4.widget.MaterialProgressDrawable) -> a
    float access$402(android.support.v4.widget.MaterialProgressDrawable,float) -> a
android.support.v4.widget.MaterialProgressDrawable$1 -> android.support.v4.widget.ar:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> a
    android.support.v4.widget.MaterialProgressDrawable this$0 -> b
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.MaterialProgressDrawable$2 -> android.support.v4.widget.as:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> a
    android.support.v4.widget.MaterialProgressDrawable this$0 -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.MaterialProgressDrawable$3 -> android.support.v4.widget.at:
    android.support.v4.widget.MaterialProgressDrawable this$0 -> a
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.widget.MaterialProgressDrawable$Ring -> android.support.v4.widget.au:
    android.graphics.RectF mTempBounds -> a
    android.graphics.Paint mPaint -> b
    android.graphics.Paint mArrowPaint -> c
    android.graphics.drawable.Drawable$Callback mCallback -> d
    float mStartTrim -> e
    float mEndTrim -> f
    float mRotation -> g
    float mStrokeWidth -> h
    float mStrokeInset -> i
    int[] mColors -> j
    int mColorIndex -> k
    float mStartingStartTrim -> l
    float mStartingEndTrim -> m
    float mStartingRotation -> n
    boolean mShowArrow -> o
    android.graphics.Path mArrow -> p
    float mArrowScale -> q
    double mRingCenterRadius -> r
    int mArrowWidth -> s
    int mArrowHeight -> t
    int mAlpha -> u
    android.graphics.Paint mCirclePaint -> v
    int mBackgroundColor -> w
    int mCurrentColor -> x
    void setBackgroundColor(int) -> a
    void setArrowDimensions(float,float) -> a
    void draw(android.graphics.Canvas,android.graphics.Rect) -> a
    void drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect) -> a
    void setColors(int[]) -> a
    void setColor(int) -> b
    void setColorIndex(int) -> c
    int getNextColor() -> a
    int getNextColorIndex() -> n
    void goToNextColor() -> b
    void setColorFilter(android.graphics.ColorFilter) -> a
    void setAlpha(int) -> d
    int getAlpha() -> c
    void setStrokeWidth(float) -> a
    float getStrokeWidth() -> d
    void setStartTrim(float) -> b
    float getStartTrim() -> e
    float getStartingStartTrim() -> f
    float getStartingEndTrim() -> g
    int getStartingColor() -> h
    void setEndTrim(float) -> c
    float getEndTrim() -> i
    void setRotation(float) -> d
    void setInsets(int,int) -> a
    void setCenterRadius(double) -> a
    double getCenterRadius() -> j
    void setShowArrow(boolean) -> a
    void setArrowScale(float) -> e
    float getStartingRotation() -> k
    void storeOriginals() -> l
    void resetOriginals() -> m
    void invalidateSelf() -> o
android.support.v4.widget.NestedScrollView -> android.support.v4.widget.NestedScrollView:
    long mLastScroll -> a
    android.graphics.Rect mTempRect -> b
    android.support.v4.widget.ScrollerCompat mScroller -> c
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop -> d
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom -> e
    int mLastMotionY -> f
    boolean mIsLayoutDirty -> g
    boolean mIsLaidOut -> h
    android.view.View mChildToScrollTo -> i
    boolean mIsBeingDragged -> j
    android.view.VelocityTracker mVelocityTracker -> k
    boolean mFillViewport -> l
    boolean mSmoothScrollingEnabled -> m
    int mTouchSlop -> n
    int mMinimumVelocity -> o
    int mMaximumVelocity -> p
    int mActivePointerId -> q
    int[] mScrollOffset -> r
    int[] mScrollConsumed -> s
    int mNestedYOffset -> t
    android.support.v4.widget.NestedScrollView$SavedState mSavedState -> u
    android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> v
    int[] SCROLLVIEW_STYLEABLE -> w
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> x
    android.support.v4.view.NestedScrollingChildHelper mChildHelper -> y
    float mVerticalScrollFactor -> z
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    int getMaxScrollAmount() -> getMaxScrollAmount
    void initScrollView() -> a
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean canScroll() -> b
    void setFillViewport(boolean) -> setFillViewport
    void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    void onMeasure(int,int) -> onMeasure
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean inChild(int,int) -> c
    void initOrResetVelocityTracker() -> c
    void initVelocityTrackerIfNotExists() -> d
    void recycleVelocityTracker() -> e
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> a
    int getScrollRange() -> getScrollRange
    android.view.View findFocusableViewInBounds(boolean,int,int) -> a
    boolean pageScroll(int) -> a
    boolean fullScroll(int) -> b
    boolean scrollAndFocus(int,int,int) -> a
    boolean arrowScroll(int) -> c
    boolean isOffScreen(android.view.View) -> a
    boolean isWithinDeltaOfScreen(android.view.View,int,int) -> a
    void doScrollY(int) -> e
    void smoothScrollBy(int,int) -> a
    void smoothScrollTo(int,int) -> b
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void measureChild(android.view.View,int,int) -> measureChild
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void computeScroll() -> computeScroll
    void scrollToChild(android.view.View) -> b
    boolean scrollToChildRect(android.graphics.Rect,boolean) -> a
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> a
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void requestLayout() -> requestLayout
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAttachedToWindow() -> onAttachedToWindow
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean isViewDescendantOf(android.view.View,android.view.View) -> a
    void fling(int) -> d
    void flingWithNestedDispatch(int) -> f
    void endDrag() -> f
    void scrollTo(int,int) -> scrollTo
    void ensureGlows() -> g
    void draw(android.graphics.Canvas) -> draw
    int clamp(int,int,int) -> b
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int access$000(android.support.v4.widget.NestedScrollView) -> a
android.support.v4.widget.NestedScrollView$AccessibilityDelegate -> android.support.v4.widget.av:
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.NestedScrollView$SavedState:
    int scrollPosition -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.aw:
    android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.NestedScrollView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.PopupWindowCompat -> android.support.v4.widget.ax:
    android.support.v4.widget.PopupWindowCompat$PopupWindowImpl IMPL -> a
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
    void setWindowLayoutType(android.widget.PopupWindow,int) -> a
android.support.v4.widget.PopupWindowCompat$Api21PopupWindowImpl -> android.support.v4.widget.ay:
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl -> android.support.v4.widget.az:
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
    void setWindowLayoutType(android.widget.PopupWindow,int) -> a
android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl -> android.support.v4.widget.ba:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
    void setWindowLayoutType(android.widget.PopupWindow,int) -> a
android.support.v4.widget.PopupWindowCompat$GingerbreadPopupWindowImpl -> android.support.v4.widget.bb:
    void setWindowLayoutType(android.widget.PopupWindow,int) -> a
android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl -> android.support.v4.widget.bc:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
android.support.v4.widget.PopupWindowCompat$PopupWindowImpl -> android.support.v4.widget.bd:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
    void setWindowLayoutType(android.widget.PopupWindow,int) -> a
android.support.v4.widget.PopupWindowCompatApi21 -> android.support.v4.widget.be:
    java.lang.reflect.Field sOverlapAnchorField -> a
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
android.support.v4.widget.PopupWindowCompatApi23 -> android.support.v4.widget.bf:
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
    void setWindowLayoutType(android.widget.PopupWindow,int) -> a
android.support.v4.widget.PopupWindowCompatGingerbread -> android.support.v4.widget.bg:
    java.lang.reflect.Method sSetWindowLayoutTypeMethod -> a
    boolean sSetWindowLayoutTypeMethodAttempted -> b
    void setWindowLayoutType(android.widget.PopupWindow,int) -> a
android.support.v4.widget.PopupWindowCompatKitKat -> android.support.v4.widget.bh:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.bi:
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.bj:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> a
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    float getCurrVelocity() -> f
    boolean computeScrollOffset() -> g
    void startScroll(int,int,int,int) -> a
    void startScroll(int,int,int,int,int) -> a
    void fling(int,int,int,int,int,int,int,int) -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation() -> h
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.bk:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    int getFinalX(java.lang.Object) -> g
    int getFinalY(java.lang.Object) -> h
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.bl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    int getFinalX(java.lang.Object) -> g
    int getFinalY(java.lang.Object) -> h
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.bm:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    int getFinalX(java.lang.Object) -> g
    int getFinalY(java.lang.Object) -> h
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.bn:
    float getCurrVelocity(java.lang.Object) -> d
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.bo:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.bp:
    float getCurrVelocity(java.lang.Object) -> a
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawableLeft -> d
    android.graphics.drawable.Drawable mShadowDrawableRight -> e
    int mOverhangSize -> f
    boolean mCanSlide -> g
    android.view.View mSlideableView -> h
    float mSlideOffset -> i
    float mParallaxOffset -> j
    int mSlideRange -> k
    boolean mIsUnableToDrag -> l
    int mParallaxBy -> m
    float mInitialMotionX -> n
    float mInitialMotionY -> o
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> p
    android.support.v4.widget.ViewDragHelper mDragHelper -> q
    boolean mPreservedOpenState -> r
    boolean mFirstLayout -> s
    android.graphics.Rect mTmpRect -> t
    java.util.ArrayList mPostedRunnables -> u
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> a
    void dispatchOnPanelOpened(android.view.View) -> b
    void dispatchOnPanelClosed(android.view.View) -> c
    void updateObscuredViewsVisibility(android.view.View) -> d
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void onPanelDragged(int) -> a
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> g
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> f
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> f
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> g
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.bq:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.br:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.bs:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.bt:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewReleased(android.view.View,float,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void onEdgeDragStarted(int,int) -> b
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.bu:
    void onPanelSlide(android.view.View,float) -> a
    void onPanelOpened(android.view.View) -> a
    void onPanelClosed(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.bv:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.bw:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.bx:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.by:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.bz:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.Space -> android.support.v4.widget.Space:
    void draw(android.graphics.Canvas) -> draw
    int getDefaultSize2(int,int) -> a
    void onMeasure(int,int) -> onMeasure
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    java.lang.String LOG_TAG -> c
    android.view.View mTarget -> d
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> e
    boolean mRefreshing -> f
    int mTouchSlop -> g
    float mTotalDragDistance -> h
    float mTotalUnconsumed -> i
    android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper -> j
    android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper -> k
    int[] mParentScrollConsumed -> l
    int mMediumAnimationDuration -> m
    int mCurrentTargetOffsetTop -> n
    boolean mOriginalOffsetCalculated -> o
    float mInitialMotionY -> p
    float mInitialDownY -> q
    boolean mIsBeingDragged -> r
    int mActivePointerId -> s
    boolean mScale -> t
    boolean mReturningToStart -> u
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> v
    int[] LAYOUT_ATTRS -> w
    android.support.v4.widget.CircleImageView mCircleView -> x
    int mCircleViewIndex -> y
    int mFrom -> a
    float mStartingScale -> z
    int mOriginalOffsetTop -> b
    android.support.v4.widget.MaterialProgressDrawable mProgress -> A
    android.view.animation.Animation mScaleAnimation -> B
    android.view.animation.Animation mScaleDownAnimation -> C
    android.view.animation.Animation mAlphaStartAnimation -> D
    android.view.animation.Animation mAlphaMaxAnimation -> E
    android.view.animation.Animation mScaleDownToStartAnimation -> F
    float mSpinnerFinalOffset -> G
    boolean mNotify -> H
    int mCircleWidth -> I
    int mCircleHeight -> J
    boolean mUsingCustomStart -> K
    android.view.animation.Animation$AnimationListener mRefreshListener -> L
    android.view.animation.Animation mAnimateToCorrectPosition -> M
    android.view.animation.Animation mPeek -> N
    android.view.animation.Animation mAnimateToStartPosition -> O
    void setColorViewAlpha(int) -> setColorViewAlpha
    void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    void setSize(int) -> setSize
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    void createProgressView() -> b
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    boolean isAlphaUsedForScale() -> c
    void setRefreshing(boolean) -> setRefreshing
    void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> a
    void setAnimationProgress(float) -> setAnimationProgress
    void setRefreshing(boolean,boolean) -> a
    void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> b
    void startProgressAlphaStartAnimation() -> d
    void startProgressAlphaMaxAnimation() -> e
    android.view.animation.Animation startAlphaAnimation(int,int) -> a
    void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    void setColorScheme(int[]) -> setColorScheme
    void setColorSchemeResources(int[]) -> setColorSchemeResources
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    void ensureTarget() -> f
    void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    int getProgressCircleDiameter() -> getProgressCircleDiameter
    boolean canChildScrollUp() -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    float getMotionEventY(android.view.MotionEvent,int) -> a
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    int getNestedScrollAxes() -> getNestedScrollAxes
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean isAnimationRunning(android.view.animation.Animation) -> a
    void moveSpinner(float) -> a
    void finishSpinner(float) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> a
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> b
    void moveToStart(float) -> c
    void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> c
    void setTargetOffsetTopAndBottom(int,boolean) -> a
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    boolean access$000(android.support.v4.widget.SwipeRefreshLayout) -> a
    android.support.v4.widget.MaterialProgressDrawable access$100(android.support.v4.widget.SwipeRefreshLayout) -> b
    boolean access$200(android.support.v4.widget.SwipeRefreshLayout) -> c
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener access$300(android.support.v4.widget.SwipeRefreshLayout) -> d
    android.support.v4.widget.CircleImageView access$400(android.support.v4.widget.SwipeRefreshLayout) -> e
    void access$500(android.support.v4.widget.SwipeRefreshLayout,int) -> a
    boolean access$600(android.support.v4.widget.SwipeRefreshLayout) -> f
    void access$700(android.support.v4.widget.SwipeRefreshLayout,float) -> a
    int access$800(android.support.v4.widget.SwipeRefreshLayout) -> g
    void access$900(android.support.v4.widget.SwipeRefreshLayout,int,boolean) -> a
    int access$802(android.support.v4.widget.SwipeRefreshLayout,int) -> b
    void access$1000(android.support.v4.widget.SwipeRefreshLayout,android.view.animation.Animation$AnimationListener) -> a
    boolean access$1100(android.support.v4.widget.SwipeRefreshLayout) -> h
    float access$1200(android.support.v4.widget.SwipeRefreshLayout) -> i
    void access$1300(android.support.v4.widget.SwipeRefreshLayout,float) -> b
    float access$1400(android.support.v4.widget.SwipeRefreshLayout) -> j
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.ca:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.cb:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.cc:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.cd:
    int val$startingAlpha -> a
    int val$endingAlpha -> b
    android.support.v4.widget.SwipeRefreshLayout this$0 -> c
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.ce:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.cf:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$7 -> android.support.v4.widget.cg:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$8 -> android.support.v4.widget.ch:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$9 -> android.support.v4.widget.ci:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.cj:
    void onRefresh() -> a
android.support.v4.widget.TextViewCompat -> android.support.v4.widget.ck:
    android.support.v4.widget.TextViewCompat$TextViewCompatImpl IMPL -> a
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl -> android.support.v4.widget.cl:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl -> android.support.v4.widget.cm:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl -> android.support.v4.widget.cn:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
android.support.v4.widget.TextViewCompat$TextViewCompatImpl -> android.support.v4.widget.co:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
android.support.v4.widget.TextViewCompatJbMr1 -> android.support.v4.widget.cp:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
android.support.v4.widget.TextViewCompatJbMr2 -> android.support.v4.widget.cq:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
android.support.v4.widget.TintableCompoundButton -> android.support.v4.widget.cr:
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.cs:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ct:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.cu:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.cv:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v7.app.ActionBar -> android.support.v7.app.ActionBar:
    void setDisplayHomeAsUpEnabled(boolean) -> a
    int getDisplayOptions() -> a
    void setHomeButtonEnabled(boolean) -> b
    android.content.Context getThemedContext() -> b
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> a
    void setHomeActionContentDescription(int) -> a
    void setHideOnContentScrollEnabled(boolean) -> c
    void setElevation(float) -> a
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> d
    void setShowHideAnimationEnabled(boolean) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchMenuVisibilityChanged(boolean) -> f
    android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> a
    boolean invalidateOptionsMenu() -> c
    boolean onKeyShortcut(int,android.view.KeyEvent) -> a
    boolean collapseActionView() -> d
    void setWindowTitle(java.lang.CharSequence) -> a
android.support.v7.app.ActionBar$LayoutParams -> android.support.v7.app.ActionBar$LayoutParams:
    int gravity -> a
android.support.v7.app.ActionBar$OnMenuVisibilityListener -> android.support.v7.app.a:
    void onMenuVisibilityChanged(boolean) -> a
android.support.v7.app.ActionBar$Tab -> android.support.v7.app.b:
    android.graphics.drawable.Drawable getIcon() -> a
    java.lang.CharSequence getText() -> b
    android.view.View getCustomView() -> c
    void select() -> d
    java.lang.CharSequence getContentDescription() -> e
android.support.v7.app.ActionBarActivity -> android.support.v7.app.ActionBarActivity:
android.support.v7.app.ActionBarDrawerToggle -> android.support.v7.app.c:
    android.support.v7.app.ActionBarDrawerToggle$Delegate mActivityImpl -> a
    android.support.v4.widget.DrawerLayout mDrawerLayout -> b
    android.support.v7.app.ActionBarDrawerToggle$DrawerToggle mSlider -> c
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> d
    boolean mDrawerIndicatorEnabled -> e
    int mOpenDrawerContentDescRes -> f
    int mCloseDrawerContentDescRes -> g
    android.view.View$OnClickListener mToolbarNavigationClickListener -> h
    boolean mWarnedForDisplayHomeAsUp -> i
    void syncState() -> a
    void toggle() -> c
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> b
    android.graphics.drawable.Drawable getThemeUpIndicator() -> b
    boolean access$000(android.support.v7.app.ActionBarDrawerToggle) -> a
    void access$100(android.support.v7.app.ActionBarDrawerToggle) -> b
    android.view.View$OnClickListener access$200(android.support.v7.app.ActionBarDrawerToggle) -> c
android.support.v7.app.ActionBarDrawerToggle$1 -> android.support.v7.app.d:
    android.support.v7.app.ActionBarDrawerToggle this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.app.ActionBarDrawerToggle$Delegate -> android.support.v7.app.e:
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    android.content.Context getActionBarThemedContext() -> b
    boolean isNavigationVisible() -> c
android.support.v7.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v7.app.f:
    android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> b
android.support.v7.app.ActionBarDrawerToggle$DrawerArrowDrawableToggle -> android.support.v7.app.g:
    android.app.Activity mActivity -> a
    void setPosition(float) -> a
android.support.v7.app.ActionBarDrawerToggle$DrawerToggle -> android.support.v7.app.h:
    void setPosition(float) -> a
android.support.v7.app.ActionBarDrawerToggle$DummyDelegate -> android.support.v7.app.i:
    android.app.Activity mActivity -> a
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    android.content.Context getActionBarThemedContext() -> b
    boolean isNavigationVisible() -> c
android.support.v7.app.ActionBarDrawerToggle$HoneycombDelegate -> android.support.v7.app.j:
    android.app.Activity mActivity -> a
    android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo mSetIndicatorInfo -> b
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    android.content.Context getActionBarThemedContext() -> b
    boolean isNavigationVisible() -> c
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
android.support.v7.app.ActionBarDrawerToggle$JellybeanMr2Delegate -> android.support.v7.app.k:
    android.app.Activity mActivity -> a
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    android.content.Context getActionBarThemedContext() -> b
    boolean isNavigationVisible() -> c
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
android.support.v7.app.ActionBarDrawerToggle$ToolbarCompatDelegate -> android.support.v7.app.l:
    android.support.v7.widget.Toolbar mToolbar -> a
    android.graphics.drawable.Drawable mDefaultUpIndicator -> b
    java.lang.CharSequence mDefaultContentDescription -> c
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    android.content.Context getActionBarThemedContext() -> b
    boolean isNavigationVisible() -> c
android.support.v7.app.ActionBarDrawerToggleHoneycomb -> android.support.v7.app.m:
    int[] THEME_ATTRS -> a
    android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarUpIndicator(android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarDescription(android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
android.support.v7.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v7.app.n:
    java.lang.reflect.Method setHomeAsUpIndicator -> a
    java.lang.reflect.Method setHomeActionContentDescription -> b
    android.widget.ImageView upIndicatorView -> c
android.support.v7.app.AlertController -> android.support.v7.app.o:
    android.content.Context mContext -> a
    android.support.v7.app.AppCompatDialog mDialog -> b
    android.view.Window mWindow -> c
    java.lang.CharSequence mTitle -> d
    java.lang.CharSequence mMessage -> e
    android.widget.ListView mListView -> f
    android.view.View mView -> g
    int mViewLayoutResId -> h
    int mViewSpacingLeft -> i
    int mViewSpacingTop -> j
    int mViewSpacingRight -> k
    int mViewSpacingBottom -> l
    boolean mViewSpacingSpecified -> m
    android.widget.Button mButtonPositive -> n
    java.lang.CharSequence mButtonPositiveText -> o
    android.os.Message mButtonPositiveMessage -> p
    android.widget.Button mButtonNegative -> q
    java.lang.CharSequence mButtonNegativeText -> r
    android.os.Message mButtonNegativeMessage -> s
    android.widget.Button mButtonNeutral -> t
    java.lang.CharSequence mButtonNeutralText -> u
    android.os.Message mButtonNeutralMessage -> v
    android.widget.ScrollView mScrollView -> w
    int mIconId -> x
    android.graphics.drawable.Drawable mIcon -> y
    android.widget.ImageView mIconView -> z
    android.widget.TextView mTitleView -> A
    android.widget.TextView mMessageView -> B
    android.view.View mCustomTitleView -> C
    android.widget.ListAdapter mAdapter -> D
    int mCheckedItem -> E
    int mAlertDialogLayout -> F
    int mButtonPanelSideLayout -> G
    int mListLayout -> H
    int mMultiChoiceItemLayout -> I
    int mSingleChoiceItemLayout -> J
    int mListItemLayout -> K
    int mButtonPanelLayoutHint -> L
    android.os.Handler mHandler -> M
    android.view.View$OnClickListener mButtonHandler -> N
    boolean shouldCenterSingleButton(android.content.Context) -> a
    boolean canTextInput(android.view.View) -> a
    void installContent() -> a
    int selectContentView() -> b
    void setTitle(java.lang.CharSequence) -> a
    void setCustomTitle(android.view.View) -> b
    void setMessage(java.lang.CharSequence) -> b
    void setView(int) -> a
    void setView(android.view.View) -> c
    void setView(android.view.View,int,int,int,int) -> a
    void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message) -> a
    void setIcon(int) -> b
    void setIcon(android.graphics.drawable.Drawable) -> a
    int getIconAttributeResId(int) -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> b
    void setupView() -> c
    boolean setupTitle(android.view.ViewGroup) -> a
    void setupContent(android.view.ViewGroup) -> b
    boolean setupButtons() -> d
    void centerButton(android.widget.Button) -> a
    android.widget.Button access$000(android.support.v7.app.AlertController) -> a
    android.os.Message access$100(android.support.v7.app.AlertController) -> b
    android.widget.Button access$200(android.support.v7.app.AlertController) -> c
    android.os.Message access$300(android.support.v7.app.AlertController) -> d
    android.widget.Button access$400(android.support.v7.app.AlertController) -> e
    android.os.Message access$500(android.support.v7.app.AlertController) -> f
    android.support.v7.app.AppCompatDialog access$600(android.support.v7.app.AlertController) -> g
    android.os.Handler access$700(android.support.v7.app.AlertController) -> h
    int access$800(android.support.v7.app.AlertController) -> i
    int access$900(android.support.v7.app.AlertController) -> j
    int access$1000(android.support.v7.app.AlertController) -> k
    int access$1100(android.support.v7.app.AlertController) -> l
    android.widget.ListAdapter access$1202(android.support.v7.app.AlertController,android.widget.ListAdapter) -> a
    int access$1302(android.support.v7.app.AlertController,int) -> a
    android.widget.ListView access$1402(android.support.v7.app.AlertController,android.widget.ListView) -> a
android.support.v7.app.AlertController$1 -> android.support.v7.app.p:
    android.support.v7.app.AlertController this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.app.AlertController$AlertParams -> android.support.v7.app.q:
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> b
    int mIconId -> c
    android.graphics.drawable.Drawable mIcon -> d
    int mIconAttrId -> e
    java.lang.CharSequence mTitle -> f
    android.view.View mCustomTitleView -> g
    java.lang.CharSequence mMessage -> h
    java.lang.CharSequence mPositiveButtonText -> i
    android.content.DialogInterface$OnClickListener mPositiveButtonListener -> j
    java.lang.CharSequence mNegativeButtonText -> k
    android.content.DialogInterface$OnClickListener mNegativeButtonListener -> l
    java.lang.CharSequence mNeutralButtonText -> m
    android.content.DialogInterface$OnClickListener mNeutralButtonListener -> n
    boolean mCancelable -> o
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> p
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> q
    android.content.DialogInterface$OnKeyListener mOnKeyListener -> r
    java.lang.CharSequence[] mItems -> s
    android.widget.ListAdapter mAdapter -> t
    android.content.DialogInterface$OnClickListener mOnClickListener -> u
    int mViewLayoutResId -> v
    android.view.View mView -> w
    int mViewSpacingLeft -> x
    int mViewSpacingTop -> y
    int mViewSpacingRight -> z
    int mViewSpacingBottom -> A
    boolean mViewSpacingSpecified -> B
    boolean[] mCheckedItems -> C
    boolean mIsMultiChoice -> D
    boolean mIsSingleChoice -> E
    int mCheckedItem -> F
    android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener -> G
    android.database.Cursor mCursor -> H
    java.lang.String mLabelColumn -> I
    java.lang.String mIsCheckedColumn -> J
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> K
    android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener -> L
    boolean mRecycleOnMeasure -> M
    void apply(android.support.v7.app.AlertController) -> a
    void createListView(android.support.v7.app.AlertController) -> b
android.support.v7.app.AlertController$AlertParams$1 -> android.support.v7.app.r:
    android.widget.ListView val$listView -> a
    android.support.v7.app.AlertController$AlertParams this$0 -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.app.AlertController$AlertParams$2 -> android.support.v7.app.s:
    int mLabelIndex -> d
    int mIsCheckedIndex -> e
    android.widget.ListView val$listView -> a
    android.support.v7.app.AlertController val$dialog -> b
    android.support.v7.app.AlertController$AlertParams this$0 -> c
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
android.support.v7.app.AlertController$AlertParams$3 -> android.support.v7.app.t:
    android.support.v7.app.AlertController val$dialog -> a
    android.support.v7.app.AlertController$AlertParams this$0 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.app.AlertController$AlertParams$4 -> android.support.v7.app.u:
    android.widget.ListView val$listView -> a
    android.support.v7.app.AlertController val$dialog -> b
    android.support.v7.app.AlertController$AlertParams this$0 -> c
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.app.AlertController$AlertParams$OnPrepareListViewListener -> android.support.v7.app.v:
    void onPrepareListView(android.widget.ListView) -> a
android.support.v7.app.AlertController$ButtonHandler -> android.support.v7.app.w:
    java.lang.ref.WeakReference mDialog -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v7.app.AlertController$CheckedItemAdapter -> android.support.v7.app.x:
    boolean hasStableIds() -> hasStableIds
    long getItemId(int) -> getItemId
android.support.v7.app.AlertDialog -> android.support.v7.app.y:
    android.support.v7.app.AlertController mAlert -> a
    int resolveDialogTheme(android.content.Context,int) -> a
    void setTitle(java.lang.CharSequence) -> setTitle
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    android.support.v7.app.AlertController access$000(android.support.v7.app.AlertDialog) -> a
android.support.v7.app.AlertDialog$Builder -> android.support.v7.app.z:
    android.support.v7.app.AlertController$AlertParams P -> a
    int mTheme -> b
    android.content.Context getContext() -> a
    android.support.v7.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> a
    android.support.v7.app.AlertDialog$Builder setCustomTitle(android.view.View) -> a
    android.support.v7.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> a
    android.support.v7.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> a
    android.support.v7.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> a
    android.support.v7.app.AlertDialog create() -> b
android.support.v7.app.AppCompatActivity -> android.support.v7.app.AppCompatActivity:
    android.support.v7.app.AppCompatDelegate mDelegate -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.support.v7.app.ActionBar getSupportActionBar() -> g
    void setSupportActionBar(android.support.v7.widget.Toolbar) -> a
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onStop() -> onStop
    void onPostResume() -> onPostResume
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onDestroy() -> onDestroy
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    void supportInvalidateOptionsMenu() -> d
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> a
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> b
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> a
    void onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> a
    void onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> b
    boolean onSupportNavigateUp() -> h
    android.content.Intent getSupportParentActivityIntent() -> a
    boolean supportShouldUpRecreateTask(android.content.Intent) -> a
    void supportNavigateUpTo(android.content.Intent) -> b
    void onContentChanged() -> onContentChanged
    void onSupportContentChanged() -> i
    android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> b
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    android.support.v7.app.AppCompatDelegate getDelegate() -> j
android.support.v7.app.AppCompatCallback -> android.support.v7.app.aa:
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> a
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> b
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> a
android.support.v7.app.AppCompatDelegate -> android.support.v7.app.ab:
    android.support.v7.app.AppCompatDelegate create(android.app.Activity,android.support.v7.app.AppCompatCallback) -> a
    android.support.v7.app.AppCompatDelegate create(android.app.Dialog,android.support.v7.app.AppCompatCallback) -> a
    android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> a
    android.support.v7.app.ActionBar getSupportActionBar() -> a
    void setSupportActionBar(android.support.v7.widget.Toolbar) -> a
    android.view.MenuInflater getMenuInflater() -> b
    void onCreate(android.os.Bundle) -> a
    void onPostCreate(android.os.Bundle) -> b
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> c
    void onPostResume() -> d
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void setTitle(java.lang.CharSequence) -> a
    void invalidateOptionsMenu() -> e
    void onDestroy() -> f
    android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> g
    boolean requestWindowFeature(int) -> b
    void installViewFactory() -> h
android.support.v7.app.AppCompatDelegateImplBase -> android.support.v7.app.ac:
    android.content.Context mContext -> a
    android.view.Window mWindow -> b
    android.view.Window$Callback mOriginalWindowCallback -> c
    android.view.Window$Callback mAppCompatWindowCallback -> d
    android.support.v7.app.AppCompatCallback mAppCompatCallback -> e
    android.support.v7.app.ActionBar mActionBar -> f
    android.view.MenuInflater mMenuInflater -> g
    boolean mHasActionBar -> h
    boolean mOverlayActionBar -> i
    boolean mOverlayActionMode -> j
    boolean mIsFloating -> k
    boolean mWindowNoTitle -> l
    java.lang.CharSequence mTitle -> m
    boolean mIsDestroyed -> n
    void initWindowDecorActionBar() -> i
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> a
    android.support.v7.app.ActionBar getSupportActionBar() -> a
    android.support.v7.app.ActionBar peekSupportActionBar() -> j
    android.view.MenuInflater getMenuInflater() -> b
    void onCreate(android.os.Bundle) -> a
    void onPanelClosed(int,android.view.Menu) -> a
    boolean onMenuOpened(int,android.view.Menu) -> b
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    boolean onKeyShortcut(int,android.view.KeyEvent) -> a
    android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> g
    android.content.Context getActionBarThemedContext() -> k
    android.support.v7.view.ActionMode startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback) -> a
    void onDestroy() -> f
    boolean isHandleNativeActionModesEnabled() -> l
    boolean isDestroyed() -> m
    android.view.Window$Callback getWindowCallback() -> n
    void setTitle(java.lang.CharSequence) -> a
    void onTitleChanged(java.lang.CharSequence) -> b
    java.lang.CharSequence getTitle() -> o
android.support.v7.app.AppCompatDelegateImplBase$1 -> android.support.v7.app.ad:
android.support.v7.app.AppCompatDelegateImplBase$ActionBarDrawableToggleImpl -> android.support.v7.app.ae:
    android.support.v7.app.AppCompatDelegateImplBase this$0 -> a
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    android.content.Context getActionBarThemedContext() -> b
    boolean isNavigationVisible() -> c
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase -> android.support.v7.app.af:
    android.support.v7.app.AppCompatDelegateImplBase this$0 -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    void onContentChanged() -> onContentChanged
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
android.support.v7.app.AppCompatDelegateImplV11 -> android.support.v7.app.ag:
    android.view.View callActivityOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> b
android.support.v7.app.AppCompatDelegateImplV14 -> android.support.v7.app.ah:
    boolean mHandleNativeActionModes -> r
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> a
    boolean isHandleNativeActionModesEnabled() -> l
android.support.v7.app.AppCompatDelegateImplV14$AppCompatWindowCallbackV14 -> android.support.v7.app.ai:
    android.support.v7.app.AppCompatDelegateImplV14 this$0 -> b
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> a
android.support.v7.app.AppCompatDelegateImplV23 -> android.support.v7.app.aj:
    android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback) -> a
android.support.v7.app.AppCompatDelegateImplV23$AppCompatWindowCallbackV23 -> android.support.v7.app.ak:
    android.support.v7.app.AppCompatDelegateImplV23 this$0 -> c
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
android.support.v7.app.AppCompatDelegateImplV7 -> android.support.v7.app.AppCompatDelegateImplV7:
    android.support.v7.internal.widget.DecorContentParent mDecorContentParent -> r
    android.support.v7.app.AppCompatDelegateImplV7$ActionMenuPresenterCallback mActionMenuPresenterCallback -> s
    android.support.v7.app.AppCompatDelegateImplV7$PanelMenuPresenterCallback mPanelMenuPresenterCallback -> t
    android.support.v7.view.ActionMode mActionMode -> m
    android.support.v7.internal.widget.ActionBarContextView mActionModeView -> n
    android.widget.PopupWindow mActionModePopup -> o
    java.lang.Runnable mShowActionModePopup -> p
    android.support.v4.view.ViewPropertyAnimatorCompat mFadeAnim -> q
    boolean mSubDecorInstalled -> u
    android.view.ViewGroup mWindowDecor -> v
    android.view.ViewGroup mSubDecor -> w
    android.widget.TextView mTitleView -> x
    android.view.View mStatusGuard -> y
    boolean mFeatureProgress -> z
    boolean mFeatureIndeterminateProgress -> A
    boolean mClosingActionMenu -> B
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState[] mPanels -> C
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState mPreparedPanel -> D
    boolean mInvalidatePanelMenuPosted -> E
    int mInvalidatePanelMenuFeatures -> F
    java.lang.Runnable mInvalidatePanelMenuRunnable -> G
    boolean mEnableDefaultActionBarUp -> H
    android.graphics.Rect mTempRect1 -> I
    android.graphics.Rect mTempRect2 -> J
    android.support.v7.internal.app.AppCompatViewInflater mAppCompatViewInflater -> K
    void onCreate(android.os.Bundle) -> a
    void onPostCreate(android.os.Bundle) -> b
    void initWindowDecorActionBar() -> i
    void setSupportActionBar(android.support.v7.widget.Toolbar) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> c
    void onPostResume() -> d
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void ensureSubDecor() -> q
    void onSubDecorInstalled(android.view.ViewGroup) -> a
    void applyFixedSizeWindow(android.support.v7.internal.widget.ContentFrameLayout) -> a
    boolean requestWindowFeature(int) -> b
    void onTitleChanged(java.lang.CharSequence) -> b
    void onPanelClosed(int,android.view.Menu) -> a
    boolean onMenuOpened(int,android.view.Menu) -> b
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> b
    void invalidateOptionsMenu() -> e
    android.support.v7.view.ActionMode startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback) -> a
    void endOnGoingFadeAnimation() -> r
    boolean onBackPressed() -> p
    boolean onKeyShortcut(int,android.view.KeyEvent) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> c
    android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> c
    boolean shouldInheritContext(android.view.ViewParent) -> a
    void installViewFactory() -> h
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    android.view.View callActivityOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> b
    void openPanel(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.KeyEvent) -> a
    boolean initializePanelDecor(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState) -> a
    void reopenMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean initializePanelMenu(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState) -> b
    boolean initializePanelContent(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState) -> c
    boolean preparePanel(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.KeyEvent) -> b
    void checkCloseActionMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
    void closePanel(int) -> c
    void closePanel(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,boolean) -> a
    boolean onKeyDownPanel(int,android.view.KeyEvent) -> d
    boolean onKeyUpPanel(int,android.view.KeyEvent) -> e
    void callOnPanelClosed(int,android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.Menu) -> a
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState findMenuPanel(android.view.Menu) -> a
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState getPanelState(int,boolean) -> a
    boolean performPanelShortcut(android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,int,android.view.KeyEvent,int) -> a
    void invalidatePanelMenu(int) -> d
    void doInvalidatePanelMenu(int) -> e
    int updateStatusGuard(int) -> f
    void throwFeatureRequestIfSubDecorInstalled() -> s
    int sanitizeWindowFeatureId(int) -> g
    int access$000(android.support.v7.app.AppCompatDelegateImplV7) -> a
    void access$100(android.support.v7.app.AppCompatDelegateImplV7,int) -> a
    boolean access$202(android.support.v7.app.AppCompatDelegateImplV7,boolean) -> a
    int access$002(android.support.v7.app.AppCompatDelegateImplV7,int) -> b
    int access$300(android.support.v7.app.AppCompatDelegateImplV7,int) -> c
    void access$400(android.support.v7.app.AppCompatDelegateImplV7) -> b
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState access$700(android.support.v7.app.AppCompatDelegateImplV7,android.view.Menu) -> a
    void access$800(android.support.v7.app.AppCompatDelegateImplV7,int,android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,android.view.Menu) -> a
    void access$900(android.support.v7.app.AppCompatDelegateImplV7,android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState,boolean) -> a
    void access$1000(android.support.v7.app.AppCompatDelegateImplV7,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void access$1300(android.support.v7.app.AppCompatDelegateImplV7,int) -> d
android.support.v7.app.AppCompatDelegateImplV7$1 -> android.support.v7.app.al:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> a
    void run() -> run
android.support.v7.app.AppCompatDelegateImplV7$2 -> android.support.v7.app.am:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> a
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
android.support.v7.app.AppCompatDelegateImplV7$3 -> android.support.v7.app.an:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> a
    void onFitSystemWindows(android.graphics.Rect) -> a
android.support.v7.app.AppCompatDelegateImplV7$4 -> android.support.v7.app.ao:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> a
    void run() -> run
android.support.v7.app.AppCompatDelegateImplV7$4$1 -> android.support.v7.app.ap:
    android.support.v7.app.AppCompatDelegateImplV7$4 this$1 -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationStart(android.view.View) -> a
android.support.v7.app.AppCompatDelegateImplV7$5 -> android.support.v7.app.aq:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationStart(android.view.View) -> a
android.support.v7.app.AppCompatDelegateImplV7$ActionMenuPresenterCallback -> android.support.v7.app.ar:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
android.support.v7.app.AppCompatDelegateImplV7$ActionModeCallbackWrapperV7 -> android.support.v7.app.as:
    android.support.v7.view.ActionMode$Callback mWrapped -> b
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> a
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> a
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> a
android.support.v7.app.AppCompatDelegateImplV7$ActionModeCallbackWrapperV7$1 -> android.support.v7.app.at:
    android.support.v7.app.AppCompatDelegateImplV7$ActionModeCallbackWrapperV7 this$1 -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.app.AppCompatDelegateImplV7$ListMenuDecorView -> android.support.v7.app.au:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setBackgroundResource(int) -> setBackgroundResource
    boolean isOutOfBounds(int,int) -> a
android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState -> android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState:
    int featureId -> a
    int background -> b
    int gravity -> c
    int x -> d
    int y -> e
    int windowAnimations -> f
    android.view.ViewGroup decorView -> g
    android.view.View shownPanelView -> h
    android.view.View createdPanelView -> i
    android.support.v7.internal.view.menu.MenuBuilder menu -> j
    android.support.v7.internal.view.menu.ListMenuPresenter listMenuPresenter -> k
    android.content.Context listPresenterContext -> l
    boolean isPrepared -> m
    boolean isHandled -> n
    boolean isOpen -> o
    boolean qwertyMode -> p
    boolean refreshDecorView -> q
    boolean refreshMenuContent -> r
    android.os.Bundle frozenActionViewState -> s
    boolean hasPanelItems() -> a
    void setStyle(android.content.Context) -> a
    void setMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getListMenuView(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState -> android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState:
    int featureId -> a
    boolean isOpen -> b
    android.os.Bundle menuState -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState readFromParcel(android.os.Parcel) -> b
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState access$1200(android.os.Parcel) -> a
android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState$1 -> android.support.v7.app.av:
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.app.AppCompatDelegateImplV7$PanelFeatureState$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.app.AppCompatDelegateImplV7$PanelMenuPresenterCallback -> android.support.v7.app.aw:
    android.support.v7.app.AppCompatDelegateImplV7 this$0 -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.app.AppCompatDialog -> android.support.v7.app.ax:
    android.support.v7.app.AppCompatDelegate mDelegate -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onStop() -> onStop
    boolean supportRequestWindowFeature(int) -> a
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    android.support.v7.app.AppCompatDelegate getDelegate() -> a
    int getThemeResId(android.content.Context,int) -> a
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> a
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> b
    android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> a
android.support.v7.app.AppCompatDialogFragment -> android.support.v7.app.AppCompatDialogFragment:
    android.app.Dialog onCreateDialog(android.os.Bundle) -> a
    void setupDialog(android.app.Dialog,int) -> a
android.support.v7.appcompat.R -> android.support.v7.a.a:
android.support.v7.appcompat.R$attr -> android.support.v7.a.b:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarPopupTheme -> actionBarPopupTheme
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarTheme -> actionBarTheme
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionOverflowMenuStyle -> actionOverflowMenuStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int alertDialogButtonGroupStyle -> alertDialogButtonGroupStyle
    int alertDialogCenterButtons -> alertDialogCenterButtons
    int alertDialogStyle -> alertDialogStyle
    int alertDialogTheme -> alertDialogTheme
    int arrowHeadLength -> arrowHeadLength
    int arrowShaftLength -> arrowShaftLength
    int autoCompleteTextViewStyle -> autoCompleteTextViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int backgroundTint -> backgroundTint
    int backgroundTintMode -> backgroundTintMode
    int barLength -> barLength
    int borderlessButtonStyle -> borderlessButtonStyle
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarNegativeButtonStyle -> buttonBarNegativeButtonStyle
    int buttonBarNeutralButtonStyle -> buttonBarNeutralButtonStyle
    int buttonBarPositiveButtonStyle -> buttonBarPositiveButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int buttonPanelSideLayout -> buttonPanelSideLayout
    int buttonStyle -> buttonStyle
    int buttonStyleSmall -> buttonStyleSmall
    int buttonTint -> buttonTint
    int buttonTintMode -> buttonTintMode
    int checkboxStyle -> checkboxStyle
    int checkedTextViewStyle -> checkedTextViewStyle
    int closeIcon -> closeIcon
    int closeItemLayout -> closeItemLayout
    int collapseContentDescription -> collapseContentDescription
    int collapseIcon -> collapseIcon
    int color -> color
    int colorAccent -> colorAccent
    int colorButtonNormal -> colorButtonNormal
    int colorControlActivated -> colorControlActivated
    int colorControlHighlight -> colorControlHighlight
    int colorControlNormal -> colorControlNormal
    int colorPrimary -> colorPrimary
    int colorPrimaryDark -> colorPrimaryDark
    int colorSwitchThumbNormal -> colorSwitchThumbNormal
    int commitIcon -> commitIcon
    int contentInsetEnd -> contentInsetEnd
    int contentInsetLeft -> contentInsetLeft
    int contentInsetRight -> contentInsetRight
    int contentInsetStart -> contentInsetStart
    int controlBackground -> controlBackground
    int customNavigationLayout -> customNavigationLayout
    int defaultQueryHint -> defaultQueryHint
    int dialogPreferredPadding -> dialogPreferredPadding
    int dialogTheme -> dialogTheme
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int drawableSize -> drawableSize
    int drawerArrowStyle -> drawerArrowStyle
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int editTextBackground -> editTextBackground
    int editTextColor -> editTextColor
    int editTextStyle -> editTextStyle
    int elevation -> elevation
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int gapBetweenBars -> gapBetweenBars
    int goIcon -> goIcon
    int height -> height
    int hideOnContentScroll -> hideOnContentScroll
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int layout -> layout
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listDividerAlertDialog -> listDividerAlertDialog
    int listItemLayout -> listItemLayout
    int listLayout -> listLayout
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int logoDescription -> logoDescription
    int maxButtonHeight -> maxButtonHeight
    int measureWithLargestChild -> measureWithLargestChild
    int multiChoiceItemLayout -> multiChoiceItemLayout
    int navigationContentDescription -> navigationContentDescription
    int navigationIcon -> navigationIcon
    int navigationMode -> navigationMode
    int overlapAnchor -> overlapAnchor
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelBackground -> panelBackground
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupTheme -> popupTheme
    int popupWindowStyle -> popupWindowStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryBackground -> queryBackground
    int queryHint -> queryHint
    int radioButtonStyle -> radioButtonStyle
    int ratingBarStyle -> ratingBarStyle
    int searchHintIcon -> searchHintIcon
    int searchIcon -> searchIcon
    int searchViewStyle -> searchViewStyle
    int selectableItemBackground -> selectableItemBackground
    int selectableItemBackgroundBorderless -> selectableItemBackgroundBorderless
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int showText -> showText
    int singleChoiceItemLayout -> singleChoiceItemLayout
    int spinBars -> spinBars
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerStyle -> spinnerStyle
    int splitTrack -> splitTrack
    int state_above_anchor -> state_above_anchor
    int submitBackground -> submitBackground
    int subtitle -> subtitle
    int subtitleTextAppearance -> subtitleTextAppearance
    int subtitleTextColor -> subtitleTextColor
    int subtitleTextStyle -> subtitleTextStyle
    int suggestionRowLayout -> suggestionRowLayout
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchStyle -> switchStyle
    int switchTextAppearance -> switchTextAppearance
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorAlertDialogListItem -> textColorAlertDialogListItem
    int textColorSearchUrl -> textColorSearchUrl
    int theme -> theme
    int thickness -> thickness
    int thumbTextPadding -> thumbTextPadding
    int title -> title
    int titleMarginBottom -> titleMarginBottom
    int titleMarginEnd -> titleMarginEnd
    int titleMarginStart -> titleMarginStart
    int titleMarginTop -> titleMarginTop
    int titleMargins -> titleMargins
    int titleTextAppearance -> titleTextAppearance
    int titleTextColor -> titleTextColor
    int titleTextStyle -> titleTextStyle
    int toolbarNavigationButtonStyle -> toolbarNavigationButtonStyle
    int toolbarStyle -> toolbarStyle
    int track -> track
    int voiceIcon -> voiceIcon
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
android.support.v7.appcompat.R$bool -> android.support.v7.a.c:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    int abc_action_bar_embed_tabs_pre_jb -> abc_action_bar_embed_tabs_pre_jb
    int abc_action_bar_expanded_action_views_exclusive -> abc_action_bar_expanded_action_views_exclusive
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_allowActionMenuItemTextWithIcon -> abc_config_allowActionMenuItemTextWithIcon
    int abc_config_closeDialogWhenTouchOutside -> abc_config_closeDialogWhenTouchOutside
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
android.support.v7.appcompat.R$color -> android.support.v7.a.d:
    int abc_background_cache_hint_selector_material_dark -> abc_background_cache_hint_selector_material_dark
    int abc_background_cache_hint_selector_material_light -> abc_background_cache_hint_selector_material_light
    int abc_color_highlight_material -> abc_color_highlight_material
    int abc_input_method_navigation_guard -> abc_input_method_navigation_guard
    int abc_primary_text_disable_only_material_dark -> abc_primary_text_disable_only_material_dark
    int abc_primary_text_disable_only_material_light -> abc_primary_text_disable_only_material_light
    int abc_primary_text_material_dark -> abc_primary_text_material_dark
    int abc_primary_text_material_light -> abc_primary_text_material_light
    int abc_search_url_text -> abc_search_url_text
    int abc_search_url_text_normal -> abc_search_url_text_normal
    int abc_search_url_text_pressed -> abc_search_url_text_pressed
    int abc_search_url_text_selected -> abc_search_url_text_selected
    int abc_secondary_text_material_dark -> abc_secondary_text_material_dark
    int abc_secondary_text_material_light -> abc_secondary_text_material_light
    int accent_material_dark -> accent_material_dark
    int accent_material_light -> accent_material_light
    int background_floating_material_dark -> background_floating_material_dark
    int background_floating_material_light -> background_floating_material_light
    int background_material_dark -> background_material_dark
    int background_material_light -> background_material_light
    int bright_foreground_disabled_material_dark -> bright_foreground_disabled_material_dark
    int bright_foreground_disabled_material_light -> bright_foreground_disabled_material_light
    int bright_foreground_inverse_material_dark -> bright_foreground_inverse_material_dark
    int bright_foreground_inverse_material_light -> bright_foreground_inverse_material_light
    int bright_foreground_material_dark -> bright_foreground_material_dark
    int bright_foreground_material_light -> bright_foreground_material_light
    int button_material_dark -> button_material_dark
    int button_material_light -> button_material_light
    int dim_foreground_disabled_material_dark -> dim_foreground_disabled_material_dark
    int dim_foreground_disabled_material_light -> dim_foreground_disabled_material_light
    int dim_foreground_material_dark -> dim_foreground_material_dark
    int dim_foreground_material_light -> dim_foreground_material_light
    int foreground_material_dark -> foreground_material_dark
    int foreground_material_light -> foreground_material_light
    int highlighted_text_material_dark -> highlighted_text_material_dark
    int highlighted_text_material_light -> highlighted_text_material_light
    int hint_foreground_material_dark -> hint_foreground_material_dark
    int hint_foreground_material_light -> hint_foreground_material_light
    int material_blue_grey_800 -> material_blue_grey_800
    int material_blue_grey_900 -> material_blue_grey_900
    int material_blue_grey_950 -> material_blue_grey_950
    int material_deep_teal_200 -> material_deep_teal_200
    int material_deep_teal_500 -> material_deep_teal_500
    int material_grey_100 -> material_grey_100
    int material_grey_300 -> material_grey_300
    int material_grey_50 -> material_grey_50
    int material_grey_600 -> material_grey_600
    int material_grey_800 -> material_grey_800
    int material_grey_850 -> material_grey_850
    int material_grey_900 -> material_grey_900
    int primary_dark_material_dark -> primary_dark_material_dark
    int primary_dark_material_light -> primary_dark_material_light
    int primary_material_dark -> primary_material_dark
    int primary_material_light -> primary_material_light
    int primary_text_default_material_dark -> primary_text_default_material_dark
    int primary_text_default_material_light -> primary_text_default_material_light
    int primary_text_disabled_material_dark -> primary_text_disabled_material_dark
    int primary_text_disabled_material_light -> primary_text_disabled_material_light
    int ripple_material_dark -> ripple_material_dark
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_dark -> secondary_text_default_material_dark
    int secondary_text_default_material_light -> secondary_text_default_material_light
    int secondary_text_disabled_material_dark -> secondary_text_disabled_material_dark
    int secondary_text_disabled_material_light -> secondary_text_disabled_material_light
    int switch_thumb_disabled_material_dark -> switch_thumb_disabled_material_dark
    int switch_thumb_disabled_material_light -> switch_thumb_disabled_material_light
    int switch_thumb_material_dark -> switch_thumb_material_dark
    int switch_thumb_material_light -> switch_thumb_material_light
    int switch_thumb_normal_material_dark -> switch_thumb_normal_material_dark
    int switch_thumb_normal_material_light -> switch_thumb_normal_material_light
android.support.v7.appcompat.R$dimen -> android.support.v7.a.e:
    int abc_action_bar_content_inset_material -> abc_action_bar_content_inset_material
    int abc_action_bar_default_height_material -> abc_action_bar_default_height_material
    int abc_action_bar_default_padding_end_material -> abc_action_bar_default_padding_end_material
    int abc_action_bar_default_padding_start_material -> abc_action_bar_default_padding_start_material
    int abc_action_bar_icon_vertical_padding_material -> abc_action_bar_icon_vertical_padding_material
    int abc_action_bar_overflow_padding_end_material -> abc_action_bar_overflow_padding_end_material
    int abc_action_bar_overflow_padding_start_material -> abc_action_bar_overflow_padding_start_material
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin_material -> abc_action_bar_subtitle_bottom_margin_material
    int abc_action_bar_subtitle_top_margin_material -> abc_action_bar_subtitle_top_margin_material
    int abc_action_button_min_height_material -> abc_action_button_min_height_material
    int abc_action_button_min_width_material -> abc_action_button_min_width_material
    int abc_action_button_min_width_overflow_material -> abc_action_button_min_width_overflow_material
    int abc_alert_dialog_button_bar_height -> abc_alert_dialog_button_bar_height
    int abc_button_inset_horizontal_material -> abc_button_inset_horizontal_material
    int abc_button_inset_vertical_material -> abc_button_inset_vertical_material
    int abc_button_padding_horizontal_material -> abc_button_padding_horizontal_material
    int abc_button_padding_vertical_material -> abc_button_padding_vertical_material
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_control_corner_material -> abc_control_corner_material
    int abc_control_inset_material -> abc_control_inset_material
    int abc_control_padding_material -> abc_control_padding_material
    int abc_dialog_list_padding_vertical_material -> abc_dialog_list_padding_vertical_material
    int abc_dialog_min_width_major -> abc_dialog_min_width_major
    int abc_dialog_min_width_minor -> abc_dialog_min_width_minor
    int abc_dialog_padding_material -> abc_dialog_padding_material
    int abc_dialog_padding_top_material -> abc_dialog_padding_top_material
    int abc_disabled_alpha_material_dark -> abc_disabled_alpha_material_dark
    int abc_disabled_alpha_material_light -> abc_disabled_alpha_material_light
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_edit_text_inset_bottom_material -> abc_edit_text_inset_bottom_material
    int abc_edit_text_inset_horizontal_material -> abc_edit_text_inset_horizontal_material
    int abc_edit_text_inset_top_material -> abc_edit_text_inset_top_material
    int abc_floating_window_z -> abc_floating_window_z
    int abc_list_item_padding_horizontal_material -> abc_list_item_padding_horizontal_material
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_search_view_text_min_width -> abc_search_view_text_min_width
    int abc_switch_padding -> abc_switch_padding
    int abc_text_size_body_1_material -> abc_text_size_body_1_material
    int abc_text_size_body_2_material -> abc_text_size_body_2_material
    int abc_text_size_button_material -> abc_text_size_button_material
    int abc_text_size_caption_material -> abc_text_size_caption_material
    int abc_text_size_display_1_material -> abc_text_size_display_1_material
    int abc_text_size_display_2_material -> abc_text_size_display_2_material
    int abc_text_size_display_3_material -> abc_text_size_display_3_material
    int abc_text_size_display_4_material -> abc_text_size_display_4_material
    int abc_text_size_headline_material -> abc_text_size_headline_material
    int abc_text_size_large_material -> abc_text_size_large_material
    int abc_text_size_medium_material -> abc_text_size_medium_material
    int abc_text_size_menu_material -> abc_text_size_menu_material
    int abc_text_size_small_material -> abc_text_size_small_material
    int abc_text_size_subhead_material -> abc_text_size_subhead_material
    int abc_text_size_subtitle_material_toolbar -> abc_text_size_subtitle_material_toolbar
    int abc_text_size_title_material -> abc_text_size_title_material
    int abc_text_size_title_material_toolbar -> abc_text_size_title_material_toolbar
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
    int disabled_alpha_material_dark -> disabled_alpha_material_dark
    int disabled_alpha_material_light -> disabled_alpha_material_light
    int highlight_alpha_material_colored -> highlight_alpha_material_colored
    int highlight_alpha_material_dark -> highlight_alpha_material_dark
    int highlight_alpha_material_light -> highlight_alpha_material_light
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_subtext_size -> notification_subtext_size
android.support.v7.appcompat.R$drawable -> android.support.v7.a.f:
    int abc_ab_share_pack_mtrl_alpha -> abc_ab_share_pack_mtrl_alpha
    int abc_action_bar_item_background_material -> abc_action_bar_item_background_material
    int abc_btn_borderless_material -> abc_btn_borderless_material
    int abc_btn_check_material -> abc_btn_check_material
    int abc_btn_check_to_on_mtrl_000 -> abc_btn_check_to_on_mtrl_000
    int abc_btn_check_to_on_mtrl_015 -> abc_btn_check_to_on_mtrl_015
    int abc_btn_colored_material -> abc_btn_colored_material
    int abc_btn_default_mtrl_shape -> abc_btn_default_mtrl_shape
    int abc_btn_radio_material -> abc_btn_radio_material
    int abc_btn_radio_to_on_mtrl_000 -> abc_btn_radio_to_on_mtrl_000
    int abc_btn_radio_to_on_mtrl_015 -> abc_btn_radio_to_on_mtrl_015
    int abc_btn_rating_star_off_mtrl_alpha -> abc_btn_rating_star_off_mtrl_alpha
    int abc_btn_rating_star_on_mtrl_alpha -> abc_btn_rating_star_on_mtrl_alpha
    int abc_btn_switch_to_on_mtrl_00001 -> abc_btn_switch_to_on_mtrl_00001
    int abc_btn_switch_to_on_mtrl_00012 -> abc_btn_switch_to_on_mtrl_00012
    int abc_cab_background_internal_bg -> abc_cab_background_internal_bg
    int abc_cab_background_top_material -> abc_cab_background_top_material
    int abc_cab_background_top_mtrl_alpha -> abc_cab_background_top_mtrl_alpha
    int abc_control_background_material -> abc_control_background_material
    int abc_dialog_material_background_dark -> abc_dialog_material_background_dark
    int abc_dialog_material_background_light -> abc_dialog_material_background_light
    int abc_edit_text_material -> abc_edit_text_material
    int abc_ic_ab_back_mtrl_am_alpha -> abc_ic_ab_back_mtrl_am_alpha
    int abc_ic_clear_mtrl_alpha -> abc_ic_clear_mtrl_alpha
    int abc_ic_commit_search_api_mtrl_alpha -> abc_ic_commit_search_api_mtrl_alpha
    int abc_ic_go_search_api_mtrl_alpha -> abc_ic_go_search_api_mtrl_alpha
    int abc_ic_menu_copy_mtrl_am_alpha -> abc_ic_menu_copy_mtrl_am_alpha
    int abc_ic_menu_cut_mtrl_alpha -> abc_ic_menu_cut_mtrl_alpha
    int abc_ic_menu_moreoverflow_mtrl_alpha -> abc_ic_menu_moreoverflow_mtrl_alpha
    int abc_ic_menu_paste_mtrl_am_alpha -> abc_ic_menu_paste_mtrl_am_alpha
    int abc_ic_menu_selectall_mtrl_alpha -> abc_ic_menu_selectall_mtrl_alpha
    int abc_ic_menu_share_mtrl_alpha -> abc_ic_menu_share_mtrl_alpha
    int abc_ic_search_api_mtrl_alpha -> abc_ic_search_api_mtrl_alpha
    int abc_ic_voice_search_api_mtrl_alpha -> abc_ic_voice_search_api_mtrl_alpha
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_mtrl_alpha -> abc_list_divider_mtrl_alpha
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_hardkey_panel_mtrl_mult -> abc_menu_hardkey_panel_mtrl_mult
    int abc_popup_background_mtrl_mult -> abc_popup_background_mtrl_mult
    int abc_ratingbar_full_material -> abc_ratingbar_full_material
    int abc_spinner_mtrl_am_alpha -> abc_spinner_mtrl_am_alpha
    int abc_spinner_textfield_background_material -> abc_spinner_textfield_background_material
    int abc_switch_thumb_material -> abc_switch_thumb_material
    int abc_switch_track_mtrl_alpha -> abc_switch_track_mtrl_alpha
    int abc_tab_indicator_material -> abc_tab_indicator_material
    int abc_tab_indicator_mtrl_alpha -> abc_tab_indicator_mtrl_alpha
    int abc_text_cursor_material -> abc_text_cursor_material
    int abc_textfield_activated_mtrl_alpha -> abc_textfield_activated_mtrl_alpha
    int abc_textfield_default_mtrl_alpha -> abc_textfield_default_mtrl_alpha
    int abc_textfield_search_activated_mtrl_alpha -> abc_textfield_search_activated_mtrl_alpha
    int abc_textfield_search_default_mtrl_alpha -> abc_textfield_search_default_mtrl_alpha
    int abc_textfield_search_material -> abc_textfield_search_material
    int notification_template_icon_bg -> notification_template_icon_bg
android.support.v7.appcompat.R$id -> android.support.v7.a.g:
    int action0 -> action0
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_root -> action_bar_root
    int action_bar_spinner -> action_bar_spinner
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_divider -> action_divider
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int alertTitle -> alertTitle
    int always -> always
    int beginning -> beginning
    int buttonPanel -> buttonPanel
    int cancel_action -> cancel_action
    int checkbox -> checkbox
    int chronometer -> chronometer
    int collapseActionView -> collapseActionView
    int contentPanel -> contentPanel
    int custom -> custom
    int customPanel -> customPanel
    int decor_content_parent -> decor_content_parent
    int default_activity_button -> default_activity_button
    int disableHome -> disableHome
    int edit_query -> edit_query
    int end -> end
    int end_padder -> end_padder
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int home -> home
    int homeAsUp -> homeAsUp
    int icon -> icon
    int ifRoom -> ifRoom
    int image -> image
    int info -> info
    int line1 -> line1
    int line3 -> line3
    int listMode -> listMode
    int list_item -> list_item
    int media_actions -> media_actions
    int middle -> middle
    int multiply -> multiply
    int never -> never
    int none -> none
    int normal -> normal
    int parentPanel -> parentPanel
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int screen -> screen
    int scrollView -> scrollView
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int select_dialog_listview -> select_dialog_listview
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int split_action_bar -> split_action_bar
    int src_atop -> src_atop
    int src_in -> src_in
    int src_over -> src_over
    int status_bar_latest_event_content -> status_bar_latest_event_content
    int submit_area -> submit_area
    int tabMode -> tabMode
    int text -> text
    int text2 -> text2
    int textSpacerNoButtons -> textSpacerNoButtons
    int time -> time
    int title -> title
    int title_template -> title_template
    int topPanel -> topPanel
    int up -> up
    int useLogo -> useLogo
    int withText -> withText
    int wrap_content -> wrap_content
android.support.v7.appcompat.R$integer -> android.support.v7.a.h:
    int abc_config_activityDefaultDur -> abc_config_activityDefaultDur
    int abc_config_activityShortDur -> abc_config_activityShortDur
    int abc_max_action_buttons -> abc_max_action_buttons
    int cancel_button_image_alpha -> cancel_button_image_alpha
    int status_bar_notification_info_maxnum -> status_bar_notification_info_maxnum
android.support.v7.appcompat.R$layout -> android.support.v7.a.i:
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_up_container -> abc_action_bar_up_container
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item_material -> abc_action_mode_close_item_material
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_alert_dialog_material -> abc_alert_dialog_material
    int abc_dialog_title_material -> abc_dialog_title_material
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen_content_include -> abc_screen_content_include
    int abc_screen_simple -> abc_screen_simple
    int abc_screen_simple_overlay_action_mode -> abc_screen_simple_overlay_action_mode
    int abc_screen_toolbar -> abc_screen_toolbar
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_select_dialog_material -> abc_select_dialog_material
    int notification_media_action -> notification_media_action
    int notification_media_cancel_action -> notification_media_cancel_action
    int notification_template_big_media -> notification_template_big_media
    int notification_template_big_media_narrow -> notification_template_big_media_narrow
    int notification_template_lines -> notification_template_lines
    int notification_template_media -> notification_template_media
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    int select_dialog_item_material -> select_dialog_item_material
    int select_dialog_multichoice_material -> select_dialog_multichoice_material
    int select_dialog_singlechoice_material -> select_dialog_singlechoice_material
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
android.support.v7.appcompat.R$string -> android.support.v7.a.j:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_home_description_format -> abc_action_bar_home_description_format
    int abc_action_bar_home_subtitle_description_format -> abc_action_bar_home_subtitle_description_format
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_search_hint -> abc_search_hint
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int abc_toolbar_collapse_description -> abc_toolbar_collapse_description
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
android.support.v7.appcompat.R$style -> android.support.v7.a.k:
    int AlertDialog_AppCompat -> AlertDialog_AppCompat
    int AlertDialog_AppCompat_Light -> AlertDialog_AppCompat_Light
    int Animation_AppCompat_Dialog -> Animation_AppCompat_Dialog
    int Animation_AppCompat_DropDownUp -> Animation_AppCompat_DropDownUp
    int Base_AlertDialog_AppCompat -> Base_AlertDialog_AppCompat
    int Base_AlertDialog_AppCompat_Light -> Base_AlertDialog_AppCompat_Light
    int Base_Animation_AppCompat_Dialog -> Base_Animation_AppCompat_Dialog
    int Base_Animation_AppCompat_DropDownUp -> Base_Animation_AppCompat_DropDownUp
    int Base_DialogWindowTitleBackground_AppCompat -> Base_DialogWindowTitleBackground_AppCompat
    int Base_DialogWindowTitle_AppCompat -> Base_DialogWindowTitle_AppCompat
    int Base_TextAppearance_AppCompat -> Base_TextAppearance_AppCompat
    int Base_TextAppearance_AppCompat_Body1 -> Base_TextAppearance_AppCompat_Body1
    int Base_TextAppearance_AppCompat_Body2 -> Base_TextAppearance_AppCompat_Body2
    int Base_TextAppearance_AppCompat_Button -> Base_TextAppearance_AppCompat_Button
    int Base_TextAppearance_AppCompat_Caption -> Base_TextAppearance_AppCompat_Caption
    int Base_TextAppearance_AppCompat_Display1 -> Base_TextAppearance_AppCompat_Display1
    int Base_TextAppearance_AppCompat_Display2 -> Base_TextAppearance_AppCompat_Display2
    int Base_TextAppearance_AppCompat_Display3 -> Base_TextAppearance_AppCompat_Display3
    int Base_TextAppearance_AppCompat_Display4 -> Base_TextAppearance_AppCompat_Display4
    int Base_TextAppearance_AppCompat_Headline -> Base_TextAppearance_AppCompat_Headline
    int Base_TextAppearance_AppCompat_Inverse -> Base_TextAppearance_AppCompat_Inverse
    int Base_TextAppearance_AppCompat_Large -> Base_TextAppearance_AppCompat_Large
    int Base_TextAppearance_AppCompat_Large_Inverse -> Base_TextAppearance_AppCompat_Large_Inverse
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Medium -> Base_TextAppearance_AppCompat_Medium
    int Base_TextAppearance_AppCompat_Medium_Inverse -> Base_TextAppearance_AppCompat_Medium_Inverse
    int Base_TextAppearance_AppCompat_Menu -> Base_TextAppearance_AppCompat_Menu
    int Base_TextAppearance_AppCompat_SearchResult -> Base_TextAppearance_AppCompat_SearchResult
    int Base_TextAppearance_AppCompat_SearchResult_Subtitle -> Base_TextAppearance_AppCompat_SearchResult_Subtitle
    int Base_TextAppearance_AppCompat_SearchResult_Title -> Base_TextAppearance_AppCompat_SearchResult_Title
    int Base_TextAppearance_AppCompat_Small -> Base_TextAppearance_AppCompat_Small
    int Base_TextAppearance_AppCompat_Small_Inverse -> Base_TextAppearance_AppCompat_Small_Inverse
    int Base_TextAppearance_AppCompat_Subhead -> Base_TextAppearance_AppCompat_Subhead
    int Base_TextAppearance_AppCompat_Subhead_Inverse -> Base_TextAppearance_AppCompat_Subhead_Inverse
    int Base_TextAppearance_AppCompat_Title -> Base_TextAppearance_AppCompat_Title
    int Base_TextAppearance_AppCompat_Title_Inverse -> Base_TextAppearance_AppCompat_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu -> Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Title -> Base_TextAppearance_AppCompat_Widget_ActionMode_Title
    int Base_TextAppearance_AppCompat_Widget_Button -> Base_TextAppearance_AppCompat_Widget_Button
    int Base_TextAppearance_AppCompat_Widget_Button_Inverse -> Base_TextAppearance_AppCompat_Widget_Button_Inverse
    int Base_TextAppearance_AppCompat_Widget_DropDownItem -> Base_TextAppearance_AppCompat_Widget_DropDownItem
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Widget_Switch -> Base_TextAppearance_AppCompat_Widget_Switch
    int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Title -> Base_TextAppearance_Widget_AppCompat_Toolbar_Title
    int Base_ThemeOverlay_AppCompat -> Base_ThemeOverlay_AppCompat
    int Base_ThemeOverlay_AppCompat_ActionBar -> Base_ThemeOverlay_AppCompat_ActionBar
    int Base_ThemeOverlay_AppCompat_Dark -> Base_ThemeOverlay_AppCompat_Dark
    int Base_ThemeOverlay_AppCompat_Dark_ActionBar -> Base_ThemeOverlay_AppCompat_Dark_ActionBar
    int Base_ThemeOverlay_AppCompat_Light -> Base_ThemeOverlay_AppCompat_Light
    int Base_Theme_AppCompat -> Base_Theme_AppCompat
    int Base_Theme_AppCompat_CompactMenu -> Base_Theme_AppCompat_CompactMenu
    int Base_Theme_AppCompat_Dialog -> Base_Theme_AppCompat_Dialog
    int Base_Theme_AppCompat_DialogWhenLarge -> Base_Theme_AppCompat_DialogWhenLarge
    int Base_Theme_AppCompat_Dialog_Alert -> Base_Theme_AppCompat_Dialog_Alert
    int Base_Theme_AppCompat_Dialog_FixedSize -> Base_Theme_AppCompat_Dialog_FixedSize
    int Base_Theme_AppCompat_Dialog_MinWidth -> Base_Theme_AppCompat_Dialog_MinWidth
    int Base_Theme_AppCompat_Light -> Base_Theme_AppCompat_Light
    int Base_Theme_AppCompat_Light_DarkActionBar -> Base_Theme_AppCompat_Light_DarkActionBar
    int Base_Theme_AppCompat_Light_Dialog -> Base_Theme_AppCompat_Light_Dialog
    int Base_Theme_AppCompat_Light_DialogWhenLarge -> Base_Theme_AppCompat_Light_DialogWhenLarge
    int Base_Theme_AppCompat_Light_Dialog_Alert -> Base_Theme_AppCompat_Light_Dialog_Alert
    int Base_Theme_AppCompat_Light_Dialog_FixedSize -> Base_Theme_AppCompat_Light_Dialog_FixedSize
    int Base_Theme_AppCompat_Light_Dialog_MinWidth -> Base_Theme_AppCompat_Light_Dialog_MinWidth
    int Base_V11_Theme_AppCompat_Dialog -> Base_V11_Theme_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Light_Dialog -> Base_V11_Theme_AppCompat_Light_Dialog
    int Base_V12_Widget_AppCompat_AutoCompleteTextView -> Base_V12_Widget_AppCompat_AutoCompleteTextView
    int Base_V12_Widget_AppCompat_EditText -> Base_V12_Widget_AppCompat_EditText
    int Base_V21_Theme_AppCompat -> Base_V21_Theme_AppCompat
    int Base_V21_Theme_AppCompat_Dialog -> Base_V21_Theme_AppCompat_Dialog
    int Base_V21_Theme_AppCompat_Light -> Base_V21_Theme_AppCompat_Light
    int Base_V21_Theme_AppCompat_Light_Dialog -> Base_V21_Theme_AppCompat_Light_Dialog
    int Base_V22_Theme_AppCompat -> Base_V22_Theme_AppCompat
    int Base_V22_Theme_AppCompat_Light -> Base_V22_Theme_AppCompat_Light
    int Base_V23_Theme_AppCompat -> Base_V23_Theme_AppCompat
    int Base_V23_Theme_AppCompat_Light -> Base_V23_Theme_AppCompat_Light
    int Base_V7_Theme_AppCompat -> Base_V7_Theme_AppCompat
    int Base_V7_Theme_AppCompat_Dialog -> Base_V7_Theme_AppCompat_Dialog
    int Base_V7_Theme_AppCompat_Light -> Base_V7_Theme_AppCompat_Light
    int Base_V7_Theme_AppCompat_Light_Dialog -> Base_V7_Theme_AppCompat_Light_Dialog
    int Base_V7_Widget_AppCompat_AutoCompleteTextView -> Base_V7_Widget_AppCompat_AutoCompleteTextView
    int Base_V7_Widget_AppCompat_EditText -> Base_V7_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_ActionBar -> Base_Widget_AppCompat_ActionBar
    int Base_Widget_AppCompat_ActionBar_Solid -> Base_Widget_AppCompat_ActionBar_Solid
    int Base_Widget_AppCompat_ActionBar_TabBar -> Base_Widget_AppCompat_ActionBar_TabBar
    int Base_Widget_AppCompat_ActionBar_TabText -> Base_Widget_AppCompat_ActionBar_TabText
    int Base_Widget_AppCompat_ActionBar_TabView -> Base_Widget_AppCompat_ActionBar_TabView
    int Base_Widget_AppCompat_ActionButton -> Base_Widget_AppCompat_ActionButton
    int Base_Widget_AppCompat_ActionButton_CloseMode -> Base_Widget_AppCompat_ActionButton_CloseMode
    int Base_Widget_AppCompat_ActionButton_Overflow -> Base_Widget_AppCompat_ActionButton_Overflow
    int Base_Widget_AppCompat_ActionMode -> Base_Widget_AppCompat_ActionMode
    int Base_Widget_AppCompat_ActivityChooserView -> Base_Widget_AppCompat_ActivityChooserView
    int Base_Widget_AppCompat_AutoCompleteTextView -> Base_Widget_AppCompat_AutoCompleteTextView
    int Base_Widget_AppCompat_Button -> Base_Widget_AppCompat_Button
    int Base_Widget_AppCompat_ButtonBar -> Base_Widget_AppCompat_ButtonBar
    int Base_Widget_AppCompat_ButtonBar_AlertDialog -> Base_Widget_AppCompat_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Borderless -> Base_Widget_AppCompat_Button_Borderless
    int Base_Widget_AppCompat_Button_Borderless_Colored -> Base_Widget_AppCompat_Button_Borderless_Colored
    int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog -> Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Base_Widget_AppCompat_Button_Colored -> Base_Widget_AppCompat_Button_Colored
    int Base_Widget_AppCompat_Button_Small -> Base_Widget_AppCompat_Button_Small
    int Base_Widget_AppCompat_CompoundButton_CheckBox -> Base_Widget_AppCompat_CompoundButton_CheckBox
    int Base_Widget_AppCompat_CompoundButton_RadioButton -> Base_Widget_AppCompat_CompoundButton_RadioButton
    int Base_Widget_AppCompat_CompoundButton_Switch -> Base_Widget_AppCompat_CompoundButton_Switch
    int Base_Widget_AppCompat_DrawerArrowToggle -> Base_Widget_AppCompat_DrawerArrowToggle
    int Base_Widget_AppCompat_DrawerArrowToggle_Common -> Base_Widget_AppCompat_DrawerArrowToggle_Common
    int Base_Widget_AppCompat_DropDownItem_Spinner -> Base_Widget_AppCompat_DropDownItem_Spinner
    int Base_Widget_AppCompat_EditText -> Base_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_Light_ActionBar -> Base_Widget_AppCompat_Light_ActionBar
    int Base_Widget_AppCompat_Light_ActionBar_Solid -> Base_Widget_AppCompat_Light_ActionBar_Solid
    int Base_Widget_AppCompat_Light_ActionBar_TabBar -> Base_Widget_AppCompat_Light_ActionBar_TabBar
    int Base_Widget_AppCompat_Light_ActionBar_TabText -> Base_Widget_AppCompat_Light_ActionBar_TabText
    int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Base_Widget_AppCompat_Light_ActionBar_TabView -> Base_Widget_AppCompat_Light_ActionBar_TabView
    int Base_Widget_AppCompat_Light_PopupMenu -> Base_Widget_AppCompat_Light_PopupMenu
    int Base_Widget_AppCompat_Light_PopupMenu_Overflow -> Base_Widget_AppCompat_Light_PopupMenu_Overflow
    int Base_Widget_AppCompat_ListPopupWindow -> Base_Widget_AppCompat_ListPopupWindow
    int Base_Widget_AppCompat_ListView -> Base_Widget_AppCompat_ListView
    int Base_Widget_AppCompat_ListView_DropDown -> Base_Widget_AppCompat_ListView_DropDown
    int Base_Widget_AppCompat_ListView_Menu -> Base_Widget_AppCompat_ListView_Menu
    int Base_Widget_AppCompat_PopupMenu -> Base_Widget_AppCompat_PopupMenu
    int Base_Widget_AppCompat_PopupMenu_Overflow -> Base_Widget_AppCompat_PopupMenu_Overflow
    int Base_Widget_AppCompat_PopupWindow -> Base_Widget_AppCompat_PopupWindow
    int Base_Widget_AppCompat_ProgressBar -> Base_Widget_AppCompat_ProgressBar
    int Base_Widget_AppCompat_ProgressBar_Horizontal -> Base_Widget_AppCompat_ProgressBar_Horizontal
    int Base_Widget_AppCompat_RatingBar -> Base_Widget_AppCompat_RatingBar
    int Base_Widget_AppCompat_SearchView -> Base_Widget_AppCompat_SearchView
    int Base_Widget_AppCompat_SearchView_ActionBar -> Base_Widget_AppCompat_SearchView_ActionBar
    int Base_Widget_AppCompat_Spinner -> Base_Widget_AppCompat_Spinner
    int Base_Widget_AppCompat_Spinner_Underlined -> Base_Widget_AppCompat_Spinner_Underlined
    int Base_Widget_AppCompat_TextView_SpinnerItem -> Base_Widget_AppCompat_TextView_SpinnerItem
    int Base_Widget_AppCompat_Toolbar -> Base_Widget_AppCompat_Toolbar
    int Base_Widget_AppCompat_Toolbar_Button_Navigation -> Base_Widget_AppCompat_Toolbar_Button_Navigation
    int Platform_AppCompat -> Platform_AppCompat
    int Platform_AppCompat_Light -> Platform_AppCompat_Light
    int Platform_ThemeOverlay_AppCompat -> Platform_ThemeOverlay_AppCompat
    int Platform_ThemeOverlay_AppCompat_Dark -> Platform_ThemeOverlay_AppCompat_Dark
    int Platform_ThemeOverlay_AppCompat_Light -> Platform_ThemeOverlay_AppCompat_Light
    int Platform_V11_AppCompat -> Platform_V11_AppCompat
    int Platform_V11_AppCompat_Light -> Platform_V11_AppCompat_Light
    int Platform_V14_AppCompat -> Platform_V14_AppCompat
    int Platform_V14_AppCompat_Light -> Platform_V14_AppCompat_Light
    int Platform_Widget_AppCompat_Spinner -> Platform_Widget_AppCompat_Spinner
    int RtlOverlay_DialogWindowTitle_AppCompat -> RtlOverlay_DialogWindowTitle_AppCompat
    int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem -> RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
    int RtlOverlay_Widget_AppCompat_ActionButton_Overflow -> RtlOverlay_Widget_AppCompat_ActionButton_Overflow
    int RtlOverlay_Widget_AppCompat_DialogTitle_Icon -> RtlOverlay_Widget_AppCompat_DialogTitle_Icon
    int RtlOverlay_Widget_AppCompat_PopupMenuItem -> RtlOverlay_Widget_AppCompat_PopupMenuItem
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup -> RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text -> RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
    int RtlOverlay_Widget_AppCompat_SearchView_MagIcon -> RtlOverlay_Widget_AppCompat_SearchView_MagIcon
    int RtlOverlay_Widget_AppCompat_Search_DropDown -> RtlOverlay_Widget_AppCompat_Search_DropDown
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Query -> RtlOverlay_Widget_AppCompat_Search_DropDown_Query
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Text -> RtlOverlay_Widget_AppCompat_Search_DropDown_Text
    int TextAppearance_AppCompat -> TextAppearance_AppCompat
    int TextAppearance_AppCompat_Body1 -> TextAppearance_AppCompat_Body1
    int TextAppearance_AppCompat_Body2 -> TextAppearance_AppCompat_Body2
    int TextAppearance_AppCompat_Button -> TextAppearance_AppCompat_Button
    int TextAppearance_AppCompat_Caption -> TextAppearance_AppCompat_Caption
    int TextAppearance_AppCompat_Display1 -> TextAppearance_AppCompat_Display1
    int TextAppearance_AppCompat_Display2 -> TextAppearance_AppCompat_Display2
    int TextAppearance_AppCompat_Display3 -> TextAppearance_AppCompat_Display3
    int TextAppearance_AppCompat_Display4 -> TextAppearance_AppCompat_Display4
    int TextAppearance_AppCompat_Headline -> TextAppearance_AppCompat_Headline
    int TextAppearance_AppCompat_Inverse -> TextAppearance_AppCompat_Inverse
    int TextAppearance_AppCompat_Large -> TextAppearance_AppCompat_Large
    int TextAppearance_AppCompat_Large_Inverse -> TextAppearance_AppCompat_Large_Inverse
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Medium -> TextAppearance_AppCompat_Medium
    int TextAppearance_AppCompat_Medium_Inverse -> TextAppearance_AppCompat_Medium_Inverse
    int TextAppearance_AppCompat_Menu -> TextAppearance_AppCompat_Menu
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Small -> TextAppearance_AppCompat_Small
    int TextAppearance_AppCompat_Small_Inverse -> TextAppearance_AppCompat_Small_Inverse
    int TextAppearance_AppCompat_Subhead -> TextAppearance_AppCompat_Subhead
    int TextAppearance_AppCompat_Subhead_Inverse -> TextAppearance_AppCompat_Subhead_Inverse
    int TextAppearance_AppCompat_Title -> TextAppearance_AppCompat_Title
    int TextAppearance_AppCompat_Title_Inverse -> TextAppearance_AppCompat_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_Button -> TextAppearance_AppCompat_Widget_Button
    int TextAppearance_AppCompat_Widget_Button_Inverse -> TextAppearance_AppCompat_Widget_Button_Inverse
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Widget_Switch -> TextAppearance_AppCompat_Widget_Switch
    int TextAppearance_AppCompat_Widget_TextView_SpinnerItem -> TextAppearance_AppCompat_Widget_TextView_SpinnerItem
    int TextAppearance_StatusBar_EventContent -> TextAppearance_StatusBar_EventContent
    int TextAppearance_StatusBar_EventContent_Info -> TextAppearance_StatusBar_EventContent_Info
    int TextAppearance_StatusBar_EventContent_Line2 -> TextAppearance_StatusBar_EventContent_Line2
    int TextAppearance_StatusBar_EventContent_Time -> TextAppearance_StatusBar_EventContent_Time
    int TextAppearance_StatusBar_EventContent_Title -> TextAppearance_StatusBar_EventContent_Title
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int TextAppearance_Widget_AppCompat_Toolbar_Title -> TextAppearance_Widget_AppCompat_Toolbar_Title
    int ThemeOverlay_AppCompat -> ThemeOverlay_AppCompat
    int ThemeOverlay_AppCompat_ActionBar -> ThemeOverlay_AppCompat_ActionBar
    int ThemeOverlay_AppCompat_Dark -> ThemeOverlay_AppCompat_Dark
    int ThemeOverlay_AppCompat_Dark_ActionBar -> ThemeOverlay_AppCompat_Dark_ActionBar
    int ThemeOverlay_AppCompat_Light -> ThemeOverlay_AppCompat_Light
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_Dialog -> Theme_AppCompat_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Dialog_Alert -> Theme_AppCompat_Dialog_Alert
    int Theme_AppCompat_Dialog_MinWidth -> Theme_AppCompat_Dialog_MinWidth
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_Dialog -> Theme_AppCompat_Light_Dialog
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_AppCompat_Light_Dialog_Alert -> Theme_AppCompat_Light_Dialog_Alert
    int Theme_AppCompat_Light_Dialog_MinWidth -> Theme_AppCompat_Light_Dialog_MinWidth
    int Theme_AppCompat_Light_NoActionBar -> Theme_AppCompat_Light_NoActionBar
    int Theme_AppCompat_NoActionBar -> Theme_AppCompat_NoActionBar
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_Button -> Widget_AppCompat_Button
    int Widget_AppCompat_ButtonBar -> Widget_AppCompat_ButtonBar
    int Widget_AppCompat_ButtonBar_AlertDialog -> Widget_AppCompat_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Borderless -> Widget_AppCompat_Button_Borderless
    int Widget_AppCompat_Button_Borderless_Colored -> Widget_AppCompat_Button_Borderless_Colored
    int Widget_AppCompat_Button_ButtonBar_AlertDialog -> Widget_AppCompat_Button_ButtonBar_AlertDialog
    int Widget_AppCompat_Button_Colored -> Widget_AppCompat_Button_Colored
    int Widget_AppCompat_Button_Small -> Widget_AppCompat_Button_Small
    int Widget_AppCompat_CompoundButton_CheckBox -> Widget_AppCompat_CompoundButton_CheckBox
    int Widget_AppCompat_CompoundButton_RadioButton -> Widget_AppCompat_CompoundButton_RadioButton
    int Widget_AppCompat_CompoundButton_Switch -> Widget_AppCompat_CompoundButton_Switch
    int Widget_AppCompat_DrawerArrowToggle -> Widget_AppCompat_DrawerArrowToggle
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_EditText -> Widget_AppCompat_EditText
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_PopupMenu_Overflow -> Widget_AppCompat_Light_PopupMenu_Overflow
    int Widget_AppCompat_Light_SearchView -> Widget_AppCompat_Light_SearchView
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView -> Widget_AppCompat_ListView
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_PopupMenu_Overflow -> Widget_AppCompat_PopupMenu_Overflow
    int Widget_AppCompat_PopupWindow -> Widget_AppCompat_PopupWindow
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_RatingBar -> Widget_AppCompat_RatingBar
    int Widget_AppCompat_SearchView -> Widget_AppCompat_SearchView
    int Widget_AppCompat_SearchView_ActionBar -> Widget_AppCompat_SearchView_ActionBar
    int Widget_AppCompat_Spinner -> Widget_AppCompat_Spinner
    int Widget_AppCompat_Spinner_DropDown -> Widget_AppCompat_Spinner_DropDown
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
    int Widget_AppCompat_Spinner_Underlined -> Widget_AppCompat_Spinner_Underlined
    int Widget_AppCompat_TextView_SpinnerItem -> Widget_AppCompat_TextView_SpinnerItem
    int Widget_AppCompat_Toolbar -> Widget_AppCompat_Toolbar
    int Widget_AppCompat_Toolbar_Button_Navigation -> Widget_AppCompat_Toolbar_Button_Navigation
android.support.v7.appcompat.R$styleable -> android.support.v7.a.l:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_layout -> AlertDialog_android_layout
    int AlertDialog_buttonPanelSideLayout -> AlertDialog_buttonPanelSideLayout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int[] AppCompatTextView -> AppCompatTextView
    int AppCompatTextView_android_textAppearance -> AppCompatTextView_android_textAppearance
    int AppCompatTextView_textAllCaps -> AppCompatTextView_textAllCaps
    int[] CompoundButton -> CompoundButton
    int CompoundButton_android_button -> CompoundButton_android_button
    int CompoundButton_buttonTint -> CompoundButton_buttonTint
    int CompoundButton_buttonTintMode -> CompoundButton_buttonTintMode
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_arrowHeadLength -> DrawerArrowToggle_arrowHeadLength
    int DrawerArrowToggle_arrowShaftLength -> DrawerArrowToggle_arrowShaftLength
    int DrawerArrowToggle_barLength -> DrawerArrowToggle_barLength
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_defaultQueryHint -> SearchView_defaultQueryHint
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchHintIcon -> SearchView_searchHintIcon
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] Spinner -> Spinner
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_popupTheme -> Spinner_popupTheme
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_track -> SwitchCompat_track
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int TextAppearance_textAllCaps -> TextAppearance_textAllCaps
    int[] Theme -> Theme
    int Theme_actionBarDivider -> Theme_actionBarDivider
    int Theme_actionBarItemBackground -> Theme_actionBarItemBackground
    int Theme_actionBarPopupTheme -> Theme_actionBarPopupTheme
    int Theme_actionBarSize -> Theme_actionBarSize
    int Theme_actionBarSplitStyle -> Theme_actionBarSplitStyle
    int Theme_actionBarStyle -> Theme_actionBarStyle
    int Theme_actionBarTabBarStyle -> Theme_actionBarTabBarStyle
    int Theme_actionBarTabStyle -> Theme_actionBarTabStyle
    int Theme_actionBarTabTextStyle -> Theme_actionBarTabTextStyle
    int Theme_actionBarTheme -> Theme_actionBarTheme
    int Theme_actionBarWidgetTheme -> Theme_actionBarWidgetTheme
    int Theme_actionButtonStyle -> Theme_actionButtonStyle
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_actionMenuTextAppearance -> Theme_actionMenuTextAppearance
    int Theme_actionMenuTextColor -> Theme_actionMenuTextColor
    int Theme_actionModeBackground -> Theme_actionModeBackground
    int Theme_actionModeCloseButtonStyle -> Theme_actionModeCloseButtonStyle
    int Theme_actionModeCloseDrawable -> Theme_actionModeCloseDrawable
    int Theme_actionModeCopyDrawable -> Theme_actionModeCopyDrawable
    int Theme_actionModeCutDrawable -> Theme_actionModeCutDrawable
    int Theme_actionModeFindDrawable -> Theme_actionModeFindDrawable
    int Theme_actionModePasteDrawable -> Theme_actionModePasteDrawable
    int Theme_actionModePopupWindowStyle -> Theme_actionModePopupWindowStyle
    int Theme_actionModeSelectAllDrawable -> Theme_actionModeSelectAllDrawable
    int Theme_actionModeShareDrawable -> Theme_actionModeShareDrawable
    int Theme_actionModeSplitBackground -> Theme_actionModeSplitBackground
    int Theme_actionModeStyle -> Theme_actionModeStyle
    int Theme_actionModeWebSearchDrawable -> Theme_actionModeWebSearchDrawable
    int Theme_actionOverflowButtonStyle -> Theme_actionOverflowButtonStyle
    int Theme_actionOverflowMenuStyle -> Theme_actionOverflowMenuStyle
    int Theme_activityChooserViewStyle -> Theme_activityChooserViewStyle
    int Theme_alertDialogButtonGroupStyle -> Theme_alertDialogButtonGroupStyle
    int Theme_alertDialogCenterButtons -> Theme_alertDialogCenterButtons
    int Theme_alertDialogStyle -> Theme_alertDialogStyle
    int Theme_alertDialogTheme -> Theme_alertDialogTheme
    int Theme_android_windowAnimationStyle -> Theme_android_windowAnimationStyle
    int Theme_android_windowIsFloating -> Theme_android_windowIsFloating
    int Theme_autoCompleteTextViewStyle -> Theme_autoCompleteTextViewStyle
    int Theme_borderlessButtonStyle -> Theme_borderlessButtonStyle
    int Theme_buttonBarButtonStyle -> Theme_buttonBarButtonStyle
    int Theme_buttonBarNegativeButtonStyle -> Theme_buttonBarNegativeButtonStyle
    int Theme_buttonBarNeutralButtonStyle -> Theme_buttonBarNeutralButtonStyle
    int Theme_buttonBarPositiveButtonStyle -> Theme_buttonBarPositiveButtonStyle
    int Theme_buttonBarStyle -> Theme_buttonBarStyle
    int Theme_buttonStyle -> Theme_buttonStyle
    int Theme_buttonStyleSmall -> Theme_buttonStyleSmall
    int Theme_checkboxStyle -> Theme_checkboxStyle
    int Theme_checkedTextViewStyle -> Theme_checkedTextViewStyle
    int Theme_colorAccent -> Theme_colorAccent
    int Theme_colorButtonNormal -> Theme_colorButtonNormal
    int Theme_colorControlActivated -> Theme_colorControlActivated
    int Theme_colorControlHighlight -> Theme_colorControlHighlight
    int Theme_colorControlNormal -> Theme_colorControlNormal
    int Theme_colorPrimary -> Theme_colorPrimary
    int Theme_colorPrimaryDark -> Theme_colorPrimaryDark
    int Theme_colorSwitchThumbNormal -> Theme_colorSwitchThumbNormal
    int Theme_controlBackground -> Theme_controlBackground
    int Theme_dialogPreferredPadding -> Theme_dialogPreferredPadding
    int Theme_dialogTheme -> Theme_dialogTheme
    int Theme_dividerHorizontal -> Theme_dividerHorizontal
    int Theme_dividerVertical -> Theme_dividerVertical
    int Theme_dropDownListViewStyle -> Theme_dropDownListViewStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_editTextBackground -> Theme_editTextBackground
    int Theme_editTextColor -> Theme_editTextColor
    int Theme_editTextStyle -> Theme_editTextStyle
    int Theme_homeAsUpIndicator -> Theme_homeAsUpIndicator
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_listDividerAlertDialog -> Theme_listDividerAlertDialog
    int Theme_listPopupWindowStyle -> Theme_listPopupWindowStyle
    int Theme_listPreferredItemHeight -> Theme_listPreferredItemHeight
    int Theme_listPreferredItemHeightLarge -> Theme_listPreferredItemHeightLarge
    int Theme_listPreferredItemHeightSmall -> Theme_listPreferredItemHeightSmall
    int Theme_listPreferredItemPaddingLeft -> Theme_listPreferredItemPaddingLeft
    int Theme_listPreferredItemPaddingRight -> Theme_listPreferredItemPaddingRight
    int Theme_panelBackground -> Theme_panelBackground
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int Theme_popupWindowStyle -> Theme_popupWindowStyle
    int Theme_radioButtonStyle -> Theme_radioButtonStyle
    int Theme_ratingBarStyle -> Theme_ratingBarStyle
    int Theme_searchViewStyle -> Theme_searchViewStyle
    int Theme_selectableItemBackground -> Theme_selectableItemBackground
    int Theme_selectableItemBackgroundBorderless -> Theme_selectableItemBackgroundBorderless
    int Theme_spinnerDropDownItemStyle -> Theme_spinnerDropDownItemStyle
    int Theme_spinnerStyle -> Theme_spinnerStyle
    int Theme_switchStyle -> Theme_switchStyle
    int Theme_textAppearanceLargePopupMenu -> Theme_textAppearanceLargePopupMenu
    int Theme_textAppearanceListItem -> Theme_textAppearanceListItem
    int Theme_textAppearanceListItemSmall -> Theme_textAppearanceListItemSmall
    int Theme_textAppearanceSearchResultSubtitle -> Theme_textAppearanceSearchResultSubtitle
    int Theme_textAppearanceSearchResultTitle -> Theme_textAppearanceSearchResultTitle
    int Theme_textAppearanceSmallPopupMenu -> Theme_textAppearanceSmallPopupMenu
    int Theme_textColorAlertDialogListItem -> Theme_textColorAlertDialogListItem
    int Theme_textColorSearchUrl -> Theme_textColorSearchUrl
    int Theme_toolbarNavigationButtonStyle -> Theme_toolbarNavigationButtonStyle
    int Theme_toolbarStyle -> Theme_toolbarStyle
    int Theme_windowActionBar -> Theme_windowActionBar
    int Theme_windowActionBarOverlay -> Theme_windowActionBarOverlay
    int Theme_windowActionModeOverlay -> Theme_windowActionModeOverlay
    int Theme_windowFixedHeightMajor -> Theme_windowFixedHeightMajor
    int Theme_windowFixedHeightMinor -> Theme_windowFixedHeightMinor
    int Theme_windowFixedWidthMajor -> Theme_windowFixedWidthMajor
    int Theme_windowFixedWidthMinor -> Theme_windowFixedWidthMinor
    int Theme_windowMinWidthMajor -> Theme_windowMinWidthMajor
    int Theme_windowMinWidthMinor -> Theme_windowMinWidthMinor
    int Theme_windowNoTitle -> Theme_windowNoTitle
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_logo -> Toolbar_logo
    int Toolbar_logoDescription -> Toolbar_logoDescription
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_subtitleTextColor -> Toolbar_subtitleTextColor
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int Toolbar_titleTextColor -> Toolbar_titleTextColor
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int ViewBackgroundHelper_android_background -> ViewBackgroundHelper_android_background
    int ViewBackgroundHelper_backgroundTint -> ViewBackgroundHelper_backgroundTint
    int ViewBackgroundHelper_backgroundTintMode -> ViewBackgroundHelper_backgroundTintMode
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
    int View_android_focusable -> View_android_focusable
    int View_android_theme -> View_android_theme
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int View_theme -> View_theme
android.support.v7.cardview.R -> android.support.v7.b.a:
android.support.v7.cardview.R$color -> android.support.v7.b.b:
    int cardview_dark_background -> cardview_dark_background
    int cardview_light_background -> cardview_light_background
    int cardview_shadow_end_color -> cardview_shadow_end_color
    int cardview_shadow_start_color -> cardview_shadow_start_color
android.support.v7.cardview.R$dimen -> android.support.v7.b.c:
    int cardview_compat_inset_shadow -> cardview_compat_inset_shadow
    int cardview_default_elevation -> cardview_default_elevation
    int cardview_default_radius -> cardview_default_radius
android.support.v7.cardview.R$style -> android.support.v7.b.d:
    int CardView -> CardView
    int CardView_Dark -> CardView_Dark
    int CardView_Light -> CardView_Light
android.support.v7.cardview.R$styleable -> android.support.v7.b.e:
    int[] CardView -> CardView
    int CardView_cardBackgroundColor -> CardView_cardBackgroundColor
    int CardView_cardCornerRadius -> CardView_cardCornerRadius
    int CardView_cardElevation -> CardView_cardElevation
    int CardView_cardMaxElevation -> CardView_cardMaxElevation
    int CardView_cardPreventCornerOverlap -> CardView_cardPreventCornerOverlap
    int CardView_cardUseCompatPadding -> CardView_cardUseCompatPadding
    int CardView_contentPadding -> CardView_contentPadding
    int CardView_contentPaddingBottom -> CardView_contentPaddingBottom
    int CardView_contentPaddingLeft -> CardView_contentPaddingLeft
    int CardView_contentPaddingRight -> CardView_contentPaddingRight
    int CardView_contentPaddingTop -> CardView_contentPaddingTop
android.support.v7.graphics.drawable.DrawableUtils -> android.support.v7.c.a.a:
    android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> a
android.support.v7.graphics.drawable.DrawableWrapper -> android.support.v7.c.a.b:
    android.graphics.drawable.Drawable mDrawable -> a
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    void jumpToCurrentState() -> jumpToCurrentState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    boolean onLevelChange(int) -> onLevelChange
    void setAutoMirrored(boolean) -> setAutoMirrored
    boolean isAutoMirrored() -> isAutoMirrored
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    android.graphics.drawable.Drawable getWrappedDrawable() -> b
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> a
android.support.v7.graphics.drawable.DrawerArrowDrawable -> android.support.v7.c.a.c:
    android.graphics.Paint mPaint -> a
    float ARROW_HEAD_ANGLE -> b
    float mArrowHeadLength -> c
    float mBarLength -> d
    float mArrowShaftLength -> e
    float mBarGap -> f
    boolean mSpin -> g
    android.graphics.Path mPath -> h
    int mSize -> i
    boolean mVerticalMirror -> j
    float mProgress -> k
    float mMaxCutForBarSize -> l
    int mDirection -> m
    void setColor(int) -> a
    void setBarThickness(float) -> b
    void setGapSize(float) -> c
    void setSpinEnabled(boolean) -> a
    void setVerticalMirror(boolean) -> b
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getOpacity() -> getOpacity
    void setProgress(float) -> d
    float lerp(float,float,float) -> a
android.support.v7.internal.VersionUtils -> android.support.v7.internal.a:
    boolean isAtLeastL() -> a
android.support.v7.internal.app.AppCompatViewInflater -> android.support.v7.internal.a.a:
    java.lang.Class[] sConstructorSignature -> a
    java.util.Map sConstructorMap -> b
    java.lang.Object[] mConstructorArgs -> c
    android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean) -> a
    android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> a
    android.view.View createView(android.content.Context,java.lang.String,java.lang.String) -> a
    android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> a
android.support.v7.internal.app.ToolbarActionBar -> android.support.v7.internal.a.b:
    android.support.v7.internal.widget.DecorToolbar mDecorToolbar -> a
    boolean mToolbarMenuPrepared -> b
    android.view.Window$Callback mWindowCallback -> c
    boolean mMenuCallbackSet -> d
    boolean mLastMenuVisibility -> e
    java.util.ArrayList mMenuVisibilityListeners -> f
    android.support.v7.internal.view.menu.ListMenuPresenter mListMenuPresenter -> g
    java.lang.Runnable mMenuInvalidator -> h
    android.support.v7.widget.Toolbar$OnMenuItemClickListener mMenuClicker -> i
    android.view.Window$Callback getWrappedWindowCallback() -> e
    void setHomeButtonEnabled(boolean) -> b
    void setElevation(float) -> a
    android.content.Context getThemedContext() -> b
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> a
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> d
    void setHomeActionContentDescription(int) -> a
    void setShowHideAnimationEnabled(boolean) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setWindowTitle(java.lang.CharSequence) -> a
    void setDisplayOptions(int,int) -> a
    void setDisplayHomeAsUpEnabled(boolean) -> a
    int getDisplayOptions() -> a
    boolean invalidateOptionsMenu() -> c
    boolean collapseActionView() -> d
    void populateOptionsMenu() -> f
    boolean onKeyShortcut(int,android.view.KeyEvent) -> a
    void dispatchMenuVisibilityChanged(boolean) -> f
    android.view.View getListMenuView(android.view.Menu) -> a
    void ensureListMenuPresenter(android.view.Menu) -> b
    android.view.Menu getMenu() -> g
    android.view.Window$Callback access$000(android.support.v7.internal.app.ToolbarActionBar) -> a
    boolean access$200(android.support.v7.internal.app.ToolbarActionBar) -> b
    android.support.v7.internal.widget.DecorToolbar access$300(android.support.v7.internal.app.ToolbarActionBar) -> c
    boolean access$202(android.support.v7.internal.app.ToolbarActionBar,boolean) -> a
    android.view.View access$400(android.support.v7.internal.app.ToolbarActionBar,android.view.Menu) -> a
android.support.v7.internal.app.ToolbarActionBar$1 -> android.support.v7.internal.a.c:
    android.support.v7.internal.app.ToolbarActionBar this$0 -> a
    void run() -> run
android.support.v7.internal.app.ToolbarActionBar$2 -> android.support.v7.internal.a.d:
    android.support.v7.internal.app.ToolbarActionBar this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> a
android.support.v7.internal.app.ToolbarActionBar$ActionMenuPresenterCallback -> android.support.v7.internal.a.e:
    boolean mClosingActionMenu -> b
    android.support.v7.internal.app.ToolbarActionBar this$0 -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
android.support.v7.internal.app.ToolbarActionBar$MenuBuilderCallback -> android.support.v7.internal.a.f:
    android.support.v7.internal.app.ToolbarActionBar this$0 -> a
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.app.ToolbarActionBar$PanelMenuPresenterCallback -> android.support.v7.internal.a.g:
    android.support.v7.internal.app.ToolbarActionBar this$0 -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.app.ToolbarActionBar$ToolbarCallbackWrapper -> android.support.v7.internal.a.h:
    android.support.v7.internal.app.ToolbarActionBar this$0 -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    android.view.View onCreatePanelView(int) -> onCreatePanelView
android.support.v7.internal.app.WindowDecorActionBar -> android.support.v7.internal.a.i:
    android.view.animation.Interpolator sHideInterpolator -> i
    android.view.animation.Interpolator sShowInterpolator -> j
    boolean ALLOW_SHOW_HIDE_ANIMATIONS -> k
    android.content.Context mContext -> l
    android.content.Context mThemedContext -> m
    android.app.Activity mActivity -> n
    android.app.Dialog mDialog -> o
    android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout -> p
    android.support.v7.internal.widget.ActionBarContainer mContainerView -> q
    android.support.v7.internal.widget.DecorToolbar mDecorToolbar -> r
    android.support.v7.internal.widget.ActionBarContextView mContextView -> s
    android.view.View mContentView -> t
    android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView -> u
    java.util.ArrayList mTabs -> v
    int mSavedTabPosition -> w
    boolean mDisplayHomeAsUpSet -> x
    android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl mActionMode -> a
    android.support.v7.view.ActionMode mDeferredDestroyActionMode -> b
    android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback -> c
    boolean mLastMenuVisibility -> y
    java.util.ArrayList mMenuVisibilityListeners -> z
    boolean mHasEmbeddedTabs -> A
    int mCurWindowVisibility -> B
    boolean mContentAnimations -> C
    boolean mHiddenByApp -> D
    boolean mHiddenBySystem -> E
    boolean mShowingForMode -> F
    boolean mNowShowing -> G
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim -> H
    boolean mShowHideAnimationEnabled -> I
    boolean mHideOnContentScroll -> d
    android.support.v4.view.ViewPropertyAnimatorListener mHideListener -> e
    android.support.v4.view.ViewPropertyAnimatorListener mShowListener -> f
    android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener -> g
    boolean $assertionsDisabled -> h
    void init(android.view.View) -> a
    android.support.v7.internal.widget.DecorToolbar getDecorToolbar(android.view.View) -> b
    void setElevation(float) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setHasEmbeddedTabs(boolean) -> k
    void completeDeferredDestroyActionMode() -> e
    void onWindowVisibilityChanged(int) -> b
    void setShowHideAnimationEnabled(boolean) -> e
    void dispatchMenuVisibilityChanged(boolean) -> f
    void setDisplayHomeAsUpEnabled(boolean) -> a
    void setHomeButtonEnabled(boolean) -> b
    void setWindowTitle(java.lang.CharSequence) -> a
    void setDisplayOptions(int,int) -> a
    int getNavigationMode() -> f
    int getDisplayOptions() -> a
    android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> a
    void enableContentAnimations(boolean) -> g
    void showForActionMode() -> k
    void showForSystem() -> g
    void hideForActionMode() -> l
    void hideForSystem() -> h
    void setHideOnContentScrollEnabled(boolean) -> c
    boolean checkShowingFlags(boolean,boolean,boolean) -> b
    void updateVisibility(boolean) -> l
    void doShow(boolean) -> h
    void doHide(boolean) -> i
    void animateToMode(boolean) -> j
    android.content.Context getThemedContext() -> b
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> a
    void setHomeActionContentDescription(int) -> a
    void onContentScrollStarted() -> i
    void onContentScrollStopped() -> j
    boolean collapseActionView() -> d
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> d
    boolean access$000(android.support.v7.internal.app.WindowDecorActionBar) -> a
    android.view.View access$100(android.support.v7.internal.app.WindowDecorActionBar) -> b
    android.support.v7.internal.widget.ActionBarContainer access$200(android.support.v7.internal.app.WindowDecorActionBar) -> c
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet access$302(android.support.v7.internal.app.WindowDecorActionBar,android.support.v7.internal.view.ViewPropertyAnimatorCompatSet) -> a
    android.support.v7.internal.widget.ActionBarOverlayLayout access$400(android.support.v7.internal.app.WindowDecorActionBar) -> d
    boolean access$500(android.support.v7.internal.app.WindowDecorActionBar) -> e
    boolean access$600(android.support.v7.internal.app.WindowDecorActionBar) -> f
    boolean access$700(boolean,boolean,boolean) -> a
    android.support.v7.internal.widget.ActionBarContextView access$800(android.support.v7.internal.app.WindowDecorActionBar) -> g
    android.support.v7.internal.widget.DecorToolbar access$900(android.support.v7.internal.app.WindowDecorActionBar) -> h
    android.content.Context access$1000(android.support.v7.internal.app.WindowDecorActionBar) -> i
android.support.v7.internal.app.WindowDecorActionBar$1 -> android.support.v7.internal.a.j:
    android.support.v7.internal.app.WindowDecorActionBar this$0 -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.internal.app.WindowDecorActionBar$2 -> android.support.v7.internal.a.k:
    android.support.v7.internal.app.WindowDecorActionBar this$0 -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.internal.app.WindowDecorActionBar$3 -> android.support.v7.internal.a.l:
    android.support.v7.internal.app.WindowDecorActionBar this$0 -> a
    void onAnimationUpdate(android.view.View) -> a
android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl -> android.support.v7.internal.a.m:
    android.content.Context mActionModeContext -> b
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> c
    android.support.v7.view.ActionMode$Callback mCallback -> d
    java.lang.ref.WeakReference mCustomView -> e
    android.support.v7.internal.app.WindowDecorActionBar this$0 -> a
    android.view.MenuInflater getMenuInflater() -> a
    android.view.Menu getMenu() -> b
    void finish() -> c
    void invalidate() -> d
    boolean dispatchOnCreate() -> e
    void setCustomView(android.view.View) -> a
    void setSubtitle(java.lang.CharSequence) -> a
    void setTitle(java.lang.CharSequence) -> b
    void setTitle(int) -> a
    void setSubtitle(int) -> b
    java.lang.CharSequence getTitle() -> f
    java.lang.CharSequence getSubtitle() -> g
    void setTitleOptionalHint(boolean) -> a
    boolean isTitleOptional() -> h
    android.view.View getCustomView() -> i
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.text.AllCapsTransformationMethod -> android.support.v7.internal.b.a:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
android.support.v7.internal.transition.ActionBarTransition -> android.support.v7.internal.c.a:
    void beginDelayedTransition(android.view.ViewGroup) -> a
android.support.v7.internal.view.ActionBarPolicy -> android.support.v7.internal.view.a:
    android.content.Context mContext -> a
    android.support.v7.internal.view.ActionBarPolicy get(android.content.Context) -> a
    int getMaxActionButtons() -> a
    boolean showsOverflowMenuButton() -> b
    int getEmbeddedMenuWidthLimit() -> c
    boolean hasEmbeddedTabs() -> d
    int getTabContainerHeight() -> e
    boolean enableHomeButtonByDefault() -> f
    int getStackedTabMaxWidth() -> g
android.support.v7.internal.view.ContextThemeWrapper -> android.support.v7.internal.view.b:
    int mThemeResource -> a
    android.content.res.Resources$Theme mTheme -> b
    android.view.LayoutInflater mInflater -> c
    void setTheme(int) -> setTheme
    int getThemeResId() -> a
    android.content.res.Resources$Theme getTheme() -> getTheme
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> a
    void initializeTheme() -> b
android.support.v7.internal.view.StandaloneActionMode -> android.support.v7.internal.view.c:
    android.content.Context mContext -> a
    android.support.v7.internal.widget.ActionBarContextView mContextView -> b
    android.support.v7.view.ActionMode$Callback mCallback -> c
    java.lang.ref.WeakReference mCustomView -> d
    boolean mFinished -> e
    boolean mFocusable -> f
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> g
    void setTitle(java.lang.CharSequence) -> b
    void setSubtitle(java.lang.CharSequence) -> a
    void setTitle(int) -> a
    void setSubtitle(int) -> b
    void setTitleOptionalHint(boolean) -> a
    boolean isTitleOptional() -> h
    void setCustomView(android.view.View) -> a
    void invalidate() -> d
    void finish() -> c
    android.view.Menu getMenu() -> b
    java.lang.CharSequence getTitle() -> f
    java.lang.CharSequence getSubtitle() -> g
    android.view.View getCustomView() -> i
    android.view.MenuInflater getMenuInflater() -> a
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.SupportActionModeWrapper -> android.support.v7.internal.view.d:
    android.content.Context mContext -> a
    android.support.v7.view.ActionMode mWrappedObject -> b
    java.lang.Object getTag() -> getTag
    void setTag(java.lang.Object) -> setTag
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void invalidate() -> invalidate
    void finish() -> finish
    android.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(int) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(int) -> setSubtitle
    android.view.View getCustomView() -> getCustomView
    void setCustomView(android.view.View) -> setCustomView
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean getTitleOptionalHint() -> getTitleOptionalHint
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    boolean isTitleOptional() -> isTitleOptional
android.support.v7.internal.view.SupportActionModeWrapper$CallbackWrapper -> android.support.v7.internal.view.e:
    android.view.ActionMode$Callback mWrappedCallback -> a
    android.content.Context mContext -> b
    java.util.ArrayList mActionModes -> c
    android.support.v4.util.SimpleArrayMap mMenus -> d
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> a
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> a
    android.view.Menu getMenuWrapper(android.view.Menu) -> a
    android.view.ActionMode getActionModeWrapper(android.support.v7.view.ActionMode) -> b
android.support.v7.internal.view.SupportMenuInflater -> android.support.v7.internal.view.f:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> b
    java.lang.Object[] mActionViewConstructorArguments -> c
    java.lang.Object[] mActionProviderConstructorArguments -> d
    android.content.Context mContext -> e
    java.lang.Object mRealOwner -> f
    void inflate(int,android.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> a
    java.lang.Object getRealOwner() -> c
    java.lang.Object findRealOwner(java.lang.Object) -> a
    android.content.Context access$100(android.support.v7.internal.view.SupportMenuInflater) -> a
    java.lang.Class[] access$200() -> a
    java.lang.Object[] access$300(android.support.v7.internal.view.SupportMenuInflater) -> b
    java.lang.Object access$400(android.support.v7.internal.view.SupportMenuInflater) -> c
    java.lang.Class[] access$500() -> b
    java.lang.Object[] access$600(android.support.v7.internal.view.SupportMenuInflater) -> d
android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> android.support.v7.internal.view.g:
    java.lang.Class[] PARAM_TYPES -> a
    java.lang.Object mRealOwner -> b
    java.lang.reflect.Method mMethod -> c
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.SupportMenuInflater$MenuState -> android.support.v7.internal.view.h:
    android.view.Menu menu -> b
    int groupId -> c
    int groupCategory -> d
    int groupOrder -> e
    int groupCheckable -> f
    boolean groupVisible -> g
    boolean groupEnabled -> h
    boolean itemAdded -> i
    int itemId -> j
    int itemCategoryOrder -> k
    java.lang.CharSequence itemTitle -> l
    java.lang.CharSequence itemTitleCondensed -> m
    int itemIconResId -> n
    char itemAlphabeticShortcut -> o
    char itemNumericShortcut -> p
    int itemCheckable -> q
    boolean itemChecked -> r
    boolean itemVisible -> s
    boolean itemEnabled -> t
    int itemShowAsAction -> u
    int itemActionViewLayout -> v
    java.lang.String itemActionViewClassName -> w
    java.lang.String itemActionProviderClassName -> x
    java.lang.String itemListenerMethodName -> y
    android.support.v4.view.ActionProvider itemActionProvider -> z
    android.support.v7.internal.view.SupportMenuInflater this$0 -> a
    void resetGroup() -> a
    void readGroup(android.util.AttributeSet) -> a
    void readItem(android.util.AttributeSet) -> b
    char getShortcut(java.lang.String) -> a
    void setItem(android.view.MenuItem) -> a
    void addItem() -> b
    android.view.SubMenu addSubMenuItem() -> c
    boolean hasAddedItem() -> d
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    android.support.v4.view.ActionProvider access$000(android.support.v7.internal.view.SupportMenuInflater$MenuState) -> a
android.support.v7.internal.view.ViewPropertyAnimatorCompatSet -> android.support.v7.internal.view.i:
    java.util.ArrayList mAnimators -> a
    long mDuration -> b
    android.view.animation.Interpolator mInterpolator -> c
    android.support.v4.view.ViewPropertyAnimatorListener mListener -> d
    boolean mIsStarted -> e
    android.support.v4.view.ViewPropertyAnimatorListenerAdapter mProxyListener -> f
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat) -> a
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet playSequentially(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorCompat) -> a
    void start() -> a
    void onAnimationsEnded() -> c
    void cancel() -> b
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setDuration(long) -> a
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> a
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> a
    android.support.v4.view.ViewPropertyAnimatorListener access$000(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet) -> a
    void access$100(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet) -> b
    java.util.ArrayList access$200(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet) -> c
android.support.v7.internal.view.ViewPropertyAnimatorCompatSet$1 -> android.support.v7.internal.view.j:
    boolean mProxyStarted -> b
    int mProxyEndCount -> c
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet this$0 -> a
    void onAnimationStart(android.view.View) -> a
    void onEnd() -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.internal.view.WindowCallbackWrapper -> android.support.v7.internal.view.k:
    android.view.Window$Callback mWrapped -> d
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    void onContentChanged() -> onContentChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    boolean onSearchRequested() -> onSearchRequested
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
android.support.v7.internal.view.menu.ActionMenuItem -> android.support.v7.internal.view.menu.a:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.content.Context mContext -> l
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> m
    int mFlags -> n
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    android.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.view.MenuItem setVisible(boolean) -> setVisible
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> a
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> a
    android.support.v4.view.ActionProvider getSupportActionProvider() -> a
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> a
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> b
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> a
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
android.support.v7.internal.view.menu.ActionMenuItemView -> android.support.v7.internal.view.menu.ActionMenuItemView:
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> a
    java.lang.CharSequence mTitle -> b
    android.graphics.drawable.Drawable mIcon -> c
    android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> d
    android.support.v7.widget.ListPopupWindow$ForwardingListener mForwardingListener -> e
    android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback mPopupCallback -> f
    boolean mAllowTextWithIcon -> g
    boolean mExpandedFormat -> h
    int mMinWidth -> i
    int mSavedPaddingLeft -> j
    int mMaxIconSize -> k
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setPadding(int,int,int,int) -> setPadding
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onClick(android.view.View) -> onClick
    void setItemInvoker(android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    void setPopupCallback(android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    boolean prefersCondensedTitle() -> a
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> e
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> b
    void setShortcut(boolean,char) -> setShortcut
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
    android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback access$000(android.support.v7.internal.view.menu.ActionMenuItemView) -> a
    android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker access$100(android.support.v7.internal.view.menu.ActionMenuItemView) -> b
    android.support.v7.internal.view.menu.MenuItemImpl access$200(android.support.v7.internal.view.menu.ActionMenuItemView) -> c
android.support.v7.internal.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> android.support.v7.internal.view.menu.b:
    android.support.v7.internal.view.menu.ActionMenuItemView this$0 -> a
    android.support.v7.widget.ListPopupWindow getPopup() -> a
    boolean onForwardingStarted() -> b
android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback -> android.support.v7.internal.view.menu.c:
    android.support.v7.widget.ListPopupWindow getPopup() -> a
android.support.v7.internal.view.menu.BaseMenuPresenter -> android.support.v7.internal.view.menu.d:
    android.content.Context mSystemContext -> a
    android.content.Context mContext -> b
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> c
    android.view.LayoutInflater mSystemInflater -> d
    android.view.LayoutInflater mInflater -> e
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> g
    int mMenuLayoutRes -> h
    int mItemLayoutRes -> i
    android.support.v7.internal.view.menu.MenuView mMenuView -> f
    int mId -> j
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    void updateMenuView(boolean) -> a
    void addItemView(android.view.View,int) -> a
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    android.support.v7.internal.view.menu.MenuPresenter$Callback getCallback() -> d
    android.support.v7.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> b
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    boolean flagActionItems() -> a
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    int getId() -> b
    void setId(int) -> a
android.support.v7.internal.view.menu.BaseMenuWrapper -> android.support.v7.internal.view.menu.e:
    android.content.Context mContext -> a
    java.util.Map mMenuItems -> c
    java.util.Map mSubMenus -> d
    android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> a
    android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> a
    void internalClear() -> a
    void internalRemoveGroup(int) -> a
    void internalRemoveItem(int) -> b
android.support.v7.internal.view.menu.BaseWrapper -> android.support.v7.internal.view.menu.f:
    java.lang.Object mWrappedObject -> b
android.support.v7.internal.view.menu.ExpandedMenuView -> android.support.v7.internal.view.menu.ExpandedMenuView:
    int[] TINT_ATTRS -> a
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> b
    int mAnimations -> c
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int getWindowAnimations() -> getWindowAnimations
android.support.v7.internal.view.menu.ListMenuItemView -> android.support.v7.internal.view.menu.ListMenuItemView:
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> a
    android.widget.ImageView mIconView -> b
    android.widget.RadioButton mRadioButton -> c
    android.widget.TextView mTitleView -> d
    android.widget.CheckBox mCheckBox -> e
    android.widget.TextView mShortcutView -> f
    android.graphics.drawable.Drawable mBackground -> g
    int mTextAppearance -> h
    android.content.Context mTextAppearanceContext -> i
    boolean mPreserveIconSpacing -> j
    int mMenuType -> k
    android.content.Context mContext -> l
    android.view.LayoutInflater mInflater -> m
    boolean mForceShowIcon -> n
    void onFinishInflate() -> onFinishInflate
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> b
    void insertRadioButton() -> c
    void insertCheckBox() -> d
    boolean prefersCondensedTitle() -> a
    android.view.LayoutInflater getInflater() -> getInflater
android.support.v7.internal.view.menu.ListMenuPresenter -> android.support.v7.internal.view.menu.g:
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> b
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> c
    android.support.v7.internal.view.menu.ExpandedMenuView mMenuView -> d
    int mItemIndexOffset -> h
    int mThemeRes -> e
    int mItemLayoutRes -> f
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> i
    android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> g
    int mId -> j
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.widget.ListAdapter getAdapter() -> d
    void updateMenuView(boolean) -> a
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean flagActionItems() -> a
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    void saveHierarchyState(android.os.Bundle) -> a
    void restoreHierarchyState(android.os.Bundle) -> b
    int getId() -> b
    android.os.Parcelable onSaveInstanceState() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> a
    int access$000(android.support.v7.internal.view.menu.ListMenuPresenter) -> a
android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter -> android.support.v7.internal.view.menu.h:
    int mExpandedIndex -> b
    android.support.v7.internal.view.menu.ListMenuPresenter this$0 -> a
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
android.support.v7.internal.view.menu.MenuBuilder -> android.support.v7.internal.view.menu.i:
    int[] sCategoryToOrder -> d
    android.content.Context mContext -> e
    android.content.res.Resources mResources -> f
    boolean mQwertyMode -> g
    boolean mShortcutsVisible -> h
    android.support.v7.internal.view.menu.MenuBuilder$Callback mCallback -> i
    java.util.ArrayList mItems -> j
    java.util.ArrayList mVisibleItems -> k
    boolean mIsVisibleItemsStale -> l
    java.util.ArrayList mActionItems -> m
    java.util.ArrayList mNonActionItems -> n
    boolean mIsActionItemsStale -> o
    int mDefaultShowAsAction -> p
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> q
    java.lang.CharSequence mHeaderTitle -> a
    android.graphics.drawable.Drawable mHeaderIcon -> b
    android.view.View mHeaderView -> c
    boolean mPreventDispatchingItemsChanged -> r
    boolean mItemsChangedWhileDispatchPrevented -> s
    boolean mOptionalIconsVisible -> t
    boolean mIsClosing -> u
    java.util.ArrayList mTempShortcutItemList -> v
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    android.support.v7.internal.view.menu.MenuItemImpl mExpandedItem -> x
    boolean mOverrideVisibleItems -> y
    android.support.v7.internal.view.menu.MenuBuilder setDefaultShowAsAction(int) -> a
    void addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> a
    void addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter,android.content.Context) -> a
    void removeMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> b
    void dispatchPresenterUpdate(boolean) -> d
    boolean dispatchSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder,android.support.v7.internal.view.menu.MenuPresenter) -> a
    void dispatchSaveInstanceState(android.os.Bundle) -> e
    void dispatchRestoreInstanceState(android.os.Bundle) -> f
    void savePresenterStates(android.os.Bundle) -> a
    void restorePresenterStates(android.os.Bundle) -> b
    void saveActionViewStates(android.os.Bundle) -> c
    void restoreActionViewStates(android.os.Bundle) -> d
    java.lang.String getActionViewStatesKey() -> a
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> a
    android.support.v7.internal.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> a
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> a
    void clear() -> clear
    void setExclusiveItemChecked(android.view.MenuItem) -> a
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> b
    int findGroupIndex(int) -> c
    int findGroupIndex(int,int) -> a
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> d
    boolean isQwertyMode() -> b
    void setShortcutsVisibleInner(boolean) -> e
    boolean isShortcutsVisible() -> c
    android.content.res.Resources getResources() -> d
    android.content.Context getContext() -> e
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void changeMenuMode() -> f
    int findInsertIndex(java.util.ArrayList,int) -> a
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> a
    android.support.v7.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> a
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(android.view.MenuItem,int) -> a
    boolean performItemAction(android.view.MenuItem,android.support.v7.internal.view.menu.MenuPresenter,int) -> a
    void close(boolean) -> a
    void close() -> close
    void onItemsChanged(boolean) -> b
    void stopDispatchingItemsChanged() -> g
    void startDispatchingItemsChanged() -> h
    void onItemVisibleChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onItemActionRequestChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> b
    java.util.ArrayList getVisibleItems() -> i
    void flagActionItems() -> j
    java.util.ArrayList getActionItems() -> k
    java.util.ArrayList getNonActionItems() -> l
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> a
    java.lang.CharSequence getHeaderTitle() -> m
    android.graphics.drawable.Drawable getHeaderIcon() -> n
    android.view.View getHeaderView() -> o
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> p
    boolean getOptionalIconsVisible() -> q
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> d
    android.support.v7.internal.view.menu.MenuItemImpl getExpandedItem() -> r
    void setOverrideVisibleItems(boolean) -> c
android.support.v7.internal.view.menu.MenuBuilder$Callback -> android.support.v7.internal.view.menu.j:
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker -> android.support.v7.internal.view.menu.k:
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
android.support.v7.internal.view.menu.MenuDialogHelper -> android.support.v7.internal.view.menu.l:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> b
    android.support.v7.app.AlertDialog mDialog -> c
    android.support.v7.internal.view.menu.ListMenuPresenter mPresenter -> a
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> d
    void show(android.os.IBinder) -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    void dismiss() -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.internal.view.menu.MenuItemImpl -> android.support.v7.internal.view.menu.m:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> l
    android.support.v7.internal.view.menu.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    int mShowAsAction -> q
    android.view.View mActionView -> r
    android.support.v4.view.ActionProvider mActionProvider -> s
    android.support.v4.view.MenuItemCompat$OnActionExpandListener mOnActionExpandListener -> t
    boolean mIsActionViewExpanded -> u
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> v
    java.lang.String sPrependShortcutLabel -> w
    java.lang.String sEnterShortcutLabel -> x
    java.lang.String sDeleteShortcutLabel -> y
    java.lang.String sSpaceShortcutLabel -> z
    boolean invoke() -> b
    boolean isEnabled() -> isEnabled
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> c
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> d
    java.lang.String getShortcutLabel() -> e
    boolean shouldShowShortcut() -> f
    android.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> a
    boolean isExclusiveCheckable() -> g
    boolean isChecked() -> isChecked
    android.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> b
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> c
    android.view.MenuItem setVisible(boolean) -> setVisible
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> h
    boolean shouldShowIcon() -> i
    boolean isActionButton() -> j
    boolean requestsActionButton() -> k
    boolean requiresActionButton() -> l
    void setIsActionButton(boolean) -> d
    boolean showsTextAsAction() -> m
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> a
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> a
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> a
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> a
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> b
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> a
    boolean hasCollapsibleActionView() -> n
    void setActionViewExpanded(boolean) -> e
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuItemImpl) -> a
android.support.v7.internal.view.menu.MenuItemImpl$1 -> android.support.v7.internal.view.menu.n:
    android.support.v7.internal.view.menu.MenuItemImpl this$0 -> a
    void onActionProviderVisibilityChanged(boolean) -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS -> android.support.v7.internal.view.menu.o:
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> c
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    android.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    android.view.SubMenu getSubMenu() -> getSubMenu
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    void setExclusiveCheckable(boolean) -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> android.support.v7.internal.view.menu.p:
    android.view.ActionProvider mInner -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    android.view.View onCreateActionView() -> a
    boolean onPerformDefaultAction() -> d
    boolean hasSubMenu() -> e
    void onPrepareSubMenu(android.view.SubMenu) -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> android.support.v7.internal.view.menu.q:
    android.view.CollapsibleActionView mWrappedView -> a
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
    android.view.View getWrappedView() -> c
android.support.v7.internal.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> android.support.v7.internal.view.menu.r:
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> a
    boolean onMenuItemActionExpand(android.view.MenuItem) -> a
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> b
android.support.v7.internal.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> android.support.v7.internal.view.menu.s:
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.menu.MenuItemWrapperJB -> android.support.v7.internal.view.menu.t:
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> a
android.support.v7.internal.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> android.support.v7.internal.view.menu.u:
    android.support.v4.view.ActionProvider$VisibilityListener mListener -> c
    android.support.v7.internal.view.menu.MenuItemWrapperJB this$0 -> d
    android.view.View onCreateActionView(android.view.MenuItem) -> a
    boolean overridesItemVisibility() -> b
    boolean isVisible() -> c
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> a
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.internal.view.menu.MenuPopupHelper -> android.support.v7.internal.view.menu.v:
    int ITEM_LAYOUT -> a
    android.content.Context mContext -> c
    android.view.LayoutInflater mInflater -> d
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> e
    android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> f
    boolean mOverflowOnly -> g
    int mPopupMaxWidth -> h
    int mPopupStyleAttr -> i
    int mPopupStyleRes -> j
    android.view.View mAnchorView -> k
    android.support.v7.widget.ListPopupWindow mPopup -> l
    android.view.ViewTreeObserver mTreeObserver -> m
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> n
    boolean mForceShowIcon -> b
    android.view.ViewGroup mMeasureParent -> o
    boolean mHasContentWidth -> p
    int mContentWidth -> q
    int mDropDownGravity -> r
    void setAnchorView(android.view.View) -> a
    void setForceShowIcon(boolean) -> b
    void setGravity(int) -> a
    void show() -> d
    android.support.v7.widget.ListPopupWindow getPopup() -> e
    boolean tryShow() -> f
    void dismiss() -> g
    void onDismiss() -> onDismiss
    boolean isShowing() -> h
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth() -> i
    void onGlobalLayout() -> onGlobalLayout
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> a
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> a
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    int getId() -> b
    android.os.Parcelable onSaveInstanceState() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> a
    boolean access$100(android.support.v7.internal.view.menu.MenuPopupHelper) -> a
    android.view.LayoutInflater access$200(android.support.v7.internal.view.menu.MenuPopupHelper) -> b
    android.support.v7.internal.view.menu.MenuBuilder access$300(android.support.v7.internal.view.menu.MenuPopupHelper) -> c
android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter -> android.support.v7.internal.view.menu.w:
    android.support.v7.internal.view.menu.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    android.support.v7.internal.view.menu.MenuPopupHelper this$0 -> a
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter) -> a
android.support.v7.internal.view.menu.MenuPresenter -> android.support.v7.internal.view.menu.x:
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> a
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    int getId() -> b
    android.os.Parcelable onSaveInstanceState() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> a
android.support.v7.internal.view.menu.MenuPresenter$Callback -> android.support.v7.internal.view.menu.y:
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuView -> android.support.v7.internal.view.menu.z:
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuView$ItemView -> android.support.v7.internal.view.menu.aa:
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    boolean prefersCondensedTitle() -> a
android.support.v7.internal.view.menu.MenuWrapperFactory -> android.support.v7.internal.view.menu.ab:
    android.view.Menu wrapSupportMenu(android.content.Context,android.support.v4.internal.view.SupportMenu) -> a
    android.view.MenuItem wrapSupportMenuItem(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> a
    android.view.SubMenu wrapSupportSubMenu(android.content.Context,android.support.v4.internal.view.SupportSubMenu) -> a
android.support.v7.internal.view.menu.MenuWrapperICS -> android.support.v7.internal.view.menu.ac:
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
android.support.v7.internal.view.menu.SubMenuBuilder -> android.support.v7.internal.view.menu.ad:
    android.support.v7.internal.view.menu.MenuBuilder mParentMenu -> d
    android.support.v7.internal.view.menu.MenuItemImpl mItem -> e
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> b
    boolean isShortcutsVisible() -> c
    android.view.Menu getParentMenu() -> s
    android.view.MenuItem getItem() -> getItem
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> p
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> d
    java.lang.String getActionViewStatesKey() -> a
android.support.v7.internal.view.menu.SubMenuWrapperICS -> android.support.v7.internal.view.menu.ae:
    android.support.v4.internal.view.SupportSubMenu getWrappedObject() -> b
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem getItem() -> getItem
android.support.v7.internal.widget.AbsActionBarView -> android.support.v7.internal.widget.a:
    android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> a
    android.content.Context mPopupContext -> b
    android.support.v7.widget.ActionMenuView mMenuView -> c
    android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter -> d
    int mContentHeight -> e
    android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim -> f
    boolean mEatingTouch -> g
    boolean mEatingHover -> h
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    int getAnimatedVisibility() -> getAnimatedVisibility
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> a
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> a
    int measureChildView(android.view.View,int,int,int) -> a
    int next(int,int,boolean) -> a
    int positionChild(android.view.View,int,int,int,boolean) -> a
    void access$001(android.support.v7.internal.widget.AbsActionBarView,int) -> a
    void access$101(android.support.v7.internal.widget.AbsActionBarView,int) -> b
android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener -> android.support.v7.internal.widget.b:
    boolean mCanceled -> c
    int mFinalVisibility -> a
    android.support.v7.internal.widget.AbsActionBarView this$0 -> b
    android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> a
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v7.internal.widget.ActionBarBackgroundDrawable -> android.support.v7.internal.widget.c:
    android.support.v7.internal.widget.ActionBarContainer mContainer -> a
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
android.support.v7.internal.widget.ActionBarBackgroundDrawableV21 -> android.support.v7.internal.widget.d:
    void getOutline(android.graphics.Outline) -> getOutline
android.support.v7.internal.widget.ActionBarContainer -> android.support.v7.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> f
    android.view.View mTabContainer -> g
    android.view.View mActionBarView -> h
    android.view.View mContextView -> i
    android.graphics.drawable.Drawable mBackground -> a
    android.graphics.drawable.Drawable mStackedBackground -> b
    android.graphics.drawable.Drawable mSplitBackground -> c
    boolean mIsSplit -> d
    boolean mIsStacked -> e
    int mHeight -> j
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setVisibility(int) -> setVisibility
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    boolean isCollapsed(android.view.View) -> a
    int getMeasuredHeightWithMargins(android.view.View) -> b
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v7.internal.widget.ActionBarContextView -> android.support.v7.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> g
    java.lang.CharSequence mSubtitle -> h
    android.view.View mClose -> i
    android.view.View mCustomView -> j
    android.widget.LinearLayout mTitleLayout -> k
    android.widget.TextView mTitleView -> l
    android.widget.TextView mSubtitleView -> m
    int mTitleStyleRes -> n
    int mSubtitleStyleRes -> o
    boolean mTitleOptional -> p
    int mCloseItemLayout -> q
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> e
    void initForMode(android.support.v7.view.ActionMode) -> a
    void closeMode() -> b
    void killMode() -> c
    boolean showOverflowMenu() -> a
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void setTitleOptional(boolean) -> setTitleOptional
    boolean isTitleOptional() -> d
    void setVisibility(int) -> setVisibility
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> a
    int getAnimatedVisibility() -> getAnimatedVisibility
    int getContentHeight() -> getContentHeight
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
android.support.v7.internal.widget.ActionBarContextView$1 -> android.support.v7.internal.widget.e:
    android.support.v7.view.ActionMode val$mode -> a
    android.support.v7.internal.widget.ActionBarContextView this$0 -> b
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ActionBarOverlayLayout -> android.support.v7.internal.widget.ActionBarOverlayLayout:
    int mActionBarHeight -> b
    int mWindowVisibility -> c
    android.support.v7.internal.widget.ContentFrameLayout mContent -> d
    android.support.v7.internal.widget.ActionBarContainer mActionBarTop -> e
    android.support.v7.internal.widget.DecorToolbar mDecorToolbar -> f
    android.graphics.drawable.Drawable mWindowContentOverlay -> g
    boolean mIgnoreWindowContentOverlay -> h
    boolean mOverlayMode -> i
    boolean mHasNonEmbeddedTabs -> j
    boolean mHideOnContentScroll -> k
    boolean mAnimatingForFling -> l
    int mHideOnContentScrollReference -> m
    int mLastSystemUiVisibility -> n
    android.graphics.Rect mBaseContentInsets -> o
    android.graphics.Rect mLastBaseContentInsets -> p
    android.graphics.Rect mContentInsets -> q
    android.graphics.Rect mBaseInnerInsets -> r
    android.graphics.Rect mInnerInsets -> s
    android.graphics.Rect mLastInnerInsets -> t
    android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback -> u
    int ACTION_BAR_ANIMATE_DELAY -> v
    android.support.v4.widget.ScrollerCompat mFlingEstimator -> w
    android.support.v4.view.ViewPropertyAnimatorCompat mCurrentActionBarTopAnimator -> x
    android.support.v4.view.ViewPropertyAnimatorListener mTopAnimatorListener -> y
    java.lang.Runnable mRemoveActionBarHideOffset -> z
    java.lang.Runnable mAddActionBarHideOffset -> A
    int[] ATTRS -> a
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> B
    void init(android.content.Context) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setActionBarVisibilityCallback(android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    void setOverlayMode(boolean) -> setOverlayMode
    boolean isInOverlayMode() -> a
    void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    void setShowingForActionMode(boolean) -> setShowingForActionMode
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> a
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> b
    android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void draw(android.graphics.Canvas) -> draw
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    void pullChildren() -> c
    android.support.v7.internal.widget.DecorToolbar getDecorToolbar(android.view.View) -> a
    void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    int getActionBarHideOffset() -> getActionBarHideOffset
    void setActionBarHideOffset(int) -> setActionBarHideOffset
    void haltActionBarHideOffsetAnimations() -> j
    void postRemoveActionBarHideOffset() -> k
    void postAddActionBarHideOffset() -> l
    void removeActionBarHideOffset() -> m
    void addActionBarHideOffset() -> n
    boolean shouldHideActionBarOnFling(float,float) -> a
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    java.lang.CharSequence getTitle() -> getTitle
    void initFeature(int) -> a
    void setUiOptions(int) -> setUiOptions
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    boolean canShowOverflowMenu() -> d
    boolean isOverflowMenuShowing() -> e
    boolean isOverflowMenuShowPending() -> f
    boolean showOverflowMenu() -> g
    boolean hideOverflowMenu() -> h
    void setMenuPrepared() -> setMenuPrepared
    void setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void dismissPopups() -> i
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v4.view.ViewPropertyAnimatorCompat access$002(android.support.v7.internal.widget.ActionBarOverlayLayout,android.support.v4.view.ViewPropertyAnimatorCompat) -> a
    boolean access$102(android.support.v7.internal.widget.ActionBarOverlayLayout,boolean) -> a
    void access$200(android.support.v7.internal.widget.ActionBarOverlayLayout) -> a
    android.support.v4.view.ViewPropertyAnimatorListener access$300(android.support.v7.internal.widget.ActionBarOverlayLayout) -> b
    android.support.v7.internal.widget.ActionBarContainer access$400(android.support.v7.internal.widget.ActionBarOverlayLayout) -> c
android.support.v7.internal.widget.ActionBarOverlayLayout$1 -> android.support.v7.internal.widget.f:
    android.support.v7.internal.widget.ActionBarOverlayLayout this$0 -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v7.internal.widget.ActionBarOverlayLayout$2 -> android.support.v7.internal.widget.g:
    android.support.v7.internal.widget.ActionBarOverlayLayout this$0 -> a
    void run() -> run
android.support.v7.internal.widget.ActionBarOverlayLayout$3 -> android.support.v7.internal.widget.h:
    android.support.v7.internal.widget.ActionBarOverlayLayout this$0 -> a
    void run() -> run
android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> android.support.v7.internal.widget.i:
    void onWindowVisibilityChanged(int) -> b
    void showForSystem() -> g
    void hideForSystem() -> h
    void enableContentAnimations(boolean) -> g
    void onContentScrollStarted() -> i
    void onContentScrollStopped() -> j
android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams -> android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams:
android.support.v7.internal.widget.ActivityChooserModel -> android.support.v7.internal.widget.j:
    java.lang.String LOG_TAG -> a
    java.lang.Object sRegistryLock -> b
    java.util.Map sDataModelRegistry -> c
    java.lang.Object mInstanceLock -> d
    java.util.List mActivities -> e
    java.util.List mHistoricalRecords -> f
    android.content.Context mContext -> g
    java.lang.String mHistoryFileName -> h
    android.content.Intent mIntent -> i
    android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> j
    int mHistoryMaxSize -> k
    boolean mCanReadHistoricalData -> l
    boolean mReadShareHistoryCalled -> m
    boolean mHistoricalRecordsChanged -> n
    boolean mReloadActivities -> o
    android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> p
    int getActivityCount() -> a
    android.content.pm.ResolveInfo getActivity(int) -> a
    int getActivityIndex(android.content.pm.ResolveInfo) -> a
    android.content.Intent chooseActivity(int) -> b
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setDefaultActivity(int) -> c
    void persistHistoricalDataIfNeeded() -> e
    int getHistorySize() -> c
    void ensureConsistentState() -> f
    boolean sortActivitiesIfNeeded() -> g
    boolean loadActivitiesIfNeeded() -> h
    boolean readHistoricalDataIfNeeded() -> i
    boolean addHisoricalRecord(android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord) -> a
    void pruneExcessiveHistoricalRecordsIfNeeded() -> j
    void readHistoricalDataImpl() -> k
    android.content.Context access$200(android.support.v7.internal.widget.ActivityChooserModel) -> a
    java.lang.String access$300() -> d
    java.lang.String access$400(android.support.v7.internal.widget.ActivityChooserModel) -> b
    boolean access$502(android.support.v7.internal.widget.ActivityChooserModel,boolean) -> a
android.support.v7.internal.widget.ActivityChooserModel$1 -> android.support.v7.internal.widget.k:
android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo -> android.support.v7.internal.widget.l:
    android.content.pm.ResolveInfo resolveInfo -> a
    float weight -> b
    android.support.v7.internal.widget.ActivityChooserModel this$0 -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo) -> a
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter -> android.support.v7.internal.widget.m:
    void sort(android.content.Intent,java.util.List,java.util.List) -> a
android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord -> android.support.v7.internal.widget.n:
    android.content.ComponentName activity -> a
    long time -> b
    float weight -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener -> android.support.v7.internal.widget.o:
    boolean onChooseActivity(android.support.v7.internal.widget.ActivityChooserModel,android.content.Intent) -> a
android.support.v7.internal.widget.ActivityChooserModel$PersistHistoryAsyncTask -> android.support.v7.internal.widget.p:
    android.support.v7.internal.widget.ActivityChooserModel this$0 -> a
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v7.internal.widget.ActivityChooserView -> android.support.v7.internal.widget.ActivityChooserView:
    android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> b
    android.support.v7.internal.widget.ActivityChooserView$Callbacks mCallbacks -> c
    android.support.v7.widget.LinearLayoutCompat mActivityChooserContent -> d
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> e
    android.widget.FrameLayout mExpandActivityOverflowButton -> f
    android.widget.ImageView mExpandActivityOverflowButtonImage -> g
    android.widget.FrameLayout mDefaultActivityButton -> h
    android.widget.ImageView mDefaultActivityButtonImage -> i
    int mListPopupMaxWidth -> j
    android.support.v4.view.ActionProvider mProvider -> a
    android.database.DataSetObserver mModelDataSetOberver -> k
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> l
    android.support.v7.widget.ListPopupWindow mListPopupWindow -> m
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> n
    boolean mIsSelectingDefaultActivity -> o
    int mInitialActivityCount -> p
    boolean mIsAttachedToWindow -> q
    int mDefaultActionButtonContentDescription -> r
    void setActivityChooserModel(android.support.v7.internal.widget.ActivityChooserModel) -> setActivityChooserModel
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    void setProvider(android.support.v4.view.ActionProvider) -> setProvider
    boolean showPopup() -> a
    void showPopupUnchecked(int) -> a
    boolean dismissPopup() -> b
    boolean isShowingPopup() -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.support.v7.internal.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInitialActivityCount(int) -> setInitialActivityCount
    void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    android.support.v7.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    void updateAppearance() -> d
    android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter access$000(android.support.v7.internal.widget.ActivityChooserView) -> a
    android.support.v7.widget.ListPopupWindow access$100(android.support.v7.internal.widget.ActivityChooserView) -> b
    void access$400(android.support.v7.internal.widget.ActivityChooserView) -> c
    void access$500(android.support.v7.internal.widget.ActivityChooserView,int) -> a
    boolean access$600(android.support.v7.internal.widget.ActivityChooserView) -> d
    android.widget.FrameLayout access$700(android.support.v7.internal.widget.ActivityChooserView) -> e
    android.widget.FrameLayout access$800(android.support.v7.internal.widget.ActivityChooserView) -> f
    boolean access$602(android.support.v7.internal.widget.ActivityChooserView,boolean) -> a
    int access$900(android.support.v7.internal.widget.ActivityChooserView) -> g
    android.widget.PopupWindow$OnDismissListener access$1000(android.support.v7.internal.widget.ActivityChooserView) -> h
    android.database.DataSetObserver access$1100(android.support.v7.internal.widget.ActivityChooserView) -> i
android.support.v7.internal.widget.ActivityChooserView$1 -> android.support.v7.internal.widget.q:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.ActivityChooserView$2 -> android.support.v7.internal.widget.r:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.internal.widget.ActivityChooserView$3 -> android.support.v7.internal.widget.s:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    android.support.v7.widget.ListPopupWindow getPopup() -> a
    boolean onForwardingStarted() -> b
    boolean onForwardingStopped() -> c
android.support.v7.internal.widget.ActivityChooserView$4 -> android.support.v7.internal.widget.t:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter -> android.support.v7.internal.widget.u:
    android.support.v7.internal.widget.ActivityChooserModel mDataModel -> b
    int mMaxActivityCount -> c
    boolean mShowDefaultActivity -> d
    boolean mHighlightDefaultActivity -> e
    boolean mShowFooterView -> f
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void setDataModel(android.support.v7.internal.widget.ActivityChooserModel) -> a
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> a
    void setMaxActivityCount(int) -> a
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setShowFooterView(boolean) -> a
    int getActivityCount() -> c
    int getHistorySize() -> d
    android.support.v7.internal.widget.ActivityChooserModel getDataModel() -> e
    void setShowDefaultActivity(boolean,boolean) -> a
    boolean getShowDefaultActivity() -> f
android.support.v7.internal.widget.ActivityChooserView$Callbacks -> android.support.v7.internal.widget.v:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> a
android.support.v7.internal.widget.ActivityChooserView$InnerLayout -> android.support.v7.internal.widget.ActivityChooserView$InnerLayout:
    int[] TINT_ATTRS -> a
android.support.v7.internal.widget.AppCompatPopupWindow -> android.support.v7.internal.widget.AppCompatPopupWindow:
    boolean COMPAT_OVERLAP_ANCHOR -> a
    boolean mOverlapAnchor -> b
    void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    void update(android.view.View,int,int,int,int) -> update
    void wrapOnScrollChangedListener(android.widget.PopupWindow) -> a
    void setSupportOverlapAnchor(boolean) -> a
android.support.v7.internal.widget.AppCompatPopupWindow$1 -> android.support.v7.internal.widget.w:
    java.lang.reflect.Field val$fieldAnchor -> a
    android.widget.PopupWindow val$popup -> b
    android.view.ViewTreeObserver$OnScrollChangedListener val$originalListener -> c
    void onScrollChanged() -> onScrollChanged
android.support.v7.internal.widget.ContentFrameLayout -> android.support.v7.internal.widget.ContentFrameLayout:
    android.util.TypedValue mMinWidthMajor -> a
    android.util.TypedValue mMinWidthMinor -> b
    android.util.TypedValue mFixedWidthMajor -> c
    android.util.TypedValue mFixedWidthMinor -> d
    android.util.TypedValue mFixedHeightMajor -> e
    android.util.TypedValue mFixedHeightMinor -> f
    android.graphics.Rect mDecorPadding -> g
    void dispatchFitSystemWindows(android.graphics.Rect) -> a
    void setDecorPadding(int,int,int,int) -> setDecorPadding
    void onMeasure(int,int) -> onMeasure
    android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
android.support.v7.internal.widget.DecorContentParent -> android.support.v7.internal.widget.x:
    void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void initFeature(int) -> a
    boolean canShowOverflowMenu() -> d
    boolean isOverflowMenuShowing() -> e
    boolean isOverflowMenuShowPending() -> f
    boolean showOverflowMenu() -> g
    boolean hideOverflowMenu() -> h
    void setMenuPrepared() -> setMenuPrepared
    void setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void dismissPopups() -> i
android.support.v7.internal.widget.DecorToolbar -> android.support.v7.internal.widget.y:
    android.view.ViewGroup getViewGroup() -> a
    android.content.Context getContext() -> b
    boolean hasExpandedActionView() -> c
    void collapseActionView() -> d
    void setWindowCallback(android.view.Window$Callback) -> a
    void setWindowTitle(java.lang.CharSequence) -> a
    java.lang.CharSequence getTitle() -> e
    void initProgress() -> f
    void initIndeterminateProgress() -> g
    void setIcon(int) -> a
    void setIcon(android.graphics.drawable.Drawable) -> a
    void setLogo(int) -> b
    boolean canShowOverflowMenu() -> h
    boolean isOverflowMenuShowing() -> i
    boolean isOverflowMenuShowPending() -> j
    boolean showOverflowMenu() -> k
    boolean hideOverflowMenu() -> l
    void setMenuPrepared() -> m
    void setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    void dismissPopupMenus() -> n
    int getDisplayOptions() -> o
    void setDisplayOptions(int) -> c
    void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView) -> a
    void setCollapsible(boolean) -> a
    void setHomeButtonEnabled(boolean) -> b
    int getNavigationMode() -> p
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> a
    void setNavigationIcon(android.graphics.drawable.Drawable) -> b
    void setNavigationContentDescription(int) -> d
    void setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.view.Menu getMenu() -> q
android.support.v7.internal.widget.DialogTitle -> android.support.v7.internal.widget.DialogTitle:
    void onMeasure(int,int) -> onMeasure
android.support.v7.internal.widget.DrawableUtils -> android.support.v7.internal.widget.z:
    android.graphics.Rect INSETS_NONE -> a
    java.lang.Class sInsetsClazz -> b
    android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> a
android.support.v7.internal.widget.FitWindowsFrameLayout -> android.support.v7.internal.widget.FitWindowsFrameLayout:
    android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> a
    void setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
android.support.v7.internal.widget.FitWindowsLinearLayout -> android.support.v7.internal.widget.FitWindowsLinearLayout:
    android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> a
    void setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
android.support.v7.internal.widget.FitWindowsViewGroup -> android.support.v7.internal.widget.aa:
    void setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> android.support.v7.internal.widget.ab:
    void onFitSystemWindows(android.graphics.Rect) -> a
android.support.v7.internal.widget.ListViewCompat -> android.support.v7.internal.widget.ListViewCompat:
    int[] STATE_SET_NOTHING -> f
    android.graphics.Rect mSelectorRect -> a
    int mSelectionLeftPadding -> b
    int mSelectionTopPadding -> c
    int mSelectionRightPadding -> d
    int mSelectionBottomPadding -> e
    java.lang.reflect.Field mIsChildViewEnabled -> g
    android.support.v7.internal.widget.ListViewCompat$GateKeeperDrawable mSelector -> h
    void setSelector(android.graphics.drawable.Drawable) -> setSelector
    void drawableStateChanged() -> drawableStateChanged
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void updateSelectorStateCompat() -> a
    boolean shouldShowSelectorCompat() -> b
    boolean touchModeDrawsInPressedStateCompat() -> c
    void drawSelectorCompat(android.graphics.Canvas) -> a
    void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> a
    void positionSelectorLikeFocusCompat(int,android.view.View) -> a
    void positionSelectorCompat(int,android.view.View) -> b
    int measureHeightOfChildrenCompat(int,int,int,int,int) -> a
    void setSelectorEnabled(boolean) -> setSelectorEnabled
android.support.v7.internal.widget.ListViewCompat$GateKeeperDrawable -> android.support.v7.internal.widget.ac:
    boolean mEnabled -> a
    void setEnabled(boolean) -> a
    boolean setState(int[]) -> setState
    void draw(android.graphics.Canvas) -> draw
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    boolean setVisible(boolean,boolean) -> setVisible
android.support.v7.internal.widget.ResourcesWrapper -> android.support.v7.internal.widget.ad:
    android.content.res.Resources mResources -> a
    java.lang.CharSequence getText(int) -> getText
    java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    java.lang.String getQuantityString(int,int) -> getQuantityString
    java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    java.lang.CharSequence[] getTextArray(int) -> getTextArray
    java.lang.String[] getStringArray(int) -> getStringArray
    int[] getIntArray(int) -> getIntArray
    android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    float getDimension(int) -> getDimension
    int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    int getDimensionPixelSize(int) -> getDimensionPixelSize
    float getFraction(int,int,int) -> getFraction
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    android.graphics.Movie getMovie(int) -> getMovie
    int getColor(int) -> getColor
    android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    boolean getBoolean(int) -> getBoolean
    int getInteger(int) -> getInteger
    android.content.res.XmlResourceParser getLayout(int) -> getLayout
    android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    android.content.res.XmlResourceParser getXml(int) -> getXml
    java.io.InputStream openRawResource(int) -> openRawResource
    java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    void getValue(int,android.util.TypedValue,boolean) -> getValue
    void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
    android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    android.content.res.Configuration getConfiguration() -> getConfiguration
    int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    java.lang.String getResourceName(int) -> getResourceName
    java.lang.String getResourcePackageName(int) -> getResourcePackageName
    java.lang.String getResourceTypeName(int) -> getResourceTypeName
    java.lang.String getResourceEntryName(int) -> getResourceEntryName
    void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
android.support.v7.internal.widget.RtlSpacingHelper -> android.support.v7.internal.widget.ae:
    int mLeft -> a
    int mRight -> b
    int mStart -> c
    int mEnd -> d
    int mExplicitLeft -> e
    int mExplicitRight -> f
    boolean mIsRtl -> g
    boolean mIsRelative -> h
    int getLeft() -> a
    int getRight() -> b
    int getStart() -> c
    int getEnd() -> d
    void setRelative(int,int) -> a
    void setAbsolute(int,int) -> b
    void setDirection(boolean) -> a
android.support.v7.internal.widget.ScrollingTabContainerView -> android.support.v7.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> a
    android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> f
    android.support.v7.widget.LinearLayoutCompat mTabLayout -> g
    android.widget.Spinner mTabSpinner -> h
    boolean mAllowCollapse -> i
    int mMaxTabWidth -> b
    int mStackedTabMaxWidth -> c
    int mContentHeight -> j
    int mSelectedTabIndex -> k
    android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim -> d
    android.support.v7.internal.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener -> e
    android.view.animation.Interpolator sAlphaInterpolator -> l
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> a
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> b
    boolean performExpand() -> c
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    android.support.v7.widget.LinearLayoutCompat createTabLayout() -> d
    android.widget.Spinner createSpinner() -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToTab(int) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView createTabView(android.support.v7.app.ActionBar$Tab,boolean) -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    android.support.v7.widget.LinearLayoutCompat access$200(android.support.v7.internal.widget.ScrollingTabContainerView) -> a
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView access$300(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean) -> a
android.support.v7.internal.widget.ScrollingTabContainerView$1 -> android.support.v7.internal.widget.af:
    android.view.View val$tabView -> a
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> b
    void run() -> run
android.support.v7.internal.widget.ScrollingTabContainerView$TabAdapter -> android.support.v7.internal.widget.ag:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener -> android.support.v7.internal.widget.ah:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ScrollingTabContainerView$TabView -> android.support.v7.internal.widget.ai:
    int[] BG_ATTRS -> b
    android.support.v7.app.ActionBar$Tab mTab -> c
    android.widget.TextView mTextView -> d
    android.widget.ImageView mIconView -> e
    android.view.View mCustomView -> f
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    void bindTab(android.support.v7.app.ActionBar$Tab) -> a
    void setSelected(boolean) -> setSelected
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onMeasure(int,int) -> onMeasure
    void update() -> a
    boolean onLongClick(android.view.View) -> onLongClick
    android.support.v7.app.ActionBar$Tab getTab() -> b
android.support.v7.internal.widget.ScrollingTabContainerView$VisibilityAnimListener -> android.support.v7.internal.widget.aj:
    boolean mCanceled -> b
    int mFinalVisibility -> c
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v7.internal.widget.ThemeUtils -> android.support.v7.internal.widget.ak:
    java.lang.ThreadLocal TL_TYPED_VALUE -> i
    int[] DISABLED_STATE_SET -> a
    int[] FOCUSED_STATE_SET -> b
    int[] ACTIVATED_STATE_SET -> c
    int[] PRESSED_STATE_SET -> d
    int[] CHECKED_STATE_SET -> e
    int[] SELECTED_STATE_SET -> f
    int[] NOT_PRESSED_OR_FOCUSED_STATE_SET -> g
    int[] EMPTY_STATE_SET -> h
    int[] TEMP_ARRAY -> j
    android.content.res.ColorStateList createDisabledStateList(int,int) -> a
    int getThemeAttrColor(android.content.Context,int) -> a
    android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> b
    int getDisabledThemeAttrColor(android.content.Context,int) -> c
    android.util.TypedValue getTypedValue() -> a
    int getThemeAttrColor(android.content.Context,int,float) -> a
android.support.v7.internal.widget.TintContextWrapper -> android.support.v7.internal.widget.al:
    android.content.res.Resources mResources -> a
    android.content.Context wrap(android.content.Context) -> a
    android.content.res.Resources getResources() -> getResources
android.support.v7.internal.widget.TintContextWrapper$TintResources -> android.support.v7.internal.widget.am:
    android.support.v7.internal.widget.TintManager mTintManager -> a
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
android.support.v7.internal.widget.TintImageView -> android.support.v7.internal.widget.TintImageView:
    int[] TINT_ATTRS -> a
    android.support.v7.internal.widget.TintManager mTintManager -> b
    void setImageResource(int) -> setImageResource
android.support.v7.internal.widget.TintInfo -> android.support.v7.internal.widget.an:
    android.content.res.ColorStateList mTintList -> a
    android.graphics.PorterDuff$Mode mTintMode -> b
    boolean mHasTintMode -> c
    boolean mHasTintList -> d
android.support.v7.internal.widget.TintManager -> android.support.v7.internal.widget.ao:
    boolean SHOULD_BE_USED -> a
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> b
    java.util.WeakHashMap INSTANCE_CACHE -> c
    android.support.v7.internal.widget.TintManager$ColorFilterLruCache COLOR_FILTER_CACHE -> d
    int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL -> e
    int[] TINT_COLOR_CONTROL_NORMAL -> f
    int[] COLORFILTER_COLOR_CONTROL_ACTIVATED -> g
    int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY -> h
    int[] TINT_COLOR_CONTROL_STATE_LIST -> i
    int[] TINT_CHECKABLE_BUTTON_LIST -> j
    java.lang.ref.WeakReference mContextRef -> k
    android.util.SparseArray mTintLists -> l
    android.content.res.ColorStateList mDefaultColorStateList -> m
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
    android.support.v7.internal.widget.TintManager get(android.content.Context) -> a
    android.graphics.drawable.Drawable getDrawable(int) -> a
    android.graphics.drawable.Drawable getDrawable(int,boolean) -> a
    boolean tintDrawableUsingColorFilter(int,android.graphics.drawable.Drawable) -> a
    boolean arrayContains(int[],int) -> a
    boolean isInTintList(int) -> d
    android.graphics.PorterDuff$Mode getTintMode(int) -> b
    android.content.res.ColorStateList getTintList(int) -> c
    android.content.res.ColorStateList getDefaultColorStateList(android.content.Context) -> b
    android.content.res.ColorStateList createCheckableButtonColorStateList(android.content.Context) -> c
    android.content.res.ColorStateList createSwitchTrackColorStateList(android.content.Context) -> d
    android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> e
    android.content.res.ColorStateList createEditTextColorStateList(android.content.Context) -> f
    android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> g
    android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> h
    android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> b
    android.content.res.ColorStateList createSpinnerColorStateList(android.content.Context) -> i
    void tintViewBackground(android.view.View,android.support.v7.internal.widget.TintInfo) -> a
    android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> a
    android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> a
android.support.v7.internal.widget.TintManager$ColorFilterLruCache -> android.support.v7.internal.widget.ap:
    android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> a
    android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> a
    int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> b
android.support.v7.internal.widget.TintTypedArray -> android.support.v7.internal.widget.aq:
    android.content.Context mContext -> a
    android.content.res.TypedArray mWrapped -> b
    android.support.v7.internal.widget.TintManager mTintManager -> c
    android.support.v7.internal.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> a
    android.support.v7.internal.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> a
    android.graphics.drawable.Drawable getDrawable(int) -> a
    android.graphics.drawable.Drawable getDrawableIfKnown(int) -> b
    int length() -> a
    java.lang.CharSequence getText(int) -> c
    java.lang.String getString(int) -> d
    boolean getBoolean(int,boolean) -> a
    int getInt(int,int) -> a
    float getFloat(int,float) -> a
    int getColor(int,int) -> b
    int getInteger(int,int) -> c
    int getDimensionPixelOffset(int,int) -> d
    int getDimensionPixelSize(int,int) -> e
    int getLayoutDimension(int,int) -> f
    int getResourceId(int,int) -> g
    boolean hasValue(int) -> e
    void recycle() -> b
    android.support.v7.internal.widget.TintManager getTintManager() -> c
android.support.v7.internal.widget.ToolbarWidgetWrapper -> android.support.v7.internal.widget.ar:
    android.support.v7.widget.Toolbar mToolbar -> a
    int mDisplayOpts -> b
    android.view.View mTabView -> c
    android.view.View mCustomView -> d
    android.graphics.drawable.Drawable mIcon -> e
    android.graphics.drawable.Drawable mLogo -> f
    android.graphics.drawable.Drawable mNavIcon -> g
    boolean mTitleSet -> h
    java.lang.CharSequence mTitle -> i
    java.lang.CharSequence mSubtitle -> j
    java.lang.CharSequence mHomeDescription -> k
    android.view.Window$Callback mWindowCallback -> l
    boolean mMenuPrepared -> m
    android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter -> n
    int mNavigationMode -> o
    android.support.v7.internal.widget.TintManager mTintManager -> p
    int mDefaultNavigationContentDescription -> q
    android.graphics.drawable.Drawable mDefaultNavigationIcon -> r
    void setDefaultNavigationContentDescription(int) -> e
    void setDefaultNavigationIcon(android.graphics.drawable.Drawable) -> c
    int detectDisplayOptions() -> r
    android.view.ViewGroup getViewGroup() -> a
    android.content.Context getContext() -> b
    boolean hasExpandedActionView() -> c
    void collapseActionView() -> d
    void setWindowCallback(android.view.Window$Callback) -> a
    void setWindowTitle(java.lang.CharSequence) -> a
    java.lang.CharSequence getTitle() -> e
    void setTitle(java.lang.CharSequence) -> b
    void setTitleInt(java.lang.CharSequence) -> e
    void setSubtitle(java.lang.CharSequence) -> c
    void initProgress() -> f
    void initIndeterminateProgress() -> g
    void setIcon(int) -> a
    void setIcon(android.graphics.drawable.Drawable) -> a
    void setLogo(int) -> b
    void setLogo(android.graphics.drawable.Drawable) -> d
    void updateToolbarLogo() -> s
    boolean canShowOverflowMenu() -> h
    boolean isOverflowMenuShowing() -> i
    boolean isOverflowMenuShowPending() -> j
    boolean showOverflowMenu() -> k
    boolean hideOverflowMenu() -> l
    void setMenuPrepared() -> m
    void setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    void dismissPopupMenus() -> n
    int getDisplayOptions() -> o
    void setDisplayOptions(int) -> c
    void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView) -> a
    void setCollapsible(boolean) -> a
    void setHomeButtonEnabled(boolean) -> b
    int getNavigationMode() -> p
    void setCustomView(android.view.View) -> a
    android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> a
    void setNavigationIcon(android.graphics.drawable.Drawable) -> b
    void setNavigationContentDescription(java.lang.CharSequence) -> d
    void setNavigationContentDescription(int) -> d
    void updateHomeAccessibility() -> t
    void updateNavigationIcon() -> u
    void setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.view.Menu getMenu() -> q
    android.support.v7.widget.Toolbar access$000(android.support.v7.internal.widget.ToolbarWidgetWrapper) -> a
    java.lang.CharSequence access$100(android.support.v7.internal.widget.ToolbarWidgetWrapper) -> b
    android.view.Window$Callback access$200(android.support.v7.internal.widget.ToolbarWidgetWrapper) -> c
    boolean access$300(android.support.v7.internal.widget.ToolbarWidgetWrapper) -> d
android.support.v7.internal.widget.ToolbarWidgetWrapper$1 -> android.support.v7.internal.widget.as:
    android.support.v7.internal.view.menu.ActionMenuItem mNavItem -> a
    android.support.v7.internal.widget.ToolbarWidgetWrapper this$0 -> b
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ToolbarWidgetWrapper$2 -> android.support.v7.internal.widget.at:
    boolean mCanceled -> b
    android.support.v7.internal.widget.ToolbarWidgetWrapper this$0 -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v7.internal.widget.ToolbarWidgetWrapper$3 -> android.support.v7.internal.widget.au:
    android.support.v7.internal.widget.ToolbarWidgetWrapper this$0 -> a
    void onAnimationStart(android.view.View) -> a
android.support.v7.internal.widget.ViewStubCompat -> android.support.v7.internal.widget.ViewStubCompat:
    int mLayoutResource -> a
    int mInflatedId -> b
    java.lang.ref.WeakReference mInflatedViewRef -> c
    android.view.LayoutInflater mInflater -> d
    android.support.v7.internal.widget.ViewStubCompat$OnInflateListener mInflateListener -> e
    int getInflatedId() -> getInflatedId
    void setInflatedId(int) -> setInflatedId
    int getLayoutResource() -> getLayoutResource
    void setLayoutResource(int) -> setLayoutResource
    void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    void onMeasure(int,int) -> onMeasure
    void draw(android.graphics.Canvas) -> draw
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void setVisibility(int) -> setVisibility
    android.view.View inflate() -> a
    void setOnInflateListener(android.support.v7.internal.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
android.support.v7.internal.widget.ViewStubCompat$OnInflateListener -> android.support.v7.internal.widget.av:
    void onInflate(android.support.v7.internal.widget.ViewStubCompat,android.view.View) -> a
android.support.v7.internal.widget.ViewUtils -> android.support.v7.internal.widget.aw:
    java.lang.reflect.Method sComputeFitSystemWindowsMethod -> a
    boolean isLayoutRtl(android.view.View) -> a
    int combineMeasuredStates(int,int) -> a
    void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> a
    void makeOptionalFitsSystemWindows(android.view.View) -> b
android.support.v7.recyclerview.R -> android.support.v7.d.a:
android.support.v7.recyclerview.R$styleable -> android.support.v7.d.b:
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
android.support.v7.view.ActionMode -> android.support.v7.e.a:
    java.lang.Object mTag -> a
    boolean mTitleOptionalHint -> b
    void setTag(java.lang.Object) -> a
    java.lang.Object getTag() -> j
    void setTitle(java.lang.CharSequence) -> b
    void setTitle(int) -> a
    void setSubtitle(java.lang.CharSequence) -> a
    void setSubtitle(int) -> b
    void setTitleOptionalHint(boolean) -> a
    boolean getTitleOptionalHint() -> k
    boolean isTitleOptional() -> h
    void setCustomView(android.view.View) -> a
    void invalidate() -> d
    void finish() -> c
    android.view.Menu getMenu() -> b
    java.lang.CharSequence getTitle() -> f
    java.lang.CharSequence getSubtitle() -> g
    android.view.View getCustomView() -> i
    android.view.MenuInflater getMenuInflater() -> a
android.support.v7.view.ActionMode$Callback -> android.support.v7.e.b:
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> a
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> a
android.support.v7.view.CollapsibleActionView -> android.support.v7.e.c:
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
android.support.v7.widget.ActionMenuPresenter -> android.support.v7.widget.ActionMenuPresenter:
    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton -> i
    android.graphics.drawable.Drawable mPendingOverflowIcon -> j
    boolean mPendingOverflowIconSet -> k
    boolean mReserveOverflow -> l
    boolean mReserveOverflowSet -> m
    int mWidthLimit -> n
    int mActionItemWidthLimit -> o
    int mMaxItems -> p
    boolean mMaxItemsSet -> q
    boolean mStrictWidthLimit -> r
    boolean mWidthLimitSet -> s
    boolean mExpandedActionViewsExclusive -> t
    int mMinCellSize -> u
    android.util.SparseBooleanArray mActionButtonGroups -> v
    android.view.View mScrapActionButtonView -> w
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup -> x
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> y
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> z
    android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback -> A
    android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> g
    int mOpenSubMenuId -> h
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setReserveOverflow(boolean) -> c
    void setExpandedActionViewsExclusive(boolean) -> d
    void setOverflowIcon(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getOverflowIcon() -> e
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void updateMenuView(boolean) -> a
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    android.view.View findViewForItem(android.view.MenuItem) -> a
    boolean showOverflowMenu() -> f
    boolean hideOverflowMenu() -> g
    boolean dismissPopupMenus() -> h
    boolean hideSubMenus() -> i
    boolean isOverflowMenuShowing() -> j
    boolean isOverflowMenuShowPending() -> k
    boolean flagActionItems() -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    android.os.Parcelable onSaveInstanceState() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> a
    void onSubUiVisibilityChanged(boolean) -> b
    void setMenuView(android.support.v7.widget.ActionMenuView) -> a
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup access$200(android.support.v7.widget.ActionMenuPresenter) -> a
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable access$300(android.support.v7.widget.ActionMenuPresenter) -> b
    android.support.v7.internal.view.menu.MenuBuilder access$400(android.support.v7.widget.ActionMenuPresenter) -> c
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup access$202(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OverflowPopup) -> a
    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton access$500(android.support.v7.widget.ActionMenuPresenter) -> d
    android.support.v7.internal.view.menu.MenuView access$600(android.support.v7.widget.ActionMenuPresenter) -> e
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu access$702(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu) -> a
    android.support.v7.internal.view.menu.MenuBuilder access$800(android.support.v7.widget.ActionMenuPresenter) -> f
    android.support.v7.internal.view.menu.MenuView access$900(android.support.v7.widget.ActionMenuPresenter) -> g
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable access$302(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable) -> a
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu access$700(android.support.v7.widget.ActionMenuPresenter) -> h
android.support.v7.widget.ActionMenuPresenter$1 -> android.support.v7.widget.a:
android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu -> android.support.v7.widget.b:
    android.support.v7.internal.view.menu.SubMenuBuilder mSubMenu -> d
    android.support.v7.widget.ActionMenuPresenter this$0 -> c
    void onDismiss() -> onDismiss
android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback -> android.support.v7.widget.c:
    android.support.v7.widget.ActionMenuPresenter this$0 -> a
    android.support.v7.widget.ListPopupWindow getPopup() -> a
android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable -> android.support.v7.widget.d:
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup mPopup -> b
    android.support.v7.widget.ActionMenuPresenter this$0 -> a
    void run() -> run
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton -> android.support.v7.widget.e:
    float[] mTempPts -> b
    android.support.v7.widget.ActionMenuPresenter this$0 -> a
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    boolean setFrame(int,int,int,int) -> setFrame
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 -> android.support.v7.widget.f:
    android.support.v7.widget.ActionMenuPresenter val$this$0 -> a
    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton this$1 -> b
    android.support.v7.widget.ListPopupWindow getPopup() -> a
    boolean onForwardingStarted() -> b
    boolean onForwardingStopped() -> c
android.support.v7.widget.ActionMenuPresenter$OverflowPopup -> android.support.v7.widget.g:
    android.support.v7.widget.ActionMenuPresenter this$0 -> c
    void onDismiss() -> onDismiss
android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback -> android.support.v7.widget.h:
    android.support.v7.widget.ActionMenuPresenter this$0 -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
android.support.v7.widget.ActionMenuPresenter$SavedState -> android.support.v7.widget.ActionMenuPresenter$SavedState:
    int openSubMenuId -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.ActionMenuPresenter$SavedState$1 -> android.support.v7.widget.i:
    android.support.v7.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.widget.ActionMenuPresenter$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.ActionMenuView -> android.support.v7.widget.ActionMenuView:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    android.content.Context mPopupContext -> b
    int mPopupTheme -> c
    boolean mReserveOverflow -> d
    android.support.v7.widget.ActionMenuPresenter mPresenter -> e
    android.support.v7.internal.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> f
    android.support.v7.internal.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> g
    boolean mFormatItems -> h
    int mFormatItemsWidth -> i
    int mMinCellSize -> j
    int mGeneratedItemPadding -> k
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener -> l
    void setPopupTheme(int) -> setPopupTheme
    int getPopupTheme() -> getPopupTheme
    void setPresenter(android.support.v7.widget.ActionMenuPresenter) -> setPresenter
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setOnMenuItemClickListener(android.support.v7.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> c
    int measureChildForCells(android.view.View,int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    boolean isOverflowReserved() -> a
    void setOverflowReserved(boolean) -> setOverflowReserved
    android.support.v7.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> b
    android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.v7.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> c
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    int getWindowAnimations() -> getWindowAnimations
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.view.Menu getMenu() -> getMenu
    void setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    android.support.v7.internal.view.menu.MenuBuilder peekMenu() -> d
    boolean showOverflowMenu() -> e
    boolean hideOverflowMenu() -> f
    boolean isOverflowMenuShowing() -> g
    boolean isOverflowMenuShowPending() -> h
    void dismissPopupMenus() -> i
    boolean hasSupportDividerBeforeChildAt(int) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> b
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> j
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener access$200(android.support.v7.widget.ActionMenuView) -> a
    android.support.v7.internal.view.menu.MenuBuilder$Callback access$300(android.support.v7.widget.ActionMenuView) -> b
android.support.v7.widget.ActionMenuView$1 -> android.support.v7.widget.j:
android.support.v7.widget.ActionMenuView$ActionMenuChildView -> android.support.v7.widget.k:
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback -> android.support.v7.widget.l:
    android.support.v7.widget.ActionMenuView this$0 -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.widget.ActionMenuView$LayoutParams -> android.support.v7.widget.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
    boolean preventEdgeOffset -> e
    boolean expanded -> f
android.support.v7.widget.ActionMenuView$MenuBuilderCallback -> android.support.v7.widget.m:
    android.support.v7.widget.ActionMenuView this$0 -> a
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.widget.ActionMenuView$OnMenuItemClickListener -> android.support.v7.widget.n:
    boolean onMenuItemClick(android.view.MenuItem) -> a
android.support.v7.widget.AdapterHelper -> android.support.v7.widget.o:
    android.support.v4.util.Pools$Pool mUpdateOpPool -> g
    java.util.ArrayList mPendingUpdates -> a
    java.util.ArrayList mPostponedList -> b
    android.support.v7.widget.AdapterHelper$Callback mCallback -> c
    java.lang.Runnable mOnItemProcessedCallback -> d
    boolean mDisableRecycler -> e
    android.support.v7.widget.OpReorderer mOpReorderer -> f
    void reset() -> a
    void preProcess() -> b
    void consumePostponedUpdates() -> c
    void applyMove(android.support.v7.widget.AdapterHelper$UpdateOp) -> b
    void applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp) -> c
    void applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> d
    void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp) -> e
    void dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int) -> a
    int updatePositionWithPostponed(int,int) -> b
    boolean canFindInPreLayout(int) -> c
    void applyAdd(android.support.v7.widget.AdapterHelper$UpdateOp) -> f
    void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp) -> g
    boolean hasPendingUpdates() -> d
    int findPositionOffset(int) -> a
    int findPositionOffset(int,int) -> a
    void consumeUpdatesInOnePass() -> e
    int applyPendingUpdatesToPosition(int) -> b
    android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> a
    void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp) -> a
    void recycleUpdateOpsAndClearList(java.util.List) -> a
android.support.v7.widget.AdapterHelper$Callback -> android.support.v7.widget.p:
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int) -> a
    void offsetPositionsForRemovingInvisible(int,int) -> a
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> b
    void markViewHoldersUpdated(int,int,java.lang.Object) -> a
    void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> a
    void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> b
    void offsetPositionsForAdd(int,int) -> c
    void offsetPositionsForMove(int,int) -> d
android.support.v7.widget.AdapterHelper$UpdateOp -> android.support.v7.widget.q:
    int cmd -> a
    int positionStart -> b
    java.lang.Object payload -> c
    int itemCount -> d
    java.lang.String cmdToString() -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v7.widget.AppCompatAutoCompleteTextView -> android.support.v7.widget.AppCompatAutoCompleteTextView:
    int[] TINT_ATTRS -> a
    android.support.v7.internal.widget.TintManager mTintManager -> b
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> c
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> d
    void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
android.support.v7.widget.AppCompatBackgroundHelper -> android.support.v7.widget.r:
    android.view.View mView -> a
    android.support.v7.internal.widget.TintManager mTintManager -> b
    android.support.v7.internal.widget.TintInfo mInternalBackgroundTint -> c
    android.support.v7.internal.widget.TintInfo mBackgroundTint -> d
    void loadFromAttributes(android.util.AttributeSet,int) -> a
    void onSetBackgroundResource(int) -> a
    void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> a
    android.content.res.ColorStateList getSupportBackgroundTintList() -> a
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> a
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> b
    void applySupportBackgroundTint() -> c
    void setInternalBackgroundTint(android.content.res.ColorStateList) -> b
android.support.v7.widget.AppCompatButton -> android.support.v7.widget.AppCompatButton:
    android.support.v7.internal.widget.TintManager mTintManager -> a
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> c
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void setSupportAllCaps(boolean) -> setSupportAllCaps
android.support.v7.widget.AppCompatCheckBox -> android.support.v7.widget.AppCompatCheckBox:
    android.support.v7.internal.widget.TintManager mTintManager -> a
    android.support.v7.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> b
    void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    void setButtonDrawable(int) -> setButtonDrawable
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
android.support.v7.widget.AppCompatCheckedTextView -> android.support.v7.widget.AppCompatCheckedTextView:
    int[] TINT_ATTRS -> a
    android.support.v7.internal.widget.TintManager mTintManager -> b
    void setCheckMarkDrawable(int) -> setCheckMarkDrawable
android.support.v7.widget.AppCompatCompoundButtonHelper -> android.support.v7.widget.s:
    android.widget.CompoundButton mView -> a
    android.support.v7.internal.widget.TintManager mTintManager -> b
    android.content.res.ColorStateList mButtonTintList -> c
    android.graphics.PorterDuff$Mode mButtonTintMode -> d
    boolean mHasButtonTint -> e
    boolean mHasButtonTintMode -> f
    boolean mSkipNextApply -> g
    void loadFromAttributes(android.util.AttributeSet,int) -> a
    void setSupportButtonTintList(android.content.res.ColorStateList) -> a
    android.content.res.ColorStateList getSupportButtonTintList() -> a
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> a
    android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> b
    void onSetButtonDrawable() -> c
    void applyButtonTint() -> d
    int getCompoundPaddingLeft(int) -> a
android.support.v7.widget.AppCompatEditText -> android.support.v7.widget.AppCompatEditText:
    android.support.v7.internal.widget.TintManager mTintManager -> a
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> c
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
android.support.v7.widget.AppCompatMultiAutoCompleteTextView -> android.support.v7.widget.AppCompatMultiAutoCompleteTextView:
    int[] TINT_ATTRS -> a
    android.support.v7.internal.widget.TintManager mTintManager -> b
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> c
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> d
    void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
android.support.v7.widget.AppCompatRadioButton -> android.support.v7.widget.AppCompatRadioButton:
    android.support.v7.internal.widget.TintManager mTintManager -> a
    android.support.v7.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> b
    void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    void setButtonDrawable(int) -> setButtonDrawable
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
android.support.v7.widget.AppCompatRatingBar -> android.support.v7.widget.AppCompatRatingBar:
    int[] TINT_ATTRS -> a
    android.graphics.Bitmap mSampleTile -> b
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    void onMeasure(int,int) -> onMeasure
android.support.v7.widget.AppCompatSpinner -> android.support.v7.widget.AppCompatSpinner:
    boolean IS_AT_LEAST_M -> a
    boolean IS_AT_LEAST_JB -> b
    int[] ATTRS_ANDROID_SPINNERMODE -> c
    android.support.v7.internal.widget.TintManager mTintManager -> d
    android.support.v7.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> e
    android.content.Context mPopupContext -> f
    android.support.v7.widget.ListPopupWindow$ForwardingListener mForwardingListener -> g
    android.widget.SpinnerAdapter mTempAdapter -> h
    boolean mPopupSet -> i
    android.support.v7.widget.AppCompatSpinner$DropdownPopup mPopup -> j
    int mDropDownWidth -> k
    android.graphics.Rect mTempRect -> l
    android.content.Context getPopupContext() -> getPopupContext
    void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    void setDropDownWidth(int) -> setDropDownWidth
    int getDropDownWidth() -> getDropDownWidth
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    boolean performClick() -> performClick
    void setPrompt(java.lang.CharSequence) -> setPrompt
    java.lang.CharSequence getPrompt() -> getPrompt
    void setBackgroundResource(int) -> setBackgroundResource
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    void drawableStateChanged() -> drawableStateChanged
    int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.support.v7.widget.AppCompatSpinner$DropdownPopup access$000(android.support.v7.widget.AppCompatSpinner) -> a
    boolean access$100() -> a
    android.graphics.Rect access$300(android.support.v7.widget.AppCompatSpinner) -> b
    int access$400(android.support.v7.widget.AppCompatSpinner) -> c
    int access$500(android.support.v7.widget.AppCompatSpinner,android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
android.support.v7.widget.AppCompatSpinner$1 -> android.support.v7.widget.t:
    android.support.v7.widget.AppCompatSpinner$DropdownPopup val$popup -> a
    android.support.v7.widget.AppCompatSpinner this$0 -> b
    android.support.v7.widget.ListPopupWindow getPopup() -> a
    boolean onForwardingStarted() -> b
android.support.v7.widget.AppCompatSpinner$DropDownAdapter -> android.support.v7.widget.u:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
android.support.v7.widget.AppCompatSpinner$DropdownPopup -> android.support.v7.widget.v:
    java.lang.CharSequence mHintText -> c
    android.widget.ListAdapter mAdapter -> d
    android.graphics.Rect mVisibleRect -> e
    android.support.v7.widget.AppCompatSpinner this$0 -> a
    void setAdapter(android.widget.ListAdapter) -> a
    java.lang.CharSequence getHintText() -> a
    void setPromptText(java.lang.CharSequence) -> a
    void computeContentWidth() -> b
    void show() -> c
    boolean isVisibleToUser(android.view.View) -> b
    android.widget.ListAdapter access$200(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> a
    boolean access$600(android.support.v7.widget.AppCompatSpinner$DropdownPopup,android.view.View) -> a
    void access$701(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> b
android.support.v7.widget.AppCompatSpinner$DropdownPopup$1 -> android.support.v7.widget.w:
    android.support.v7.widget.AppCompatSpinner val$this$0 -> a
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.widget.AppCompatSpinner$DropdownPopup$2 -> android.support.v7.widget.x:
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> a
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.widget.AppCompatSpinner$DropdownPopup$3 -> android.support.v7.widget.y:
    android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener -> a
    android.support.v7.widget.AppCompatSpinner$DropdownPopup this$1 -> b
    void onDismiss() -> onDismiss
android.support.v7.widget.AppCompatTextHelper -> android.support.v7.widget.z:
    int[] VIEW_ATTRS -> a
    int[] TEXT_APPEARANCE_ATTRS -> b
    android.widget.TextView mView -> c
    void loadFromAttributes(android.util.AttributeSet,int) -> a
    void onSetTextAppearance(android.content.Context,int) -> a
    void setAllCaps(boolean) -> a
android.support.v7.widget.AppCompatTextView -> android.support.v7.widget.AppCompatTextView:
    android.support.v7.widget.AppCompatTextHelper mTextHelper -> a
    void setTextAppearance(android.content.Context,int) -> setTextAppearance
android.support.v7.widget.CardView -> android.support.v7.widget.CardView:
    android.support.v7.widget.CardViewImpl IMPL -> a
    boolean mCompatPadding -> b
    boolean mPreventCornerOverlap -> c
    android.graphics.Rect mContentPadding -> d
    android.graphics.Rect mShadowBounds -> e
    void setPadding(int,int,int,int) -> setPadding
    void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    boolean getUseCompatPadding() -> getUseCompatPadding
    void setUseCompatPadding(boolean) -> setUseCompatPadding
    void setContentPadding(int,int,int,int) -> setContentPadding
    void onMeasure(int,int) -> onMeasure
    void initialize(android.content.Context,android.util.AttributeSet,int) -> a
    void setCardBackgroundColor(int) -> setCardBackgroundColor
    int getContentPaddingLeft() -> getContentPaddingLeft
    int getContentPaddingRight() -> getContentPaddingRight
    int getContentPaddingTop() -> getContentPaddingTop
    int getContentPaddingBottom() -> getContentPaddingBottom
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setShadowPadding(int,int,int,int) -> setShadowPadding
    void setCardElevation(float) -> setCardElevation
    float getCardElevation() -> getCardElevation
    void setMaxCardElevation(float) -> setMaxCardElevation
    float getMaxCardElevation() -> getMaxCardElevation
    boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
android.support.v7.widget.CardViewApi21 -> android.support.v7.widget.aa:
    void initialize(android.support.v7.widget.CardViewDelegate,android.content.Context,int,float,float,float) -> a
    void setRadius(android.support.v7.widget.CardViewDelegate,float) -> a
    void initStatic() -> a
    void setMaxElevation(android.support.v7.widget.CardViewDelegate,float) -> b
    float getMaxElevation(android.support.v7.widget.CardViewDelegate) -> a
    float getMinWidth(android.support.v7.widget.CardViewDelegate) -> b
    float getMinHeight(android.support.v7.widget.CardViewDelegate) -> c
    float getRadius(android.support.v7.widget.CardViewDelegate) -> d
    void setElevation(android.support.v7.widget.CardViewDelegate,float) -> c
    float getElevation(android.support.v7.widget.CardViewDelegate) -> e
    void updatePadding(android.support.v7.widget.CardViewDelegate) -> f
    void onCompatPaddingChanged(android.support.v7.widget.CardViewDelegate) -> g
    void onPreventCornerOverlapChanged(android.support.v7.widget.CardViewDelegate) -> h
    void setBackgroundColor(android.support.v7.widget.CardViewDelegate,int) -> a
android.support.v7.widget.CardViewDelegate -> android.support.v7.widget.ab:
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    android.graphics.drawable.Drawable getBackground() -> getBackground
    boolean getUseCompatPadding() -> getUseCompatPadding
    boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    void setShadowPadding(int,int,int,int) -> setShadowPadding
android.support.v7.widget.CardViewEclairMr1 -> android.support.v7.widget.ac:
    android.graphics.RectF sCornerRect -> a
    void initStatic() -> a
    void initialize(android.support.v7.widget.CardViewDelegate,android.content.Context,int,float,float,float) -> a
    android.support.v7.widget.RoundRectDrawableWithShadow createBackground(android.content.Context,int,float,float,float) -> a
    void updatePadding(android.support.v7.widget.CardViewDelegate) -> f
    void onCompatPaddingChanged(android.support.v7.widget.CardViewDelegate) -> g
    void onPreventCornerOverlapChanged(android.support.v7.widget.CardViewDelegate) -> h
    void setBackgroundColor(android.support.v7.widget.CardViewDelegate,int) -> a
    void setRadius(android.support.v7.widget.CardViewDelegate,float) -> a
    float getRadius(android.support.v7.widget.CardViewDelegate) -> d
    void setElevation(android.support.v7.widget.CardViewDelegate,float) -> c
    float getElevation(android.support.v7.widget.CardViewDelegate) -> e
    void setMaxElevation(android.support.v7.widget.CardViewDelegate,float) -> b
    float getMaxElevation(android.support.v7.widget.CardViewDelegate) -> a
    float getMinWidth(android.support.v7.widget.CardViewDelegate) -> b
    float getMinHeight(android.support.v7.widget.CardViewDelegate) -> c
    android.support.v7.widget.RoundRectDrawableWithShadow getShadowBackground(android.support.v7.widget.CardViewDelegate) -> i
android.support.v7.widget.CardViewEclairMr1$1 -> android.support.v7.widget.ad:
    android.support.v7.widget.CardViewEclairMr1 this$0 -> a
    void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> a
android.support.v7.widget.CardViewImpl -> android.support.v7.widget.ae:
    void initialize(android.support.v7.widget.CardViewDelegate,android.content.Context,int,float,float,float) -> a
    void setRadius(android.support.v7.widget.CardViewDelegate,float) -> a
    float getRadius(android.support.v7.widget.CardViewDelegate) -> d
    void setElevation(android.support.v7.widget.CardViewDelegate,float) -> c
    float getElevation(android.support.v7.widget.CardViewDelegate) -> e
    void initStatic() -> a
    void setMaxElevation(android.support.v7.widget.CardViewDelegate,float) -> b
    float getMaxElevation(android.support.v7.widget.CardViewDelegate) -> a
    float getMinWidth(android.support.v7.widget.CardViewDelegate) -> b
    float getMinHeight(android.support.v7.widget.CardViewDelegate) -> c
    void updatePadding(android.support.v7.widget.CardViewDelegate) -> f
    void onCompatPaddingChanged(android.support.v7.widget.CardViewDelegate) -> g
    void onPreventCornerOverlapChanged(android.support.v7.widget.CardViewDelegate) -> h
    void setBackgroundColor(android.support.v7.widget.CardViewDelegate,int) -> a
android.support.v7.widget.CardViewJellybeanMr1 -> android.support.v7.widget.af:
    void initStatic() -> a
android.support.v7.widget.CardViewJellybeanMr1$1 -> android.support.v7.widget.ag:
    android.support.v7.widget.CardViewJellybeanMr1 this$0 -> a
    void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> a
android.support.v7.widget.ChildHelper -> android.support.v7.widget.ah:
    android.support.v7.widget.ChildHelper$Callback mCallback -> a
    android.support.v7.widget.ChildHelper$Bucket mBucket -> b
    java.util.List mHiddenViews -> c
    void hideViewInternal(android.view.View) -> f
    boolean unhideViewInternal(android.view.View) -> g
    void addView(android.view.View,boolean) -> a
    void addView(android.view.View,int,boolean) -> a
    int getOffset(int) -> e
    void removeView(android.view.View) -> a
    void removeViewAt(int) -> a
    android.view.View getChildAt(int) -> b
    void removeAllViewsUnfiltered() -> a
    android.view.View findHiddenNonRemovedView(int,int) -> a
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> a
    int getChildCount() -> b
    int getUnfilteredChildCount() -> c
    android.view.View getUnfilteredChildAt(int) -> c
    void detachViewFromParent(int) -> d
    int indexOfChild(android.view.View) -> b
    boolean isHidden(android.view.View) -> c
    void hide(android.view.View) -> d
    java.lang.String toString() -> toString
    boolean removeViewIfHidden(android.view.View) -> e
android.support.v7.widget.ChildHelper$Bucket -> android.support.v7.widget.ai:
    long mData -> a
    android.support.v7.widget.ChildHelper$Bucket next -> b
    void set(int) -> a
    void ensureNext() -> b
    void clear(int) -> b
    boolean get(int) -> c
    void reset() -> a
    void insert(int,boolean) -> a
    boolean remove(int) -> d
    int countOnesBefore(int) -> e
    java.lang.String toString() -> toString
android.support.v7.widget.ChildHelper$Callback -> android.support.v7.widget.aj:
    int getChildCount() -> a
    void addView(android.view.View,int) -> a
    int indexOfChild(android.view.View) -> a
    void removeViewAt(int) -> a
    android.view.View getChildAt(int) -> b
    void removeAllViews() -> b
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> b
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    void detachViewFromParent(int) -> c
    void onEnteredHiddenState(android.view.View) -> c
    void onLeftHiddenState(android.view.View) -> d
android.support.v7.widget.DefaultItemAnimator -> android.support.v7.widget.ak:
    java.util.ArrayList mPendingRemovals -> a
    java.util.ArrayList mPendingAdditions -> b
    java.util.ArrayList mPendingMoves -> c
    java.util.ArrayList mPendingChanges -> d
    java.util.ArrayList mAdditionsList -> e
    java.util.ArrayList mMovesList -> f
    java.util.ArrayList mChangesList -> g
    java.util.ArrayList mAddAnimations -> h
    java.util.ArrayList mMoveAnimations -> i
    java.util.ArrayList mRemoveAnimations -> j
    java.util.ArrayList mChangeAnimations -> k
    void runPendingAnimations() -> a
    boolean animateRemove(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void animateRemoveImpl(android.support.v7.widget.RecyclerView$ViewHolder) -> p
    boolean animateAdd(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    void animateAddImpl(android.support.v7.widget.RecyclerView$ViewHolder) -> q
    boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    void animateMoveImpl(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> b
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    void animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> a
    void endChangeAnimation(java.util.List,android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> b
    boolean endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    void resetAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> r
    boolean isRunning() -> b
    void dispatchFinishedWhenDone() -> j
    void endAnimations() -> c
    void cancelAll(java.util.List) -> a
    void access$000(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    java.util.ArrayList access$100(android.support.v7.widget.DefaultItemAnimator) -> a
    void access$200(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> a
    java.util.ArrayList access$300(android.support.v7.widget.DefaultItemAnimator) -> b
    void access$400(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder) -> a
    java.util.ArrayList access$500(android.support.v7.widget.DefaultItemAnimator) -> c
    java.util.ArrayList access$700(android.support.v7.widget.DefaultItemAnimator) -> d
    void access$800(android.support.v7.widget.DefaultItemAnimator) -> e
    java.util.ArrayList access$900(android.support.v7.widget.DefaultItemAnimator) -> f
    java.util.ArrayList access$1100(android.support.v7.widget.DefaultItemAnimator) -> g
    java.util.ArrayList access$1300(android.support.v7.widget.DefaultItemAnimator) -> h
android.support.v7.widget.DefaultItemAnimator$1 -> android.support.v7.widget.al:
    java.util.ArrayList val$moves -> a
    android.support.v7.widget.DefaultItemAnimator this$0 -> b
    void run() -> run
android.support.v7.widget.DefaultItemAnimator$2 -> android.support.v7.widget.am:
    java.util.ArrayList val$changes -> a
    android.support.v7.widget.DefaultItemAnimator this$0 -> b
    void run() -> run
android.support.v7.widget.DefaultItemAnimator$3 -> android.support.v7.widget.an:
    java.util.ArrayList val$additions -> a
    android.support.v7.widget.DefaultItemAnimator this$0 -> b
    void run() -> run
android.support.v7.widget.DefaultItemAnimator$4 -> android.support.v7.widget.ao:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> a
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> b
    android.support.v7.widget.DefaultItemAnimator this$0 -> c
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.DefaultItemAnimator$5 -> android.support.v7.widget.ap:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> a
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> b
    android.support.v7.widget.DefaultItemAnimator this$0 -> c
    void onAnimationStart(android.view.View) -> a
    void onAnimationCancel(android.view.View) -> c
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.DefaultItemAnimator$6 -> android.support.v7.widget.aq:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> a
    int val$deltaX -> b
    int val$deltaY -> c
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> d
    android.support.v7.widget.DefaultItemAnimator this$0 -> e
    void onAnimationStart(android.view.View) -> a
    void onAnimationCancel(android.view.View) -> c
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.DefaultItemAnimator$7 -> android.support.v7.widget.ar:
    android.support.v7.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.support.v4.view.ViewPropertyAnimatorCompat val$oldViewAnim -> b
    android.support.v7.widget.DefaultItemAnimator this$0 -> c
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.DefaultItemAnimator$8 -> android.support.v7.widget.as:
    android.support.v7.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.support.v4.view.ViewPropertyAnimatorCompat val$newViewAnimation -> b
    android.view.View val$newView -> c
    android.support.v7.widget.DefaultItemAnimator this$0 -> d
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.DefaultItemAnimator$ChangeInfo -> android.support.v7.widget.at:
    android.support.v7.widget.RecyclerView$ViewHolder oldHolder -> a
    android.support.v7.widget.RecyclerView$ViewHolder newHolder -> b
    int fromX -> c
    int fromY -> d
    int toX -> e
    int toY -> f
    java.lang.String toString() -> toString
android.support.v7.widget.DefaultItemAnimator$MoveInfo -> android.support.v7.widget.au:
    android.support.v7.widget.RecyclerView$ViewHolder holder -> a
    int fromX -> b
    int fromY -> c
    int toX -> d
    int toY -> e
android.support.v7.widget.DefaultItemAnimator$VpaListenerAdapter -> android.support.v7.widget.av:
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v7.widget.GridLayoutManager -> android.support.v7.widget.GridLayoutManager:
    int MAIN_DIR_SPEC -> a
    boolean mPendingSpanCountChange -> b
    int mSpanCount -> c
    int[] mCachedBorders -> d
    android.view.View[] mSet -> e
    android.util.SparseIntArray mPreLayoutSpanSizeCache -> f
    android.util.SparseIntArray mPreLayoutSpanIndexCache -> g
    android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup -> h
    android.graphics.Rect mDecorInsets -> i
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> b
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> c
    void clearPreLayoutSpanMappingCache() -> B
    void cachePreLayoutSpanMapping() -> C
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> a
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> a
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> b
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> a
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> a
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> a
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> a
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> a
    void updateMeasurements() -> D
    void calculateItemBorders(int) -> j
    void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> a
    void ensureAnchorIsInFirstSpan(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> b
    android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int) -> a
    int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> a
    int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> b
    int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> c
    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult) -> a
    int getMainDirSpec(int) -> k
    void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> a
    int updateSpecWithExtra(int,int,int) -> a
    void assignSpans(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,boolean) -> a
    boolean supportsPredictiveItemAnimations() -> b
android.support.v7.widget.GridLayoutManager$LayoutParams -> android.support.v7.widget.GridLayoutManager$LayoutParams:
    int mSpanIndex -> e
    int mSpanSize -> f
    int getSpanIndex() -> a
    int getSpanSize() -> b
    int access$000(android.support.v7.widget.GridLayoutManager$LayoutParams) -> a
    int access$100(android.support.v7.widget.GridLayoutManager$LayoutParams) -> b
    int access$102(android.support.v7.widget.GridLayoutManager$LayoutParams,int) -> a
    int access$002(android.support.v7.widget.GridLayoutManager$LayoutParams,int) -> b
android.support.v7.widget.GridLayoutManager$SpanSizeLookup -> android.support.v7.widget.aw:
    android.util.SparseIntArray mSpanIndexCache -> a
    boolean mCacheSpanIndices -> b
    int getSpanSize(int) -> a
    void invalidateSpanIndexCache() -> a
    int getCachedSpanIndex(int,int) -> a
    int getSpanIndex(int,int) -> b
    int findReferenceIndexFromCache(int) -> b
    int getSpanGroupIndex(int,int) -> c
android.support.v7.widget.LayoutState -> android.support.v7.widget.ax:
    int mAvailable -> a
    int mCurrentPosition -> b
    int mItemDirection -> c
    int mLayoutDirection -> d
    int mStartLine -> e
    int mEndLine -> f
    boolean hasMore(android.support.v7.widget.RecyclerView$State) -> a
    android.view.View next(android.support.v7.widget.RecyclerView$Recycler) -> a
    java.lang.String toString() -> toString
android.support.v7.widget.LinearLayoutCompat -> android.support.v7.widget.LinearLayoutCompat:
    boolean mBaselineAligned -> a
    int mBaselineAlignedChildIndex -> b
    int mBaselineChildTop -> c
    int mOrientation -> d
    int mGravity -> e
    int mTotalLength -> f
    float mWeightSum -> g
    boolean mUseLargestChild -> h
    int[] mMaxAscent -> i
    int[] mMaxDescent -> j
    android.graphics.drawable.Drawable mDivider -> k
    int mDividerWidth -> l
    int mDividerHeight -> m
    int mShowDividers -> n
    int mDividerPadding -> o
    void setShowDividers(int) -> setShowDividers
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    int getShowDividers() -> getShowDividers
    android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> a
    void drawDividersHorizontal(android.graphics.Canvas) -> b
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    void setBaselineAligned(boolean) -> setBaselineAligned
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    int getBaseline() -> getBaseline
    int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    android.view.View getVirtualChildAt(int) -> b
    int getVirtualChildCount() -> getVirtualChildCount
    float getWeightSum() -> getWeightSum
    void setWeightSum(float) -> setWeightSum
    void onMeasure(int,int) -> onMeasure
    boolean hasDividerBeforeChildAt(int) -> c
    void measureVertical(int,int) -> a
    void forceUniformWidth(int,int) -> c
    void measureHorizontal(int,int) -> b
    void forceUniformHeight(int,int) -> d
    int getChildrenSkipCount(android.view.View,int) -> a
    int measureNullChild(int) -> d
    void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> a
    int getLocationOffset(android.view.View) -> a
    int getNextLocationOffset(android.view.View) -> b
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layoutVertical(int,int,int,int) -> a
    void layoutHorizontal(int,int,int,int) -> b
    void setChildFrame(android.view.View,int,int,int,int) -> a
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void setGravity(int) -> setGravity
    void setHorizontalGravity(int) -> setHorizontalGravity
    void setVerticalGravity(int) -> setVerticalGravity
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> b
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> j
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> b
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.v7.widget.LinearLayoutCompat$LayoutParams -> android.support.v7.widget.LinearLayoutCompat$LayoutParams:
    float weight -> g
    int gravity -> h
android.support.v7.widget.LinearLayoutManager -> android.support.v7.widget.LinearLayoutManager:
    int mOrientation -> j
    android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState -> a
    android.support.v7.widget.OrientationHelper mOrientationHelper -> k
    boolean mLastStackFromEnd -> b
    boolean mReverseLayout -> c
    boolean mShouldReverseLayout -> l
    boolean mStackFromEnd -> d
    boolean mSmoothScrollbarEnabled -> e
    int mPendingScrollPosition -> m
    int mPendingScrollPositionOffset -> n
    boolean mRecycleChildrenOnDetach -> f
    android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState -> o
    android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo -> p
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> a
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> a
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    android.os.Parcelable onSaveInstanceState() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> a
    boolean canScrollHorizontally() -> d
    boolean canScrollVertically() -> e
    int getOrientation() -> f
    void setOrientation(int) -> a
    void resolveShouldLayoutReverse() -> B
    void setReverseLayout(boolean) -> a
    android.view.View findViewByPosition(int) -> b
    int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State) -> a
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> c
    void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> a
    void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> b
    void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> b
    boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> c
    boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> a
    int fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> a
    int fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> b
    void updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> a
    void updateLayoutStateToFillEnd(int,int) -> b
    void updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> b
    void updateLayoutStateToFillStart(int,int) -> c
    boolean isLayoutRTL() -> g
    void ensureLayoutState() -> h
    android.support.v7.widget.LinearLayoutManager$LayoutState createLayoutState() -> i
    void scrollToPosition(int) -> c
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> b
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> b
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> c
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> d
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> e
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> f
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> g
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> h
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> i
    int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> j
    void updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State) -> a
    int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> c
    void assertNotInLayoutOrScroll(java.lang.String) -> a
    void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int) -> a
    void recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> a
    void recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> b
    void recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState) -> a
    int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean) -> a
    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult) -> a
    int convertFocusDirectionToLayoutDirection(int) -> j
    android.view.View getChildClosestToStart() -> C
    android.view.View getChildClosestToEnd() -> D
    android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> a
    android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> b
    android.view.View findReferenceChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> f
    android.view.View findReferenceChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> g
    android.view.View findFirstReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> h
    android.view.View findLastReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> i
    android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int) -> a
    int findFirstVisibleItemPosition() -> j
    int findLastVisibleItemPosition() -> k
    android.view.View findOneVisibleChild(int,int,boolean,boolean) -> a
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    boolean supportsPredictiveItemAnimations() -> b
android.support.v7.widget.LinearLayoutManager$AnchorInfo -> android.support.v7.widget.ay:
    int mPosition -> a
    int mCoordinate -> b
    boolean mLayoutFromEnd -> c
    android.support.v7.widget.LinearLayoutManager this$0 -> d
    void reset() -> a
    void assignCoordinateFromPadding() -> b
    java.lang.String toString() -> toString
    boolean isViewValidAsAnchor(android.view.View,android.support.v7.widget.RecyclerView$State) -> a
    void assignFromViewAndKeepVisibleRect(android.view.View) -> a
    void assignFromView(android.view.View) -> b
    boolean access$000(android.support.v7.widget.LinearLayoutManager$AnchorInfo,android.view.View,android.support.v7.widget.RecyclerView$State) -> a
android.support.v7.widget.LinearLayoutManager$LayoutChunkResult -> android.support.v7.widget.az:
    int mConsumed -> a
    boolean mFinished -> b
    boolean mIgnoreConsumed -> c
    boolean mFocusable -> d
    void resetInternal() -> a
android.support.v7.widget.LinearLayoutManager$LayoutState -> android.support.v7.widget.ba:
    boolean mRecycle -> a
    int mOffset -> b
    int mAvailable -> c
    int mCurrentPosition -> d
    int mItemDirection -> e
    int mLayoutDirection -> f
    int mScrollingOffset -> g
    int mExtra -> h
    boolean mIsPreLayout -> i
    int mLastScrollDelta -> j
    java.util.List mScrapList -> k
    boolean hasMore(android.support.v7.widget.RecyclerView$State) -> a
    android.view.View next(android.support.v7.widget.RecyclerView$Recycler) -> a
    android.view.View nextViewFromScrapList() -> b
    void assignPositionFromScrapList() -> a
    void assignPositionFromScrapList(android.view.View) -> a
    android.view.View nextViewInLimitedList(android.view.View) -> b
android.support.v7.widget.LinearLayoutManager$SavedState -> android.support.v7.widget.LinearLayoutManager$SavedState:
    int mAnchorPosition -> a
    int mAnchorOffset -> b
    boolean mAnchorLayoutFromEnd -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean hasValidAnchor() -> a
    void invalidateAnchor() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.LinearLayoutManager$SavedState$1 -> android.support.v7.widget.bb:
    android.support.v7.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.widget.LinearLayoutManager$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.ListPopupWindow -> android.support.v7.widget.ListPopupWindow:
    java.lang.reflect.Method sClipToWindowEnabledMethod -> a
    android.content.Context mContext -> c
    android.widget.PopupWindow mPopup -> d
    android.widget.ListAdapter mAdapter -> e
    android.support.v7.widget.ListPopupWindow$DropDownListView mDropDownList -> f
    int mDropDownHeight -> g
    int mDropDownWidth -> h
    int mDropDownHorizontalOffset -> i
    int mDropDownVerticalOffset -> j
    boolean mDropDownVerticalOffsetSet -> k
    int mDropDownGravity -> l
    boolean mDropDownAlwaysVisible -> m
    boolean mForceIgnoreOutsideTouch -> n
    int mListItemExpandMaximum -> b
    android.view.View mPromptView -> o
    int mPromptPosition -> p
    android.database.DataSetObserver mObserver -> q
    android.view.View mDropDownAnchorView -> r
    android.graphics.drawable.Drawable mDropDownListHighlight -> s
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> t
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> u
    android.support.v7.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> v
    android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> w
    android.support.v7.widget.ListPopupWindow$PopupScrollListener mScrollListener -> x
    android.support.v7.widget.ListPopupWindow$ListSelectorHider mHideSelector -> y
    java.lang.Runnable mShowDropDownRunnable -> z
    android.os.Handler mHandler -> A
    android.graphics.Rect mTempRect -> B
    boolean mModal -> C
    int mLayoutDirection -> D
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptPosition(int) -> a
    void setModal(boolean) -> a
    android.graphics.drawable.Drawable getBackground() -> d
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    android.view.View getAnchorView() -> e
    void setAnchorView(android.view.View) -> a
    int getHorizontalOffset() -> f
    void setHorizontalOffset(int) -> b
    int getVerticalOffset() -> g
    void setVerticalOffset(int) -> c
    void setDropDownGravity(int) -> d
    int getWidth() -> h
    void setWidth(int) -> e
    void setContentWidth(int) -> f
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void show() -> c
    void dismiss() -> i
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    void removePromptView() -> a
    void setInputMethodMode(int) -> g
    void setSelection(int) -> h
    void clearListSelection() -> j
    boolean isShowing() -> k
    boolean isInputMethodNotNeeded() -> l
    android.widget.ListView getListView() -> m
    int buildDropDown() -> b
    void setPopupClipToScreenEnabled(boolean) -> b
    android.support.v7.widget.ListPopupWindow$DropDownListView access$600(android.support.v7.widget.ListPopupWindow) -> a
    android.widget.PopupWindow access$1100(android.support.v7.widget.ListPopupWindow) -> b
    android.support.v7.widget.ListPopupWindow$ResizePopupRunnable access$1200(android.support.v7.widget.ListPopupWindow) -> c
    android.os.Handler access$1300(android.support.v7.widget.ListPopupWindow) -> d
android.support.v7.widget.ListPopupWindow$1 -> android.support.v7.widget.bc:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    android.support.v7.widget.ListPopupWindow getPopup() -> a
android.support.v7.widget.ListPopupWindow$2 -> android.support.v7.widget.bd:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.widget.ListPopupWindow$3 -> android.support.v7.widget.be:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.ListPopupWindow$DropDownListView -> android.support.v7.widget.bf:
    boolean mListSelectionHidden -> f
    boolean mHijackFocus -> g
    boolean mDrawsInPressedState -> h
    android.support.v4.view.ViewPropertyAnimatorCompat mClickAnimation -> i
    android.support.v4.widget.ListViewAutoScrollHelper mScrollHelper -> j
    boolean onForwardedEvent(android.view.MotionEvent,int) -> a
    void clickPressedItem(android.view.View,int) -> a
    void clearPressedItem() -> d
    void setPressedItem(android.view.View,int,float,float) -> a
    boolean touchModeDrawsInPressedStateCompat() -> c
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    boolean access$502(android.support.v7.widget.ListPopupWindow$DropDownListView,boolean) -> a
android.support.v7.widget.ListPopupWindow$ForwardingListener -> android.support.v7.widget.bg:
    float mScaledTouchSlop -> a
    int mTapTimeout -> b
    int mLongPressTimeout -> c
    android.view.View mSrc -> d
    java.lang.Runnable mDisallowIntercept -> e
    java.lang.Runnable mTriggerLongPress -> f
    boolean mForwarding -> g
    boolean mWasLongPress -> h
    int mActivePointerId -> i
    int[] mTmpLocation -> j
    android.support.v7.widget.ListPopupWindow getPopup() -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onForwardingStarted() -> b
    boolean onForwardingStopped() -> c
    boolean onTouchObserved(android.view.MotionEvent) -> a
    void clearCallbacks() -> d
    void onLongPress() -> e
    boolean onTouchForwarded(android.view.MotionEvent) -> b
    boolean pointInView(android.view.View,float,float,float) -> a
    boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> a
    boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> b
    android.view.View access$900(android.support.v7.widget.ListPopupWindow$ForwardingListener) -> a
    void access$1000(android.support.v7.widget.ListPopupWindow$ForwardingListener) -> b
android.support.v7.widget.ListPopupWindow$ForwardingListener$DisallowIntercept -> android.support.v7.widget.bh:
    android.support.v7.widget.ListPopupWindow$ForwardingListener this$0 -> a
    void run() -> run
android.support.v7.widget.ListPopupWindow$ForwardingListener$TriggerLongPress -> android.support.v7.widget.bi:
    android.support.v7.widget.ListPopupWindow$ForwardingListener this$0 -> a
    void run() -> run
android.support.v7.widget.ListPopupWindow$ListSelectorHider -> android.support.v7.widget.bj:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.widget.ListPopupWindow$PopupDataSetObserver -> android.support.v7.widget.bk:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.widget.ListPopupWindow$PopupScrollListener -> android.support.v7.widget.bl:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor -> android.support.v7.widget.bm:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
android.support.v7.widget.ListPopupWindow$ResizePopupRunnable -> android.support.v7.widget.bn:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.widget.OpReorderer -> android.support.v7.widget.bo:
    android.support.v7.widget.OpReorderer$Callback mCallback -> a
    void reorderOps(java.util.List) -> a
    void swapMoveOp(java.util.List,int,int) -> a
    void swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> a
    void swapMoveAdd(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> c
    void swapMoveUpdate(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> b
    int getLastMoveOutOfOrder(java.util.List) -> b
android.support.v7.widget.OpReorderer$Callback -> android.support.v7.widget.bp:
    android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> a
    void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp) -> a
android.support.v7.widget.OrientationHelper -> android.support.v7.widget.bq:
    android.support.v7.widget.RecyclerView$LayoutManager mLayoutManager -> a
    int mLastTotalSpace -> b
    void onLayoutComplete() -> a
    int getTotalSpaceChange() -> b
    int getDecoratedStart(android.view.View) -> a
    int getDecoratedEnd(android.view.View) -> b
    int getDecoratedMeasurement(android.view.View) -> c
    int getDecoratedMeasurementInOther(android.view.View) -> d
    int getStartAfterPadding() -> c
    int getEndAfterPadding() -> d
    int getEnd() -> e
    void offsetChildren(int) -> a
    int getTotalSpace() -> f
    int getEndPadding() -> g
    android.support.v7.widget.OrientationHelper createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int) -> a
    android.support.v7.widget.OrientationHelper createHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> a
    android.support.v7.widget.OrientationHelper createVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> b
android.support.v7.widget.OrientationHelper$1 -> android.support.v7.widget.br:
    int getEndAfterPadding() -> d
    int getEnd() -> e
    void offsetChildren(int) -> a
    int getStartAfterPadding() -> c
    int getDecoratedMeasurement(android.view.View) -> c
    int getDecoratedMeasurementInOther(android.view.View) -> d
    int getDecoratedEnd(android.view.View) -> b
    int getDecoratedStart(android.view.View) -> a
    int getTotalSpace() -> f
    int getEndPadding() -> g
android.support.v7.widget.OrientationHelper$2 -> android.support.v7.widget.bs:
    int getEndAfterPadding() -> d
    int getEnd() -> e
    void offsetChildren(int) -> a
    int getStartAfterPadding() -> c
    int getDecoratedMeasurement(android.view.View) -> c
    int getDecoratedMeasurementInOther(android.view.View) -> d
    int getDecoratedEnd(android.view.View) -> b
    int getDecoratedStart(android.view.View) -> a
    int getTotalSpace() -> f
    int getEndPadding() -> g
android.support.v7.widget.RecyclerView -> android.support.v7.widget.RecyclerView:
    boolean FORCE_INVALIDATE_DISPLAY_LIST -> h
    java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE -> i
    android.support.v7.widget.RecyclerView$RecyclerViewDataObserver mObserver -> j
    android.support.v7.widget.RecyclerView$Recycler mRecycler -> a
    android.support.v7.widget.RecyclerView$SavedState mPendingSavedState -> k
    android.support.v7.widget.AdapterHelper mAdapterHelper -> b
    android.support.v7.widget.ChildHelper mChildHelper -> c
    boolean mClipToPadding -> l
    java.lang.Runnable mUpdateChildViewsRunnable -> m
    android.graphics.Rect mTempRect -> n
    android.support.v7.widget.RecyclerView$Adapter mAdapter -> o
    android.support.v7.widget.RecyclerView$LayoutManager mLayout -> p
    android.support.v7.widget.RecyclerView$RecyclerListener mRecyclerListener -> q
    java.util.ArrayList mItemDecorations -> r
    java.util.ArrayList mOnItemTouchListeners -> s
    android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener -> t
    boolean mIsAttached -> u
    boolean mHasFixedSize -> v
    boolean mFirstLayoutComplete -> w
    boolean mEatRequestLayout -> x
    boolean mLayoutRequestEaten -> y
    boolean mLayoutFrozen -> z
    boolean mIgnoreMotionEventTillDown -> A
    int mEatenAccessibilityChangeFlags -> B
    boolean mAdapterUpdateDuringMeasure -> C
    boolean mPostUpdatesOnAnimation -> D
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> E
    java.util.List mOnChildAttachStateListeners -> F
    boolean mDataSetHasChangedAfterLayout -> G
    int mLayoutOrScrollCounter -> H
    android.support.v4.widget.EdgeEffectCompat mLeftGlow -> I
    android.support.v4.widget.EdgeEffectCompat mTopGlow -> J
    android.support.v4.widget.EdgeEffectCompat mRightGlow -> K
    android.support.v4.widget.EdgeEffectCompat mBottomGlow -> L
    android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator -> d
    int mScrollState -> M
    int mScrollPointerId -> N
    android.view.VelocityTracker mVelocityTracker -> O
    int mInitialTouchX -> P
    int mInitialTouchY -> Q
    int mLastTouchX -> R
    int mLastTouchY -> S
    int mTouchSlop -> T
    int mMinFlingVelocity -> U
    int mMaxFlingVelocity -> V
    float mScrollFactor -> W
    android.support.v7.widget.RecyclerView$ViewFlinger mViewFlinger -> aa
    android.support.v7.widget.RecyclerView$State mState -> e
    android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener -> ab
    java.util.List mScrollListeners -> ac
    boolean mItemsAddedOrRemoved -> f
    boolean mItemsChanged -> g
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener -> ad
    boolean mPostedAnimatorRunner -> ae
    android.support.v7.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate -> af
    android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> ag
    int[] mMinMaxLayoutPositions -> ah
    android.support.v4.view.NestedScrollingChildHelper mScrollingChildHelper -> ai
    int[] mScrollOffset -> aj
    int[] mScrollConsumed -> ak
    int[] mNestedOffsets -> al
    java.lang.Runnable mItemAnimatorRunner -> am
    android.view.animation.Interpolator sQuinticInterpolator -> an
    android.support.v7.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    void setAccessibilityDelegateCompat(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> a
    java.lang.String getFullClassName(android.content.Context,java.lang.String) -> a
    void initChildrenHelper() -> t
    void initAdapterManager() -> a
    void setHasFixedSize(boolean) -> setHasFixedSize
    void setClipToPadding(boolean) -> setClipToPadding
    void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    void setAdapter(android.support.v7.widget.RecyclerView$Adapter) -> setAdapter
    void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean) -> a
    android.support.v7.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    void setRecyclerListener(android.support.v7.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    int getBaseline() -> getBaseline
    void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager) -> setLayoutManager
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    boolean removeAnimatingView(android.view.View) -> i
    android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    void setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    void setItemViewCacheSize(int) -> setItemViewCacheSize
    int getScrollState() -> getScrollState
    void setScrollState(int) -> setScrollState
    void setChildDrawingOrderCallback(android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    void setOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    void jumpToPositionForSmoothScroller(int) -> e
    void scrollTo(int,int) -> scrollTo
    void scrollBy(int,int) -> scrollBy
    void consumePendingUpdateOperations() -> u
    boolean scrollByInternal(int,int,android.view.MotionEvent) -> a
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    void eatRequestLayout() -> b
    void resumeRequestLayout(boolean) -> a
    void setLayoutFrozen(boolean) -> setLayoutFrozen
    void smoothScrollBy(int,int) -> a
    boolean fling(int,int) -> b
    void stopScroll() -> c
    void stopScrollersInternal() -> v
    int getMinFlingVelocity() -> getMinFlingVelocity
    int getMaxFlingVelocity() -> getMaxFlingVelocity
    void pullGlows(float,float,float,float) -> a
    void releaseGlows() -> w
    void considerReleasingGlowsOnScroll(int,int) -> h
    void absorbGlows(int,int) -> c
    void ensureLeftGlow() -> d
    void ensureRightGlow() -> e
    void ensureTopGlow() -> f
    void ensureBottomGlow() -> g
    void invalidateGlows() -> h
    android.view.View focusSearch(android.view.View,int) -> focusSearch
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean isAttachedToWindow() -> isAttachedToWindow
    void assertNotInLayoutOrScroll(java.lang.String) -> a
    boolean dispatchOnItemTouchIntercept(android.view.MotionEvent) -> a
    boolean dispatchOnItemTouch(android.view.MotionEvent) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void resetTouch() -> x
    void cancelTouch() -> y
    void onPointerUp(android.view.MotionEvent) -> c
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getScrollFactor() -> getScrollFactor
    void onMeasure(int,int) -> onMeasure
    void defaultOnMeasure(int,int) -> i
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setItemAnimator(android.support.v7.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    void onEnterLayoutOrScroll() -> z
    void onExitLayoutOrScroll() -> A
    boolean isAccessibilityEnabled() -> i
    void dispatchContentChangedIfNecessary() -> B
    boolean isComputingLayout() -> j
    boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v7.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    boolean supportsChangeAnimations() -> C
    void postAnimationRunner() -> D
    boolean predictiveItemAnimationsEnabled() -> E
    void processAdapterUpdatesAndSetAnimationFlags() -> F
    void dispatchLayout() -> k
    void findMinMaxChildLayoutPositions(int[]) -> a
    boolean didChildRangeChange(int,int) -> j
    void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void processDisappearingList(android.support.v4.util.ArrayMap) -> a
    void animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.graphics.Rect,int,int) -> a
    void animateDisappearance(android.support.v7.widget.RecyclerView$ItemHolderInfo) -> a
    void animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void markItemDecorInsetsDirty() -> l
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    void saveOldPositions() -> m
    void clearOldPositions() -> n
    void offsetPositionRecordsForMove(int,int) -> d
    void offsetPositionRecordsForInsert(int,int) -> e
    void offsetPositionRecordsForRemove(int,int,boolean) -> a
    void viewRangeUpdate(int,int,java.lang.Object) -> a
    void rebindUpdatedViewHolders() -> o
    void setDataSetChangedAfterLayout() -> G
    void markKnownViewsInvalid() -> p
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> a
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> b
    int getChildPosition(android.view.View) -> c
    int getChildAdapterPosition(android.view.View) -> d
    int getChildLayoutPosition(android.view.View) -> e
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void offsetChildrenVertical(int) -> a
    void onChildAttachedToWindow(android.view.View) -> f
    void onChildDetachedFromWindow(android.view.View) -> g
    void offsetChildrenHorizontal(int) -> b
    android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> h
    void onScrolled(int,int) -> f
    void dispatchOnScrolled(int,int) -> g
    void onScrollStateChanged(int) -> c
    void dispatchOnScrollStateChanged(int) -> d
    boolean hasPendingAdapterUpdates() -> q
    void dispatchChildDetached(android.view.View) -> j
    void dispatchChildAttached(android.view.View) -> k
    int getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    boolean access$100(android.support.v7.widget.RecyclerView) -> a
    boolean access$200(android.support.v7.widget.RecyclerView) -> b
    boolean access$300(android.support.v7.widget.RecyclerView) -> c
    boolean access$502(android.support.v7.widget.RecyclerView,boolean) -> a
    void access$600(android.support.v7.widget.RecyclerView,android.view.View) -> a
    void access$700(android.support.v7.widget.RecyclerView,android.view.View) -> b
    void access$800(android.support.v7.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    void access$900(android.support.v7.widget.RecyclerView,int) -> a
    android.support.v7.widget.RecyclerView$LayoutManager access$1300(android.support.v7.widget.RecyclerView) -> d
    android.view.animation.Interpolator access$2200() -> r
    void access$2300(android.support.v7.widget.RecyclerView) -> e
    android.support.v7.widget.RecyclerView$Adapter access$2400(android.support.v7.widget.RecyclerView) -> f
    void access$2500(android.support.v7.widget.RecyclerView) -> g
    boolean access$2600(android.support.v7.widget.RecyclerView) -> h
    void access$2700(android.support.v7.widget.RecyclerView) -> i
    java.util.ArrayList access$2900(android.support.v7.widget.RecyclerView) -> j
    void access$3000(android.support.v7.widget.RecyclerView,int,int) -> a
    boolean access$3100(android.support.v7.widget.RecyclerView) -> k
    void access$3200(android.support.v7.widget.RecyclerView,int) -> b
    void access$3300(android.support.v7.widget.RecyclerView) -> l
    boolean access$3900() -> s
    android.support.v7.widget.RecyclerViewAccessibilityDelegate access$4000(android.support.v7.widget.RecyclerView) -> m
    android.support.v7.widget.RecyclerView$RecyclerListener access$4300(android.support.v7.widget.RecyclerView) -> n
    boolean access$4400(android.support.v7.widget.RecyclerView) -> o
    void access$4500(android.support.v7.widget.RecyclerView,int,int) -> b
    int access$4700(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> a
    android.support.v7.widget.RecyclerView$ViewFlinger access$4900(android.support.v7.widget.RecyclerView) -> p
    void access$5200(android.support.v7.widget.RecyclerView,int) -> c
    boolean access$5300(android.support.v7.widget.RecyclerView,android.view.View) -> c
android.support.v7.widget.RecyclerView$1 -> android.support.v7.widget.bt:
    android.support.v7.widget.RecyclerView this$0 -> a
    void run() -> run
android.support.v7.widget.RecyclerView$2 -> android.support.v7.widget.bu:
    android.support.v7.widget.RecyclerView this$0 -> a
    void run() -> run
android.support.v7.widget.RecyclerView$3 -> android.support.v7.widget.bv:
    float getInterpolation(float) -> getInterpolation
android.support.v7.widget.RecyclerView$4 -> android.support.v7.widget.bw:
    android.support.v7.widget.RecyclerView this$0 -> a
    int getChildCount() -> a
    void addView(android.view.View,int) -> a
    int indexOfChild(android.view.View) -> a
    void removeViewAt(int) -> a
    android.view.View getChildAt(int) -> b
    void removeAllViews() -> b
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> b
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    void detachViewFromParent(int) -> c
    void onEnteredHiddenState(android.view.View) -> c
    void onLeftHiddenState(android.view.View) -> d
android.support.v7.widget.RecyclerView$5 -> android.support.v7.widget.bx:
    android.support.v7.widget.RecyclerView this$0 -> a
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int) -> a
    void offsetPositionsForRemovingInvisible(int,int) -> a
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> b
    void markViewHoldersUpdated(int,int,java.lang.Object) -> a
    void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> a
    void dispatchUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> c
    void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> b
    void offsetPositionsForAdd(int,int) -> c
    void offsetPositionsForMove(int,int) -> d
android.support.v7.widget.RecyclerView$Adapter -> android.support.v7.widget.by:
    android.support.v7.widget.RecyclerView$AdapterDataObservable mObservable -> a
    boolean mHasStableIds -> b
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> a
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> a
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List) -> a
    android.support.v7.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> b
    void bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> b
    int getItemViewType(int) -> a
    long getItemId(int) -> b
    int getItemCount() -> a
    boolean hasStableIds() -> b
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    boolean onFailedToRecycleView(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    void onViewAttachedToWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    void onViewDetachedFromWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> d
    void registerAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver) -> a
    void unregisterAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver) -> b
    void onAttachedToRecyclerView(android.support.v7.widget.RecyclerView) -> a
    void onDetachedFromRecyclerView(android.support.v7.widget.RecyclerView) -> b
    void notifyDataSetChanged() -> c
android.support.v7.widget.RecyclerView$AdapterDataObservable -> android.support.v7.widget.bz:
    void notifyChanged() -> a
android.support.v7.widget.RecyclerView$AdapterDataObserver -> android.support.v7.widget.ca:
    void onChanged() -> a
android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback -> android.support.v7.widget.cb:
    int onGetChildDrawingOrder(int,int) -> a
android.support.v7.widget.RecyclerView$ItemAnimator -> android.support.v7.widget.cc:
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener -> a
    java.util.ArrayList mFinishedListeners -> b
    long mAddDuration -> c
    long mRemoveDuration -> d
    long mMoveDuration -> e
    long mChangeDuration -> f
    boolean mSupportsChangeAnimations -> g
    long getMoveDuration() -> d
    long getAddDuration() -> e
    long getRemoveDuration() -> f
    long getChangeDuration() -> g
    boolean getSupportsChangeAnimations() -> h
    void setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> a
    void runPendingAnimations() -> a
    boolean animateRemove(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    boolean animateAdd(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    void dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> d
    void dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> e
    void dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> f
    void dispatchChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> a
    void dispatchRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> g
    void dispatchMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> h
    void dispatchAddStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> i
    void dispatchChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> b
    void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    void endAnimations() -> c
    boolean isRunning() -> b
    void dispatchAnimationsFinished() -> i
    void onRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> j
    void onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> k
    void onAddStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> l
    void onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> m
    void onMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> n
    void onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> o
    void onChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> c
    void onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> d
android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener -> android.support.v7.widget.cd:
    void onAnimationsFinished() -> a
android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> android.support.v7.widget.ce:
    void onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    void onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    void onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> d
android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener -> android.support.v7.widget.cf:
    android.support.v7.widget.RecyclerView this$0 -> a
    void onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    void onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    void onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> d
android.support.v7.widget.RecyclerView$ItemDecoration -> android.support.v7.widget.cg:
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> a
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> a
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> b
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> b
    void getItemOffsets(android.graphics.Rect,int,android.support.v7.widget.RecyclerView) -> a
    void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> a
android.support.v7.widget.RecyclerView$ItemHolderInfo -> android.support.v7.widget.ch:
    android.support.v7.widget.RecyclerView$ViewHolder holder -> a
    int left -> b
    int top -> c
    int right -> d
    int bottom -> e
android.support.v7.widget.RecyclerView$LayoutManager -> android.support.v7.widget.ci:
    android.support.v7.widget.ChildHelper mChildHelper -> q
    android.support.v7.widget.RecyclerView mRecyclerView -> r
    android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller -> s
    boolean mRequestedSimpleAnimations -> a
    boolean mIsAttachedToWindow -> b
    void setRecyclerView(android.support.v7.widget.RecyclerView) -> b
    void requestLayout() -> l
    void assertNotInLayoutOrScroll(java.lang.String) -> a
    boolean supportsPredictiveItemAnimations() -> b
    void dispatchAttachedToWindow(android.support.v7.widget.RecyclerView) -> c
    void dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> b
    boolean isAttachedToWindow() -> m
    void postOnAnimation(java.lang.Runnable) -> a
    boolean removeCallbacks(java.lang.Runnable) -> b
    void onAttachedToWindow(android.support.v7.widget.RecyclerView) -> d
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView) -> e
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> a
    boolean getClipToPadding() -> n
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> c
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> a
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> a
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> a
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> b
    boolean canScrollHorizontally() -> d
    boolean canScrollVertically() -> e
    void scrollToPosition(int) -> c
    boolean isSmoothScrolling() -> o
    int getLayoutDirection() -> p
    void addDisappearingView(android.view.View) -> a
    void addDisappearingView(android.view.View,int) -> a
    void addView(android.view.View) -> b
    void addView(android.view.View,int) -> b
    void addViewInt(android.view.View,int,boolean) -> a
    void removeView(android.view.View) -> c
    void removeViewAt(int) -> d
    int getBaseline() -> q
    int getPosition(android.view.View) -> d
    android.view.View findViewByPosition(int) -> b
    void detachViewAt(int) -> e
    void detachViewInternal(int,android.view.View) -> a
    void attachView(android.view.View,int,android.support.v7.widget.RecyclerView$LayoutParams) -> a
    void attachView(android.view.View,int) -> c
    void moveView(int,int) -> a
    void removeAndRecycleView(android.view.View,android.support.v7.widget.RecyclerView$Recycler) -> a
    void removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler) -> a
    int getChildCount() -> r
    android.view.View getChildAt(int) -> f
    int getWidth() -> s
    int getHeight() -> t
    int getPaddingLeft() -> u
    int getPaddingTop() -> v
    int getPaddingRight() -> w
    int getPaddingBottom() -> x
    android.view.View getFocusedChild() -> y
    void offsetChildrenHorizontal(int) -> g
    void offsetChildrenVertical(int) -> h
    void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler) -> a
    void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View) -> a
    void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler) -> b
    void measureChildWithMargins(android.view.View,int,int) -> a
    int getChildMeasureSpec(int,int,int,boolean) -> a
    int getDecoratedMeasuredWidth(android.view.View) -> e
    int getDecoratedMeasuredHeight(android.view.View) -> f
    void layoutDecorated(android.view.View,int,int,int,int) -> a
    int getDecoratedLeft(android.view.View) -> g
    int getDecoratedTop(android.view.View) -> h
    int getDecoratedRight(android.view.View) -> i
    int getDecoratedBottom(android.view.View) -> j
    void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> a
    int getTopDecorationHeight(android.view.View) -> k
    int getBottomDecorationHeight(android.view.View) -> l
    int getLeftDecorationWidth(android.view.View) -> m
    int getRightDecorationWidth(android.view.View) -> n
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    android.view.View onInterceptFocusSearch(android.view.View,int) -> d
    boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> a
    boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View) -> a
    boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,android.view.View,android.view.View) -> a
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter) -> a
    boolean onAddFocusables(android.support.v7.widget.RecyclerView,java.util.ArrayList,int,int) -> a
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> a
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> a
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> b
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int) -> c
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> a
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> a
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> d
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> b
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> f
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> e
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> c
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> g
    void onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> a
    android.os.Parcelable onSaveInstanceState() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> a
    void stopSmoothScroller() -> z
    void onSmoothScrollerStopped(android.support.v7.widget.RecyclerView$SmoothScroller) -> a
    void onScrollStateChanged(int) -> i
    void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler) -> c
    void onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityNodeInfoForItem(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void requestSimpleAnimationsInNextLayout() -> A
    int getSelectionModeForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> d
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> b
    boolean isLayoutHierarchical(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> e
    boolean performAccessibilityAction(int,android.os.Bundle) -> a
    boolean performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle) -> a
    boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> a
    boolean performAccessibilityActionForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> a
    boolean access$1900(android.support.v7.widget.RecyclerView$LayoutManager) -> a
    boolean access$1902(android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> a
    void access$5000(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.RecyclerView$SmoothScroller) -> a
android.support.v7.widget.RecyclerView$LayoutParams -> android.support.v7.widget.RecyclerView$LayoutParams:
    android.support.v7.widget.RecyclerView$ViewHolder mViewHolder -> a
    android.graphics.Rect mDecorInsets -> b
    boolean mInsetsDirty -> c
    boolean mPendingInvalidate -> d
    boolean isItemRemoved() -> c
    boolean isItemChanged() -> d
    int getViewLayoutPosition() -> e
android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener -> android.support.v7.widget.cj:
    void onChildViewAttachedToWindow(android.view.View) -> a
    void onChildViewDetachedFromWindow(android.view.View) -> b
android.support.v7.widget.RecyclerView$OnItemTouchListener -> android.support.v7.widget.ck:
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> a
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> b
    void onRequestDisallowInterceptTouchEvent(boolean) -> a
android.support.v7.widget.RecyclerView$OnScrollListener -> android.support.v7.widget.cl:
    void onScrollStateChanged(android.support.v7.widget.RecyclerView,int) -> a
    void onScrolled(android.support.v7.widget.RecyclerView,int,int) -> a
android.support.v7.widget.RecyclerView$RecycledViewPool -> android.support.v7.widget.cm:
    android.util.SparseArray mScrap -> a
    android.util.SparseIntArray mMaxScrap -> b
    int mAttachCount -> c
    void clear() -> a
    android.support.v7.widget.RecyclerView$ViewHolder getRecycledView(int) -> a
    void putRecycledView(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void attach(android.support.v7.widget.RecyclerView$Adapter) -> a
    void detach() -> b
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean) -> a
    java.util.ArrayList getScrapHeapForType(int) -> b
android.support.v7.widget.RecyclerView$Recycler -> android.support.v7.widget.cn:
    java.util.ArrayList mAttachedScrap -> a
    java.util.ArrayList mChangedScrap -> d
    java.util.ArrayList mCachedViews -> b
    java.util.List mUnmodifiableAttachedScrap -> e
    int mViewCacheMax -> f
    android.support.v7.widget.RecyclerView$RecycledViewPool mRecyclerPool -> g
    android.support.v7.widget.RecyclerView$ViewCacheExtension mViewCacheExtension -> h
    android.support.v7.widget.RecyclerView this$0 -> c
    void clear() -> a
    void setViewCacheSize(int) -> a
    java.util.List getScrapList() -> b
    boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    int convertPreLayoutPositionToPostLayout(int) -> b
    android.view.View getViewForPosition(int) -> c
    android.view.View getViewForPosition(int,boolean) -> a
    void attachAccessibilityDelegate(android.view.View) -> d
    void invalidateDisplayListInt(android.support.v7.widget.RecyclerView$ViewHolder) -> f
    void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> a
    void recycleView(android.view.View) -> a
    void recycleAndClearCachedViews() -> c
    void recycleCachedViewAt(int) -> d
    void recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    void addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    void quickRecycleScrapView(android.view.View) -> b
    void scrapView(android.view.View) -> c
    void unscrapView(android.support.v7.widget.RecyclerView$ViewHolder) -> d
    int getScrapCount() -> d
    android.view.View getScrapViewAt(int) -> e
    void clearScrap() -> e
    android.support.v7.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> f
    android.support.v7.widget.RecyclerView$ViewHolder getScrapViewForPosition(int,int,boolean) -> a
    android.support.v7.widget.RecyclerView$ViewHolder getScrapViewForId(long,int,boolean) -> a
    void dispatchViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> e
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean) -> a
    void offsetPositionRecordsForMove(int,int) -> a
    void offsetPositionRecordsForInsert(int,int) -> b
    void offsetPositionRecordsForRemove(int,int,boolean) -> b
    void setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension) -> a
    void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool) -> a
    android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> f
    void viewRangeUpdate(int,int) -> c
    void setAdapterPositionsAsUnknown() -> g
    void markKnownViewsInvalid() -> h
    void clearOldPositions() -> i
    void markItemDecorInsetsDirty() -> j
    java.util.ArrayList access$2000(android.support.v7.widget.RecyclerView$Recycler) -> a
android.support.v7.widget.RecyclerView$RecyclerListener -> android.support.v7.widget.co:
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> a
android.support.v7.widget.RecyclerView$RecyclerViewDataObserver -> android.support.v7.widget.cp:
    android.support.v7.widget.RecyclerView this$0 -> a
    void onChanged() -> a
android.support.v7.widget.RecyclerView$SavedState -> android.support.v7.widget.RecyclerView$SavedState:
    android.os.Parcelable mLayoutState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void copyFrom(android.support.v7.widget.RecyclerView$SavedState) -> a
    void access$1500(android.support.v7.widget.RecyclerView$SavedState,android.support.v7.widget.RecyclerView$SavedState) -> a
android.support.v7.widget.RecyclerView$SavedState$1 -> android.support.v7.widget.cq:
    android.support.v7.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.widget.RecyclerView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.RecyclerView$SmoothScroller -> android.support.v7.widget.cr:
    int mTargetPosition -> a
    android.support.v7.widget.RecyclerView mRecyclerView -> b
    android.support.v7.widget.RecyclerView$LayoutManager mLayoutManager -> c
    boolean mPendingInitialRun -> d
    boolean mRunning -> e
    android.view.View mTargetView -> f
    android.support.v7.widget.RecyclerView$SmoothScroller$Action mRecyclingAction -> g
    void setTargetPosition(int) -> a
    void stop() -> a
    boolean isPendingInitialRun() -> b
    boolean isRunning() -> c
    int getTargetPosition() -> d
    void onAnimation(int,int) -> a
    int getChildPosition(android.view.View) -> a
    void onChildAttachedToWindow(android.view.View) -> b
    void onStop() -> e
    void onSeekTargetStep(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> a
    void onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> a
    void access$2800(android.support.v7.widget.RecyclerView$SmoothScroller,int,int) -> a
android.support.v7.widget.RecyclerView$SmoothScroller$Action -> android.support.v7.widget.cs:
    int mDx -> a
    int mDy -> b
    int mDuration -> c
    int mJumpToPosition -> d
    android.view.animation.Interpolator mInterpolator -> e
    boolean changed -> f
    int consecutiveUpdates -> g
    boolean hasJumpTarget() -> a
    void runIfNecessary(android.support.v7.widget.RecyclerView) -> a
    void validate() -> b
    void access$5100(android.support.v7.widget.RecyclerView$SmoothScroller$Action,android.support.v7.widget.RecyclerView) -> a
android.support.v7.widget.RecyclerView$State -> android.support.v7.widget.ct:
    int mTargetPosition -> f
    android.support.v4.util.ArrayMap mPreLayoutHolderMap -> a
    android.support.v4.util.ArrayMap mPostLayoutHolderMap -> b
    android.support.v4.util.ArrayMap mOldChangedHolders -> c
    java.util.List mDisappearingViewsInLayoutPass -> d
    android.util.SparseArray mData -> g
    int mItemCount -> e
    int mPreviousLayoutItemCount -> h
    int mDeletedInvisibleItemCountSincePreviousLayout -> i
    boolean mStructureChanged -> j
    boolean mInPreLayout -> k
    boolean mRunSimpleAnimations -> l
    boolean mRunPredictiveAnimations -> m
    boolean isPreLayout() -> a
    boolean willRunPredictiveAnimations() -> b
    int getTargetScrollPosition() -> c
    boolean hasTargetScrollPosition() -> d
    int getItemCount() -> e
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void removeFrom(android.support.v4.util.ArrayMap,android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void removeFromDisappearingList(android.view.View) -> a
    void addToDisappearingList(android.view.View) -> b
    java.lang.String toString() -> toString
    int access$1212(android.support.v7.widget.RecyclerView$State,int) -> a
    boolean access$1402(android.support.v7.widget.RecyclerView$State,boolean) -> a
    boolean access$1600(android.support.v7.widget.RecyclerView$State) -> a
    boolean access$1702(android.support.v7.widget.RecyclerView$State,boolean) -> b
    boolean access$1802(android.support.v7.widget.RecyclerView$State,boolean) -> c
    boolean access$1602(android.support.v7.widget.RecyclerView$State,boolean) -> d
    boolean access$1800(android.support.v7.widget.RecyclerView$State) -> b
    boolean access$1400(android.support.v7.widget.RecyclerView$State) -> c
    int access$1202(android.support.v7.widget.RecyclerView$State,int) -> b
    int access$2102(android.support.v7.widget.RecyclerView$State,int) -> c
    boolean access$1700(android.support.v7.widget.RecyclerView$State) -> d
    int access$4802(android.support.v7.widget.RecyclerView$State,int) -> d
android.support.v7.widget.RecyclerView$ViewCacheExtension -> android.support.v7.widget.cu:
    android.view.View getViewForPositionAndType(android.support.v7.widget.RecyclerView$Recycler,int,int) -> a
android.support.v7.widget.RecyclerView$ViewFlinger -> android.support.v7.widget.cv:
    int mLastFlingX -> b
    int mLastFlingY -> c
    android.support.v4.widget.ScrollerCompat mScroller -> d
    android.view.animation.Interpolator mInterpolator -> e
    boolean mEatRunOnAnimationRequest -> f
    boolean mReSchedulePostAnimationCallback -> g
    android.support.v7.widget.RecyclerView this$0 -> a
    void run() -> run
    void disableRunOnAnimationRequests() -> c
    void enableRunOnAnimationRequests() -> d
    void postOnAnimation() -> a
    void fling(int,int) -> a
    void smoothScrollBy(int,int) -> b
    void smoothScrollBy(int,int,int,int) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    int computeScrollDuration(int,int,int,int) -> b
    void smoothScrollBy(int,int,int) -> a
    void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> a
    void stop() -> b
android.support.v7.widget.RecyclerView$ViewHolder -> android.support.v7.widget.cw:
    android.view.View itemView -> a
    int mPosition -> b
    int mOldPosition -> c
    long mItemId -> d
    int mItemViewType -> e
    int mPreLayoutPosition -> f
    android.support.v7.widget.RecyclerView$ViewHolder mShadowedHolder -> g
    android.support.v7.widget.RecyclerView$ViewHolder mShadowingHolder -> h
    int mFlags -> l
    java.util.List FULLUPDATE_PAYLOADS -> m
    java.util.List mPayloads -> i
    java.util.List mUnmodifiedPayloads -> j
    int mIsRecyclableCount -> n
    android.support.v7.widget.RecyclerView$Recycler mScrapContainer -> o
    int mWasImportantForAccessibilityBeforeHidden -> p
    android.support.v7.widget.RecyclerView mOwnerRecyclerView -> k
    void flagRemovedAndOffsetPosition(int,int,boolean) -> a
    void offsetPosition(int,boolean) -> a
    void clearOldPosition() -> a
    void saveOldPosition() -> b
    boolean shouldIgnore() -> c
    int getLayoutPosition() -> d
    int getAdapterPosition() -> e
    long getItemId() -> f
    int getItemViewType() -> g
    boolean isScrap() -> h
    void unScrap() -> i
    boolean wasReturnedFromScrap() -> j
    void clearReturnedFromScrapFlag() -> k
    void clearTmpDetachFlag() -> l
    void setScrapContainer(android.support.v7.widget.RecyclerView$Recycler) -> a
    boolean isInvalid() -> m
    boolean needsUpdate() -> n
    boolean isChanged() -> o
    boolean isBound() -> p
    boolean isRemoved() -> q
    boolean hasAnyOfTheFlags(int) -> a
    boolean isTmpDetached() -> r
    boolean isAdapterPositionUnknown() -> s
    void setFlags(int,int) -> a
    void addFlags(int) -> b
    void addChangePayload(java.lang.Object) -> a
    void createPayloadsIfNeeded() -> x
    void clearPayload() -> t
    java.util.List getUnmodifiedPayloads() -> u
    void resetInternal() -> v
    void onEnteredHiddenState() -> y
    void onLeftHiddenState() -> z
    java.lang.String toString() -> toString
    void setIsRecyclable(boolean) -> a
    boolean isRecyclable() -> w
    boolean shouldBeKeptAsChild() -> A
    boolean doesTransientStatePreventRecycling() -> B
    void access$1000(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void access$1100(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    boolean access$4100(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    android.support.v7.widget.RecyclerView$Recycler access$4202(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$Recycler) -> a
    boolean access$5400(android.support.v7.widget.RecyclerView$ViewHolder) -> d
    int access$5500(android.support.v7.widget.RecyclerView$ViewHolder) -> e
android.support.v7.widget.RecyclerViewAccessibilityDelegate -> android.support.v7.widget.cx:
    android.support.v7.widget.RecyclerView mRecyclerView -> a
    android.support.v4.view.AccessibilityDelegateCompat mItemDelegate -> c
    boolean shouldIgnore() -> c
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.AccessibilityDelegateCompat getItemDelegate() -> b
    boolean access$000(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> a
android.support.v7.widget.RecyclerViewAccessibilityDelegate$1 -> android.support.v7.widget.cy:
    android.support.v7.widget.RecyclerViewAccessibilityDelegate this$0 -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v7.widget.RoundRectDrawable -> android.support.v7.widget.cz:
    float mRadius -> a
    android.graphics.Paint mPaint -> b
    android.graphics.RectF mBoundsF -> c
    android.graphics.Rect mBoundsI -> d
    float mPadding -> e
    boolean mInsetForPadding -> f
    boolean mInsetForRadius -> g
    void setPadding(float,boolean,boolean) -> a
    float getPadding() -> a
    void draw(android.graphics.Canvas) -> draw
    void updateBounds(android.graphics.Rect) -> a
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void getOutline(android.graphics.Outline) -> getOutline
    void setRadius(float) -> a
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    float getRadius() -> b
    void setColor(int) -> a
android.support.v7.widget.RoundRectDrawableWithShadow -> android.support.v7.widget.da:
    double COS_45 -> a
    int mInsetShadow -> b
    android.support.v7.widget.RoundRectDrawableWithShadow$RoundRectHelper sRoundRectHelper -> c
    android.graphics.Paint mPaint -> d
    android.graphics.Paint mCornerShadowPaint -> e
    android.graphics.Paint mEdgeShadowPaint -> f
    android.graphics.RectF mCardBounds -> g
    float mCornerRadius -> h
    android.graphics.Path mCornerShadowPath -> i
    float mMaxShadowSize -> j
    float mRawMaxShadowSize -> k
    float mShadowSize -> l
    float mRawShadowSize -> m
    boolean mDirty -> n
    int mShadowStartColor -> o
    int mShadowEndColor -> p
    boolean mAddPaddingForCorners -> q
    boolean mPrintedShadowClipWarning -> r
    int toEven(float) -> d
    void setAddPaddingForCorners(boolean) -> a
    void setAlpha(int) -> setAlpha
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setShadowSize(float,float) -> a
    boolean getPadding(android.graphics.Rect) -> getPadding
    float calculateVerticalPadding(float,float,boolean) -> a
    float calculateHorizontalPadding(float,float,boolean) -> b
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void setCornerRadius(float) -> a
    void draw(android.graphics.Canvas) -> draw
    void drawShadow(android.graphics.Canvas) -> a
    void buildShadowCorners() -> f
    void buildComponents(android.graphics.Rect) -> b
    float getCornerRadius() -> a
    void getMaxShadowAndCornerPadding(android.graphics.Rect) -> a
    void setShadowSize(float) -> b
    void setMaxShadowSize(float) -> c
    float getShadowSize() -> b
    float getMaxShadowSize() -> c
    float getMinWidth() -> d
    float getMinHeight() -> e
    void setColor(int) -> a
android.support.v7.widget.RoundRectDrawableWithShadow$RoundRectHelper -> android.support.v7.widget.db:
    void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> a
android.support.v7.widget.ScrollbarHelper -> android.support.v7.widget.dc:
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean,boolean) -> a
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> a
    int computeScrollRange(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> b
android.support.v7.widget.SearchView -> android.support.v7.widget.SearchView:
    boolean IS_AT_LEAST_FROYO -> c
    android.support.v7.widget.SearchView$SearchAutoComplete mSearchSrcTextView -> d
    android.view.View mSearchEditFrame -> e
    android.view.View mSearchPlate -> f
    android.view.View mSubmitArea -> g
    android.widget.ImageView mSearchButton -> h
    android.widget.ImageView mGoButton -> i
    android.widget.ImageView mCloseButton -> j
    android.widget.ImageView mVoiceButton -> k
    android.view.View mDropDownAnchor -> l
    android.widget.ImageView mCollapsedIcon -> m
    android.graphics.drawable.Drawable mSearchHintIcon -> n
    int mSuggestionRowLayout -> o
    int mSuggestionCommitIconResId -> p
    android.content.Intent mVoiceWebSearchIntent -> q
    android.content.Intent mVoiceAppSearchIntent -> r
    java.lang.CharSequence mDefaultQueryHint -> s
    android.support.v7.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> t
    android.support.v7.widget.SearchView$OnCloseListener mOnCloseListener -> u
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> v
    android.support.v7.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> w
    android.view.View$OnClickListener mOnSearchClickListener -> x
    boolean mIconifiedByDefault -> y
    boolean mIconified -> z
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> A
    boolean mSubmitButtonEnabled -> B
    java.lang.CharSequence mQueryHint -> C
    boolean mQueryRefinement -> D
    boolean mClearingFocus -> E
    int mMaxWidth -> F
    boolean mVoiceButtonEnabled -> G
    java.lang.CharSequence mOldQueryText -> H
    java.lang.CharSequence mUserQuery -> I
    boolean mExpandedInActionView -> J
    int mCollapsedImeOptions -> K
    android.app.SearchableInfo mSearchable -> L
    android.os.Bundle mAppSearchData -> M
    android.support.v7.internal.widget.TintManager mTintManager -> N
    android.support.v7.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> a
    java.lang.Runnable mShowImeRunnable -> O
    java.lang.Runnable mUpdateDrawableStateRunnable -> P
    java.lang.Runnable mReleaseCursorRunnable -> Q
    java.util.WeakHashMap mOutsideDrawablesCache -> R
    android.view.View$OnClickListener mOnClickListener -> S
    android.view.View$OnKeyListener mTextKeyListener -> b
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> T
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> U
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> V
    android.text.TextWatcher mTextWatcher -> W
    void addOnLayoutChangeListenerToDropDownAnchorSDK11() -> e
    void addOnLayoutChangeListenerToDropDownAnchorBase() -> f
    int getSuggestionRowLayout() -> getSuggestionRowLayout
    int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(android.support.v7.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(android.support.v7.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQuery(java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> c
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> a
    boolean hasVoiceSearch() -> g
    boolean isSubmitAreaEnabled() -> h
    void updateSubmitButton(boolean) -> b
    void updateSubmitArea() -> i
    void updateCloseButton() -> k
    void postUpdateFocusedState() -> l
    void updateFocusedState() -> m
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> a
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> a
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> b
    void updateQueryHint() -> n
    void updateSearchAutoComplete() -> o
    void updateVoiceButton(boolean) -> c
    void onTextChanged(java.lang.CharSequence) -> c
    void onSubmitQuery() -> p
    void dismissSuggestions() -> q
    void onCloseClicked() -> r
    void onSearchClicked() -> s
    void onVoiceClicked() -> t
    void onTextFocusChanged() -> d
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> b
    void onActionViewExpanded() -> a
    void adjustDropDownSizeAndPosition() -> u
    boolean onItemClicked(int,int,java.lang.String) -> a
    boolean onItemSelected(int) -> a
    void rewriteQueryFromSuggestion(int) -> e
    boolean launchSuggestion(int,int,java.lang.String) -> b
    void launchIntent(android.content.Intent) -> a
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> a
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> a
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> a
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> b
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> a
    void forceSuggestionQuery() -> v
    boolean isLandscapeMode(android.content.Context) -> a
    void access$000(android.support.v7.widget.SearchView) -> a
    android.support.v4.widget.CursorAdapter access$100(android.support.v7.widget.SearchView) -> b
    android.view.View$OnFocusChangeListener access$200(android.support.v7.widget.SearchView) -> c
    void access$300(android.support.v7.widget.SearchView) -> d
    android.widget.ImageView access$400(android.support.v7.widget.SearchView) -> e
    void access$500(android.support.v7.widget.SearchView) -> f
    android.widget.ImageView access$600(android.support.v7.widget.SearchView) -> g
    void access$700(android.support.v7.widget.SearchView) -> h
    android.widget.ImageView access$800(android.support.v7.widget.SearchView) -> i
    void access$900(android.support.v7.widget.SearchView) -> j
    android.widget.ImageView access$1000(android.support.v7.widget.SearchView) -> k
    void access$1100(android.support.v7.widget.SearchView) -> l
    android.support.v7.widget.SearchView$SearchAutoComplete access$1200(android.support.v7.widget.SearchView) -> m
    void access$1300(android.support.v7.widget.SearchView) -> n
    android.app.SearchableInfo access$1400(android.support.v7.widget.SearchView) -> o
    boolean access$1500(android.support.v7.widget.SearchView,android.view.View,int,android.view.KeyEvent) -> a
    void access$1700(android.support.v7.widget.SearchView,int,java.lang.String,java.lang.String) -> a
    boolean access$1800(android.support.v7.widget.SearchView,int,int,java.lang.String) -> a
    boolean access$1900(android.support.v7.widget.SearchView,int) -> a
    void access$2000(android.support.v7.widget.SearchView,java.lang.CharSequence) -> a
    void access$2100(android.support.v7.widget.SearchView,boolean) -> a
android.support.v7.widget.SearchView$1 -> android.support.v7.widget.dd:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$10 -> android.support.v7.widget.de:
    android.support.v7.widget.SearchView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.widget.SearchView$11 -> android.support.v7.widget.df:
    android.support.v7.widget.SearchView this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.SearchView$12 -> android.support.v7.widget.dg:
    android.support.v7.widget.SearchView this$0 -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
android.support.v7.widget.SearchView$2 -> android.support.v7.widget.dh:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$3 -> android.support.v7.widget.di:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$4 -> android.support.v7.widget.dj:
    android.support.v7.widget.SearchView this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
android.support.v7.widget.SearchView$5 -> android.support.v7.widget.dk:
    android.support.v7.widget.SearchView this$0 -> a
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
android.support.v7.widget.SearchView$6 -> android.support.v7.widget.dl:
    android.support.v7.widget.SearchView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.widget.SearchView$7 -> android.support.v7.widget.dm:
    android.support.v7.widget.SearchView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.widget.SearchView$8 -> android.support.v7.widget.dn:
    android.support.v7.widget.SearchView this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
android.support.v7.widget.SearchView$9 -> android.support.v7.widget.do:
    android.support.v7.widget.SearchView this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
android.support.v7.widget.SearchView$AutoCompleteTextViewReflector -> android.support.v7.widget.dp:
    java.lang.reflect.Method doBeforeTextChanged -> a
    java.lang.reflect.Method doAfterTextChanged -> b
    java.lang.reflect.Method ensureImeVisible -> c
    java.lang.reflect.Method showSoftInputUnchecked -> d
    void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> a
    void doAfterTextChanged(android.widget.AutoCompleteTextView) -> b
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> a
    void showSoftInputUnchecked(android.view.inputmethod.InputMethodManager,android.view.View,int) -> a
android.support.v7.widget.SearchView$OnCloseListener -> android.support.v7.widget.dq:
    boolean onClose() -> a
android.support.v7.widget.SearchView$OnQueryTextListener -> android.support.v7.widget.dr:
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v7.widget.SearchView$OnSuggestionListener -> android.support.v7.widget.ds:
    boolean onSuggestionSelect(int) -> a
    boolean onSuggestionClick(int) -> b
android.support.v7.widget.SearchView$SearchAutoComplete -> android.support.v7.widget.SearchView$SearchAutoComplete:
    int mThreshold -> a
    android.support.v7.widget.SearchView mSearchView -> b
    void setSearchView(android.support.v7.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    boolean isEmpty() -> a
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean access$1600(android.support.v7.widget.SearchView$SearchAutoComplete) -> a
android.support.v7.widget.StaggeredGridLayoutManager -> android.support.v7.widget.StaggeredGridLayoutManager:
    int mSpanCount -> g
    android.support.v7.widget.StaggeredGridLayoutManager$Span[] mSpans -> h
    android.support.v7.widget.OrientationHelper mPrimaryOrientation -> a
    android.support.v7.widget.OrientationHelper mSecondaryOrientation -> b
    int mOrientation -> i
    int mSizePerSpan -> j
    android.support.v7.widget.LayoutState mLayoutState -> k
    boolean mReverseLayout -> l
    boolean mShouldReverseLayout -> c
    java.util.BitSet mRemainingSpans -> m
    int mPendingScrollPosition -> d
    int mPendingScrollPositionOffset -> e
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup -> f
    int mGapStrategy -> n
    boolean mLastLayoutFromEnd -> o
    boolean mLastLayoutRTL -> p
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState -> t
    int mFullSizeSpec -> u
    int mWidthSpec -> v
    int mHeightSpec -> w
    android.graphics.Rect mTmpRect -> x
    android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo -> y
    boolean mLaidOutInvalidFullSpan -> z
    boolean mSmoothScrollbarEnabled -> A
    java.lang.Runnable mCheckForGapsRunnable -> B
    boolean checkForGaps() -> B
    void onScrollStateChanged(int) -> i
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> a
    android.view.View hasGapsToFix() -> f
    boolean checkSpanForGap(android.support.v7.widget.StaggeredGridLayoutManager$Span) -> a
    void setReverseLayout(boolean) -> a
    void assertNotInLayoutOrScroll(java.lang.String) -> a
    void ensureOrientationHelper() -> C
    void resolveShouldLayoutReverse() -> D
    boolean isLayoutRTL() -> g
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> c
    void applyPendingSavedState(android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> a
    void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> a
    boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> c
    boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> b
    void updateMeasureSpecs() -> h
    boolean supportsPredictiveItemAnimations() -> b
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> b
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> a
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> c
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> d
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> h
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> e
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> f
    int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> i
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> g
    void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams) -> a
    int getSpecForDimension(int,int) -> b
    void measureChildWithDecorationsAndMargin(android.view.View,int,int) -> b
    int updateSpecWithExtra(int,int,int) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> a
    android.os.Parcelable onSaveInstanceState() -> c
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    int findFirstVisibleItemPositionInt() -> i
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> b
    android.view.View findFirstVisibleItemClosestToStart(boolean,boolean) -> a
    android.view.View findFirstVisibleItemClosestToEnd(boolean,boolean) -> b
    void fixEndGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> a
    void fixStartGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> b
    void updateLayoutState(int,android.support.v7.widget.RecyclerView$State) -> a
    void setLayoutStateDirection(int) -> a
    void offsetChildrenHorizontal(int) -> g
    void offsetChildrenVertical(int) -> h
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> b
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> a
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> a
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> a
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> a
    void handleUpdate(int,int,int) -> b
    int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State) -> a
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> j
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> k
    void attachViewToSpans(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,android.support.v7.widget.LayoutState) -> a
    void recycle(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState) -> a
    void appendViewToAllSpans(android.view.View) -> o
    void prependViewToAllSpans(android.view.View) -> p
    void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> b
    void updateAllRemainingSpans(int,int) -> c
    void updateRemainingSpans(android.support.v7.widget.StaggeredGridLayoutManager$Span,int,int) -> a
    int getMaxStart(int) -> l
    int getMinStart(int) -> m
    boolean areAllEndsEqual() -> j
    boolean areAllStartsEqual() -> k
    int getMaxEnd(int) -> n
    int getMinEnd(int) -> o
    void recycleFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> a
    void recycleFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> b
    boolean preferLastSpan(int) -> p
    android.support.v7.widget.StaggeredGridLayoutManager$Span getNextSpan(android.support.v7.widget.LayoutState) -> a
    boolean canScrollVertically() -> e
    boolean canScrollHorizontally() -> d
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> b
    int calculateScrollDirectionForPosition(int) -> q
    void scrollToPosition(int) -> c
    int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> c
    int getLastChildPosition() -> E
    int getFirstChildPosition() -> F
    int findFirstReferenceChildPosition(int) -> r
    int findLastReferenceChildPosition(int) -> s
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> a
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> a
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> a
android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo -> android.support.v7.widget.dt:
    int mPosition -> a
    int mOffset -> b
    boolean mLayoutFromEnd -> c
    boolean mInvalidateOffsets -> d
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> e
    void reset() -> a
    void assignCoordinateFromPadding() -> b
    void assignCoordinateFromPadding(int) -> a
android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams -> android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams:
    android.support.v7.widget.StaggeredGridLayoutManager$Span mSpan -> e
    boolean mFullSpan -> f
    int getSpanIndex() -> a
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup:
    int[] mData -> a
    java.util.List mFullSpanItems -> b
    int forceInvalidateAfter(int) -> a
    int invalidateAfter(int) -> b
    int getSpan(int) -> c
    void setSpan(int,android.support.v7.widget.StaggeredGridLayoutManager$Span) -> a
    int sizeForPosition(int) -> d
    void ensureSize(int) -> e
    void clear() -> a
    void offsetForRemoval(int,int) -> a
    void offsetFullSpansForRemoval(int,int) -> c
    void offsetForAddition(int,int) -> b
    void offsetFullSpansForAddition(int,int) -> d
    int invalidateFullSpansAfter(int) -> g
    void addFullSpanItem(android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> a
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> f
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> a
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    int mPosition -> a
    int mGapDir -> b
    int[] mGapPerSpan -> c
    boolean mHasUnwantedGapAfter -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getGapForSpan(int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> android.support.v7.widget.du:
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> a
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.StaggeredGridLayoutManager$SavedState -> android.support.v7.widget.StaggeredGridLayoutManager$SavedState:
    int mAnchorPosition -> a
    int mVisibleAnchorPosition -> b
    int mSpanOffsetsSize -> c
    int[] mSpanOffsets -> d
    int mSpanLookupSize -> e
    int[] mSpanLookup -> f
    java.util.List mFullSpanItems -> g
    boolean mReverseLayout -> h
    boolean mAnchorLayoutFromEnd -> i
    boolean mLastLayoutRTL -> j
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void invalidateSpanInfo() -> a
    void invalidateAnchorPositionInfo() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1 -> android.support.v7.widget.dv:
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.StaggeredGridLayoutManager$Span -> android.support.v7.widget.dw:
    java.util.ArrayList mViews -> f
    int mCachedStart -> a
    int mCachedEnd -> b
    int mDeletedSize -> c
    int mIndex -> d
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> e
    int getStartLine(int) -> a
    void calculateCachedStart() -> a
    int getStartLine() -> b
    int getEndLine(int) -> b
    void calculateCachedEnd() -> c
    int getEndLine() -> d
    void prependToSpan(android.view.View) -> a
    void appendToSpan(android.view.View) -> b
    void cacheReferenceLineAndClear(boolean,int) -> a
    void clear() -> e
    void invalidateCache() -> f
    void setLine(int) -> c
    void popEnd() -> g
    void popStart() -> h
    int getDeletedSize() -> i
    android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> c
    void onOffset(int) -> d
    java.util.ArrayList access$300(android.support.v7.widget.StaggeredGridLayoutManager$Span) -> a
android.support.v7.widget.SuggestionsAdapter -> android.support.v7.widget.dx:
    android.app.SearchManager mSearchManager -> j
    android.support.v7.widget.SearchView mSearchView -> k
    android.app.SearchableInfo mSearchable -> l
    android.content.Context mProviderContext -> m
    java.util.WeakHashMap mOutsideDrawablesCache -> n
    int mCommitIconResId -> o
    boolean mClosed -> p
    int mQueryRefinement -> q
    android.content.res.ColorStateList mUrlColor -> r
    int mText1Col -> s
    int mText2Col -> t
    int mText2UrlCol -> u
    int mIconName1Col -> v
    int mIconName2Col -> w
    int mFlagsCol -> x
    void setQueryRefinement(int) -> a
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> d
    void changeCursor(android.database.Cursor) -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> b
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> a
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> e
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> f
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> b
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> b
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> g
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> a
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> b
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    java.lang.String getStringOrNull(android.database.Cursor,int) -> a
    android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> a
    android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> a
android.support.v7.widget.SuggestionsAdapter$ChildViewCache -> android.support.v7.widget.dy:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon1 -> c
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
android.support.v7.widget.SwitchCompat -> android.support.v7.widget.SwitchCompat:
    android.graphics.drawable.Drawable mThumbDrawable -> a
    android.graphics.drawable.Drawable mTrackDrawable -> b
    int mThumbTextPadding -> c
    int mSwitchMinWidth -> d
    int mSwitchPadding -> e
    boolean mSplitTrack -> f
    java.lang.CharSequence mTextOn -> g
    java.lang.CharSequence mTextOff -> h
    boolean mShowText -> i
    int mTouchMode -> j
    int mTouchSlop -> k
    float mTouchX -> l
    float mTouchY -> m
    android.view.VelocityTracker mVelocityTracker -> n
    int mMinFlingVelocity -> o
    float mThumbPosition -> p
    int mSwitchWidth -> q
    int mSwitchHeight -> r
    int mThumbWidth -> s
    int mSwitchLeft -> t
    int mSwitchTop -> u
    int mSwitchRight -> v
    int mSwitchBottom -> w
    android.text.TextPaint mTextPaint -> x
    android.content.res.ColorStateList mTextColors -> y
    android.text.Layout mOnLayout -> z
    android.text.Layout mOffLayout -> A
    android.text.method.TransformationMethod mSwitchTransformationMethod -> B
    android.support.v7.widget.SwitchCompat$ThumbAnimation mPositionAnimator -> C
    android.graphics.Rect mTempRect -> D
    android.support.v7.internal.widget.TintManager mTintManager -> E
    int[] CHECKED_STATE_SET -> F
    void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    void setSwitchTypefaceByIndex(int,int) -> a
    void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    void setSwitchPadding(int) -> setSwitchPadding
    int getSwitchPadding() -> getSwitchPadding
    void setSwitchMinWidth(int) -> setSwitchMinWidth
    int getSwitchMinWidth() -> getSwitchMinWidth
    void setThumbTextPadding(int) -> setThumbTextPadding
    int getThumbTextPadding() -> getThumbTextPadding
    void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    void setTrackResource(int) -> setTrackResource
    android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    void setThumbResource(int) -> setThumbResource
    android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    void setSplitTrack(boolean) -> setSplitTrack
    boolean getSplitTrack() -> getSplitTrack
    java.lang.CharSequence getTextOn() -> getTextOn
    void setTextOn(java.lang.CharSequence) -> setTextOn
    java.lang.CharSequence getTextOff() -> getTextOff
    void setTextOff(java.lang.CharSequence) -> setTextOff
    void setShowText(boolean) -> setShowText
    boolean getShowText() -> getShowText
    void onMeasure(int,int) -> onMeasure
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    android.text.Layout makeLayout(java.lang.CharSequence) -> a
    boolean hitThumb(float,float) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancelSuperTouch(android.view.MotionEvent) -> a
    void stopDrag(android.view.MotionEvent) -> b
    void animateThumbToCheckedState(boolean) -> a
    void cancelPositionAnimator() -> a
    boolean getTargetCheckedState() -> getTargetCheckedState
    void setThumbPosition(float) -> setThumbPosition
    void toggle() -> toggle
    void setChecked(boolean) -> setChecked
    void onLayout(boolean,int,int,int,int) -> onLayout
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    int getCompoundPaddingRight() -> getCompoundPaddingRight
    int getThumbOffset() -> getThumbOffset
    int getThumbScrollRange() -> getThumbScrollRange
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void drawableStateChanged() -> drawableStateChanged
    void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    float constrain(float,float,float) -> a
    void access$100(android.support.v7.widget.SwitchCompat,float) -> a
android.support.v7.widget.SwitchCompat$1 -> android.support.v7.widget.dz:
android.support.v7.widget.SwitchCompat$ThumbAnimation -> android.support.v7.widget.ea:
    float mStartPosition -> a
    float mEndPosition -> b
    float mDiff -> c
    android.support.v7.widget.SwitchCompat this$0 -> d
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v7.widget.ThemedSpinnerAdapter -> android.support.v7.widget.eb:
    void setDropDownViewTheme(android.content.res.Resources$Theme) -> a
    android.content.res.Resources$Theme getDropDownViewTheme() -> a
android.support.v7.widget.Toolbar -> android.support.v7.widget.Toolbar:
    android.support.v7.widget.ActionMenuView mMenuView -> b
    android.widget.TextView mTitleTextView -> c
    android.widget.TextView mSubtitleTextView -> d
    android.widget.ImageButton mNavButtonView -> e
    android.widget.ImageView mLogoView -> f
    android.graphics.drawable.Drawable mCollapseIcon -> g
    java.lang.CharSequence mCollapseDescription -> h
    android.widget.ImageButton mCollapseButtonView -> i
    android.view.View mExpandedActionView -> a
    android.content.Context mPopupContext -> j
    int mPopupTheme -> k
    int mTitleTextAppearance -> l
    int mSubtitleTextAppearance -> m
    int mButtonGravity -> n
    int mMaxButtonHeight -> o
    int mTitleMarginStart -> p
    int mTitleMarginEnd -> q
    int mTitleMarginTop -> r
    int mTitleMarginBottom -> s
    android.support.v7.internal.widget.RtlSpacingHelper mContentInsets -> t
    int mGravity -> u
    java.lang.CharSequence mTitleText -> v
    java.lang.CharSequence mSubtitleText -> w
    int mTitleTextColor -> x
    int mSubtitleTextColor -> y
    boolean mEatingTouch -> z
    boolean mEatingHover -> A
    java.util.ArrayList mTempViews -> B
    java.util.ArrayList mHiddenViews -> C
    int[] mTempMargins -> D
    android.support.v7.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener -> E
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener -> F
    android.support.v7.internal.widget.ToolbarWidgetWrapper mWrapper -> G
    android.support.v7.widget.ActionMenuPresenter mOuterActionMenuPresenter -> H
    android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> I
    android.support.v7.internal.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> J
    android.support.v7.internal.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> K
    boolean mCollapsible -> L
    java.lang.Runnable mShowOverflowMenuRunnable -> M
    android.support.v7.internal.widget.TintManager mTintManager -> N
    void setPopupTheme(int) -> setPopupTheme
    int getPopupTheme() -> getPopupTheme
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void setLogo(int) -> setLogo
    boolean canShowOverflowMenu() -> a
    boolean isOverflowMenuShowing() -> b
    boolean isOverflowMenuShowPending() -> c
    boolean showOverflowMenu() -> d
    boolean hideOverflowMenu() -> e
    void setMenu(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter) -> setMenu
    void dismissPopupMenus() -> f
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    android.graphics.drawable.Drawable getLogo() -> getLogo
    void setLogoDescription(int) -> setLogoDescription
    void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    java.lang.CharSequence getLogoDescription() -> getLogoDescription
    void ensureLogoView() -> l
    boolean hasExpandedActionView() -> g
    void collapseActionView() -> h
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(int) -> setTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(int) -> setSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    void setTitleTextColor(int) -> setTitleTextColor
    void setSubtitleTextColor(int) -> setSubtitleTextColor
    java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    void setNavigationContentDescription(int) -> setNavigationContentDescription
    void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    void setNavigationIcon(int) -> setNavigationIcon
    void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    android.view.Menu getMenu() -> getMenu
    void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    void ensureMenu() -> m
    void ensureMenuView() -> n
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setOnMenuItemClickListener(android.support.v7.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    int getContentInsetStart() -> getContentInsetStart
    int getContentInsetEnd() -> getContentInsetEnd
    void setContentInsetsAbsolute(int,int) -> setContentInsetsAbsolute
    int getContentInsetLeft() -> getContentInsetLeft
    int getContentInsetRight() -> getContentInsetRight
    void ensureNavButtonView() -> o
    void ensureCollapseButtonView() -> p
    void addSystemView(android.view.View,boolean) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void postShowOverflowMenu() -> q
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void measureChildConstrained(android.view.View,int,int,int,int,int) -> a
    int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> a
    boolean shouldCollapse() -> r
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getViewListMeasuredWidth(java.util.List,int[]) -> a
    int layoutChildLeft(android.view.View,int,int[],int) -> a
    int layoutChildRight(android.view.View,int,int[],int) -> b
    int getChildTop(android.view.View,int) -> a
    int getChildVerticalGravity(int) -> a
    void addCustomViewsWithGravity(java.util.List,int) -> a
    int getChildHorizontalGravity(int) -> b
    boolean shouldLayout(android.view.View) -> a
    int getHorizontalMargins(android.view.View) -> b
    int getVerticalMargins(android.view.View) -> c
    android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    android.support.v7.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> i
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.v7.internal.widget.DecorToolbar getWrapper() -> getWrapper
    void removeChildrenForExpandedActionView() -> j
    void addChildrenForExpandedActionView() -> k
    boolean isChildOrHidden(android.view.View) -> d
    void setCollapsible(boolean) -> setCollapsible
    void setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.Toolbar$OnMenuItemClickListener access$000(android.support.v7.widget.Toolbar) -> a
    void access$200(android.support.v7.widget.Toolbar) -> b
    android.widget.ImageButton access$300(android.support.v7.widget.Toolbar) -> c
    int access$400(android.support.v7.widget.Toolbar) -> d
android.support.v7.widget.Toolbar$1 -> android.support.v7.widget.ec:
    android.support.v7.widget.Toolbar this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> a
android.support.v7.widget.Toolbar$2 -> android.support.v7.widget.ed:
    android.support.v7.widget.Toolbar this$0 -> a
    void run() -> run
android.support.v7.widget.Toolbar$3 -> android.support.v7.widget.ee:
    android.support.v7.widget.Toolbar this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter -> android.support.v7.widget.ef:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    android.support.v7.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    android.support.v7.widget.Toolbar this$0 -> c
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> a
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    int getId() -> b
    android.os.Parcelable onSaveInstanceState() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> a
android.support.v7.widget.Toolbar$LayoutParams -> android.support.v7.widget.Toolbar$LayoutParams:
    int mViewType -> b
    void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> a
android.support.v7.widget.Toolbar$OnMenuItemClickListener -> android.support.v7.widget.eg:
    boolean onMenuItemClick(android.view.MenuItem) -> a
android.support.v7.widget.Toolbar$SavedState -> android.support.v7.widget.Toolbar$SavedState:
    int expandedMenuItemId -> a
    boolean isOverflowOpen -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.Toolbar$SavedState$1 -> android.support.v7.widget.eh:
    android.support.v7.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.widget.Toolbar$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
bolts.AndroidExecutors -> a.a:
    bolts.AndroidExecutors INSTANCE -> c
    java.util.concurrent.Executor uiThread -> d
    int CPU_COUNT -> e
    int CORE_POOL_SIZE -> a
    int MAX_POOL_SIZE -> b
    java.util.concurrent.ExecutorService newCachedThreadPool() -> a
    void allowCoreThreadTimeout(java.util.concurrent.ThreadPoolExecutor,boolean) -> a
    java.util.concurrent.Executor uiThread() -> b
bolts.AndroidExecutors$1 -> a.b:
bolts.AndroidExecutors$UIThreadExecutor -> a.c:
    void execute(java.lang.Runnable) -> execute
bolts.BoltsExecutors -> a.d:
    bolts.BoltsExecutors INSTANCE -> a
    java.util.concurrent.ExecutorService background -> b
    java.util.concurrent.Executor immediate -> c
    boolean isAndroidRuntime() -> c
    java.util.concurrent.ExecutorService background() -> a
    java.util.concurrent.Executor immediate() -> b
bolts.BoltsExecutors$1 -> a.e:
bolts.BoltsExecutors$ImmediateExecutor -> a.f:
    java.lang.ThreadLocal executionDepth -> a
    int incrementDepth() -> a
    int decrementDepth() -> b
    void execute(java.lang.Runnable) -> execute
bolts.Continuation -> a.g:
    java.lang.Object then(bolts.Task) -> a
bolts.Task -> a.h:
    java.util.concurrent.ExecutorService BACKGROUND_EXECUTOR -> a
    java.util.concurrent.Executor IMMEDIATE_EXECUTOR -> c
    java.util.concurrent.Executor UI_THREAD_EXECUTOR -> b
    java.lang.Object lock -> d
    boolean complete -> e
    boolean cancelled -> f
    java.lang.Object result -> g
    java.lang.Exception error -> h
    java.util.List continuations -> i
    bolts.Task$TaskCompletionSource create() -> a
    boolean isCompleted() -> b
    boolean isCancelled() -> c
    boolean isFaulted() -> d
    java.lang.Object getResult() -> e
    java.lang.Exception getError() -> f
    bolts.Task forResult(java.lang.Object) -> a
    bolts.Task forError(java.lang.Exception) -> a
    bolts.Task cancelled() -> g
    bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor) -> a
    bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor) -> a
    bolts.Task continueWith(bolts.Continuation) -> a
    void completeImmediately(bolts.Task$TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor) -> b
    void runContinuations() -> h
    void access$100(bolts.Task$TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor) -> a
    java.lang.Object access$300(bolts.Task) -> a
    boolean access$400(bolts.Task) -> b
    boolean access$402(bolts.Task,boolean) -> a
    boolean access$502(bolts.Task,boolean) -> b
    void access$600(bolts.Task) -> c
    java.lang.Object access$702(bolts.Task,java.lang.Object) -> a
    java.lang.Exception access$802(bolts.Task,java.lang.Exception) -> a
bolts.Task$1 -> a.i:
    bolts.Task then(bolts.Task) -> b
    java.lang.Object then(bolts.Task) -> a
bolts.Task$2 -> a.j:
    bolts.Task$TaskCompletionSource val$tcs -> a
    java.util.concurrent.Callable val$callable -> b
    void run() -> run
bolts.Task$5 -> a.k:
    bolts.Task$TaskCompletionSource val$tcs -> a
    bolts.Continuation val$continuation -> b
    java.util.concurrent.Executor val$executor -> c
    bolts.Task this$0 -> d
    java.lang.Void then(bolts.Task) -> b
    java.lang.Object then(bolts.Task) -> a
bolts.Task$9 -> a.l:
    bolts.Continuation val$continuation -> a
    bolts.Task val$task -> b
    bolts.Task$TaskCompletionSource val$tcs -> c
    void run() -> run
bolts.Task$TaskCompletionSource -> a.m:
    bolts.Task this$0 -> a
    bolts.Task getTask() -> a
    boolean trySetCancelled() -> b
    boolean trySetResult(java.lang.Object) -> a
    boolean trySetError(java.lang.Exception) -> a
    void setCancelled() -> c
    void setResult(java.lang.Object) -> b
    void setError(java.lang.Exception) -> b
com.example.database.DBHelper -> com.example.a.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.example.database.DBManager -> com.example.a.b:
    java.lang.Object LOCK -> a
    com.example.database.DBManager instance -> b
    com.example.database.DBHelper helper -> c
    android.database.sqlite.SQLiteDatabase db -> d
    com.example.database.DBManager getInstance(android.content.Context) -> a
    void open(int) -> a
    void insertRecord(com.example.datamodel.Article) -> a
    void insertMultiRecords(java.util.List) -> a
    void updateLocalLink(java.lang.String,java.lang.String) -> a
    java.lang.String getLocalUrl(java.lang.String) -> a
    java.util.List getData(int,int) -> a
    boolean isExist(java.lang.String) -> b
    java.util.List query(java.lang.String) -> c
com.example.datamodel.Article -> com.example.datamodel.Article:
    int[] TYPE -> a
    int id -> b
    int type -> c
    java.lang.String title -> d
    java.lang.String remote_link -> e
    java.lang.String author -> f
    java.lang.String pubDate -> g
    java.lang.String description -> h
    java.lang.String imgurl -> i
    java.lang.String local_link -> j
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setId(int) -> a
    int getType() -> a
    void setType(int) -> b
    java.lang.String getTitle() -> b
    void setTitle(java.lang.String) -> a
    java.lang.String getRemote_link() -> c
    void setRemote_link(java.lang.String) -> b
    java.lang.String getAuthor() -> d
    void setAuthor(java.lang.String) -> c
    java.lang.String getPubDate() -> e
    void setPubDate(java.lang.String) -> d
    java.lang.String getDescription() -> f
    void setDescription(java.lang.String) -> e
    java.lang.String getImgurl() -> g
    void setImgurl(java.lang.String) -> f
    java.lang.String getLocal_link() -> h
    void setLocal_link(java.lang.String) -> g
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.example.datamodel.Article$1 -> com.example.datamodel.a:
    com.example.datamodel.Article createFromParcel(android.os.Parcel) -> a
    com.example.datamodel.Article[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.example.datamodel.DataManager -> com.example.datamodel.b:
    java.util.List mTugua -> a
    java.util.List mLehuo -> b
    java.util.List mYitu -> c
    java.util.List mDuanzi -> d
    com.example.datamodel.DataManager instance -> e
    com.example.datamodel.DataManager getInstance() -> a
    void addData(com.example.datamodel.Article) -> a
    void addDataset(java.util.List) -> a
    void resetDataset(int) -> a
    void updateDataset(int,java.util.List) -> a
    java.util.List getData(int) -> b
com.example.fragment.DetailFragment -> com.example.fragment.DetailFragment:
    android.view.View rootView -> a
    android.widget.ProgressBar mProgressBar -> b
    android.webkit.WebView mWebView -> c
    android.webkit.WebSettings webSettings -> d
    com.example.datamodel.Article article -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initWebView() -> a
    android.webkit.WebSettings access$000(com.example.fragment.DetailFragment) -> a
    android.widget.ProgressBar access$100(com.example.fragment.DetailFragment) -> b
com.example.fragment.DetailFragment$1 -> com.example.fragment.a:
    com.example.fragment.DetailFragment this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.example.fragment.DetailFragment$2 -> com.example.fragment.b:
    com.example.fragment.DetailFragment this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.example.fragment.ItemFragment -> com.example.fragment.ItemFragment:
    android.view.View rootView -> a
    com.handmark.pulltorefresh.library.PullToRefreshRecyclerView mRefreshView -> b
    com.handmark.pulltorefresh.library.ILoadingLayout header -> c
    com.handmark.pulltorefresh.library.ILoadingLayout footer -> d
    android.support.v7.widget.RecyclerView mRecyclerView -> e
    android.support.v7.widget.LinearLayoutManager mLayoutManager -> f
    com.example.fragment.MyRecylcerAdapter mAdapter -> g
    int curpos -> h
    java.util.List mDataSet -> i
    int limit -> aj
    java.lang.String lastUpdated -> ak
    com.example.network.SneezeClient client -> al
    android.support.v4.content.LocalBroadcastManager broadcastManager -> am
    android.content.BroadcastReceiver receiver -> an
    android.os.Handler handler -> ao
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onDestroyView() -> onDestroyView
    void initRecyclerView() -> a
    void loadFromDatabase(int) -> a
    void saveLastUpdated(java.lang.String) -> a
    java.lang.String restoreLastUpdated() -> m
    com.example.fragment.MyRecylcerAdapter access$000(com.example.fragment.ItemFragment) -> a
    int access$100(com.example.fragment.ItemFragment) -> b
    java.util.List access$200(com.example.fragment.ItemFragment) -> c
    com.handmark.pulltorefresh.library.PullToRefreshRecyclerView access$300(com.example.fragment.ItemFragment) -> d
    android.os.Handler access$400(com.example.fragment.ItemFragment) -> e
    com.example.network.SneezeClient access$500(com.example.fragment.ItemFragment) -> f
    com.handmark.pulltorefresh.library.ILoadingLayout access$600(com.example.fragment.ItemFragment) -> g
    void access$700(com.example.fragment.ItemFragment,java.lang.String) -> a
    int access$800(com.example.fragment.ItemFragment) -> h
    void access$900(com.example.fragment.ItemFragment,int) -> a
    int access$802(com.example.fragment.ItemFragment,int) -> b
com.example.fragment.ItemFragment$1 -> com.example.fragment.c:
    com.example.fragment.ItemFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.example.fragment.ItemFragment$2 -> com.example.fragment.d:
    com.example.fragment.ItemFragment this$0 -> a
    void onItemClick(android.view.View,int) -> a
com.example.fragment.ItemFragment$3 -> com.example.fragment.e:
    com.example.fragment.ItemFragment this$0 -> a
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> a
com.example.fragment.ItemFragment$4 -> com.example.fragment.f:
    com.example.fragment.ItemFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.fragment.ItemFragment$LoadMoreTask -> com.example.fragment.g:
    int num -> b
    com.example.fragment.ItemFragment this$0 -> a
    void run() -> run
com.example.fragment.MyRecylcerAdapter -> com.example.fragment.h:
    java.util.List mDataset -> a
    com.example.fragment.MyRecylcerAdapter$OnItemClickListener mListener -> b
    int type -> c
    void setOnItemClickListener(com.example.fragment.MyRecylcerAdapter$OnItemClickListener) -> a
    com.example.fragment.MyRecylcerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> c
    void onBindViewHolder(com.example.fragment.MyRecylcerAdapter$ViewHolder,int) -> a
    int getItemCount() -> a
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> a
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> a
    com.example.fragment.MyRecylcerAdapter$OnItemClickListener access$000(com.example.fragment.MyRecylcerAdapter) -> a
com.example.fragment.MyRecylcerAdapter$OnItemClickListener -> com.example.fragment.i:
    void onItemClick(android.view.View,int) -> a
com.example.fragment.MyRecylcerAdapter$ViewHolder -> com.example.fragment.j:
    android.widget.TextView mTextView -> l
    com.facebook.drawee.view.SimpleDraweeView mImageView -> m
    com.example.fragment.MyRecylcerAdapter this$0 -> n
com.example.fragment.MyRecylcerAdapter$ViewHolder$1 -> com.example.fragment.k:
    com.example.fragment.MyRecylcerAdapter val$this$0 -> a
    com.example.fragment.MyRecylcerAdapter$ViewHolder this$1 -> b
    void onClick(android.view.View) -> onClick
com.example.fragment.MyViewPagerAdapter -> com.example.fragment.l:
    java.util.List articles -> a
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
com.example.fragment.YituFragment -> com.example.fragment.YituFragment:
    android.view.View rootView -> a
    android.support.v4.view.ViewPager mViewPager -> b
    com.example.fragment.MyViewPagerAdapter mAdapter -> c
    int curpos -> d
    java.util.List mDataSet -> e
    int position -> f
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initView() -> a
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
com.example.jsonparser.ArticleData -> com.example.b.a:
    java.lang.String title -> a
    java.lang.String link -> b
    java.lang.String author -> c
    java.lang.String pubDate -> d
    java.lang.String description -> e
    java.lang.String imgurl -> f
    java.lang.String getTitle() -> a
    void setTitle(java.lang.String) -> a
    java.lang.String getLink() -> b
    void setLink(java.lang.String) -> b
    java.lang.String getAuthor() -> c
    void setAuthor(java.lang.String) -> c
    java.lang.String getPubDate() -> d
    void setPubDate(java.lang.String) -> d
    java.lang.String getDescription() -> e
    void setDescription(java.lang.String) -> e
    java.lang.String getImgurl() -> f
    void setImgurl(java.lang.String) -> f
    java.lang.String toString() -> toString
com.example.jsonparser.ArticleDataDeserializer -> com.example.b.b:
    com.example.jsonparser.ArticleData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> b
com.example.jsonparser.JsonArticle -> com.example.b.c:
    java.lang.String msg -> a
    int error -> b
    com.example.jsonparser.ArticleData[] data -> c
    com.example.jsonparser.ArticleData[] getData() -> a
    java.lang.String toString() -> toString
com.example.jsonparser.JsonLoadUrl -> com.example.b.d:
    java.lang.String msg -> a
    int error -> b
    java.lang.String data -> c
    java.lang.String getData() -> a
    java.lang.String toString() -> toString
com.example.jsonparser.JsonParserUtil -> com.example.b.e:
    java.lang.String JsonLoadUrlParser(java.lang.String) -> a
    com.example.jsonparser.ArticleData[] JsonArticleParser(java.lang.String) -> b
com.example.network.NetworkMonitor -> com.example.c.a:
    int getNetWorkState(android.content.Context) -> a
com.example.network.SSLSocketFactoryEx -> com.example.c.b:
    javax.net.ssl.SSLContext sslContext -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    cz.msebera.android.httpclient.conn.ssl.SSLSocketFactory getFixedSocketFactory() -> a
com.example.network.SSLSocketFactoryEx$1 -> com.example.c.c:
    com.example.network.SSLSocketFactoryEx this$0 -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.example.network.SneezeClient -> com.example.c.d:
    java.lang.String[] APP_PARAMS -> a
    com.example.network.SneezeClient instance -> b
    int page_num -> c
    int limit_num -> d
    int[] limits -> e
    boolean isUpdated -> f
    com.loopj.android.http.AsyncHttpClient client -> g
    com.loopj.android.http.PersistentCookieStore cookieStore -> h
    com.example.network.SneezeClient getInstance(android.content.Context) -> a
    void getArticle(int,com.loopj.android.http.AsyncHttpResponseHandler) -> a
    void getSplashImage(com.loopj.android.http.AsyncHttpResponseHandler) -> a
    void getPageContent(java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> a
    void setLimitNum(int) -> a
    void setUpdated(boolean) -> a
com.example.network.SneezeJsonResponseHandler -> com.example.c.e:
    android.content.Context context -> a
    int type -> b
    android.os.Handler handler -> c
    com.example.database.DBManager dbManager -> d
    com.example.network.SneezeClient client -> e
    void onFailure(int,cz.msebera.android.httpclient.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,cz.msebera.android.httpclient.Header[],java.lang.String) -> onSuccess
    void notifyNewArticle(com.example.datamodel.Article) -> a
    void downLoadPages(java.util.List) -> a
com.example.network.SneezePageResponseHandler -> com.example.c.f:
    android.content.Context context -> a
    java.lang.String remote_link -> b
    void onFailure(int,cz.msebera.android.httpclient.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,cz.msebera.android.httpclient.Header[],java.lang.String) -> onSuccess
com.example.sneezereader.DetailActivity -> com.example.sneezereader.DetailActivity:
    android.support.v7.widget.Toolbar mToolBar -> j
    android.support.v4.view.ViewPager mViewPager -> k
    com.example.fragment.MyViewPagerAdapter mAdapter -> l
    com.example.datamodel.Article article -> m
    int position -> n
    int type -> o
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> k
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.example.sneezereader.MainActivity -> com.example.sneezereader.MainActivity:
    java.lang.String[] FRAG_TAG -> j
    android.support.v4.widget.DrawerLayout mDrawerLayout -> l
    android.support.design.widget.NavigationView mNavView -> m
    android.support.v7.app.ActionBarDrawerToggle mToggle -> n
    android.support.v7.widget.Toolbar mToolBar -> o
    android.widget.RadioGroup mTabMenu -> p
    java.util.List mFragments -> k
    android.support.v4.app.FragmentManager fm -> q
    int curpos -> r
    android.content.BroadcastReceiver connReceiver -> s
    boolean netWorkAvaible -> t
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> k
    void initFragments() -> l
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onDestroy() -> onDestroy
    boolean access$002(com.example.sneezereader.MainActivity,boolean) -> a
    android.support.v4.widget.DrawerLayout access$100(com.example.sneezereader.MainActivity) -> a
    int access$200(com.example.sneezereader.MainActivity) -> b
    int access$202(com.example.sneezereader.MainActivity,int) -> a
    android.support.v4.app.FragmentManager access$300(com.example.sneezereader.MainActivity) -> c
com.example.sneezereader.MainActivity$1 -> com.example.sneezereader.a:
    com.example.sneezereader.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.example.sneezereader.MainActivity$2 -> com.example.sneezereader.b:
    com.example.sneezereader.MainActivity this$0 -> a
    boolean onNavigationItemSelected(android.view.MenuItem) -> a
com.example.sneezereader.MainActivity$3 -> com.example.sneezereader.c:
    com.example.sneezereader.MainActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.example.sneezereader.R -> com.example.sneezereader.d:
com.example.sneezereader.R$styleable -> com.example.sneezereader.e:
    int[] ActionBar -> ActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_layout -> AlertDialog_android_layout
    int AlertDialog_buttonPanelSideLayout -> AlertDialog_buttonPanelSideLayout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int[] AppBarLayout -> AppBarLayout
    int AppBarLayout_android_background -> AppBarLayout_android_background
    int AppBarLayout_elevation -> AppBarLayout_elevation
    int AppBarLayout_expanded -> AppBarLayout_expanded
    int[] AppBarLayout_LayoutParams -> AppBarLayout_LayoutParams
    int AppBarLayout_LayoutParams_layout_scrollFlags -> AppBarLayout_LayoutParams_layout_scrollFlags
    int AppBarLayout_LayoutParams_layout_scrollInterpolator -> AppBarLayout_LayoutParams_layout_scrollInterpolator
    int[] AppCompatTextView -> AppCompatTextView
    int AppCompatTextView_android_textAppearance -> AppCompatTextView_android_textAppearance
    int AppCompatTextView_textAllCaps -> AppCompatTextView_textAllCaps
    int[] CardView -> CardView
    int CardView_cardBackgroundColor -> CardView_cardBackgroundColor
    int CardView_cardCornerRadius -> CardView_cardCornerRadius
    int CardView_cardElevation -> CardView_cardElevation
    int CardView_cardMaxElevation -> CardView_cardMaxElevation
    int CardView_cardPreventCornerOverlap -> CardView_cardPreventCornerOverlap
    int CardView_cardUseCompatPadding -> CardView_cardUseCompatPadding
    int CardView_contentPadding -> CardView_contentPadding
    int CardView_contentPaddingBottom -> CardView_contentPaddingBottom
    int CardView_contentPaddingLeft -> CardView_contentPaddingLeft
    int CardView_contentPaddingRight -> CardView_contentPaddingRight
    int CardView_contentPaddingTop -> CardView_contentPaddingTop
    int[] CircleImageView -> CircleImageView
    int CircleImageView_civ_border_color -> CircleImageView_civ_border_color
    int CircleImageView_civ_border_overlay -> CircleImageView_civ_border_overlay
    int CircleImageView_civ_border_width -> CircleImageView_civ_border_width
    int CircleImageView_civ_fill_color -> CircleImageView_civ_fill_color
    int[] CollapsingAppBarLayout_LayoutParams -> CollapsingAppBarLayout_LayoutParams
    int CollapsingAppBarLayout_LayoutParams_layout_collapseMode -> CollapsingAppBarLayout_LayoutParams_layout_collapseMode
    int CollapsingAppBarLayout_LayoutParams_layout_collapseParallaxMultiplier -> CollapsingAppBarLayout_LayoutParams_layout_collapseParallaxMultiplier
    int[] CollapsingToolbarLayout -> CollapsingToolbarLayout
    int CollapsingToolbarLayout_collapsedTitleGravity -> CollapsingToolbarLayout_collapsedTitleGravity
    int CollapsingToolbarLayout_collapsedTitleTextAppearance -> CollapsingToolbarLayout_collapsedTitleTextAppearance
    int CollapsingToolbarLayout_contentScrim -> CollapsingToolbarLayout_contentScrim
    int CollapsingToolbarLayout_expandedTitleGravity -> CollapsingToolbarLayout_expandedTitleGravity
    int CollapsingToolbarLayout_expandedTitleMargin -> CollapsingToolbarLayout_expandedTitleMargin
    int CollapsingToolbarLayout_expandedTitleMarginBottom -> CollapsingToolbarLayout_expandedTitleMarginBottom
    int CollapsingToolbarLayout_expandedTitleMarginEnd -> CollapsingToolbarLayout_expandedTitleMarginEnd
    int CollapsingToolbarLayout_expandedTitleMarginStart -> CollapsingToolbarLayout_expandedTitleMarginStart
    int CollapsingToolbarLayout_expandedTitleMarginTop -> CollapsingToolbarLayout_expandedTitleMarginTop
    int CollapsingToolbarLayout_expandedTitleTextAppearance -> CollapsingToolbarLayout_expandedTitleTextAppearance
    int CollapsingToolbarLayout_statusBarScrim -> CollapsingToolbarLayout_statusBarScrim
    int CollapsingToolbarLayout_title -> CollapsingToolbarLayout_title
    int CollapsingToolbarLayout_titleEnabled -> CollapsingToolbarLayout_titleEnabled
    int CollapsingToolbarLayout_toolbarId -> CollapsingToolbarLayout_toolbarId
    int[] CompoundButton -> CompoundButton
    int CompoundButton_android_button -> CompoundButton_android_button
    int CompoundButton_buttonTint -> CompoundButton_buttonTint
    int CompoundButton_buttonTintMode -> CompoundButton_buttonTintMode
    int[] CoordinatorLayout -> CoordinatorLayout
    int CoordinatorLayout_keylines -> CoordinatorLayout_keylines
    int CoordinatorLayout_statusBarBackground -> CoordinatorLayout_statusBarBackground
    int[] CoordinatorLayout_LayoutParams -> CoordinatorLayout_LayoutParams
    int CoordinatorLayout_LayoutParams_android_layout_gravity -> CoordinatorLayout_LayoutParams_android_layout_gravity
    int CoordinatorLayout_LayoutParams_layout_anchor -> CoordinatorLayout_LayoutParams_layout_anchor
    int CoordinatorLayout_LayoutParams_layout_anchorGravity -> CoordinatorLayout_LayoutParams_layout_anchorGravity
    int CoordinatorLayout_LayoutParams_layout_behavior -> CoordinatorLayout_LayoutParams_layout_behavior
    int CoordinatorLayout_LayoutParams_layout_keyline -> CoordinatorLayout_LayoutParams_layout_keyline
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_arrowHeadLength -> DrawerArrowToggle_arrowHeadLength
    int DrawerArrowToggle_arrowShaftLength -> DrawerArrowToggle_arrowShaftLength
    int DrawerArrowToggle_barLength -> DrawerArrowToggle_barLength
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int[] FloatingActionButton -> FloatingActionButton
    int FloatingActionButton_android_background -> FloatingActionButton_android_background
    int FloatingActionButton_backgroundTint -> FloatingActionButton_backgroundTint
    int FloatingActionButton_backgroundTintMode -> FloatingActionButton_backgroundTintMode
    int FloatingActionButton_borderWidth -> FloatingActionButton_borderWidth
    int FloatingActionButton_elevation -> FloatingActionButton_elevation
    int FloatingActionButton_fabSize -> FloatingActionButton_fabSize
    int FloatingActionButton_pressedTranslationZ -> FloatingActionButton_pressedTranslationZ
    int FloatingActionButton_rippleColor -> FloatingActionButton_rippleColor
    int[] GenericDraweeView -> GenericDraweeView
    int GenericDraweeView_actualImageScaleType -> GenericDraweeView_actualImageScaleType
    int GenericDraweeView_backgroundImage -> GenericDraweeView_backgroundImage
    int GenericDraweeView_fadeDuration -> GenericDraweeView_fadeDuration
    int GenericDraweeView_failureImage -> GenericDraweeView_failureImage
    int GenericDraweeView_failureImageScaleType -> GenericDraweeView_failureImageScaleType
    int GenericDraweeView_overlayImage -> GenericDraweeView_overlayImage
    int GenericDraweeView_placeholderImage -> GenericDraweeView_placeholderImage
    int GenericDraweeView_placeholderImageScaleType -> GenericDraweeView_placeholderImageScaleType
    int GenericDraweeView_pressedStateOverlayImage -> GenericDraweeView_pressedStateOverlayImage
    int GenericDraweeView_progressBarAutoRotateInterval -> GenericDraweeView_progressBarAutoRotateInterval
    int GenericDraweeView_progressBarImage -> GenericDraweeView_progressBarImage
    int GenericDraweeView_progressBarImageScaleType -> GenericDraweeView_progressBarImageScaleType
    int GenericDraweeView_retryImage -> GenericDraweeView_retryImage
    int GenericDraweeView_retryImageScaleType -> GenericDraweeView_retryImageScaleType
    int GenericDraweeView_roundAsCircle -> GenericDraweeView_roundAsCircle
    int GenericDraweeView_roundBottomLeft -> GenericDraweeView_roundBottomLeft
    int GenericDraweeView_roundBottomRight -> GenericDraweeView_roundBottomRight
    int GenericDraweeView_roundTopLeft -> GenericDraweeView_roundTopLeft
    int GenericDraweeView_roundTopRight -> GenericDraweeView_roundTopRight
    int GenericDraweeView_roundWithOverlayColor -> GenericDraweeView_roundWithOverlayColor
    int GenericDraweeView_roundedCornerRadius -> GenericDraweeView_roundedCornerRadius
    int GenericDraweeView_roundingBorderColor -> GenericDraweeView_roundingBorderColor
    int GenericDraweeView_roundingBorderWidth -> GenericDraweeView_roundingBorderWidth
    int GenericDraweeView_viewAspectRatio -> GenericDraweeView_viewAspectRatio
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int[] NavigationView -> NavigationView
    int NavigationView_android_background -> NavigationView_android_background
    int NavigationView_android_fitsSystemWindows -> NavigationView_android_fitsSystemWindows
    int NavigationView_android_maxWidth -> NavigationView_android_maxWidth
    int NavigationView_elevation -> NavigationView_elevation
    int NavigationView_headerLayout -> NavigationView_headerLayout
    int NavigationView_itemBackground -> NavigationView_itemBackground
    int NavigationView_itemIconTint -> NavigationView_itemIconTint
    int NavigationView_itemTextAppearance -> NavigationView_itemTextAppearance
    int NavigationView_itemTextColor -> NavigationView_itemTextColor
    int NavigationView_menu -> NavigationView_menu
    int[] PopupWindow -> PopupWindow
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int[] PullToRefresh -> PullToRefresh
    int PullToRefresh_ptrAdapterViewBackground -> PullToRefresh_ptrAdapterViewBackground
    int PullToRefresh_ptrAnimationStyle -> PullToRefresh_ptrAnimationStyle
    int PullToRefresh_ptrDrawable -> PullToRefresh_ptrDrawable
    int PullToRefresh_ptrDrawableBottom -> PullToRefresh_ptrDrawableBottom
    int PullToRefresh_ptrDrawableEnd -> PullToRefresh_ptrDrawableEnd
    int PullToRefresh_ptrDrawableStart -> PullToRefresh_ptrDrawableStart
    int PullToRefresh_ptrDrawableTop -> PullToRefresh_ptrDrawableTop
    int PullToRefresh_ptrHeaderBackground -> PullToRefresh_ptrHeaderBackground
    int PullToRefresh_ptrHeaderSubTextColor -> PullToRefresh_ptrHeaderSubTextColor
    int PullToRefresh_ptrHeaderTextAppearance -> PullToRefresh_ptrHeaderTextAppearance
    int PullToRefresh_ptrHeaderTextColor -> PullToRefresh_ptrHeaderTextColor
    int PullToRefresh_ptrListViewExtrasEnabled -> PullToRefresh_ptrListViewExtrasEnabled
    int PullToRefresh_ptrMode -> PullToRefresh_ptrMode
    int PullToRefresh_ptrOverScroll -> PullToRefresh_ptrOverScroll
    int PullToRefresh_ptrRefreshableViewBackground -> PullToRefresh_ptrRefreshableViewBackground
    int PullToRefresh_ptrRotateDrawableWhilePulling -> PullToRefresh_ptrRotateDrawableWhilePulling
    int PullToRefresh_ptrScrollingWhileRefreshingEnabled -> PullToRefresh_ptrScrollingWhileRefreshingEnabled
    int PullToRefresh_ptrShowIndicator -> PullToRefresh_ptrShowIndicator
    int PullToRefresh_ptrSubHeaderTextAppearance -> PullToRefresh_ptrSubHeaderTextAppearance
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
    int[] ScrimInsetsFrameLayout -> ScrimInsetsFrameLayout
    int ScrimInsetsFrameLayout_insetForeground -> ScrimInsetsFrameLayout_insetForeground
    int[] ScrollingViewBehavior_Params -> ScrollingViewBehavior_Params
    int ScrollingViewBehavior_Params_behavior_overlapTop -> ScrollingViewBehavior_Params_behavior_overlapTop
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_defaultQueryHint -> SearchView_defaultQueryHint
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchHintIcon -> SearchView_searchHintIcon
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] SnackbarLayout -> SnackbarLayout
    int SnackbarLayout_android_maxWidth -> SnackbarLayout_android_maxWidth
    int SnackbarLayout_elevation -> SnackbarLayout_elevation
    int SnackbarLayout_maxActionInlineWidth -> SnackbarLayout_maxActionInlineWidth
    int[] Spinner -> Spinner
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_popupTheme -> Spinner_popupTheme
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_track -> SwitchCompat_track
    int[] TabLayout -> TabLayout
    int TabLayout_tabBackground -> TabLayout_tabBackground
    int TabLayout_tabContentStart -> TabLayout_tabContentStart
    int TabLayout_tabGravity -> TabLayout_tabGravity
    int TabLayout_tabIndicatorColor -> TabLayout_tabIndicatorColor
    int TabLayout_tabIndicatorHeight -> TabLayout_tabIndicatorHeight
    int TabLayout_tabMaxWidth -> TabLayout_tabMaxWidth
    int TabLayout_tabMinWidth -> TabLayout_tabMinWidth
    int TabLayout_tabMode -> TabLayout_tabMode
    int TabLayout_tabPadding -> TabLayout_tabPadding
    int TabLayout_tabPaddingBottom -> TabLayout_tabPaddingBottom
    int TabLayout_tabPaddingEnd -> TabLayout_tabPaddingEnd
    int TabLayout_tabPaddingStart -> TabLayout_tabPaddingStart
    int TabLayout_tabPaddingTop -> TabLayout_tabPaddingTop
    int TabLayout_tabSelectedTextColor -> TabLayout_tabSelectedTextColor
    int TabLayout_tabTextAppearance -> TabLayout_tabTextAppearance
    int TabLayout_tabTextColor -> TabLayout_tabTextColor
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int TextAppearance_textAllCaps -> TextAppearance_textAllCaps
    int[] TextInputLayout -> TextInputLayout
    int TextInputLayout_android_hint -> TextInputLayout_android_hint
    int TextInputLayout_android_textColorHint -> TextInputLayout_android_textColorHint
    int TextInputLayout_errorEnabled -> TextInputLayout_errorEnabled
    int TextInputLayout_errorTextAppearance -> TextInputLayout_errorTextAppearance
    int TextInputLayout_hintAnimationEnabled -> TextInputLayout_hintAnimationEnabled
    int TextInputLayout_hintTextAppearance -> TextInputLayout_hintTextAppearance
    int[] Theme -> Theme
    int Theme_actionBarDivider -> Theme_actionBarDivider
    int Theme_actionBarItemBackground -> Theme_actionBarItemBackground
    int Theme_actionBarPopupTheme -> Theme_actionBarPopupTheme
    int Theme_actionBarSize -> Theme_actionBarSize
    int Theme_actionBarSplitStyle -> Theme_actionBarSplitStyle
    int Theme_actionBarStyle -> Theme_actionBarStyle
    int Theme_actionBarTabBarStyle -> Theme_actionBarTabBarStyle
    int Theme_actionBarTabStyle -> Theme_actionBarTabStyle
    int Theme_actionBarTabTextStyle -> Theme_actionBarTabTextStyle
    int Theme_actionBarTheme -> Theme_actionBarTheme
    int Theme_actionBarWidgetTheme -> Theme_actionBarWidgetTheme
    int Theme_actionButtonStyle -> Theme_actionButtonStyle
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_actionMenuTextAppearance -> Theme_actionMenuTextAppearance
    int Theme_actionMenuTextColor -> Theme_actionMenuTextColor
    int Theme_actionModeBackground -> Theme_actionModeBackground
    int Theme_actionModeCloseButtonStyle -> Theme_actionModeCloseButtonStyle
    int Theme_actionModeCloseDrawable -> Theme_actionModeCloseDrawable
    int Theme_actionModeCopyDrawable -> Theme_actionModeCopyDrawable
    int Theme_actionModeCutDrawable -> Theme_actionModeCutDrawable
    int Theme_actionModeFindDrawable -> Theme_actionModeFindDrawable
    int Theme_actionModePasteDrawable -> Theme_actionModePasteDrawable
    int Theme_actionModePopupWindowStyle -> Theme_actionModePopupWindowStyle
    int Theme_actionModeSelectAllDrawable -> Theme_actionModeSelectAllDrawable
    int Theme_actionModeShareDrawable -> Theme_actionModeShareDrawable
    int Theme_actionModeSplitBackground -> Theme_actionModeSplitBackground
    int Theme_actionModeStyle -> Theme_actionModeStyle
    int Theme_actionModeWebSearchDrawable -> Theme_actionModeWebSearchDrawable
    int Theme_actionOverflowButtonStyle -> Theme_actionOverflowButtonStyle
    int Theme_actionOverflowMenuStyle -> Theme_actionOverflowMenuStyle
    int Theme_activityChooserViewStyle -> Theme_activityChooserViewStyle
    int Theme_alertDialogButtonGroupStyle -> Theme_alertDialogButtonGroupStyle
    int Theme_alertDialogCenterButtons -> Theme_alertDialogCenterButtons
    int Theme_alertDialogStyle -> Theme_alertDialogStyle
    int Theme_alertDialogTheme -> Theme_alertDialogTheme
    int Theme_android_windowAnimationStyle -> Theme_android_windowAnimationStyle
    int Theme_android_windowIsFloating -> Theme_android_windowIsFloating
    int Theme_autoCompleteTextViewStyle -> Theme_autoCompleteTextViewStyle
    int Theme_borderlessButtonStyle -> Theme_borderlessButtonStyle
    int Theme_buttonBarButtonStyle -> Theme_buttonBarButtonStyle
    int Theme_buttonBarNegativeButtonStyle -> Theme_buttonBarNegativeButtonStyle
    int Theme_buttonBarNeutralButtonStyle -> Theme_buttonBarNeutralButtonStyle
    int Theme_buttonBarPositiveButtonStyle -> Theme_buttonBarPositiveButtonStyle
    int Theme_buttonBarStyle -> Theme_buttonBarStyle
    int Theme_buttonStyle -> Theme_buttonStyle
    int Theme_buttonStyleSmall -> Theme_buttonStyleSmall
    int Theme_checkboxStyle -> Theme_checkboxStyle
    int Theme_checkedTextViewStyle -> Theme_checkedTextViewStyle
    int Theme_colorAccent -> Theme_colorAccent
    int Theme_colorButtonNormal -> Theme_colorButtonNormal
    int Theme_colorControlActivated -> Theme_colorControlActivated
    int Theme_colorControlHighlight -> Theme_colorControlHighlight
    int Theme_colorControlNormal -> Theme_colorControlNormal
    int Theme_colorPrimary -> Theme_colorPrimary
    int Theme_colorPrimaryDark -> Theme_colorPrimaryDark
    int Theme_colorSwitchThumbNormal -> Theme_colorSwitchThumbNormal
    int Theme_controlBackground -> Theme_controlBackground
    int Theme_dialogPreferredPadding -> Theme_dialogPreferredPadding
    int Theme_dialogTheme -> Theme_dialogTheme
    int Theme_dividerHorizontal -> Theme_dividerHorizontal
    int Theme_dividerVertical -> Theme_dividerVertical
    int Theme_dropDownListViewStyle -> Theme_dropDownListViewStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_editTextBackground -> Theme_editTextBackground
    int Theme_editTextColor -> Theme_editTextColor
    int Theme_editTextStyle -> Theme_editTextStyle
    int Theme_homeAsUpIndicator -> Theme_homeAsUpIndicator
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_listDividerAlertDialog -> Theme_listDividerAlertDialog
    int Theme_listPopupWindowStyle -> Theme_listPopupWindowStyle
    int Theme_listPreferredItemHeight -> Theme_listPreferredItemHeight
    int Theme_listPreferredItemHeightLarge -> Theme_listPreferredItemHeightLarge
    int Theme_listPreferredItemHeightSmall -> Theme_listPreferredItemHeightSmall
    int Theme_listPreferredItemPaddingLeft -> Theme_listPreferredItemPaddingLeft
    int Theme_listPreferredItemPaddingRight -> Theme_listPreferredItemPaddingRight
    int Theme_panelBackground -> Theme_panelBackground
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int Theme_popupWindowStyle -> Theme_popupWindowStyle
    int Theme_radioButtonStyle -> Theme_radioButtonStyle
    int Theme_ratingBarStyle -> Theme_ratingBarStyle
    int Theme_searchViewStyle -> Theme_searchViewStyle
    int Theme_selectableItemBackground -> Theme_selectableItemBackground
    int Theme_selectableItemBackgroundBorderless -> Theme_selectableItemBackgroundBorderless
    int Theme_spinnerDropDownItemStyle -> Theme_spinnerDropDownItemStyle
    int Theme_spinnerStyle -> Theme_spinnerStyle
    int Theme_switchStyle -> Theme_switchStyle
    int Theme_textAppearanceLargePopupMenu -> Theme_textAppearanceLargePopupMenu
    int Theme_textAppearanceListItem -> Theme_textAppearanceListItem
    int Theme_textAppearanceListItemSmall -> Theme_textAppearanceListItemSmall
    int Theme_textAppearanceSearchResultSubtitle -> Theme_textAppearanceSearchResultSubtitle
    int Theme_textAppearanceSearchResultTitle -> Theme_textAppearanceSearchResultTitle
    int Theme_textAppearanceSmallPopupMenu -> Theme_textAppearanceSmallPopupMenu
    int Theme_textColorAlertDialogListItem -> Theme_textColorAlertDialogListItem
    int Theme_textColorSearchUrl -> Theme_textColorSearchUrl
    int Theme_toolbarNavigationButtonStyle -> Theme_toolbarNavigationButtonStyle
    int Theme_toolbarStyle -> Theme_toolbarStyle
    int Theme_windowActionBar -> Theme_windowActionBar
    int Theme_windowActionBarOverlay -> Theme_windowActionBarOverlay
    int Theme_windowActionModeOverlay -> Theme_windowActionModeOverlay
    int Theme_windowFixedHeightMajor -> Theme_windowFixedHeightMajor
    int Theme_windowFixedHeightMinor -> Theme_windowFixedHeightMinor
    int Theme_windowFixedWidthMajor -> Theme_windowFixedWidthMajor
    int Theme_windowFixedWidthMinor -> Theme_windowFixedWidthMinor
    int Theme_windowMinWidthMajor -> Theme_windowMinWidthMajor
    int Theme_windowMinWidthMinor -> Theme_windowMinWidthMinor
    int Theme_windowNoTitle -> Theme_windowNoTitle
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_logo -> Toolbar_logo
    int Toolbar_logoDescription -> Toolbar_logoDescription
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_subtitleTextColor -> Toolbar_subtitleTextColor
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int Toolbar_titleTextColor -> Toolbar_titleTextColor
    int[] View -> View
    int View_android_focusable -> View_android_focusable
    int View_android_theme -> View_android_theme
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int View_theme -> View_theme
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int ViewBackgroundHelper_android_background -> ViewBackgroundHelper_android_background
    int ViewBackgroundHelper_backgroundTint -> ViewBackgroundHelper_backgroundTint
    int ViewBackgroundHelper_backgroundTintMode -> ViewBackgroundHelper_backgroundTintMode
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
com.example.sneezereader.SneezeApplication -> com.example.sneezereader.SneezeApplication:
    void onCreate() -> onCreate
com.example.sneezereader.SplashActivity -> com.example.sneezereader.SplashActivity:
    android.os.Handler handler -> a
    com.facebook.drawee.view.SimpleDraweeView splash -> b
    java.lang.String imgUrl -> c
    int appStartNum -> d
    boolean isFinished -> e
    com.example.network.SneezeClient client -> f
    void onCreate(android.os.Bundle) -> onCreate
    void execNetworkRequest() -> a
    void loadData() -> b
    void saveImgUrl(java.lang.String) -> a
    java.lang.String loadImgUrl() -> c
    void saveAppStartNum(int) -> a
    int loadAppStartNum() -> d
    boolean access$002(com.example.sneezereader.SplashActivity,boolean) -> a
    java.lang.String access$100(com.example.sneezereader.SplashActivity) -> a
    void access$200(com.example.sneezereader.SplashActivity,java.lang.String) -> a
    boolean access$000(com.example.sneezereader.SplashActivity) -> b
    com.facebook.drawee.view.SimpleDraweeView access$300(com.example.sneezereader.SplashActivity) -> c
com.example.sneezereader.SplashActivity$1 -> com.example.sneezereader.f:
    com.example.sneezereader.SplashActivity this$0 -> a
    void run() -> run
com.example.sneezereader.SplashActivity$2 -> com.example.sneezereader.g:
    com.example.sneezereader.SplashActivity this$0 -> a
    void onFailure(int,cz.msebera.android.httpclient.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,cz.msebera.android.httpclient.Header[],java.lang.String) -> onSuccess
com.example.storage.FileManager -> com.example.d.a:
    com.example.storage.FileManager instance -> a
    boolean sdExist -> b
    java.lang.String storage_dir -> c
    com.example.storage.FileManager getInstance(android.content.Context) -> a
    boolean writeHTML(java.lang.String,java.lang.String) -> a
    java.lang.String getAbsolutPath(java.lang.String) -> a
    boolean CheckSDState() -> a
com.example.widget.CircleImageView -> com.example.widget.CircleImageView:
    android.widget.ImageView$ScaleType SCALE_TYPE -> a
    android.graphics.Bitmap$Config BITMAP_CONFIG -> b
    android.graphics.RectF mDrawableRect -> c
    android.graphics.RectF mBorderRect -> d
    android.graphics.Matrix mShaderMatrix -> e
    android.graphics.Paint mBitmapPaint -> f
    android.graphics.Paint mBorderPaint -> g
    android.graphics.Paint mFillPaint -> h
    int mBorderColor -> i
    int mBorderWidth -> j
    int mFillColor -> k
    android.graphics.Bitmap mBitmap -> l
    android.graphics.BitmapShader mBitmapShader -> m
    int mBitmapWidth -> n
    int mBitmapHeight -> o
    float mDrawableRadius -> p
    float mBorderRadius -> q
    android.graphics.ColorFilter mColorFilter -> r
    boolean mReady -> s
    boolean mSetupPending -> t
    boolean mBorderOverlay -> u
    void init() -> a
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setAdjustViewBounds(boolean) -> setAdjustViewBounds
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int getBorderColor() -> getBorderColor
    void setBorderColor(int) -> setBorderColor
    void setBorderColorResource(int) -> setBorderColorResource
    int getFillColor() -> getFillColor
    void setFillColor(int) -> setFillColor
    void setFillColorResource(int) -> setFillColorResource
    int getBorderWidth() -> getBorderWidth
    void setBorderWidth(int) -> setBorderWidth
    void setBorderOverlay(boolean) -> setBorderOverlay
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    android.graphics.Bitmap getBitmapFromDrawable(android.graphics.drawable.Drawable) -> a
    void setup() -> b
    void updateShaderMatrix() -> c
com.facebook.binaryresource.BinaryResource -> com.facebook.a.a:
    java.io.InputStream openStream() -> a
    long size() -> b
com.facebook.binaryresource.FileBinaryResource -> com.facebook.a.b:
    java.io.File mFile -> a
    java.io.File getFile() -> c
    java.io.InputStream openStream() -> a
    long size() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.facebook.binaryresource.FileBinaryResource createOrNull(java.io.File) -> a
com.facebook.cache.common.CacheErrorLogger -> com.facebook.cache.common.CacheErrorLogger:
    void logError(com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory,java.lang.Class,java.lang.String,java.lang.Throwable) -> a
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory -> com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory:
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory READ_DECODE -> READ_DECODE
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory READ_FILE -> READ_FILE
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory READ_FILE_NOT_FOUND -> READ_FILE_NOT_FOUND
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory READ_INVALID_ENTRY -> READ_INVALID_ENTRY
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_ENCODE -> WRITE_ENCODE
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_CREATE_TEMPFILE -> WRITE_CREATE_TEMPFILE
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_UPDATE_FILE_NOT_FOUND -> WRITE_UPDATE_FILE_NOT_FOUND
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_RENAME_FILE_TEMPFILE_NOT_FOUND -> WRITE_RENAME_FILE_TEMPFILE_NOT_FOUND
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_RENAME_FILE_TEMPFILE_PARENT_NOT_FOUND -> WRITE_RENAME_FILE_TEMPFILE_PARENT_NOT_FOUND
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_RENAME_FILE_OTHER -> WRITE_RENAME_FILE_OTHER
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_CREATE_DIR -> WRITE_CREATE_DIR
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_CALLBACK_ERROR -> WRITE_CALLBACK_ERROR
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory WRITE_INVALID_ENTRY -> WRITE_INVALID_ENTRY
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory DELETE_FILE -> DELETE_FILE
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory EVICTION -> EVICTION
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory GENERIC_IO -> GENERIC_IO
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory OTHER -> OTHER
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] $VALUES -> a
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values() -> values
    com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String) -> valueOf
com.facebook.cache.common.CacheEventListener -> com.facebook.cache.common.CacheEventListener:
    void onHit() -> a
    void onMiss() -> b
    void onWriteAttempt() -> c
    void onReadException() -> d
    void onWriteException() -> e
    void onEviction(com.facebook.cache.common.CacheEventListener$EvictionReason,int,long) -> a
com.facebook.cache.common.CacheEventListener$EvictionReason -> com.facebook.cache.common.CacheEventListener$EvictionReason:
    com.facebook.cache.common.CacheEventListener$EvictionReason CACHE_FULL -> CACHE_FULL
    com.facebook.cache.common.CacheEventListener$EvictionReason CONTENT_STALE -> CONTENT_STALE
    com.facebook.cache.common.CacheEventListener$EvictionReason USER_FORCED -> USER_FORCED
    com.facebook.cache.common.CacheEventListener$EvictionReason CACHE_MANAGER_TRIMMED -> CACHE_MANAGER_TRIMMED
    com.facebook.cache.common.CacheEventListener$EvictionReason[] $VALUES -> a
    com.facebook.cache.common.CacheEventListener$EvictionReason[] values() -> values
    com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String) -> valueOf
com.facebook.cache.common.CacheKey -> com.facebook.cache.common.a:
    java.lang.String toString() -> toString
com.facebook.cache.common.NoOpCacheErrorLogger -> com.facebook.cache.common.b:
    com.facebook.cache.common.NoOpCacheErrorLogger sInstance -> a
    com.facebook.cache.common.NoOpCacheErrorLogger getInstance() -> a
    void logError(com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory,java.lang.Class,java.lang.String,java.lang.Throwable) -> a
com.facebook.cache.common.NoOpCacheEventListener -> com.facebook.cache.common.c:
    com.facebook.cache.common.NoOpCacheEventListener sInstance -> a
    com.facebook.cache.common.NoOpCacheEventListener getInstance() -> f
    void onHit() -> a
    void onMiss() -> b
    void onWriteAttempt() -> c
    void onReadException() -> d
    void onWriteException() -> e
    void onEviction(com.facebook.cache.common.CacheEventListener$EvictionReason,int,long) -> a
com.facebook.cache.common.SimpleCacheKey -> com.facebook.cache.common.d:
    java.lang.String mKey -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.facebook.cache.common.WriterCallback -> com.facebook.cache.common.e:
    void write(java.io.OutputStream) -> a
com.facebook.cache.disk.DefaultDiskStorage -> com.facebook.cache.disk.DefaultDiskStorage:
    java.lang.Class TAG -> b
    long TEMP_FILE_LIFETIME_MS -> a
    java.io.File mRootDirectory -> c
    java.io.File mVersionDirectory -> d
    com.facebook.cache.common.CacheErrorLogger mCacheErrorLogger -> e
    com.facebook.common.time.Clock mClock -> f
    java.lang.String getVersionSubdirectoryName(int) -> a
    void recreateDirectoryIfVersionChanges() -> d
    void updateResource(java.lang.String,com.facebook.binaryresource.BinaryResource,com.facebook.cache.common.WriterCallback,java.lang.Object) -> a
    java.io.File getContentFileFor(java.lang.String) -> a
    java.io.File getSubdirectory(java.lang.String) -> b
    void purgeUnexpectedResources() -> a
    void mkdirs(java.io.File,java.lang.String) -> a
    com.facebook.binaryresource.FileBinaryResource createTemporary(java.lang.String,java.lang.Object) -> a
    com.facebook.binaryresource.FileBinaryResource commit(java.lang.String,com.facebook.binaryresource.BinaryResource,java.lang.Object) -> a
    com.facebook.binaryresource.FileBinaryResource getResource(java.lang.String,java.lang.Object) -> b
    long remove(com.facebook.cache.disk.DiskStorage$Entry) -> a
    long doRemove(java.io.File) -> a
    java.util.List getEntries() -> b
    com.facebook.cache.disk.DefaultDiskStorage$FileInfo getShardFileInfo(java.io.File) -> b
    java.util.Collection getEntries() -> c
    com.facebook.binaryresource.BinaryResource commit(java.lang.String,com.facebook.binaryresource.BinaryResource,java.lang.Object) -> b
    com.facebook.binaryresource.BinaryResource createTemporary(java.lang.String,java.lang.Object) -> c
    com.facebook.binaryresource.BinaryResource getResource(java.lang.String,java.lang.Object) -> d
    com.facebook.cache.disk.DefaultDiskStorage$FileInfo access$100(com.facebook.cache.disk.DefaultDiskStorage,java.io.File) -> a
    java.io.File access$300(com.facebook.cache.disk.DefaultDiskStorage) -> a
    java.io.File access$400(com.facebook.cache.disk.DefaultDiskStorage) -> b
    com.facebook.common.time.Clock access$500(com.facebook.cache.disk.DefaultDiskStorage) -> c
com.facebook.cache.disk.DefaultDiskStorage$1 -> com.facebook.cache.disk.a:
com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector -> com.facebook.cache.disk.b:
    java.util.List result -> b
    com.facebook.cache.disk.DefaultDiskStorage this$0 -> a
    void preVisitDirectory(java.io.File) -> a
    void visitFile(java.io.File) -> b
    void postVisitDirectory(java.io.File) -> c
    java.util.List getEntries() -> a
com.facebook.cache.disk.DefaultDiskStorage$EntryImpl -> com.facebook.cache.disk.c:
    com.facebook.binaryresource.FileBinaryResource resource -> b
    long size -> c
    long timestamp -> d
    com.facebook.cache.disk.DefaultDiskStorage this$0 -> a
    long getTimestamp() -> a
    com.facebook.binaryresource.FileBinaryResource getResource() -> b
    long getSize() -> c
com.facebook.cache.disk.DefaultDiskStorage$FileInfo -> com.facebook.cache.disk.d:
    com.facebook.cache.disk.DefaultDiskStorage$FileType type -> a
    java.lang.String resourceId -> b
    java.lang.String toString() -> toString
    java.io.File toFile(java.io.File) -> a
    java.io.File createTempFile(java.io.File) -> b
    com.facebook.cache.disk.DefaultDiskStorage$FileInfo fromFile(java.io.File) -> c
com.facebook.cache.disk.DefaultDiskStorage$FileType -> com.facebook.cache.disk.DefaultDiskStorage$FileType:
    com.facebook.cache.disk.DefaultDiskStorage$FileType CONTENT -> CONTENT
    com.facebook.cache.disk.DefaultDiskStorage$FileType TEMP -> TEMP
    java.lang.String extension -> extension
    com.facebook.cache.disk.DefaultDiskStorage$FileType[] $VALUES -> a
    com.facebook.cache.disk.DefaultDiskStorage$FileType[] values() -> values
    com.facebook.cache.disk.DefaultDiskStorage$FileType valueOf(java.lang.String) -> valueOf
    com.facebook.cache.disk.DefaultDiskStorage$FileType fromExtension(java.lang.String) -> fromExtension
com.facebook.cache.disk.DefaultDiskStorage$IncompleteFileException -> com.facebook.cache.disk.DefaultDiskStorage$IncompleteFileException:
    long expected -> expected
    long actual -> actual
com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor -> com.facebook.cache.disk.e:
    boolean insideBaseDirectory -> b
    com.facebook.cache.disk.DefaultDiskStorage this$0 -> a
    void preVisitDirectory(java.io.File) -> a
    void visitFile(java.io.File) -> b
    void postVisitDirectory(java.io.File) -> c
    boolean isExpectedFile(java.io.File) -> d
    boolean isRecentFile(java.io.File) -> e
com.facebook.cache.disk.DefaultDiskStorageSupplier -> com.facebook.cache.disk.f:
    java.lang.Class TAG -> b
    int mVersion -> c
    com.facebook.common.internal.Supplier mBaseDirectoryPathSupplier -> d
    java.lang.String mBaseDirectoryName -> e
    com.facebook.cache.common.CacheErrorLogger mCacheErrorLogger -> f
    com.facebook.cache.disk.DefaultDiskStorageSupplier$State mCurrentState -> a
    com.facebook.cache.disk.DiskStorage get() -> a
    boolean shouldCreateNewStorage() -> c
    void deleteOldStorageIfNecessary() -> b
    void createStorage() -> d
    void createRootDirectoryIfNecessary(java.io.File) -> a
com.facebook.cache.disk.DefaultDiskStorageSupplier$State -> com.facebook.cache.disk.g:
    com.facebook.cache.disk.DiskStorage storage -> a
    java.io.File rootDirectory -> b
com.facebook.cache.disk.DiskCacheConfig -> com.facebook.cache.disk.h:
    int mVersion -> a
    java.lang.String mBaseDirectoryName -> b
    com.facebook.common.internal.Supplier mBaseDirectoryPathSupplier -> c
    long mDefaultSizeLimit -> d
    long mLowDiskSpaceSizeLimit -> e
    long mMinimumSizeLimit -> f
    com.facebook.cache.common.CacheErrorLogger mCacheErrorLogger -> g
    com.facebook.cache.common.CacheEventListener mCacheEventListener -> h
    com.facebook.common.disk.DiskTrimmableRegistry mDiskTrimmableRegistry -> i
    int getVersion() -> a
    java.lang.String getBaseDirectoryName() -> b
    com.facebook.common.internal.Supplier getBaseDirectoryPathSupplier() -> c
    long getDefaultSizeLimit() -> d
    long getLowDiskSpaceSizeLimit() -> e
    long getMinimumSizeLimit() -> f
    com.facebook.cache.common.CacheErrorLogger getCacheErrorLogger() -> g
    com.facebook.cache.common.CacheEventListener getCacheEventListener() -> h
    com.facebook.common.disk.DiskTrimmableRegistry getDiskTrimmableRegistry() -> i
    com.facebook.cache.disk.DiskCacheConfig$Builder newBuilder() -> j
com.facebook.cache.disk.DiskCacheConfig$1 -> com.facebook.cache.disk.i:
com.facebook.cache.disk.DiskCacheConfig$Builder -> com.facebook.cache.disk.j:
    int mVersion -> a
    java.lang.String mBaseDirectoryName -> b
    com.facebook.common.internal.Supplier mBaseDirectoryPathSupplier -> c
    long mMaxCacheSize -> d
    long mMaxCacheSizeOnLowDiskSpace -> e
    long mMaxCacheSizeOnVeryLowDiskSpace -> f
    com.facebook.cache.common.CacheErrorLogger mCacheErrorLogger -> g
    com.facebook.cache.common.CacheEventListener mCacheEventListener -> h
    com.facebook.common.disk.DiskTrimmableRegistry mDiskTrimmableRegistry -> i
    com.facebook.cache.disk.DiskCacheConfig$Builder setBaseDirectoryName(java.lang.String) -> a
    com.facebook.cache.disk.DiskCacheConfig$Builder setBaseDirectoryPathSupplier(com.facebook.common.internal.Supplier) -> a
    com.facebook.cache.disk.DiskCacheConfig$Builder setMaxCacheSize(long) -> a
    com.facebook.cache.disk.DiskCacheConfig$Builder setMaxCacheSizeOnLowDiskSpace(long) -> b
    com.facebook.cache.disk.DiskCacheConfig$Builder setMaxCacheSizeOnVeryLowDiskSpace(long) -> c
    com.facebook.cache.disk.DiskCacheConfig build() -> a
com.facebook.cache.disk.DiskCacheFactory -> com.facebook.cache.disk.k:
    com.facebook.cache.disk.DiskStorageCache newDiskStorageCache(com.facebook.cache.disk.DiskCacheConfig) -> a
    com.facebook.cache.disk.DiskStorageSupplier newDiskStorageSupplier(com.facebook.cache.disk.DiskCacheConfig) -> b
com.facebook.cache.disk.DiskStorage -> com.facebook.cache.disk.l:
    com.facebook.binaryresource.BinaryResource getResource(java.lang.String,java.lang.Object) -> d
    void purgeUnexpectedResources() -> a
    com.facebook.binaryresource.BinaryResource createTemporary(java.lang.String,java.lang.Object) -> c
    void updateResource(java.lang.String,com.facebook.binaryresource.BinaryResource,com.facebook.cache.common.WriterCallback,java.lang.Object) -> a
    com.facebook.binaryresource.BinaryResource commit(java.lang.String,com.facebook.binaryresource.BinaryResource,java.lang.Object) -> b
    java.util.Collection getEntries() -> c
    long remove(com.facebook.cache.disk.DiskStorage$Entry) -> a
com.facebook.cache.disk.DiskStorage$Entry -> com.facebook.cache.disk.m:
    long getTimestamp() -> a
    long getSize() -> c
com.facebook.cache.disk.DiskStorageCache -> com.facebook.cache.disk.n:
    java.lang.Class TAG -> a
    long FUTURE_TIMESTAMP_THRESHOLD_MS -> b
    long FILECACHE_SIZE_UPDATE_PERIOD_MS -> c
    long mLowDiskSpaceCacheSizeLimit -> d
    long mDefaultCacheSizeLimit -> e
    long mCacheSizeLimit -> f
    com.facebook.cache.common.CacheEventListener mCacheEventListener -> g
    long mCacheSizeLastUpdateTime -> h
    long mCacheSizeLimitMinimum -> i
    com.facebook.common.statfs.StatFsHelper mStatFsHelper -> j
    com.facebook.cache.disk.DiskStorageSupplier mStorageSupplier -> k
    com.facebook.cache.common.CacheErrorLogger mCacheErrorLogger -> l
    com.facebook.cache.disk.DiskStorageCache$CacheStats mCacheStats -> m
    com.facebook.common.time.Clock mClock -> n
    java.lang.Object mLock -> o
    com.facebook.binaryresource.BinaryResource getResource(com.facebook.cache.common.CacheKey) -> a
    com.facebook.binaryresource.BinaryResource createTemporaryResource(java.lang.String,com.facebook.cache.common.CacheKey) -> a
    void deleteTemporaryResource(com.facebook.binaryresource.BinaryResource) -> a
    com.facebook.binaryresource.BinaryResource commitResource(java.lang.String,com.facebook.cache.common.CacheKey,com.facebook.binaryresource.BinaryResource) -> a
    com.facebook.binaryresource.BinaryResource insert(com.facebook.cache.common.CacheKey,com.facebook.cache.common.WriterCallback) -> a
    void reportEviction(com.facebook.cache.common.CacheEventListener$EvictionReason,int,long) -> a
    void maybeEvictFilesInCacheDir() -> a
    void evictAboveSize(long,com.facebook.cache.common.CacheEventListener$EvictionReason) -> a
    java.util.Collection getSortedEntries(java.util.Collection) -> a
    void updateFileCacheSizeLimit() -> b
    boolean maybeUpdateFileCacheSize() -> c
    void calcFileCacheSize() -> d
    java.lang.String getResourceId(com.facebook.cache.common.CacheKey) -> b
com.facebook.cache.disk.DiskStorageCache$CacheStats -> com.facebook.cache.disk.o:
    boolean mInitialized -> a
    long mSize -> b
    long mCount -> c
    boolean isInitialized() -> a
    void reset() -> b
    void set(long,long) -> a
    void increment(long,long) -> b
    long getSize() -> c
com.facebook.cache.disk.DiskStorageCache$Params -> com.facebook.cache.disk.p:
    long mCacheSizeLimitMinimum -> a
    long mLowDiskSpaceCacheSizeLimit -> b
    long mDefaultCacheSizeLimit -> c
com.facebook.cache.disk.DiskStorageCache$TimestampComparator -> com.facebook.cache.disk.q:
    long threshold -> a
    int compare(com.facebook.cache.disk.DiskStorage$Entry,com.facebook.cache.disk.DiskStorage$Entry) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.facebook.cache.disk.DiskStorageSupplier -> com.facebook.cache.disk.r:
    com.facebook.cache.disk.DiskStorage get() -> a
com.facebook.cache.disk.FileCache -> com.facebook.cache.disk.s:
    com.facebook.binaryresource.BinaryResource getResource(com.facebook.cache.common.CacheKey) -> a
    com.facebook.binaryresource.BinaryResource insert(com.facebook.cache.common.CacheKey,com.facebook.cache.common.WriterCallback) -> a
com.facebook.common.activitylistener.ActivityListener -> com.facebook.common.a.a:
com.facebook.common.activitylistener.BaseActivityListener -> com.facebook.common.a.b:
com.facebook.common.disk.DiskTrimmable -> com.facebook.common.b.a:
com.facebook.common.disk.DiskTrimmableRegistry -> com.facebook.common.b.b:
    void registerDiskTrimmable(com.facebook.common.disk.DiskTrimmable) -> a
com.facebook.common.disk.NoOpDiskTrimmableRegistry -> com.facebook.common.b.c:
    com.facebook.common.disk.NoOpDiskTrimmableRegistry sInstance -> a
    com.facebook.common.disk.NoOpDiskTrimmableRegistry getInstance() -> a
    void registerDiskTrimmable(com.facebook.common.disk.DiskTrimmable) -> a
com.facebook.common.executors.CallerThreadExecutor -> com.facebook.common.c.a:
    com.facebook.common.executors.CallerThreadExecutor sInstance -> a
    com.facebook.common.executors.CallerThreadExecutor getInstance() -> a
    void execute(java.lang.Runnable) -> execute
    boolean isShutdown() -> isShutdown
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    boolean isTerminated() -> isTerminated
    boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
com.facebook.common.executors.ConstrainedExecutorService -> com.facebook.common.c.b:
    java.lang.Class TAG -> a
    java.lang.String mName -> b
    java.util.concurrent.Executor mExecutor -> c
    int mMaxConcurrency -> d
    java.util.concurrent.BlockingQueue mWorkQueue -> e
    com.facebook.common.executors.ConstrainedExecutorService$Worker mTaskRunner -> f
    java.util.concurrent.atomic.AtomicInteger mPendingWorkers -> g
    java.util.concurrent.atomic.AtomicInteger mMaxQueueSize -> h
    void execute(java.lang.Runnable) -> execute
    void startWorkerIfNeeded() -> b
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    boolean isShutdown() -> isShutdown
    boolean isTerminated() -> isTerminated
    boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    java.util.concurrent.BlockingQueue access$100(com.facebook.common.executors.ConstrainedExecutorService) -> a
    java.lang.Class access$200() -> a
    java.lang.String access$300(com.facebook.common.executors.ConstrainedExecutorService) -> b
    java.util.concurrent.atomic.AtomicInteger access$400(com.facebook.common.executors.ConstrainedExecutorService) -> c
    void access$500(com.facebook.common.executors.ConstrainedExecutorService) -> d
com.facebook.common.executors.ConstrainedExecutorService$1 -> com.facebook.common.c.c:
com.facebook.common.executors.ConstrainedExecutorService$Worker -> com.facebook.common.c.d:
    com.facebook.common.executors.ConstrainedExecutorService this$0 -> a
    void run() -> run
com.facebook.common.executors.DefaultSerialExecutorService -> com.facebook.common.c.e:
    void execute(java.lang.Runnable) -> execute
com.facebook.common.executors.HandlerExecutorService -> com.facebook.common.c.f:
com.facebook.common.executors.HandlerExecutorServiceImpl -> com.facebook.common.c.g:
    android.os.Handler mHandler -> a
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    boolean isShutdown() -> isShutdown
    boolean isTerminated() -> isTerminated
    boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    void execute(java.lang.Runnable) -> execute
    com.facebook.common.executors.ScheduledFutureImpl newTaskFor(java.lang.Runnable,java.lang.Object) -> a
    com.facebook.common.executors.ScheduledFutureImpl newTaskFor(java.util.concurrent.Callable) -> a
    java.util.concurrent.ScheduledFuture submit(java.lang.Runnable) -> a
    java.util.concurrent.ScheduledFuture submit(java.lang.Runnable,java.lang.Object) -> b
    java.util.concurrent.ScheduledFuture submit(java.util.concurrent.Callable) -> b
    java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    boolean isHandlerThread() -> a
    java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
com.facebook.common.executors.ScheduledFutureImpl -> com.facebook.common.c.h:
    android.os.Handler mHandler -> a
    java.util.concurrent.FutureTask mListenableFuture -> b
    long getDelay(java.util.concurrent.TimeUnit) -> getDelay
    int compareTo(java.util.concurrent.Delayed) -> a
    void run() -> run
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    int compareTo(java.lang.Object) -> compareTo
com.facebook.common.executors.SerialDelegatingExecutor -> com.facebook.common.c.i:
    java.util.concurrent.Executor mDelegate -> c
    java.lang.Runnable mRunnable -> a
    boolean mExecutionInProgress -> b
    java.util.Queue mCommands -> d
    void execute(java.lang.Runnable) -> execute
    void maybeSubmitRunnable() -> a
    void executeSingleCommand() -> b
    java.lang.Runnable removeNextCommand() -> c
    void clearExecutionInProgress() -> d
    void access$000(com.facebook.common.executors.SerialDelegatingExecutor) -> a
com.facebook.common.executors.SerialDelegatingExecutor$1 -> com.facebook.common.c.j:
    com.facebook.common.executors.SerialDelegatingExecutor this$0 -> a
    void run() -> run
com.facebook.common.executors.SerialExecutorService -> com.facebook.common.c.k:
com.facebook.common.executors.StatefulRunnable -> com.facebook.common.c.l:
    java.util.concurrent.atomic.AtomicInteger mState -> a
    void run() -> run
    void cancel() -> a
    void onSuccess(java.lang.Object) -> a
    void onFailure(java.lang.Exception) -> a
    void onCancellation() -> b
    void disposeResult(java.lang.Object) -> b
    java.lang.Object getResult() -> c
com.facebook.common.executors.UiThreadExecutorService -> com.facebook.common.c.m:
    com.facebook.common.executors.UiThreadExecutorService sInstance -> a
    com.facebook.common.executors.UiThreadExecutorService getInstance() -> b
com.facebook.common.executors.UiThreadImmediateExecutorService -> com.facebook.common.c.n:
    com.facebook.common.executors.UiThreadImmediateExecutorService sInstance -> a
    com.facebook.common.executors.UiThreadImmediateExecutorService getInstance() -> b
    void execute(java.lang.Runnable) -> execute
com.facebook.common.file.FileTree -> com.facebook.common.file.a:
    void walkFileTree(java.io.File,com.facebook.common.file.FileTreeVisitor) -> a
    boolean deleteContents(java.io.File) -> a
    boolean deleteRecursively(java.io.File) -> b
com.facebook.common.file.FileTreeVisitor -> com.facebook.common.file.b:
    void preVisitDirectory(java.io.File) -> a
    void visitFile(java.io.File) -> b
    void postVisitDirectory(java.io.File) -> c
com.facebook.common.file.FileUtils -> com.facebook.common.file.FileUtils:
    void mkdirs(java.io.File) -> a
    void rename(java.io.File,java.io.File) -> a
com.facebook.common.file.FileUtils$CreateDirectoryException -> com.facebook.common.file.FileUtils$CreateDirectoryException:
com.facebook.common.file.FileUtils$FileDeleteException -> com.facebook.common.file.FileUtils$FileDeleteException:
com.facebook.common.file.FileUtils$ParentDirNotFoundException -> com.facebook.common.file.FileUtils$ParentDirNotFoundException:
com.facebook.common.file.FileUtils$RenameException -> com.facebook.common.file.FileUtils$RenameException:
com.facebook.common.internal.ByteStreams -> com.facebook.common.d.a:
    int read(java.io.InputStream,byte[],int,int) -> a
com.facebook.common.internal.Closeables -> com.facebook.common.d.b:
    java.util.logging.Logger logger -> a
    void close(java.io.Closeable,boolean) -> a
    void closeQuietly(java.io.InputStream) -> a
com.facebook.common.internal.CountingOutputStream -> com.facebook.common.d.c:
    long mCount -> a
    long getCount() -> a
    void write(byte[],int,int) -> write
    void write(int) -> write
    void close() -> close
com.facebook.common.internal.DoNotStrip -> com.facebook.common.d.d:
com.facebook.common.internal.ImmutableMap -> com.facebook.common.d.e:
    java.util.Map of(java.lang.Object,java.lang.Object) -> a
    java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> a
com.facebook.common.internal.Ints -> com.facebook.common.d.f:
    int max(int[]) -> a
com.facebook.common.internal.Lists -> com.facebook.common.d.g:
    java.util.ArrayList newArrayList(java.lang.Object[]) -> a
    int computeArrayListCapacity(int) -> a
com.facebook.common.internal.Objects -> com.facebook.common.d.h:
    boolean equal(java.lang.Object,java.lang.Object) -> a
    com.facebook.common.internal.Objects$ToStringHelper toStringHelper(java.lang.Object) -> a
    java.lang.String simpleName(java.lang.Class) -> a
com.facebook.common.internal.Objects$1 -> com.facebook.common.d.i:
com.facebook.common.internal.Objects$ToStringHelper -> com.facebook.common.d.j:
    java.lang.String className -> a
    com.facebook.common.internal.Objects$ToStringHelper$ValueHolder holderHead -> b
    com.facebook.common.internal.Objects$ToStringHelper$ValueHolder holderTail -> c
    boolean omitNullValues -> d
    com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object) -> a
    com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,boolean) -> a
    com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,int) -> a
    java.lang.String toString() -> toString
    com.facebook.common.internal.Objects$ToStringHelper$ValueHolder addHolder() -> a
    com.facebook.common.internal.Objects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> b
com.facebook.common.internal.Objects$ToStringHelper$ValueHolder -> com.facebook.common.d.k:
    java.lang.String name -> a
    java.lang.Object value -> b
    com.facebook.common.internal.Objects$ToStringHelper$ValueHolder next -> c
com.facebook.common.internal.Preconditions -> com.facebook.common.d.l:
    void checkArgument(boolean) -> a
    void checkArgument(boolean,java.lang.Object) -> a
    void checkState(boolean) -> b
    void checkState(boolean,java.lang.Object) -> b
    java.lang.Object checkNotNull(java.lang.Object) -> a
    java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> a
    int checkElementIndex(int,int) -> a
    int checkElementIndex(int,int,java.lang.String) -> a
    java.lang.String badElementIndex(int,int,java.lang.String) -> b
    java.lang.String format(java.lang.String,java.lang.Object[]) -> a
com.facebook.common.internal.Sets -> com.facebook.common.d.m:
    java.util.Set newIdentityHashSet() -> a
    java.util.Set newSetFromMap(java.util.Map) -> a
    java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet() -> b
com.facebook.common.internal.Supplier -> com.facebook.common.d.n:
    java.lang.Object get() -> a
com.facebook.common.internal.Throwables -> com.facebook.common.d.o:
    void propagateIfInstanceOf(java.lang.Throwable,java.lang.Class) -> a
    void propagateIfPossible(java.lang.Throwable) -> a
    java.lang.RuntimeException propagate(java.lang.Throwable) -> b
com.facebook.common.logging.FLog -> com.facebook.common.e.a:
    com.facebook.common.logging.LoggingDelegate sHandler -> a
    boolean isLoggable(int) -> a
    void v(java.lang.Class,java.lang.String) -> a
    void v(java.lang.Class,java.lang.String,java.lang.Object) -> a
    void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object) -> a
    void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    void v(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void v(java.lang.Class,java.lang.String,java.lang.Object[]) -> a
    void v(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
    void d(java.lang.Class,java.lang.String) -> b
    void d(java.lang.Class,java.lang.String,java.lang.Object) -> b
    void d(java.lang.Class,java.lang.String,java.lang.Throwable) -> a
    void i(java.lang.Class,java.lang.String) -> c
    void w(java.lang.String,java.lang.String,java.lang.Object[]) -> b
    void w(java.lang.Class,java.lang.String,java.lang.Object[]) -> b
    void w(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> b
    void w(java.lang.Class,java.lang.String,java.lang.Throwable) -> b
    void e(java.lang.String,java.lang.String) -> a
    void e(java.lang.Class,java.lang.String) -> d
    void e(java.lang.Class,java.lang.String,java.lang.Object[]) -> c
    void e(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> c
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void wtf(java.lang.String,java.lang.String,java.lang.Object[]) -> c
    void wtf(java.lang.Class,java.lang.String,java.lang.Object[]) -> d
    void wtf(java.lang.Class,java.lang.String,java.lang.Throwable) -> c
    java.lang.String formatString(java.lang.String,java.lang.Object[]) -> a
    java.lang.String getTag(java.lang.Class) -> a
com.facebook.common.logging.FLogDefaultLoggingDelegate -> com.facebook.common.e.b:
    com.facebook.common.logging.FLogDefaultLoggingDelegate sInstance -> a
    java.lang.String mApplicationTag -> b
    int mMinimumLoggingLevel -> c
    com.facebook.common.logging.FLogDefaultLoggingDelegate getInstance() -> a
    boolean isLoggable(int) -> a
    void v(java.lang.String,java.lang.String) -> a
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void d(java.lang.String,java.lang.String) -> b
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void i(java.lang.String,java.lang.String) -> c
    void w(java.lang.String,java.lang.String) -> d
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> c
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void wtf(java.lang.String,java.lang.String) -> f
    void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void println(int,java.lang.String,java.lang.String) -> a
    void println(int,java.lang.String,java.lang.String,java.lang.Throwable) -> a
    java.lang.String prefixTag(java.lang.String) -> a
    java.lang.String getMsg(java.lang.String,java.lang.Throwable) -> a
    java.lang.String getStackTraceString(java.lang.Throwable) -> a
com.facebook.common.logging.LoggingDelegate -> com.facebook.common.e.c:
    boolean isLoggable(int) -> a
    void v(java.lang.String,java.lang.String) -> a
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void d(java.lang.String,java.lang.String) -> b
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void i(java.lang.String,java.lang.String) -> c
    void w(java.lang.String,java.lang.String) -> d
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> c
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void wtf(java.lang.String,java.lang.String) -> f
    void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> e
com.facebook.common.media.MediaUtils -> com.facebook.common.f.a:
    java.util.Map ADDITIONAL_ALLOWED_MIME_TYPES -> a
    boolean isVideo(java.lang.String) -> a
    java.lang.String extractMime(java.lang.String) -> b
    java.lang.String extractExtension(java.lang.String) -> c
com.facebook.common.memory.MemoryTrimmable -> com.facebook.common.g.a:
com.facebook.common.memory.MemoryTrimmableRegistry -> com.facebook.common.g.b:
    void registerMemoryTrimmable(com.facebook.common.memory.MemoryTrimmable) -> a
com.facebook.common.memory.NoOpMemoryTrimmableRegistry -> com.facebook.common.g.c:
    com.facebook.common.memory.NoOpMemoryTrimmableRegistry sInstance -> a
    com.facebook.common.memory.NoOpMemoryTrimmableRegistry getInstance() -> a
    void registerMemoryTrimmable(com.facebook.common.memory.MemoryTrimmable) -> a
com.facebook.common.references.CloseableReference -> com.facebook.common.references.a:
    java.lang.Class TAG -> a
    com.facebook.common.references.ResourceReleaser DEFAULT_CLOSEABLE_RELEASER -> b
    boolean mIsClosed -> c
    com.facebook.common.references.SharedReference mSharedReference -> d
    com.facebook.common.references.CloseableReference of(java.io.Closeable) -> a
    com.facebook.common.references.CloseableReference of(java.lang.Object,com.facebook.common.references.ResourceReleaser) -> a
    void close() -> close
    java.lang.Object get() -> a
    com.facebook.common.references.CloseableReference clone() -> b
    com.facebook.common.references.CloseableReference cloneOrNull() -> c
    boolean isValid() -> d
    void finalize() -> finalize
    int getValueHash() -> e
    boolean isValid(com.facebook.common.references.CloseableReference) -> a
    com.facebook.common.references.CloseableReference cloneOrNull(com.facebook.common.references.CloseableReference) -> b
    java.util.List cloneOrNull(java.util.Collection) -> a
    void closeSafely(com.facebook.common.references.CloseableReference) -> c
    void closeSafely(java.lang.Iterable) -> a
    java.lang.Object clone() -> clone
com.facebook.common.references.CloseableReference$1 -> com.facebook.common.references.b:
    void release(java.io.Closeable) -> a
    void release(java.lang.Object) -> a
com.facebook.common.references.OOMSoftReference -> com.facebook.common.references.c:
    java.lang.ref.SoftReference softRef1 -> a
    java.lang.ref.SoftReference softRef2 -> b
    java.lang.ref.SoftReference softRef3 -> c
    void set(java.lang.Object) -> a
    java.lang.Object get() -> a
    void clear() -> b
com.facebook.common.references.ResourceReleaser -> com.facebook.common.references.d:
    void release(java.lang.Object) -> a
com.facebook.common.references.SharedReference -> com.facebook.common.references.SharedReference:
    java.util.Map sLiveObjects -> a
    java.lang.Object mValue -> b
    int mRefCount -> c
    com.facebook.common.references.ResourceReleaser mResourceReleaser -> d
    void addLiveReference(java.lang.Object) -> a
    void removeLiveReference(java.lang.Object) -> b
    java.lang.Object get() -> a
    boolean isValid() -> b
    boolean isValid(com.facebook.common.references.SharedReference) -> a
    void addReference() -> c
    void deleteReference() -> d
    int decreaseRefCount() -> e
    void ensureValid() -> f
com.facebook.common.references.SharedReference$NullReferenceException -> com.facebook.common.references.SharedReference$NullReferenceException:
com.facebook.common.soloader.SoLoaderShim -> com.facebook.common.h.a:
    com.facebook.common.soloader.SoLoaderShim$Handler sHandler -> a
    void loadLibrary(java.lang.String) -> a
com.facebook.common.soloader.SoLoaderShim$DefaultHandler -> com.facebook.common.h.b:
    void loadLibrary(java.lang.String) -> a
com.facebook.common.soloader.SoLoaderShim$Handler -> com.facebook.common.h.c:
    void loadLibrary(java.lang.String) -> a
com.facebook.common.statfs.StatFsHelper -> com.facebook.common.statfs.StatFsHelper:
    com.facebook.common.statfs.StatFsHelper sStatsFsHelper -> a
    long RESTAT_INTERVAL_MS -> b
    android.os.StatFs mInternalStatFs -> c
    java.io.File mInternalPath -> d
    android.os.StatFs mExternalStatFs -> e
    java.io.File mExternalPath -> f
    long mLastRestatTime -> g
    java.util.concurrent.locks.Lock lock -> h
    boolean mInitialized -> i
    com.facebook.common.statfs.StatFsHelper getInstance() -> a
    void ensureInitialized() -> b
    boolean testLowDiskSpace(com.facebook.common.statfs.StatFsHelper$StorageType,long) -> a
    long getAvailableStorageSpace(com.facebook.common.statfs.StatFsHelper$StorageType) -> a
    void maybeUpdateStats() -> c
    void updateStats() -> d
    android.os.StatFs updateStatsHelper(android.os.StatFs,java.io.File) -> a
    android.os.StatFs createStatFs(java.lang.String) -> a
com.facebook.common.statfs.StatFsHelper$StorageType -> com.facebook.common.statfs.StatFsHelper$StorageType:
    com.facebook.common.statfs.StatFsHelper$StorageType INTERNAL -> INTERNAL
    com.facebook.common.statfs.StatFsHelper$StorageType EXTERNAL -> EXTERNAL
    com.facebook.common.statfs.StatFsHelper$StorageType[] $VALUES -> a
    com.facebook.common.statfs.StatFsHelper$StorageType[] values() -> values
    com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String) -> valueOf
com.facebook.common.streams.LimitedInputStream -> com.facebook.common.i.a:
    int mBytesToRead -> a
    int mBytesToReadWhenMarked -> b
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void mark(int) -> mark
    void reset() -> reset
com.facebook.common.streams.TailAppendingInputStream -> com.facebook.common.i.b:
    byte[] mTail -> a
    int mTailOffset -> b
    int mMarkedTailOffset -> c
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    void mark(int) -> mark
    int readNextTailByte() -> a
com.facebook.common.time.Clock -> com.facebook.common.j.a:
    long now() -> a
com.facebook.common.time.MonotonicClock -> com.facebook.common.j.b:
    long now() -> now
com.facebook.common.time.RealtimeSinceBootClock -> com.facebook.common.j.c:
    com.facebook.common.time.RealtimeSinceBootClock INSTANCE -> a
    com.facebook.common.time.RealtimeSinceBootClock get() -> a
    long now() -> now
com.facebook.common.time.SystemClock -> com.facebook.common.j.d:
    com.facebook.common.time.SystemClock INSTANCE -> a
    com.facebook.common.time.SystemClock get() -> b
    long now() -> a
com.facebook.common.util.HashCodeUtil -> com.facebook.common.util.a:
    int hashCode(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    int hashCode(int,int) -> a
    int hashCode(int,int,int,int) -> a
com.facebook.common.util.SecureHashUtil -> com.facebook.common.util.b:
    byte[] HEX_CHAR_TABLE -> a
    java.lang.String makeSHA1HashBase64(byte[]) -> a
com.facebook.common.util.StreamUtil -> com.facebook.common.util.c:
    long skip(java.io.InputStream,long) -> a
com.facebook.common.util.TriState -> com.facebook.common.util.TriState:
    com.facebook.common.util.TriState YES -> YES
    com.facebook.common.util.TriState NO -> NO
    com.facebook.common.util.TriState UNSET -> UNSET
    com.facebook.common.util.TriState[] $VALUES -> a
    com.facebook.common.util.TriState[] values() -> values
    com.facebook.common.util.TriState valueOf(java.lang.String) -> valueOf
    boolean isSet() -> isSet
    com.facebook.common.util.TriState valueOf(boolean) -> valueOf
    com.facebook.common.util.TriState valueOf(java.lang.Boolean) -> valueOf
    boolean asBoolean() -> asBoolean
    boolean asBoolean(boolean) -> asBoolean
    java.lang.Boolean asBooleanObject() -> asBooleanObject
    int getDbValue() -> getDbValue
    com.facebook.common.util.TriState fromDbValue(int) -> fromDbValue
com.facebook.common.util.TriState$1 -> com.facebook.common.util.d:
    int[] $SwitchMap$com$facebook$common$util$TriState -> a
com.facebook.common.util.UriUtil -> com.facebook.common.util.e:
    boolean isNetworkUri(android.net.Uri) -> a
    boolean isLocalFileUri(android.net.Uri) -> b
    boolean isLocalContentUri(android.net.Uri) -> c
    boolean isLocalAssetUri(android.net.Uri) -> d
    boolean isLocalResourceUri(android.net.Uri) -> e
    boolean isDataUri(android.net.Uri) -> f
    java.lang.String getSchemeOrNull(android.net.Uri) -> g
com.facebook.datasource.AbstractDataSource -> com.facebook.datasource.AbstractDataSource:
    com.facebook.datasource.AbstractDataSource$DataSourceStatus mDataSourceStatus -> a
    boolean mIsClosed -> b
    java.lang.Object mResult -> c
    java.lang.Throwable mFailureThrowable -> d
    float mProgress -> e
    java.util.concurrent.ConcurrentLinkedQueue mSubscribers -> f
    boolean isClosed() -> a
    boolean isFinished() -> b
    boolean hasResult() -> c
    java.lang.Object getResult() -> d
    boolean hasFailed() -> e
    java.lang.Throwable getFailureCause() -> f
    float getProgress() -> g
    boolean close() -> h
    void closeResult(java.lang.Object) -> a
    void subscribe(com.facebook.datasource.DataSubscriber,java.util.concurrent.Executor) -> a
    void notifyDataSubscribers() -> j
    void notifyDataSubscriber(com.facebook.datasource.DataSubscriber,java.util.concurrent.Executor,boolean,boolean) -> a
    boolean wasCancelled() -> k
    boolean setResult(java.lang.Object,boolean) -> a
    boolean setFailure(java.lang.Throwable) -> a
    boolean setProgress(float) -> a
    boolean setResultInternal(java.lang.Object,boolean) -> b
    boolean setFailureInternal(java.lang.Throwable) -> b
    boolean setProgressInternal(float) -> b
    void notifyProgressUpdate() -> i
com.facebook.datasource.AbstractDataSource$1 -> com.facebook.datasource.a:
    boolean val$isFailure -> a
    com.facebook.datasource.DataSubscriber val$dataSubscriber -> b
    boolean val$isCancellation -> c
    com.facebook.datasource.AbstractDataSource this$0 -> d
    void run() -> run
com.facebook.datasource.AbstractDataSource$2 -> com.facebook.datasource.b:
    com.facebook.datasource.DataSubscriber val$subscriber -> a
    com.facebook.datasource.AbstractDataSource this$0 -> b
    void run() -> run
com.facebook.datasource.AbstractDataSource$DataSourceStatus -> com.facebook.datasource.AbstractDataSource$DataSourceStatus:
    com.facebook.datasource.AbstractDataSource$DataSourceStatus IN_PROGRESS -> IN_PROGRESS
    com.facebook.datasource.AbstractDataSource$DataSourceStatus SUCCESS -> SUCCESS
    com.facebook.datasource.AbstractDataSource$DataSourceStatus FAILURE -> FAILURE
    com.facebook.datasource.AbstractDataSource$DataSourceStatus[] $VALUES -> a
    com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values() -> values
    com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String) -> valueOf
com.facebook.datasource.BaseDataSubscriber -> com.facebook.datasource.c:
    void onNewResult(com.facebook.datasource.DataSource) -> a
    void onFailure(com.facebook.datasource.DataSource) -> b
    void onCancellation(com.facebook.datasource.DataSource) -> c
    void onProgressUpdate(com.facebook.datasource.DataSource) -> d
    void onNewResultImpl(com.facebook.datasource.DataSource) -> e
    void onFailureImpl(com.facebook.datasource.DataSource) -> f
com.facebook.datasource.DataSource -> com.facebook.datasource.d:
    java.lang.Object getResult() -> d
    boolean hasResult() -> c
    boolean isFinished() -> b
    java.lang.Throwable getFailureCause() -> f
    float getProgress() -> g
    boolean close() -> h
    void subscribe(com.facebook.datasource.DataSubscriber,java.util.concurrent.Executor) -> a
com.facebook.datasource.DataSources -> com.facebook.datasource.e:
    com.facebook.datasource.DataSource immediateFailedDataSource(java.lang.Throwable) -> a
    com.facebook.common.internal.Supplier getFailedDataSourceSupplier(java.lang.Throwable) -> b
com.facebook.datasource.DataSources$1 -> com.facebook.datasource.f:
    java.lang.Throwable val$failure -> a
    com.facebook.datasource.DataSource get() -> b
    java.lang.Object get() -> a
com.facebook.datasource.DataSubscriber -> com.facebook.datasource.g:
    void onNewResult(com.facebook.datasource.DataSource) -> a
    void onFailure(com.facebook.datasource.DataSource) -> b
    void onCancellation(com.facebook.datasource.DataSource) -> c
    void onProgressUpdate(com.facebook.datasource.DataSource) -> d
com.facebook.datasource.FirstAvailableDataSourceSupplier -> com.facebook.datasource.h:
    java.util.List mDataSourceSuppliers -> a
    com.facebook.datasource.FirstAvailableDataSourceSupplier create(java.util.List) -> a
    com.facebook.datasource.DataSource get() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Object get() -> a
    java.util.List access$100(com.facebook.datasource.FirstAvailableDataSourceSupplier) -> a
com.facebook.datasource.FirstAvailableDataSourceSupplier$1 -> com.facebook.datasource.i:
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource -> com.facebook.datasource.j:
    int mIndex -> b
    com.facebook.datasource.DataSource mCurrentDataSource -> c
    com.facebook.datasource.DataSource mDataSourceWithResult -> d
    com.facebook.datasource.FirstAvailableDataSourceSupplier this$0 -> a
    java.lang.Object getResult() -> d
    boolean hasResult() -> c
    boolean close() -> h
    boolean startNextDataSource() -> j
    com.facebook.common.internal.Supplier getNextSupplier() -> k
    boolean setCurrentDataSource(com.facebook.datasource.DataSource) -> a
    boolean clearCurrentDataSource(com.facebook.datasource.DataSource) -> b
    com.facebook.datasource.DataSource getDataSourceWithResult() -> l
    void maybeSetDataSourceWithResult(com.facebook.datasource.DataSource,boolean) -> a
    void onDataSourceFailed(com.facebook.datasource.DataSource) -> c
    void onDataSourceNewResult(com.facebook.datasource.DataSource) -> d
    void closeSafely(com.facebook.datasource.DataSource) -> e
    void access$200(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource,com.facebook.datasource.DataSource) -> a
    void access$300(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource,com.facebook.datasource.DataSource) -> b
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber -> com.facebook.datasource.k:
    com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource this$1 -> a
    void onFailure(com.facebook.datasource.DataSource) -> b
    void onCancellation(com.facebook.datasource.DataSource) -> c
    void onNewResult(com.facebook.datasource.DataSource) -> a
    void onProgressUpdate(com.facebook.datasource.DataSource) -> d
com.facebook.datasource.IncreasingQualityDataSourceSupplier -> com.facebook.datasource.l:
    java.util.List mDataSourceSuppliers -> a
    com.facebook.datasource.IncreasingQualityDataSourceSupplier create(java.util.List) -> a
    com.facebook.datasource.DataSource get() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Object get() -> a
    java.util.List access$000(com.facebook.datasource.IncreasingQualityDataSourceSupplier) -> a
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource -> com.facebook.datasource.m:
    java.util.ArrayList mDataSources -> b
    int mIndexOfDataSourceWithResult -> c
    com.facebook.datasource.IncreasingQualityDataSourceSupplier this$0 -> a
    com.facebook.datasource.DataSource getDataSource(int) -> a
    com.facebook.datasource.DataSource getAndClearDataSource(int) -> b
    com.facebook.datasource.DataSource getDataSourceWithResult() -> j
    java.lang.Object getResult() -> d
    boolean hasResult() -> c
    boolean close() -> h
    void onDataSourceNewResult(int,com.facebook.datasource.DataSource) -> a
    void onDataSourceFailed(int,com.facebook.datasource.DataSource) -> b
    void maybeSetIndexOfDataSourceWithResult(int,com.facebook.datasource.DataSource,boolean) -> a
    com.facebook.datasource.DataSource tryGetAndClearDataSource(int,com.facebook.datasource.DataSource) -> c
    void closeSafely(com.facebook.datasource.DataSource) -> a
    void access$100(com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource,int,com.facebook.datasource.DataSource) -> a
    void access$200(com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource,int,com.facebook.datasource.DataSource) -> b
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource$InternalDataSubscriber -> com.facebook.datasource.n:
    int mIndex -> b
    com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource this$1 -> a
    void onNewResult(com.facebook.datasource.DataSource) -> a
    void onFailure(com.facebook.datasource.DataSource) -> b
    void onCancellation(com.facebook.datasource.DataSource) -> c
    void onProgressUpdate(com.facebook.datasource.DataSource) -> d
com.facebook.datasource.SettableDataSource -> com.facebook.datasource.o:
    com.facebook.datasource.SettableDataSource create() -> j
    boolean setResult(java.lang.Object,boolean) -> a
    boolean setFailure(java.lang.Throwable) -> a
    boolean setProgress(float) -> a
com.facebook.drawable.base.DrawableWithCaches -> com.facebook.b.a.a:
    void dropCaches() -> a
com.facebook.drawee.R -> com.facebook.drawee.a:
com.facebook.drawee.R$styleable -> com.facebook.drawee.b:
    int[] GenericDraweeView -> GenericDraweeView
    int GenericDraweeView_actualImageScaleType -> GenericDraweeView_actualImageScaleType
    int GenericDraweeView_backgroundImage -> GenericDraweeView_backgroundImage
    int GenericDraweeView_fadeDuration -> GenericDraweeView_fadeDuration
    int GenericDraweeView_failureImage -> GenericDraweeView_failureImage
    int GenericDraweeView_failureImageScaleType -> GenericDraweeView_failureImageScaleType
    int GenericDraweeView_overlayImage -> GenericDraweeView_overlayImage
    int GenericDraweeView_placeholderImage -> GenericDraweeView_placeholderImage
    int GenericDraweeView_placeholderImageScaleType -> GenericDraweeView_placeholderImageScaleType
    int GenericDraweeView_pressedStateOverlayImage -> GenericDraweeView_pressedStateOverlayImage
    int GenericDraweeView_progressBarAutoRotateInterval -> GenericDraweeView_progressBarAutoRotateInterval
    int GenericDraweeView_progressBarImage -> GenericDraweeView_progressBarImage
    int GenericDraweeView_progressBarImageScaleType -> GenericDraweeView_progressBarImageScaleType
    int GenericDraweeView_retryImage -> GenericDraweeView_retryImage
    int GenericDraweeView_retryImageScaleType -> GenericDraweeView_retryImageScaleType
    int GenericDraweeView_roundAsCircle -> GenericDraweeView_roundAsCircle
    int GenericDraweeView_roundBottomLeft -> GenericDraweeView_roundBottomLeft
    int GenericDraweeView_roundBottomRight -> GenericDraweeView_roundBottomRight
    int GenericDraweeView_roundTopLeft -> GenericDraweeView_roundTopLeft
    int GenericDraweeView_roundTopRight -> GenericDraweeView_roundTopRight
    int GenericDraweeView_roundWithOverlayColor -> GenericDraweeView_roundWithOverlayColor
    int GenericDraweeView_roundedCornerRadius -> GenericDraweeView_roundedCornerRadius
    int GenericDraweeView_roundingBorderColor -> GenericDraweeView_roundingBorderColor
    int GenericDraweeView_roundingBorderWidth -> GenericDraweeView_roundingBorderWidth
    int GenericDraweeView_viewAspectRatio -> GenericDraweeView_viewAspectRatio
com.facebook.drawee.backends.pipeline.Fresco -> com.facebook.drawee.a.a.a:
    com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier sDraweeControllerBuilderSupplier -> a
    void initialize(android.content.Context) -> a
    void initializeDrawee(android.content.Context) -> b
com.facebook.drawee.backends.pipeline.PipelineDraweeController -> com.facebook.drawee.a.a.b:
    java.lang.Class TAG -> a
    android.content.res.Resources mResources -> b
    com.facebook.imagepipeline.animated.factory.AnimatedDrawableFactory mAnimatedDrawableFactory -> c
    com.facebook.common.internal.Supplier mDataSourceSupplier -> d
    void initialize(com.facebook.common.internal.Supplier,java.lang.String,java.lang.Object) -> a
    void init(com.facebook.common.internal.Supplier) -> a
    com.facebook.datasource.DataSource getDataSource() -> a
    android.graphics.drawable.Drawable createDrawable(com.facebook.common.references.CloseableReference) -> a
    com.facebook.imagepipeline.image.ImageInfo getImageInfo(com.facebook.common.references.CloseableReference) -> b
    int getImageHash(com.facebook.common.references.CloseableReference) -> c
    void releaseImage(com.facebook.common.references.CloseableReference) -> d
    void releaseDrawable(android.graphics.drawable.Drawable) -> a
    java.lang.String toString() -> toString
    void releaseImage(java.lang.Object) -> a
    int getImageHash(java.lang.Object) -> b
    java.lang.Object getImageInfo(java.lang.Object) -> c
    android.graphics.drawable.Drawable createDrawable(java.lang.Object) -> d
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder -> com.facebook.drawee.a.a.c:
    com.facebook.imagepipeline.core.ImagePipeline mImagePipeline -> a
    com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory mPipelineDraweeControllerFactory -> b
    com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setUri(android.net.Uri) -> a
    com.facebook.drawee.backends.pipeline.PipelineDraweeController obtainController() -> a
    com.facebook.datasource.DataSource getDataSourceForRequest(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,boolean) -> a
    com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder getThis() -> b
    com.facebook.drawee.controller.AbstractDraweeControllerBuilder getThis() -> c
    com.facebook.datasource.DataSource getDataSourceForRequest(java.lang.Object,java.lang.Object,boolean) -> a
    com.facebook.drawee.controller.AbstractDraweeController obtainController() -> d
    com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setUri(android.net.Uri) -> b
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier -> com.facebook.drawee.a.a.d:
    android.content.Context mContext -> a
    com.facebook.imagepipeline.core.ImagePipeline mImagePipeline -> b
    com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory mPipelineDraweeControllerFactory -> c
    java.util.Set mBoundControllerListeners -> d
    com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder get() -> b
    java.lang.Object get() -> a
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory -> com.facebook.drawee.a.a.e:
    android.content.res.Resources mResources -> a
    com.facebook.drawee.components.DeferredReleaser mDeferredReleaser -> b
    com.facebook.imagepipeline.animated.factory.AnimatedDrawableFactory mAnimatedDrawableFactory -> c
    java.util.concurrent.Executor mUiThreadExecutor -> d
    com.facebook.drawee.backends.pipeline.PipelineDraweeController newController(com.facebook.common.internal.Supplier,java.lang.String,java.lang.Object) -> a
com.facebook.drawee.components.DeferredReleaser -> com.facebook.drawee.components.a:
    com.facebook.drawee.components.DeferredReleaser sInstance -> a
    java.util.Set mPendingReleasables -> b
    android.os.Handler mUiHandler -> c
    java.lang.Runnable releaseRunnable -> d
    com.facebook.drawee.components.DeferredReleaser getInstance() -> a
    void scheduleDeferredRelease(com.facebook.drawee.components.DeferredReleaser$Releasable) -> a
    void cancelDeferredRelease(com.facebook.drawee.components.DeferredReleaser$Releasable) -> b
    java.util.Set access$000(com.facebook.drawee.components.DeferredReleaser) -> a
com.facebook.drawee.components.DeferredReleaser$1 -> com.facebook.drawee.components.b:
    com.facebook.drawee.components.DeferredReleaser this$0 -> a
    void run() -> run
com.facebook.drawee.components.DeferredReleaser$Releasable -> com.facebook.drawee.components.c:
    void release() -> b
com.facebook.drawee.components.DraweeEventTracker -> com.facebook.drawee.components.DraweeEventTracker:
    java.util.Queue mEventQueue -> a
    void recordEvent(com.facebook.drawee.components.DraweeEventTracker$Event) -> a
    java.lang.String toString() -> toString
com.facebook.drawee.components.DraweeEventTracker$Event -> com.facebook.drawee.components.DraweeEventTracker$Event:
    com.facebook.drawee.components.DraweeEventTracker$Event ON_SET_HIERARCHY -> ON_SET_HIERARCHY
    com.facebook.drawee.components.DraweeEventTracker$Event ON_CLEAR_HIERARCHY -> ON_CLEAR_HIERARCHY
    com.facebook.drawee.components.DraweeEventTracker$Event ON_SET_CONTROLLER -> ON_SET_CONTROLLER
    com.facebook.drawee.components.DraweeEventTracker$Event ON_CLEAR_OLD_CONTROLLER -> ON_CLEAR_OLD_CONTROLLER
    com.facebook.drawee.components.DraweeEventTracker$Event ON_CLEAR_CONTROLLER -> ON_CLEAR_CONTROLLER
    com.facebook.drawee.components.DraweeEventTracker$Event ON_INIT_CONTROLLER -> ON_INIT_CONTROLLER
    com.facebook.drawee.components.DraweeEventTracker$Event ON_ATTACH_CONTROLLER -> ON_ATTACH_CONTROLLER
    com.facebook.drawee.components.DraweeEventTracker$Event ON_DETACH_CONTROLLER -> ON_DETACH_CONTROLLER
    com.facebook.drawee.components.DraweeEventTracker$Event ON_RELEASE_CONTROLLER -> ON_RELEASE_CONTROLLER
    com.facebook.drawee.components.DraweeEventTracker$Event ON_DATASOURCE_SUBMIT -> ON_DATASOURCE_SUBMIT
    com.facebook.drawee.components.DraweeEventTracker$Event ON_DATASOURCE_RESULT -> ON_DATASOURCE_RESULT
    com.facebook.drawee.components.DraweeEventTracker$Event ON_DATASOURCE_RESULT_INT -> ON_DATASOURCE_RESULT_INT
    com.facebook.drawee.components.DraweeEventTracker$Event ON_DATASOURCE_FAILURE -> ON_DATASOURCE_FAILURE
    com.facebook.drawee.components.DraweeEventTracker$Event ON_DATASOURCE_FAILURE_INT -> ON_DATASOURCE_FAILURE_INT
    com.facebook.drawee.components.DraweeEventTracker$Event ON_HOLDER_ATTACH -> ON_HOLDER_ATTACH
    com.facebook.drawee.components.DraweeEventTracker$Event ON_HOLDER_DETACH -> ON_HOLDER_DETACH
    com.facebook.drawee.components.DraweeEventTracker$Event ON_DRAWABLE_SHOW -> ON_DRAWABLE_SHOW
    com.facebook.drawee.components.DraweeEventTracker$Event ON_DRAWABLE_HIDE -> ON_DRAWABLE_HIDE
    com.facebook.drawee.components.DraweeEventTracker$Event ON_ACTIVITY_START -> ON_ACTIVITY_START
    com.facebook.drawee.components.DraweeEventTracker$Event ON_ACTIVITY_STOP -> ON_ACTIVITY_STOP
    com.facebook.drawee.components.DraweeEventTracker$Event[] $VALUES -> a
    com.facebook.drawee.components.DraweeEventTracker$Event[] values() -> values
    com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String) -> valueOf
com.facebook.drawee.components.RetryManager -> com.facebook.drawee.components.d:
    boolean mTapToRetryEnabled -> a
    int mMaxTapToRetryAttempts -> b
    int mTapToRetryAttempts -> c
    void init() -> a
    void reset() -> b
    void setTapToRetryEnabled(boolean) -> a
    boolean shouldRetryOnTap() -> c
    void notifyTapToRetry() -> d
com.facebook.drawee.controller.AbstractDraweeController -> com.facebook.drawee.b.a:
    java.lang.Class TAG -> a
    com.facebook.drawee.components.DraweeEventTracker mEventTracker -> b
    com.facebook.drawee.components.DeferredReleaser mDeferredReleaser -> c
    java.util.concurrent.Executor mUiThreadImmediateExecutor -> d
    com.facebook.drawee.components.RetryManager mRetryManager -> e
    com.facebook.drawee.gestures.GestureDetector mGestureDetector -> f
    com.facebook.drawee.controller.ControllerListener mControllerListener -> g
    com.facebook.drawee.interfaces.SettableDraweeHierarchy mSettableDraweeHierarchy -> h
    android.graphics.drawable.Drawable mControllerOverlay -> i
    java.lang.String mId -> j
    java.lang.Object mCallerContext -> k
    boolean mIsAttached -> l
    boolean mIsRequestSubmitted -> m
    boolean mHasFetchFailed -> n
    com.facebook.datasource.DataSource mDataSource -> o
    java.lang.Object mFetchedImage -> p
    android.graphics.drawable.Drawable mDrawable -> q
    void initialize(java.lang.String,java.lang.Object) -> a
    void init(java.lang.String,java.lang.Object) -> b
    void release() -> b
    void releaseFetch() -> m
    com.facebook.drawee.components.RetryManager getRetryManager() -> c
    void setRetryManager(com.facebook.drawee.components.RetryManager) -> a
    com.facebook.drawee.gestures.GestureDetector getGestureDetector() -> d
    void setGestureDetector(com.facebook.drawee.gestures.GestureDetector) -> a
    void addControllerListener(com.facebook.drawee.controller.ControllerListener) -> a
    com.facebook.drawee.controller.ControllerListener getControllerListener() -> e
    com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy() -> f
    void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy) -> a
    void onAttach() -> g
    void onDetach() -> h
    boolean onTouchEvent(android.view.MotionEvent) -> a
    boolean shouldHandleGesture() -> i
    boolean shouldRetryOnTap() -> n
    boolean onClick() -> j
    void submitRequest() -> k
    void onNewResultInternal(java.lang.String,com.facebook.datasource.DataSource,java.lang.Object,float,boolean,boolean) -> a
    void onFailureInternal(java.lang.String,com.facebook.datasource.DataSource,java.lang.Throwable,boolean) -> a
    void onProgressUpdateInternal(java.lang.String,com.facebook.datasource.DataSource,float,boolean) -> a
    boolean isExpectedDataSource(java.lang.String,com.facebook.datasource.DataSource) -> a
    void logMessageAndImage(java.lang.String,java.lang.Object) -> c
    void logMessageAndFailure(java.lang.String,java.lang.Throwable) -> a
    android.graphics.drawable.Animatable getAnimatable() -> l
    com.facebook.datasource.DataSource getDataSource() -> a
    android.graphics.drawable.Drawable createDrawable(java.lang.Object) -> d
    java.lang.Object getImageInfo(java.lang.Object) -> c
    java.lang.String getImageClass(java.lang.Object) -> e
    int getImageHash(java.lang.Object) -> b
    void releaseImage(java.lang.Object) -> a
    void releaseDrawable(android.graphics.drawable.Drawable) -> a
    java.lang.String toString() -> toString
    void access$000(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,java.lang.Object,float,boolean,boolean) -> a
    void access$100(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,java.lang.Throwable,boolean) -> a
    void access$200(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,float,boolean) -> a
com.facebook.drawee.controller.AbstractDraweeController$1 -> com.facebook.drawee.b.b:
    java.lang.String val$id -> a
    boolean val$wasImmediate -> b
    com.facebook.drawee.controller.AbstractDraweeController this$0 -> c
    void onNewResultImpl(com.facebook.datasource.DataSource) -> e
    void onFailureImpl(com.facebook.datasource.DataSource) -> f
    void onProgressUpdate(com.facebook.datasource.DataSource) -> d
com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener -> com.facebook.drawee.b.c:
    com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener createInternal(com.facebook.drawee.controller.ControllerListener,com.facebook.drawee.controller.ControllerListener) -> a
com.facebook.drawee.controller.AbstractDraweeControllerBuilder -> com.facebook.drawee.b.d:
    com.facebook.drawee.controller.ControllerListener sAutoPlayAnimationsListener -> a
    java.lang.NullPointerException NO_REQUEST_EXCEPTION -> b
    android.content.Context mContext -> c
    java.util.Set mBoundControllerListeners -> d
    java.lang.Object mCallerContext -> e
    java.lang.Object mImageRequest -> f
    java.lang.Object mLowResImageRequest -> g
    java.lang.Object[] mMultiImageRequests -> h
    com.facebook.common.internal.Supplier mDataSourceSupplier -> i
    com.facebook.drawee.controller.ControllerListener mControllerListener -> j
    boolean mTapToRetryEnabled -> k
    boolean mAutoPlayAnimations -> l
    com.facebook.drawee.interfaces.DraweeController mOldController -> m
    java.util.concurrent.atomic.AtomicLong sIdCounter -> n
    void init() -> a
    com.facebook.drawee.controller.AbstractDraweeControllerBuilder setCallerContext(java.lang.Object) -> a
    java.lang.Object getCallerContext() -> e
    com.facebook.drawee.controller.AbstractDraweeControllerBuilder setImageRequest(java.lang.Object) -> b
    com.facebook.drawee.controller.AbstractDraweeControllerBuilder setOldController(com.facebook.drawee.interfaces.DraweeController) -> a
    com.facebook.drawee.interfaces.DraweeController getOldController() -> f
    com.facebook.drawee.controller.AbstractDraweeController build() -> g
    void validate() -> h
    com.facebook.drawee.controller.AbstractDraweeController buildController() -> i
    java.lang.String generateUniqueControllerId() -> j
    com.facebook.common.internal.Supplier obtainDataSourceSupplier() -> k
    com.facebook.common.internal.Supplier getFirstAvailableDataSourceSupplier(java.lang.Object[]) -> a
    com.facebook.common.internal.Supplier getDataSourceSupplierForRequest(java.lang.Object) -> c
    com.facebook.common.internal.Supplier getDataSourceSupplierForRequest(java.lang.Object,boolean) -> a
    void maybeAttachListeners(com.facebook.drawee.controller.AbstractDraweeController) -> a
    void maybeBuildAndSetRetryManager(com.facebook.drawee.controller.AbstractDraweeController) -> b
    void maybeBuildAndSetGestureDetector(com.facebook.drawee.controller.AbstractDraweeController) -> c
    com.facebook.drawee.controller.AbstractDraweeController obtainController() -> d
    com.facebook.datasource.DataSource getDataSourceForRequest(java.lang.Object,java.lang.Object,boolean) -> a
    com.facebook.drawee.controller.AbstractDraweeControllerBuilder getThis() -> c
    com.facebook.drawee.interfaces.DraweeController build() -> l
    com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setOldController(com.facebook.drawee.interfaces.DraweeController) -> b
    com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setCallerContext(java.lang.Object) -> d
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$1 -> com.facebook.drawee.b.e:
    void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> a
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2 -> com.facebook.drawee.b.f:
    java.lang.Object val$imageRequest -> a
    java.lang.Object val$callerContext -> b
    boolean val$bitmapCacheOnly -> c
    com.facebook.drawee.controller.AbstractDraweeControllerBuilder this$0 -> d
    com.facebook.datasource.DataSource get() -> b
    java.lang.String toString() -> toString
    java.lang.Object get() -> a
com.facebook.drawee.controller.BaseControllerListener -> com.facebook.drawee.b.g:
    com.facebook.drawee.controller.ControllerListener NO_OP_LISTENER -> a
    com.facebook.drawee.controller.ControllerListener getNoOpListener() -> a
    void onSubmit(java.lang.String,java.lang.Object) -> a
    void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> a
    void onIntermediateImageSet(java.lang.String,java.lang.Object) -> b
    void onIntermediateImageFailed(java.lang.String,java.lang.Throwable) -> a
    void onFailure(java.lang.String,java.lang.Throwable) -> b
    void onRelease(java.lang.String) -> a
com.facebook.drawee.controller.ControllerListener -> com.facebook.drawee.b.h:
    void onSubmit(java.lang.String,java.lang.Object) -> a
    void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> a
    void onIntermediateImageSet(java.lang.String,java.lang.Object) -> b
    void onIntermediateImageFailed(java.lang.String,java.lang.Throwable) -> a
    void onFailure(java.lang.String,java.lang.Throwable) -> b
    void onRelease(java.lang.String) -> a
com.facebook.drawee.controller.ForwardingControllerListener -> com.facebook.drawee.b.i:
    java.util.List mListeners -> a
    void addListener(com.facebook.drawee.controller.ControllerListener) -> a
    void clearListeners() -> a
    void onException(java.lang.String,java.lang.Throwable) -> c
    void onSubmit(java.lang.String,java.lang.Object) -> a
    void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> a
    void onIntermediateImageSet(java.lang.String,java.lang.Object) -> b
    void onIntermediateImageFailed(java.lang.String,java.lang.Throwable) -> a
    void onFailure(java.lang.String,java.lang.Throwable) -> b
    void onRelease(java.lang.String) -> a
com.facebook.drawee.drawable.ArrayDrawable -> com.facebook.drawee.drawable.a:
    com.facebook.drawee.drawable.TransformCallback mTransformCallback -> a
    com.facebook.drawee.drawable.DrawableProperties mDrawableProperties -> b
    android.graphics.drawable.Drawable[] mLayers -> c
    android.graphics.Rect mTmpRect -> d
    boolean mIsStateful -> e
    boolean mIsStatefulCalculated -> f
    boolean mIsMutated -> g
    android.graphics.drawable.Drawable getDrawable(int) -> a
    void setDrawable(int,android.graphics.drawable.Drawable) -> a
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean isStateful() -> isStateful
    boolean onStateChange(int[]) -> onStateChange
    boolean onLevelChange(int) -> onLevelChange
    void draw(android.graphics.Canvas) -> draw
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable mutate() -> mutate
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    boolean setVisible(boolean,boolean) -> setVisible
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    void setTransformCallback(com.facebook.drawee.drawable.TransformCallback) -> a
    void getTransform(android.graphics.Matrix) -> a
    void getRootBounds(android.graphics.RectF) -> a
com.facebook.drawee.drawable.AutoRotateDrawable -> com.facebook.drawee.drawable.b:
    int mInterval -> c
    boolean mClockwise -> d
    float mRotationAngle -> a
    boolean mIsScheduled -> e
    void draw(android.graphics.Canvas) -> draw
    void run() -> run
    void scheduleNextFrame() -> a
    int getIncrement() -> b
com.facebook.drawee.drawable.DrawableProperties -> com.facebook.drawee.drawable.c:
    int mAlpha -> a
    android.graphics.ColorFilter mColorFilter -> b
    boolean mDither -> c
    boolean mFilterBitmap -> d
    int getAlpha() -> a
    void setAlpha(int) -> a
    android.graphics.ColorFilter getColorFilter() -> b
    void setColorFilter(android.graphics.ColorFilter) -> a
    boolean isDither() -> c
    void setDither(boolean) -> a
    boolean isFilterBitmap() -> d
    void setFilterBitmap(boolean) -> b
com.facebook.drawee.drawable.DrawableUtils -> com.facebook.drawee.drawable.d:
    void copyProperties(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    void setDrawableProperties(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.DrawableProperties) -> a
    void setCallbacks(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable$Callback,com.facebook.drawee.drawable.TransformCallback) -> a
    int multiplyColorAlpha(int,int) -> a
    int getOpacityFromColor(int) -> a
com.facebook.drawee.drawable.FadeDrawable -> com.facebook.drawee.drawable.e:
    android.graphics.drawable.Drawable[] mLayers -> i
    int mTransitionState -> a
    int mDurationMs -> b
    long mStartTimeMs -> c
    int[] mStartAlphas -> d
    int[] mAlphas -> e
    int mAlpha -> f
    boolean[] mIsLayerOn -> g
    int mPreventInvalidateCount -> h
    void invalidateSelf() -> invalidateSelf
    void beginBatchMode() -> a
    void endBatchMode() -> b
    void setTransitionDuration(int) -> b
    void resetInternal() -> f
    void fadeInLayer(int) -> c
    void fadeOutLayer(int) -> d
    void fadeInAllLayers() -> c
    void finishTransitionImmediately() -> d
    boolean updateAlphas(float) -> a
    void draw(android.graphics.Canvas) -> draw
    void drawDrawableWithAlpha(android.graphics.Canvas,android.graphics.drawable.Drawable,int) -> a
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    long getCurrentTimeMs() -> e
com.facebook.drawee.drawable.ForwardingDrawable -> com.facebook.drawee.drawable.f:
    android.graphics.drawable.Drawable mCurrentDelegate -> a
    com.facebook.drawee.drawable.DrawableProperties mDrawableProperties -> c
    com.facebook.drawee.drawable.TransformCallback mTransformCallback -> b
    android.graphics.Matrix sTempTransform -> d
    android.graphics.drawable.Drawable setCurrent(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable setCurrentWithoutInvalidate(android.graphics.drawable.Drawable) -> b
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    boolean setVisible(boolean,boolean) -> setVisible
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean isStateful() -> isStateful
    boolean onStateChange(int[]) -> onStateChange
    boolean onLevelChange(int) -> onLevelChange
    void draw(android.graphics.Canvas) -> draw
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable mutate() -> mutate
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    void setTransformCallback(com.facebook.drawee.drawable.TransformCallback) -> a
    void getParentTransform(android.graphics.Matrix) -> b
    void getTransform(android.graphics.Matrix) -> a
    void getRootBounds(android.graphics.RectF) -> a
com.facebook.drawee.drawable.MatrixDrawable -> com.facebook.drawee.drawable.g:
    android.graphics.Matrix mMatrix -> a
    android.graphics.Matrix mDrawMatrix -> c
    int mUnderlyingWidth -> d
    int mUnderlyingHeight -> e
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void configureBoundsIfUnderlyingChanged() -> a
    void configureBounds() -> b
    void getTransform(android.graphics.Matrix) -> a
com.facebook.drawee.drawable.Rounded -> com.facebook.drawee.drawable.h:
    void setCircle(boolean) -> a
    void setRadii(float[]) -> a
    void setBorder(int,float) -> a
com.facebook.drawee.drawable.RoundedBitmapDrawable -> com.facebook.drawee.drawable.i:
    boolean mIsCircle -> a
    float[] mCornerRadii -> b
    android.graphics.RectF mRootBounds -> c
    android.graphics.RectF mLastRootBounds -> d
    android.graphics.Matrix mTransform -> e
    android.graphics.Matrix mInverseTransform -> f
    android.graphics.Matrix mLastTransform -> g
    float mBorderWidth -> h
    int mBorderColor -> i
    boolean mIsNonzero -> j
    android.graphics.Path mPath -> k
    boolean mIsPathDirty -> l
    android.graphics.Paint mPaint -> m
    android.graphics.Paint mBorderPaint -> n
    boolean mIsShaderTransformDirty -> o
    java.lang.ref.WeakReference mLastBitmap -> p
    com.facebook.drawee.drawable.TransformCallback mTransformCallback -> q
    com.facebook.drawee.drawable.RoundedBitmapDrawable fromBitmapDrawable(android.content.res.Resources,android.graphics.drawable.BitmapDrawable) -> a
    void setCircle(boolean) -> a
    void setRadii(float[]) -> a
    void setBorder(int,float) -> a
    void setTransformCallback(com.facebook.drawee.drawable.TransformCallback) -> a
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void draw(android.graphics.Canvas) -> draw
    void updateNonzero() -> a
    void updateTransform() -> b
    void updatePath() -> c
    void updatePaint() -> d
com.facebook.drawee.drawable.RoundedColorDrawable -> com.facebook.drawee.drawable.j:
    float[] mRadii -> a
    android.graphics.Paint mPaint -> b
    boolean mIsCircle -> c
    float mBorderWidth -> d
    int mBorderColor -> e
    android.graphics.Path mPath -> f
    int mColor -> g
    android.graphics.RectF mTempRect -> h
    int mAlpha -> i
    com.facebook.drawee.drawable.RoundedColorDrawable fromColorDrawable(android.graphics.drawable.ColorDrawable) -> a
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void draw(android.graphics.Canvas) -> draw
    void setCircle(boolean) -> a
    void setRadii(float[]) -> a
    void setColor(int) -> a
    void setBorder(int,float) -> a
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void updatePath() -> a
com.facebook.drawee.drawable.RoundedCornersDrawable -> com.facebook.drawee.drawable.RoundedCornersDrawable:
    com.facebook.drawee.drawable.RoundedCornersDrawable$Type mType -> a
    float[] mRadii -> c
    android.graphics.Paint mPaint -> d
    boolean mIsCircle -> e
    float mBorderWidth -> f
    int mBorderColor -> g
    int mOverlayColor -> h
    android.graphics.Path mPath -> i
    android.graphics.RectF mTempRectangle -> j
    void setCircle(boolean) -> a
    void setRadii(float[]) -> a
    void setOverlayColor(int) -> a
    void setBorder(int,float) -> a
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void updatePath() -> a
    void draw(android.graphics.Canvas) -> draw
com.facebook.drawee.drawable.RoundedCornersDrawable$1 -> com.facebook.drawee.drawable.k:
    int[] $SwitchMap$com$facebook$drawee$drawable$RoundedCornersDrawable$Type -> a
com.facebook.drawee.drawable.RoundedCornersDrawable$Type -> com.facebook.drawee.drawable.RoundedCornersDrawable$Type:
    com.facebook.drawee.drawable.RoundedCornersDrawable$Type OVERLAY_COLOR -> OVERLAY_COLOR
    com.facebook.drawee.drawable.RoundedCornersDrawable$Type CLIPPING -> CLIPPING
    com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] $VALUES -> a
    com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values() -> values
    com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String) -> valueOf
com.facebook.drawee.drawable.ScaleTypeDrawable -> com.facebook.drawee.drawable.l:
    com.facebook.drawee.drawable.ScalingUtils$ScaleType mScaleType -> a
    android.graphics.PointF mFocusPoint -> c
    int mUnderlyingWidth -> d
    int mUnderlyingHeight -> e
    android.graphics.Matrix mDrawMatrix -> f
    android.graphics.Matrix mTempMatrix -> g
    void setFocusPoint(android.graphics.PointF) -> a
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void configureBoundsIfUnderlyingChanged() -> b
    void configureBounds() -> a
    void getTransform(android.graphics.Matrix) -> a
com.facebook.drawee.drawable.ScalingUtils -> com.facebook.drawee.drawable.ScalingUtils:
    android.graphics.Matrix getTransform(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> a
com.facebook.drawee.drawable.ScalingUtils$1 -> com.facebook.drawee.drawable.m:
    int[] $SwitchMap$com$facebook$drawee$drawable$ScalingUtils$ScaleType -> a
com.facebook.drawee.drawable.ScalingUtils$ScaleType -> com.facebook.drawee.drawable.ScalingUtils$ScaleType:
    com.facebook.drawee.drawable.ScalingUtils$ScaleType FIT_XY -> FIT_XY
    com.facebook.drawee.drawable.ScalingUtils$ScaleType FIT_START -> FIT_START
    com.facebook.drawee.drawable.ScalingUtils$ScaleType FIT_CENTER -> FIT_CENTER
    com.facebook.drawee.drawable.ScalingUtils$ScaleType FIT_END -> FIT_END
    com.facebook.drawee.drawable.ScalingUtils$ScaleType CENTER -> CENTER
    com.facebook.drawee.drawable.ScalingUtils$ScaleType CENTER_INSIDE -> CENTER_INSIDE
    com.facebook.drawee.drawable.ScalingUtils$ScaleType CENTER_CROP -> CENTER_CROP
    com.facebook.drawee.drawable.ScalingUtils$ScaleType FOCUS_CROP -> FOCUS_CROP
    com.facebook.drawee.drawable.ScalingUtils$ScaleType[] $VALUES -> a
    com.facebook.drawee.drawable.ScalingUtils$ScaleType[] values() -> values
    com.facebook.drawee.drawable.ScalingUtils$ScaleType valueOf(java.lang.String) -> valueOf
    com.facebook.drawee.drawable.ScalingUtils$ScaleType fromString(java.lang.String) -> fromString
com.facebook.drawee.drawable.SettableDrawable -> com.facebook.drawee.drawable.n:
    void setDrawable(android.graphics.drawable.Drawable) -> c
com.facebook.drawee.drawable.TransformAwareDrawable -> com.facebook.drawee.drawable.o:
    void setTransformCallback(com.facebook.drawee.drawable.TransformCallback) -> a
com.facebook.drawee.drawable.TransformCallback -> com.facebook.drawee.drawable.p:
    void getTransform(android.graphics.Matrix) -> a
    void getRootBounds(android.graphics.RectF) -> a
com.facebook.drawee.drawable.VisibilityAwareDrawable -> com.facebook.drawee.drawable.q:
    void setVisibilityCallback(com.facebook.drawee.drawable.VisibilityCallback) -> a
com.facebook.drawee.drawable.VisibilityCallback -> com.facebook.drawee.drawable.r:
    void onVisibilityChange(boolean) -> a
    void onDraw() -> a
com.facebook.drawee.generic.GenericDraweeHierarchy -> com.facebook.drawee.generic.a:
    android.graphics.drawable.Drawable mEmptyPlaceholderDrawable -> a
    android.graphics.drawable.Drawable mEmptyActualImageDrawable -> b
    android.graphics.drawable.Drawable mEmptyControllerOverlayDrawable -> c
    android.content.res.Resources mResources -> d
    com.facebook.drawee.generic.GenericDraweeHierarchy$RootDrawable mTopLevelDrawable -> e
    com.facebook.drawee.drawable.FadeDrawable mFadeDrawable -> f
    com.facebook.drawee.drawable.SettableDrawable mActualImageSettableDrawable -> g
    int mPlaceholderImageIndex -> h
    int mProgressBarImageIndex -> i
    int mActualImageIndex -> j
    int mRetryImageIndex -> k
    int mFailureImageIndex -> l
    int mControllerOverlayIndex -> m
    com.facebook.drawee.generic.RoundingParams mRoundingParams -> n
    android.graphics.drawable.Drawable maybeWrapWithScaleType(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> a
    android.graphics.drawable.Drawable maybeWrapWithScaleType(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.PointF) -> a
    android.graphics.drawable.Drawable maybeWrapWithMatrix(android.graphics.drawable.Drawable,android.graphics.Matrix) -> a
    void applyRoundingParams(com.facebook.drawee.drawable.Rounded,com.facebook.drawee.generic.RoundingParams) -> a
    android.graphics.drawable.Drawable maybeWrapWithRoundedOverlayColor(com.facebook.drawee.generic.RoundingParams,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable maybeApplyRoundingBitmapOnly(com.facebook.drawee.generic.RoundingParams,android.content.res.Resources,android.graphics.drawable.Drawable) -> a
    void resetActualImages() -> c
    void resetFade() -> d
    void fadeOutBranches() -> e
    void fadeInLayer(int) -> a
    void fadeOutLayer(int) -> b
    void setProgress(float) -> a
    android.graphics.drawable.Drawable getTopLevelDrawable() -> a
    void reset() -> b
    void setImage(android.graphics.drawable.Drawable,float,boolean) -> a
    void setProgress(float,boolean) -> a
    void setFailure(java.lang.Throwable) -> a
    void setRetry(java.lang.Throwable) -> b
    void setControllerOverlay(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getLayerDrawable(int,boolean) -> a
    android.graphics.drawable.Drawable getLayerChildDrawable(int) -> c
    android.graphics.drawable.Drawable getEmptyPlaceholderDrawable() -> f
com.facebook.drawee.generic.GenericDraweeHierarchy$RootDrawable -> com.facebook.drawee.generic.b:
    com.facebook.drawee.drawable.VisibilityCallback mVisibilityCallback -> a
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    void setVisibilityCallback(com.facebook.drawee.drawable.VisibilityCallback) -> a
    boolean setVisible(boolean,boolean) -> setVisible
    void draw(android.graphics.Canvas) -> draw
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder -> com.facebook.drawee.generic.c:
    com.facebook.drawee.drawable.ScalingUtils$ScaleType DEFAULT_SCALE_TYPE -> a
    com.facebook.drawee.drawable.ScalingUtils$ScaleType DEFAULT_ACTUAL_IMAGE_SCALE_TYPE -> b
    android.content.res.Resources mResources -> c
    int mFadeDuration -> d
    android.graphics.drawable.Drawable mPlaceholderImage -> e
    com.facebook.drawee.drawable.ScalingUtils$ScaleType mPlaceholderImageScaleType -> f
    android.graphics.drawable.Drawable mRetryImage -> g
    com.facebook.drawee.drawable.ScalingUtils$ScaleType mRetryImageScaleType -> h
    android.graphics.drawable.Drawable mFailureImage -> i
    com.facebook.drawee.drawable.ScalingUtils$ScaleType mFailureImageScaleType -> j
    android.graphics.drawable.Drawable mProgressBarImage -> k
    com.facebook.drawee.drawable.ScalingUtils$ScaleType mProgressBarImageScaleType -> l
    com.facebook.drawee.drawable.ScalingUtils$ScaleType mActualImageScaleType -> m
    android.graphics.Matrix mActualImageMatrix -> n
    android.graphics.PointF mActualImageFocusPoint -> o
    android.graphics.ColorFilter mActualImageColorFilter -> p
    java.util.List mBackgrounds -> q
    java.util.List mOverlays -> r
    android.graphics.drawable.Drawable mPressedStateOverlay -> s
    com.facebook.drawee.generic.RoundingParams mRoundingParams -> t
    void init() -> t
    android.content.res.Resources getResources() -> a
    com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setFadeDuration(int) -> a
    int getFadeDuration() -> b
    com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setPlaceholderImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> a
    android.graphics.drawable.Drawable getPlaceholderImage() -> c
    com.facebook.drawee.drawable.ScalingUtils$ScaleType getPlaceholderImageScaleType() -> d
    com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setRetryImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> b
    android.graphics.drawable.Drawable getRetryImage() -> e
    com.facebook.drawee.drawable.ScalingUtils$ScaleType getRetryImageScaleType() -> f
    com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setFailureImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> c
    android.graphics.drawable.Drawable getFailureImage() -> g
    com.facebook.drawee.drawable.ScalingUtils$ScaleType getFailureImageScaleType() -> h
    com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setProgressBarImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> d
    android.graphics.drawable.Drawable getProgressBarImage() -> i
    com.facebook.drawee.drawable.ScalingUtils$ScaleType getProgressBarImageScaleType() -> j
    com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setActualImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> a
    com.facebook.drawee.drawable.ScalingUtils$ScaleType getActualImageScaleType() -> k
    android.graphics.Matrix getActualImageMatrix() -> l
    android.graphics.PointF getActualImageFocusPoint() -> m
    android.graphics.ColorFilter getActualImageColorFilter() -> n
    com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setBackground(android.graphics.drawable.Drawable) -> a
    java.util.List getBackgrounds() -> o
    com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setOverlay(android.graphics.drawable.Drawable) -> b
    java.util.List getOverlays() -> p
    com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setPressedStateOverlay(android.graphics.drawable.Drawable) -> c
    android.graphics.drawable.Drawable getPressedStateOverlay() -> q
    com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setRoundingParams(com.facebook.drawee.generic.RoundingParams) -> a
    com.facebook.drawee.generic.RoundingParams getRoundingParams() -> r
    void validate() -> u
    com.facebook.drawee.generic.GenericDraweeHierarchy build() -> s
com.facebook.drawee.generic.RoundingParams -> com.facebook.drawee.generic.RoundingParams:
    com.facebook.drawee.generic.RoundingParams$RoundingMethod mRoundingMethod -> a
    boolean mRoundAsCircle -> b
    float[] mCornersRadii -> c
    int mOverlayColor -> d
    float mBorderWidth -> e
    int mBorderColor -> f
    com.facebook.drawee.generic.RoundingParams setRoundAsCircle(boolean) -> a
    boolean getRoundAsCircle() -> a
    com.facebook.drawee.generic.RoundingParams setCornersRadii(float,float,float,float) -> a
    float[] getCornersRadii() -> b
    com.facebook.drawee.generic.RoundingParams$RoundingMethod getRoundingMethod() -> c
    com.facebook.drawee.generic.RoundingParams setOverlayColor(int) -> a
    int getOverlayColor() -> d
    float[] getOrCreateRoundedCornersRadii() -> g
    com.facebook.drawee.generic.RoundingParams setBorder(int,float) -> a
    float getBorderWidth() -> e
    int getBorderColor() -> f
com.facebook.drawee.generic.RoundingParams$RoundingMethod -> com.facebook.drawee.generic.RoundingParams$RoundingMethod:
    com.facebook.drawee.generic.RoundingParams$RoundingMethod OVERLAY_COLOR -> OVERLAY_COLOR
    com.facebook.drawee.generic.RoundingParams$RoundingMethod BITMAP_ONLY -> BITMAP_ONLY
    com.facebook.drawee.generic.RoundingParams$RoundingMethod[] $VALUES -> a
    com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values() -> values
    com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String) -> valueOf
com.facebook.drawee.gestures.GestureDetector -> com.facebook.drawee.c.a:
    com.facebook.drawee.gestures.GestureDetector$ClickListener mClickListener -> a
    float mSingleTapSlopPx -> b
    boolean mIsCapturingGesture -> c
    boolean mIsClickCandidate -> d
    long mActionDownTime -> e
    float mActionDownX -> f
    float mActionDownY -> g
    com.facebook.drawee.gestures.GestureDetector newInstance(android.content.Context) -> a
    void init() -> a
    void reset() -> b
    void setClickListener(com.facebook.drawee.gestures.GestureDetector$ClickListener) -> a
    boolean isCapturingGesture() -> c
    boolean onTouchEvent(android.view.MotionEvent) -> a
com.facebook.drawee.gestures.GestureDetector$ClickListener -> com.facebook.drawee.c.b:
    boolean onClick() -> j
com.facebook.drawee.interfaces.DraweeController -> com.facebook.drawee.d.a:
    com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy() -> f
    void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy) -> a
    void onAttach() -> g
    void onDetach() -> h
    boolean onTouchEvent(android.view.MotionEvent) -> a
com.facebook.drawee.interfaces.DraweeHierarchy -> com.facebook.drawee.d.b:
    android.graphics.drawable.Drawable getTopLevelDrawable() -> a
com.facebook.drawee.interfaces.SettableDraweeHierarchy -> com.facebook.drawee.d.c:
    void reset() -> b
    void setImage(android.graphics.drawable.Drawable,float,boolean) -> a
    void setProgress(float,boolean) -> a
    void setFailure(java.lang.Throwable) -> a
    void setRetry(java.lang.Throwable) -> b
    void setControllerOverlay(android.graphics.drawable.Drawable) -> a
com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder -> com.facebook.drawee.d.d:
    com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setCallerContext(java.lang.Object) -> d
    com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setUri(android.net.Uri) -> b
    com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setOldController(com.facebook.drawee.interfaces.DraweeController) -> b
    com.facebook.drawee.interfaces.DraweeController build() -> l
com.facebook.drawee.view.AspectRatioMeasure -> com.facebook.drawee.view.a:
    void updateMeasureSpec(com.facebook.drawee.view.AspectRatioMeasure$Spec,float,android.view.ViewGroup$LayoutParams,int,int) -> a
    boolean shouldAdjust(int) -> a
com.facebook.drawee.view.AspectRatioMeasure$Spec -> com.facebook.drawee.view.b:
    int width -> a
    int height -> b
com.facebook.drawee.view.DraweeHolder -> com.facebook.drawee.view.c:
    boolean mIsControllerAttached -> a
    boolean mIsHolderAttached -> b
    boolean mIsVisible -> c
    boolean mIsActivityStarted -> d
    com.facebook.drawee.interfaces.DraweeHierarchy mHierarchy -> e
    com.facebook.drawee.interfaces.DraweeController mController -> f
    com.facebook.common.activitylistener.ActivityListener mActivityListener -> g
    com.facebook.drawee.components.DraweeEventTracker mEventTracker -> h
    com.facebook.drawee.view.DraweeHolder create(com.facebook.drawee.interfaces.DraweeHierarchy,android.content.Context) -> a
    void registerWithContext(android.content.Context) -> a
    void onAttach() -> b
    void onDetach() -> c
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void onVisibilityChange(boolean) -> a
    void onDraw() -> a
    void setVisibilityCallback(com.facebook.drawee.drawable.VisibilityCallback) -> a
    void setController(com.facebook.drawee.interfaces.DraweeController) -> a
    com.facebook.drawee.interfaces.DraweeController getController() -> d
    void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy) -> a
    com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy() -> e
    android.graphics.drawable.Drawable getTopLevelDrawable() -> f
    void attachController() -> g
    void detachController() -> h
    void attachOrDetachController() -> i
    java.lang.String toString() -> toString
com.facebook.drawee.view.DraweeHolder$1 -> com.facebook.drawee.view.d:
    com.facebook.drawee.view.DraweeHolder this$0 -> a
com.facebook.drawee.view.DraweeView -> com.facebook.drawee.view.DraweeView:
    com.facebook.drawee.view.DraweeHolder mDraweeHolder -> a
    void init(android.content.Context) -> a
    void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy) -> setHierarchy
    com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy() -> getHierarchy
    android.graphics.drawable.Drawable getTopLevelDrawable() -> getTopLevelDrawable
    void setController(com.facebook.drawee.interfaces.DraweeController) -> setController
    com.facebook.drawee.interfaces.DraweeController getController() -> getController
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onStartTemporaryDetach() -> onStartTemporaryDetach
    void onFinishTemporaryDetach() -> onFinishTemporaryDetach
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    java.lang.String toString() -> toString
com.facebook.drawee.view.GenericDraweeView -> com.facebook.drawee.view.GenericDraweeView:
    float mAspectRatio -> a
    com.facebook.drawee.view.AspectRatioMeasure$Spec mMeasureSpec -> b
    void inflateHierarchy(android.content.Context,android.util.AttributeSet) -> a
    com.facebook.drawee.drawable.ScalingUtils$ScaleType getScaleTypeFromXml(android.content.res.TypedArray,int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> a
    void setAspectRatio(float) -> setAspectRatio
    float getAspectRatio() -> getAspectRatio
    void onMeasure(int,int) -> onMeasure
com.facebook.drawee.view.SimpleDraweeView -> com.facebook.drawee.view.SimpleDraweeView:
    com.facebook.common.internal.Supplier sDraweeControllerBuilderSupplier -> a
    com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder mSimpleDraweeControllerBuilder -> b
    void initialize(com.facebook.common.internal.Supplier) -> a
    void init() -> a
    com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder getControllerBuilder() -> getControllerBuilder
    void setImageURI(android.net.Uri) -> setImageURI
    void setImageURI(android.net.Uri,java.lang.Object) -> setImageURI
com.facebook.imageformat.GifFormatChecker -> com.facebook.imageformat.a:
    byte[] FRAME_HEADER_START -> a
    byte[] FRAME_HEADER_END_1 -> b
    byte[] FRAME_HEADER_END_2 -> c
    boolean isAnimated(java.io.InputStream) -> a
    boolean circularBufferMatchesBytePattern(byte[],int,byte[]) -> a
com.facebook.imageformat.ImageFormat -> com.facebook.imageformat.ImageFormat:
    com.facebook.imageformat.ImageFormat WEBP_SIMPLE -> WEBP_SIMPLE
    com.facebook.imageformat.ImageFormat WEBP_LOSSLESS -> WEBP_LOSSLESS
    com.facebook.imageformat.ImageFormat WEBP_EXTENDED -> WEBP_EXTENDED
    com.facebook.imageformat.ImageFormat WEBP_EXTENDED_WITH_ALPHA -> WEBP_EXTENDED_WITH_ALPHA
    com.facebook.imageformat.ImageFormat WEBP_ANIMATED -> WEBP_ANIMATED
    com.facebook.imageformat.ImageFormat JPEG -> JPEG
    com.facebook.imageformat.ImageFormat PNG -> PNG
    com.facebook.imageformat.ImageFormat GIF -> GIF
    com.facebook.imageformat.ImageFormat BMP -> BMP
    com.facebook.imageformat.ImageFormat UNKNOWN -> UNKNOWN
    com.facebook.imageformat.ImageFormat[] $VALUES -> a
    com.facebook.imageformat.ImageFormat[] values() -> values
    com.facebook.imageformat.ImageFormat valueOf(java.lang.String) -> valueOf
com.facebook.imageformat.ImageFormatChecker -> com.facebook.imageformat.b:
    byte[] WEBP_RIFF_BYTES -> a
    byte[] WEBP_NAME_BYTES -> b
    byte[] WEBP_VP8_BYTES -> c
    byte[] WEBP_VP8L_BYTES -> d
    byte[] WEBP_VP8X_BYTES -> e
    byte[] JPEG_HEADER -> f
    byte[] PNG_HEADER -> g
    byte[] GIF_HEADER_87A -> h
    byte[] GIF_HEADER_89A -> i
    byte[] BMP_HEADER -> j
    int MAX_HEADER_LENGTH -> k
    com.facebook.imageformat.ImageFormat doGetImageFormat(byte[],int) -> a
    int readHeaderFromStream(java.io.InputStream,byte[]) -> a
    com.facebook.imageformat.ImageFormat getImageFormat(java.io.InputStream) -> a
    com.facebook.imageformat.ImageFormat getImageFormat_WrapIOException(java.io.InputStream) -> b
    boolean matchBytePattern(byte[],int,byte[]) -> a
    byte[] asciiBytes(java.lang.String) -> a
    boolean isAnimatedWebpHeader(byte[]) -> a
    boolean isSimpleWebpHeader(byte[]) -> b
    boolean isLosslessWebpHeader(byte[]) -> c
    boolean isExtendedWebpHeaderWithAlpha(byte[]) -> d
    boolean isExtendedWebpHeader(byte[],int) -> b
    boolean isWebpHeader(byte[],int) -> c
    com.facebook.imageformat.ImageFormat getWebpFormat(byte[],int) -> d
    boolean isJpegHeader(byte[],int) -> e
    boolean isPngHeader(byte[],int) -> f
    boolean isGifHeader(byte[],int) -> g
    boolean isBmpHeader(byte[],int) -> h
com.facebook.imagepipeline.animated.base.AnimatableDrawable -> com.facebook.imagepipeline.animated.base.a:
com.facebook.imagepipeline.animated.base.AnimatedDrawable -> com.facebook.imagepipeline.animated.base.b:
    java.lang.Class TAG -> a
    java.util.concurrent.ScheduledExecutorService mScheduledExecutorServiceForUiThread -> b
    com.facebook.imagepipeline.animated.base.AnimatedDrawableDiagnostics mAnimatedDrawableDiagnostics -> c
    com.facebook.common.time.MonotonicClock mMonotonicClock -> d
    int mDurationMs -> e
    int mFrameCount -> f
    android.graphics.Paint mPaint -> g
    android.graphics.Rect mDstRect -> h
    android.graphics.Paint mTransparentPaint -> i
    java.lang.String mLogId -> j
    com.facebook.imagepipeline.animated.base.AnimatedDrawableCachingBackend mAnimatedDrawableBackend -> k
    long mStartTimeMs -> l
    int mScheduledFrameNumber -> m
    int mScheduledFrameMonotonicNumber -> n
    int mPendingRenderedFrameNumber -> o
    int mPendingRenderedFrameMonotonicNumber -> p
    int mLastDrawnFrameNumber -> q
    int mLastDrawnFrameMonotonicNumber -> r
    com.facebook.common.references.CloseableReference mLastDrawnFrame -> s
    boolean mWaitingForDraw -> t
    long mLastInvalidateTimeMs -> u
    boolean mIsRunning -> v
    boolean mHaveWatchdogScheduled -> w
    float mSx -> x
    float mSy -> y
    boolean mApplyTransformation -> z
    boolean mInvalidateTaskScheduled -> A
    long mNextFrameTaskMs -> B
    java.lang.Runnable mStartTask -> C
    java.lang.Runnable mNextFrameTask -> D
    java.lang.Runnable mInvalidateTask -> E
    java.lang.Runnable mWatchdogTask -> F
    void resetToPreviewFrame() -> c
    void finalize() -> finalize
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void onStart() -> d
    void onNextFrame() -> e
    void computeAndScheduleNextFrame(boolean) -> a
    void draw(android.graphics.Canvas) -> draw
    void scheduleInvalidatePoll() -> f
    boolean renderFrame(android.graphics.Canvas,int,int) -> a
    void doWatchdogCheck() -> g
    void doInvalidateSelf() -> h
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    boolean onLevelChange(int) -> onLevelChange
    void dropCaches() -> a
    void access$000(com.facebook.imagepipeline.animated.base.AnimatedDrawable) -> a
    java.lang.Class access$100() -> b
    java.lang.String access$200(com.facebook.imagepipeline.animated.base.AnimatedDrawable) -> b
    void access$300(com.facebook.imagepipeline.animated.base.AnimatedDrawable) -> c
    boolean access$402(com.facebook.imagepipeline.animated.base.AnimatedDrawable,boolean) -> a
    void access$500(com.facebook.imagepipeline.animated.base.AnimatedDrawable) -> d
    void access$600(com.facebook.imagepipeline.animated.base.AnimatedDrawable) -> e
com.facebook.imagepipeline.animated.base.AnimatedDrawable$1 -> com.facebook.imagepipeline.animated.base.c:
    com.facebook.imagepipeline.animated.base.AnimatedDrawable this$0 -> a
    void run() -> run
com.facebook.imagepipeline.animated.base.AnimatedDrawable$2 -> com.facebook.imagepipeline.animated.base.d:
    com.facebook.imagepipeline.animated.base.AnimatedDrawable this$0 -> a
    void run() -> run
com.facebook.imagepipeline.animated.base.AnimatedDrawable$3 -> com.facebook.imagepipeline.animated.base.e:
    com.facebook.imagepipeline.animated.base.AnimatedDrawable this$0 -> a
    void run() -> run
com.facebook.imagepipeline.animated.base.AnimatedDrawable$4 -> com.facebook.imagepipeline.animated.base.f:
    com.facebook.imagepipeline.animated.base.AnimatedDrawable this$0 -> a
    void run() -> run
com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend -> com.facebook.imagepipeline.animated.base.g:
    com.facebook.imagepipeline.animated.base.AnimatedImageResult getAnimatedImageResult() -> a
    int getDurationMs() -> b
    int getFrameCount() -> c
    int getWidth() -> d
    int getHeight() -> e
    int getRenderedWidth() -> f
    int getRenderedHeight() -> g
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo getFrameInfo(int) -> a
    void renderFrame(int,android.graphics.Canvas) -> a
    int getFrameForTimestampMs(int) -> b
    int getTimestampMsForFrame(int) -> c
    int getDurationMsForFrame(int) -> d
    int getFrameForPreview() -> h
    com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend forNewBounds(android.graphics.Rect) -> a
    int getMemoryUsage() -> i
    com.facebook.common.references.CloseableReference getPreDecodedFrame(int) -> e
    boolean hasPreDecodedFrame(int) -> f
    void dropCaches() -> j
com.facebook.imagepipeline.animated.base.AnimatedDrawableCachingBackend -> com.facebook.imagepipeline.animated.base.h:
    com.facebook.common.references.CloseableReference getBitmapForFrame(int) -> g
    com.facebook.common.references.CloseableReference getPreviewBitmap() -> k
    void appendDebugOptionString(java.lang.StringBuilder) -> a
    com.facebook.imagepipeline.animated.base.AnimatedDrawableCachingBackend forNewBounds(android.graphics.Rect) -> b
com.facebook.imagepipeline.animated.base.AnimatedDrawableDiagnostics -> com.facebook.imagepipeline.animated.base.i:
    void setBackend(com.facebook.imagepipeline.animated.base.AnimatedDrawableCachingBackend) -> a
    void onStartMethodBegin() -> a
    void onStartMethodEnd() -> b
    void onNextFrameMethodBegin() -> c
    void onNextFrameMethodEnd() -> d
    void incrementDroppedFrames(int) -> a
    void incrementDrawnFrames(int) -> b
    void onDrawMethodBegin() -> e
    void onDrawMethodEnd() -> f
    void drawDebugOverlay(android.graphics.Canvas,android.graphics.Rect) -> a
com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo -> com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo:
    int frameNumber -> a
    int xOffset -> b
    int yOffset -> c
    int width -> d
    int height -> e
    boolean shouldBlendWithPreviousFrame -> f
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod disposalMethod -> g
com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod -> com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod:
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod DISPOSE_DO_NOT -> DISPOSE_DO_NOT
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod DISPOSE_TO_BACKGROUND -> DISPOSE_TO_BACKGROUND
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod DISPOSE_TO_PREVIOUS -> DISPOSE_TO_PREVIOUS
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod[] $VALUES -> a
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod[] values() -> values
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod valueOf(java.lang.String) -> valueOf
com.facebook.imagepipeline.animated.base.AnimatedDrawableOptions -> com.facebook.imagepipeline.animated.base.j:
    com.facebook.imagepipeline.animated.base.AnimatedDrawableOptions DEFAULTS -> a
    boolean forceKeepAllFramesInMemory -> b
    boolean allowPrefetching -> c
    int maximumBytes -> d
    boolean enableDebugging -> e
    com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder newBuilder() -> a
com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder -> com.facebook.imagepipeline.animated.base.k:
    boolean mForceKeepAllFramesInMemory -> a
    boolean mAllowPrefetching -> b
    int mMaximumBytes -> c
    boolean mEnableDebugging -> d
    boolean getForceKeepAllFramesInMemory() -> a
    boolean getAllowPrefetching() -> b
    int getMaximumBytes() -> c
    boolean getEnableDebugging() -> d
    com.facebook.imagepipeline.animated.base.AnimatedDrawableOptions build() -> e
com.facebook.imagepipeline.animated.base.AnimatedImage -> com.facebook.imagepipeline.animated.base.l:
    int getWidth() -> a
    int getHeight() -> b
    int getFrameCount() -> c
    int[] getFrameDurations() -> d
    com.facebook.imagepipeline.animated.base.AnimatedImageFrame getFrame(int) -> a
    boolean doesRenderSupportScaling() -> e
    int getSizeInBytes() -> f
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo getFrameInfo(int) -> b
com.facebook.imagepipeline.animated.base.AnimatedImageFrame -> com.facebook.imagepipeline.animated.base.m:
    void dispose() -> a
    void renderFrame(int,int,android.graphics.Bitmap) -> a
    int getWidth() -> b
    int getHeight() -> c
    int getXOffset() -> d
    int getYOffset() -> e
com.facebook.imagepipeline.animated.base.AnimatedImageResult -> com.facebook.imagepipeline.animated.base.n:
    com.facebook.imagepipeline.animated.base.AnimatedImage mImage -> a
    int mFrameForPreview -> b
    com.facebook.common.references.CloseableReference mPreviewBitmap -> c
    java.util.List mDecodedFrames -> d
    com.facebook.imagepipeline.animated.base.AnimatedImageResult forAnimatedImage(com.facebook.imagepipeline.animated.base.AnimatedImage) -> a
    com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder newBuilder(com.facebook.imagepipeline.animated.base.AnimatedImage) -> b
    com.facebook.imagepipeline.animated.base.AnimatedImage getImage() -> a
    int getFrameForPreview() -> b
    com.facebook.common.references.CloseableReference getDecodedFrame(int) -> a
    boolean hasDecodedFrame(int) -> b
    com.facebook.common.references.CloseableReference getPreviewBitmap() -> c
    void dispose() -> d
com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder -> com.facebook.imagepipeline.animated.base.o:
    com.facebook.imagepipeline.animated.base.AnimatedImage mImage -> a
    com.facebook.common.references.CloseableReference mPreviewBitmap -> b
    java.util.List mDecodedFrames -> c
    int mFrameForPreview -> d
    com.facebook.imagepipeline.animated.base.AnimatedImage getImage() -> a
    com.facebook.common.references.CloseableReference getPreviewBitmap() -> b
    com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder setPreviewBitmap(com.facebook.common.references.CloseableReference) -> a
    int getFrameForPreview() -> c
    com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder setFrameForPreview(int) -> a
    java.util.List getDecodedFrames() -> d
    com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder setDecodedFrames(java.util.List) -> a
    com.facebook.imagepipeline.animated.base.AnimatedImageResult build() -> e
com.facebook.imagepipeline.animated.base.DelegatingAnimatedDrawableBackend -> com.facebook.imagepipeline.animated.base.p:
    com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend mAnimatedDrawableBackend -> a
    com.facebook.imagepipeline.animated.base.AnimatedImageResult getAnimatedImageResult() -> a
    int getDurationMs() -> b
    int getFrameCount() -> c
    int getWidth() -> d
    int getHeight() -> e
    int getRenderedWidth() -> f
    int getRenderedHeight() -> g
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo getFrameInfo(int) -> a
    void renderFrame(int,android.graphics.Canvas) -> a
    int getFrameForTimestampMs(int) -> b
    int getTimestampMsForFrame(int) -> c
    int getDurationMsForFrame(int) -> d
    int getFrameForPreview() -> h
    int getMemoryUsage() -> i
    com.facebook.common.references.CloseableReference getPreDecodedFrame(int) -> e
    boolean hasPreDecodedFrame(int) -> f
    void dropCaches() -> j
com.facebook.imagepipeline.animated.factory.AnimatedDrawableFactory -> com.facebook.imagepipeline.animated.a.a:
    com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendProvider mAnimatedDrawableBackendProvider -> a
    com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImplProvider mAnimatedDrawableCachingBackendProvider -> b
    com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil mAnimatedDrawableUtil -> c
    java.util.concurrent.ScheduledExecutorService mScheduledExecutorServiceForUiThread -> d
    com.facebook.common.time.MonotonicClock mMonotonicClock -> e
    android.content.res.Resources mResources -> f
    com.facebook.imagepipeline.animated.base.AnimatedDrawable create(com.facebook.imagepipeline.animated.base.AnimatedImageResult) -> a
    com.facebook.imagepipeline.animated.base.AnimatedDrawable create(com.facebook.imagepipeline.animated.base.AnimatedImageResult,com.facebook.imagepipeline.animated.base.AnimatedDrawableOptions) -> a
    com.facebook.imagepipeline.animated.base.AnimatedDrawable createAnimatedDrawable(com.facebook.imagepipeline.animated.base.AnimatedDrawableOptions,com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend) -> a
com.facebook.imagepipeline.animated.factory.AnimatedDrawableFactory$1 -> com.facebook.imagepipeline.animated.a.b:
    com.facebook.imagepipeline.animated.factory.AnimatedDrawableFactory this$0 -> a
    long now() -> now
com.facebook.imagepipeline.animated.factory.AnimatedImageFactory -> com.facebook.imagepipeline.animated.a.c:
    com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendProvider mAnimatedDrawableBackendProvider -> a
    com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory mBitmapFactory -> b
    com.facebook.imagepipeline.image.CloseableImage decodeGif(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ImageDecodeOptions) -> a
    com.facebook.imagepipeline.image.CloseableImage decodeWebP(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ImageDecodeOptions) -> b
    com.facebook.imagepipeline.image.CloseableAnimatedImage getCloseableImage(com.facebook.imagepipeline.common.ImageDecodeOptions,com.facebook.imagepipeline.animated.base.AnimatedImage) -> a
    com.facebook.common.references.CloseableReference createPreviewBitmap(com.facebook.imagepipeline.animated.base.AnimatedImage,int) -> a
    java.util.List decodeAllFrames(com.facebook.imagepipeline.animated.base.AnimatedImage) -> a
    com.facebook.common.references.CloseableReference createBitmap(int,int) -> a
com.facebook.imagepipeline.animated.factory.AnimatedImageFactory$1 -> com.facebook.imagepipeline.animated.a.d:
    com.facebook.imagepipeline.animated.factory.AnimatedImageFactory this$0 -> a
    void onIntermediateResult(int,android.graphics.Bitmap) -> a
    com.facebook.common.references.CloseableReference getCachedBitmap(int) -> a
com.facebook.imagepipeline.animated.factory.AnimatedImageFactory$2 -> com.facebook.imagepipeline.animated.a.e:
    java.util.List val$bitmaps -> a
    com.facebook.imagepipeline.animated.factory.AnimatedImageFactory this$0 -> b
    void onIntermediateResult(int,android.graphics.Bitmap) -> a
    com.facebook.common.references.CloseableReference getCachedBitmap(int) -> a
com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl -> com.facebook.imagepipeline.animated.impl.a:
    java.lang.Class TAG -> a
    com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil mAnimatedDrawableUtil -> b
    com.facebook.imagepipeline.animated.base.AnimatedImageResult mAnimatedImageResult -> c
    com.facebook.imagepipeline.animated.base.AnimatedImage mAnimatedImage -> d
    android.graphics.Rect mRenderedBounds -> e
    int[] mFrameDurationsMs -> f
    int[] mFrameTimestampsMs -> g
    int mDurationMs -> h
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo[] mFrameInfos -> i
    android.graphics.Bitmap mTempBitmap -> j
    android.graphics.Rect getBoundsToUse(com.facebook.imagepipeline.animated.base.AnimatedImage,android.graphics.Rect) -> a
    com.facebook.imagepipeline.animated.base.AnimatedImageResult getAnimatedImageResult() -> a
    int getDurationMs() -> b
    int getFrameCount() -> c
    int getWidth() -> d
    int getHeight() -> e
    int getRenderedWidth() -> f
    int getRenderedHeight() -> g
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo getFrameInfo(int) -> a
    int getFrameForTimestampMs(int) -> b
    int getTimestampMsForFrame(int) -> c
    int getDurationMsForFrame(int) -> d
    int getFrameForPreview() -> h
    com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend forNewBounds(android.graphics.Rect) -> a
    int getMemoryUsage() -> i
    com.facebook.common.references.CloseableReference getPreDecodedFrame(int) -> e
    boolean hasPreDecodedFrame(int) -> f
    void renderFrame(int,android.graphics.Canvas) -> a
    void renderImageSupportsScaling(android.graphics.Canvas,com.facebook.imagepipeline.animated.base.AnimatedImageFrame) -> b
    void renderImageDoesNotSupportScaling(android.graphics.Canvas,com.facebook.imagepipeline.animated.base.AnimatedImageFrame) -> a
    void dropCaches() -> j
com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendProvider -> com.facebook.imagepipeline.animated.impl.b:
    com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend get(com.facebook.imagepipeline.animated.base.AnimatedImageResult,android.graphics.Rect) -> a
com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl -> com.facebook.imagepipeline.animated.impl.c:
    java.lang.Class TAG -> a
    java.util.concurrent.atomic.AtomicInteger sTotalBitmaps -> b
    com.facebook.common.executors.SerialExecutorService mExecutorService -> c
    com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil mAnimatedDrawableUtil -> d
    android.app.ActivityManager mActivityManager -> e
    com.facebook.common.time.MonotonicClock mMonotonicClock -> f
    com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend mAnimatedDrawableBackend -> g
    com.facebook.imagepipeline.animated.base.AnimatedDrawableOptions mAnimatedDrawableOptions -> h
    com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor mAnimatedImageCompositor -> i
    com.facebook.common.references.ResourceReleaser mResourceReleaserForBitmaps -> j
    int mMaximumBytes -> k
    int mApproxBytesToHoldAllFrames -> l
    java.util.List mFreeBitmaps -> m
    android.support.v4.util.SparseArrayCompat mDecodesInFlight -> n
    android.support.v4.util.SparseArrayCompat mCachedBitmaps -> o
    com.facebook.imagepipeline.animated.impl.WhatToKeepCachedArray mBitmapsToKeepCached -> p
    int mCurrentFrameIndex -> q
    void finalize() -> finalize
    android.graphics.Bitmap createNewBitmap() -> l
    void renderFrame(int,android.graphics.Canvas) -> a
    com.facebook.common.references.CloseableReference getBitmapForFrame(int) -> g
    com.facebook.common.references.CloseableReference getPreviewBitmap() -> k
    com.facebook.imagepipeline.animated.base.AnimatedDrawableCachingBackend forNewBounds(android.graphics.Rect) -> b
    void dropCaches() -> j
    int getMemoryUsage() -> i
    void appendDebugOptionString(java.lang.StringBuilder) -> a
    com.facebook.common.references.CloseableReference getBitmapForFrameInternal(int,boolean) -> a
    void maybeCacheBitmapDuringRender(int,android.graphics.Bitmap) -> a
    void copyAndCacheBitmapDuringRendering(int,android.graphics.Bitmap) -> b
    com.facebook.common.references.CloseableReference obtainBitmapInternal() -> m
    void releaseBitmapInternal(android.graphics.Bitmap) -> a
    void schedulePrefetches() -> n
    int getDefaultMaxBytes(android.app.ActivityManager) -> a
    boolean shouldKeepAllFramesInMemory() -> o
    void doPrefetch(int,int) -> a
    void runPrefetch(int) -> h
    void onFutureFinished(bolts.Task,int) -> a
    void cancelFuturesOutsideOfRange(int,int) -> b
    void dropBitmapsThatShouldNotBeCached() -> p
    void maybeCacheRenderedBitmap(int,com.facebook.common.references.CloseableReference) -> a
    com.facebook.common.references.CloseableReference getCachedOrPredecodedFrame(int) -> i
    boolean hasCachedOrPredecodedFrame(int) -> j
    com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend forNewBounds(android.graphics.Rect) -> a
    void access$000(com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl,int,android.graphics.Bitmap) -> a
    com.facebook.common.references.CloseableReference access$100(com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl,int) -> a
    void access$200(com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl,int) -> b
    void access$300(com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl,bolts.Task,int) -> a
com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl$1 -> com.facebook.imagepipeline.animated.impl.d:
    com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl this$0 -> a
    void onIntermediateResult(int,android.graphics.Bitmap) -> a
    com.facebook.common.references.CloseableReference getCachedBitmap(int) -> a
com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl$2 -> com.facebook.imagepipeline.animated.impl.e:
    com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl this$0 -> a
    void release(android.graphics.Bitmap) -> a
    void release(java.lang.Object) -> a
com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl$3 -> com.facebook.imagepipeline.animated.impl.f:
    int val$frameNumber -> a
    com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl this$0 -> b
    java.lang.Object call() -> call
com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl$4 -> com.facebook.imagepipeline.animated.impl.g:
    bolts.Task val$newFuture -> a
    int val$frameNumber -> b
    com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl this$0 -> c
    java.lang.Object then(bolts.Task) -> a
com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImplProvider -> com.facebook.imagepipeline.animated.impl.h:
    com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl get(com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend,com.facebook.imagepipeline.animated.base.AnimatedDrawableOptions) -> a
com.facebook.imagepipeline.animated.impl.AnimatedDrawableDiagnosticsImpl -> com.facebook.imagepipeline.animated.impl.i:
    java.lang.Class TAG -> a
    com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil mAnimatedDrawableUtil -> b
    android.util.DisplayMetrics mDisplayMetrics -> c
    android.text.TextPaint mDebugTextPaint -> d
    java.lang.StringBuilder sbTemp -> e
    com.facebook.imagepipeline.animated.impl.RollingStat mDroppedFramesStat -> f
    com.facebook.imagepipeline.animated.impl.RollingStat mDrawnFrames -> g
    com.facebook.imagepipeline.animated.base.AnimatedDrawableCachingBackend mAnimatedDrawableBackend -> h
    long mLastTimeStamp -> i
    void setBackend(com.facebook.imagepipeline.animated.base.AnimatedDrawableCachingBackend) -> a
    void onStartMethodBegin() -> a
    void onStartMethodEnd() -> b
    void onNextFrameMethodBegin() -> c
    void onNextFrameMethodEnd() -> d
    void incrementDroppedFrames(int) -> a
    void incrementDrawnFrames(int) -> b
    void onDrawMethodBegin() -> e
    void onDrawMethodEnd() -> f
    void drawDebugOverlay(android.graphics.Canvas,android.graphics.Rect) -> a
    int convertDpToPx(int) -> c
com.facebook.imagepipeline.animated.impl.AnimatedDrawableDiagnosticsNoop -> com.facebook.imagepipeline.animated.impl.j:
    com.facebook.imagepipeline.animated.impl.AnimatedDrawableDiagnosticsNoop sInstance -> a
    com.facebook.imagepipeline.animated.impl.AnimatedDrawableDiagnosticsNoop getInstance() -> g
    void setBackend(com.facebook.imagepipeline.animated.base.AnimatedDrawableCachingBackend) -> a
    void onStartMethodBegin() -> a
    void onStartMethodEnd() -> b
    void onNextFrameMethodBegin() -> c
    void onNextFrameMethodEnd() -> d
    void incrementDroppedFrames(int) -> a
    void incrementDrawnFrames(int) -> b
    void onDrawMethodBegin() -> e
    void onDrawMethodEnd() -> f
    void drawDebugOverlay(android.graphics.Canvas,android.graphics.Rect) -> a
com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor -> com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor:
    com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend mAnimatedDrawableBackend -> a
    com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$Callback mCallback -> b
    android.graphics.Paint mTransparentFillPaint -> c
    void renderFrame(int,android.graphics.Bitmap) -> a
    int prepareCanvasWithClosestCachedFrame(int,android.graphics.Canvas) -> a
    void disposeToBackground(android.graphics.Canvas,com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo) -> a
    com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult isFrameNeededForRendering(int) -> a
com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$1 -> com.facebook.imagepipeline.animated.impl.k:
    int[] $SwitchMap$com$facebook$imagepipeline$animated$impl$AnimatedImageCompositor$FrameNeededResult -> a
com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$Callback -> com.facebook.imagepipeline.animated.impl.l:
    void onIntermediateResult(int,android.graphics.Bitmap) -> a
    com.facebook.common.references.CloseableReference getCachedBitmap(int) -> a
com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult -> com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult:
    com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult REQUIRED -> REQUIRED
    com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult NOT_REQUIRED -> NOT_REQUIRED
    com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult SKIP -> SKIP
    com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult ABORT -> ABORT
    com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult[] $VALUES -> a
    com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult[] values() -> values
    com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult valueOf(java.lang.String) -> valueOf
com.facebook.imagepipeline.animated.impl.RollingStat -> com.facebook.imagepipeline.animated.impl.m:
    short[] mStat -> a
    void incrementStats(int) -> a
    int getSum(int) -> b
com.facebook.imagepipeline.animated.impl.WhatToKeepCachedArray -> com.facebook.imagepipeline.animated.impl.n:
    boolean[] mData -> a
    boolean get(int) -> a
    void setAll(boolean) -> a
    void removeOutsideRange(int,int) -> a
    void set(int,boolean) -> a
com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil -> com.facebook.imagepipeline.animated.b.a:
    void appendMemoryString(java.lang.StringBuilder,int) -> a
    void fixFrameDurations(int[]) -> a
    int getTotalDurationFromFrameDurations(int[]) -> b
    int[] getFrameTimeStampsFromDurations(int[]) -> c
    int getFrameForTimestampMs(int[],int) -> a
    int getSizeOfBitmap(android.graphics.Bitmap) -> a
    boolean isOutsideRange(int,int,int) -> a
com.facebook.imagepipeline.bitmaps.ArtBitmapFactory -> com.facebook.imagepipeline.bitmaps.a:
    com.facebook.imagepipeline.memory.BitmapPool mBitmapPool -> b
    boolean mDownsampleEnabled -> c
    android.support.v4.util.Pools$SynchronizedPool mDecodeBuffers -> a
    byte[] EOI_TAIL -> d
    com.facebook.common.references.CloseableReference createBitmap(int,int) -> a
    com.facebook.common.references.CloseableReference decodeFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage) -> a
    com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage,int) -> a
    com.facebook.common.references.CloseableReference doDecodeStaticImage(java.io.InputStream,int) -> a
    android.graphics.BitmapFactory$Options getDecodeOptionsForStream(java.io.InputStream,int) -> b
com.facebook.imagepipeline.bitmaps.DalvikBitmapFactory -> com.facebook.imagepipeline.bitmaps.b:
    com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator mJpegGenerator -> a
    com.facebook.imagepipeline.memory.BitmapCounter mUnpooledBitmapsCounter -> b
    com.facebook.common.references.ResourceReleaser mUnpooledBitmapsReleaser -> c
    com.facebook.imagepipeline.memory.SharedByteArray mSharedByteArray -> d
    boolean mDownsampleEnabled -> e
    com.facebook.common.references.CloseableReference createBitmap(short,short) -> a
    com.facebook.common.references.CloseableReference decodeFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage) -> a
    com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage,int) -> a
    com.facebook.common.references.CloseableReference doDecodeBitmap(byte[],int,int) -> a
    android.graphics.Bitmap decodeAsPurgeableBitmap(byte[],int,int,boolean) -> a
    void putEOI(byte[],int) -> a
    boolean endsWithEOI(byte[],int) -> b
    com.facebook.imagepipeline.memory.BitmapCounter access$000(com.facebook.imagepipeline.bitmaps.DalvikBitmapFactory) -> a
com.facebook.imagepipeline.bitmaps.DalvikBitmapFactory$1 -> com.facebook.imagepipeline.bitmaps.c:
    com.facebook.imagepipeline.bitmaps.DalvikBitmapFactory this$0 -> a
    void release(android.graphics.Bitmap) -> a
    void release(java.lang.Object) -> a
com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator -> com.facebook.imagepipeline.bitmaps.d:
    byte[] EMPTY_JPEG_PREFIX -> a
    byte[] EMPTY_JPEG_SUFFIX -> b
    com.facebook.imagepipeline.memory.PooledByteBufferFactory mPooledByteBufferFactory -> c
    com.facebook.common.references.CloseableReference generate(short,short) -> a
com.facebook.imagepipeline.bitmaps.GingerbreadBitmapFactory -> com.facebook.imagepipeline.bitmaps.e:
    com.facebook.common.references.ResourceReleaser mBitmapResourceReleaser -> a
    com.facebook.common.references.CloseableReference createBitmap(int,int) -> a
com.facebook.imagepipeline.bitmaps.GingerbreadBitmapFactory$1 -> com.facebook.imagepipeline.bitmaps.f:
    com.facebook.imagepipeline.bitmaps.GingerbreadBitmapFactory this$0 -> a
    void release(android.graphics.Bitmap) -> a
    void release(java.lang.Object) -> a
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory -> com.facebook.imagepipeline.bitmaps.g:
    com.facebook.imagepipeline.bitmaps.GingerbreadBitmapFactory mGingerbreadBitmapFactory -> a
    com.facebook.imagepipeline.bitmaps.DalvikBitmapFactory mDalvikBitmapFactory -> b
    com.facebook.imagepipeline.bitmaps.ArtBitmapFactory mArtBitmapFactory -> c
    com.facebook.common.references.CloseableReference createBitmap(int,int) -> a
    com.facebook.common.references.CloseableReference decodeFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage) -> a
    com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage,int) -> a
com.facebook.imagepipeline.bitmaps.TooManyBitmapsException -> com.facebook.imagepipeline.bitmaps.TooManyBitmapsException:
com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory -> com.facebook.imagepipeline.a.a:
    com.facebook.imagepipeline.cache.CountingMemoryCache get(com.facebook.common.internal.Supplier,com.facebook.common.memory.MemoryTrimmableRegistry) -> a
com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory$1 -> com.facebook.imagepipeline.a.b:
    int getSizeInBytes(com.facebook.imagepipeline.image.CloseableImage) -> a
    int getSizeInBytes(java.lang.Object) -> a
com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory -> com.facebook.imagepipeline.a.c:
    com.facebook.imagepipeline.cache.MemoryCache get(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.ImageCacheStatsTracker) -> a
com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory$1 -> com.facebook.imagepipeline.a.d:
    com.facebook.imagepipeline.cache.ImageCacheStatsTracker val$imageCacheStatsTracker -> a
    void onCacheHit() -> a
    void onCacheMiss() -> b
    void onCachePut() -> c
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey -> com.facebook.imagepipeline.a.e:
    java.lang.String mSourceString -> a
    com.facebook.imagepipeline.common.ResizeOptions mResizeOptions -> b
    boolean mAutoRotated -> c
    com.facebook.imagepipeline.common.ImageDecodeOptions mImageDecodeOptions -> d
    int mHash -> e
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy -> com.facebook.imagepipeline.a.f:
com.facebook.imagepipeline.cache.BufferedDiskCache -> com.facebook.imagepipeline.a.g:
    java.lang.Class TAG -> a
    com.facebook.cache.disk.FileCache mFileCache -> b
    com.facebook.imagepipeline.memory.PooledByteBufferFactory mPooledByteBufferFactory -> c
    com.facebook.imagepipeline.memory.PooledByteStreams mPooledByteStreams -> d
    java.util.concurrent.Executor mReadExecutor -> e
    java.util.concurrent.Executor mWriteExecutor -> f
    com.facebook.imagepipeline.cache.StagingArea mStagingArea -> g
    com.facebook.imagepipeline.cache.ImageCacheStatsTracker mImageCacheStatsTracker -> h
    bolts.Task get(com.facebook.cache.common.CacheKey,java.util.concurrent.atomic.AtomicBoolean) -> a
    void put(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> a
    com.facebook.imagepipeline.memory.PooledByteBuffer readFromDiskCache(com.facebook.cache.common.CacheKey) -> a
    void writeToDiskCache(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> b
    com.facebook.imagepipeline.cache.StagingArea access$000(com.facebook.imagepipeline.cache.BufferedDiskCache) -> a
    java.lang.Class access$100() -> a
    com.facebook.imagepipeline.cache.ImageCacheStatsTracker access$200(com.facebook.imagepipeline.cache.BufferedDiskCache) -> b
    com.facebook.imagepipeline.memory.PooledByteBuffer access$300(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey) -> a
    void access$400(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> a
    com.facebook.imagepipeline.memory.PooledByteStreams access$500(com.facebook.imagepipeline.cache.BufferedDiskCache) -> c
com.facebook.imagepipeline.cache.BufferedDiskCache$1 -> com.facebook.imagepipeline.a.h:
    java.util.concurrent.atomic.AtomicBoolean val$isCancelled -> a
    com.facebook.cache.common.CacheKey val$key -> b
    com.facebook.imagepipeline.cache.BufferedDiskCache this$0 -> c
    com.facebook.imagepipeline.image.EncodedImage call() -> a
    java.lang.Object call() -> call
com.facebook.imagepipeline.cache.BufferedDiskCache$2 -> com.facebook.imagepipeline.a.i:
    com.facebook.cache.common.CacheKey val$key -> a
    com.facebook.imagepipeline.image.EncodedImage val$finalEncodedImage -> b
    com.facebook.imagepipeline.cache.BufferedDiskCache this$0 -> c
    void run() -> run
com.facebook.imagepipeline.cache.BufferedDiskCache$3 -> com.facebook.imagepipeline.a.j:
    com.facebook.imagepipeline.image.EncodedImage val$encodedImage -> a
    com.facebook.imagepipeline.cache.BufferedDiskCache this$0 -> b
    void write(java.io.OutputStream) -> a
com.facebook.imagepipeline.cache.CacheKeyFactory -> com.facebook.imagepipeline.a.k:
    com.facebook.cache.common.CacheKey getBitmapCacheKey(com.facebook.imagepipeline.request.ImageRequest) -> a
    com.facebook.cache.common.CacheKey getEncodedCacheKey(com.facebook.imagepipeline.request.ImageRequest) -> b
com.facebook.imagepipeline.cache.CountingLruMap -> com.facebook.imagepipeline.a.l:
    com.facebook.imagepipeline.cache.ValueDescriptor mValueDescriptor -> a
    java.util.LinkedHashMap mMap -> b
    int mSizeInBytes -> c
    int getCount() -> a
    int getSizeInBytes() -> b
    java.lang.Object getFirstKey() -> c
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object remove(java.lang.Object) -> b
    int getValueSizeInBytes(java.lang.Object) -> c
com.facebook.imagepipeline.cache.CountingMemoryCache -> com.facebook.imagepipeline.a.m:
    long PARAMS_INTERCHECK_INTERVAL_MS -> a
    com.facebook.imagepipeline.cache.CountingLruMap mExclusiveEntries -> b
    com.facebook.imagepipeline.cache.CountingLruMap mCachedEntries -> c
    com.facebook.imagepipeline.cache.ValueDescriptor mValueDescriptor -> e
    com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy mCacheTrimStrategy -> f
    com.facebook.common.internal.Supplier mMemoryCacheParamsSupplier -> g
    com.facebook.imagepipeline.cache.MemoryCacheParams mMemoryCacheParams -> d
    long mLastCacheParamsCheck -> h
    com.facebook.imagepipeline.cache.ValueDescriptor wrapValueDescriptor(com.facebook.imagepipeline.cache.ValueDescriptor) -> a
    com.facebook.common.references.CloseableReference cache(java.lang.Object,com.facebook.common.references.CloseableReference) -> a
    boolean canCacheNewValue(java.lang.Object) -> b
    com.facebook.common.references.CloseableReference get(java.lang.Object) -> a
    com.facebook.common.references.CloseableReference newClientReference(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> a
    void releaseClientReference(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> b
    void maybeAddToExclusives(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> c
    void maybeUpdateCacheParams() -> c
    void maybeEvictEntries() -> d
    java.util.ArrayList trimExclusivelyOwnedEntries(int,int) -> a
    void maybeClose(java.util.ArrayList) -> a
    void makeOrphans(java.util.ArrayList) -> b
    void makeOrphan(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> d
    void increaseClientCount(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> e
    void decreaseClientCount(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> f
    com.facebook.common.references.CloseableReference referenceToClose(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> g
    int getInUseCount() -> a
    int getInUseSizeInBytes() -> b
    void access$000(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> a
com.facebook.imagepipeline.cache.CountingMemoryCache$1 -> com.facebook.imagepipeline.a.n:
    com.facebook.imagepipeline.cache.ValueDescriptor val$evictableValueDescriptor -> a
    com.facebook.imagepipeline.cache.CountingMemoryCache this$0 -> b
    int getSizeInBytes(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> a
    int getSizeInBytes(java.lang.Object) -> a
com.facebook.imagepipeline.cache.CountingMemoryCache$2 -> com.facebook.imagepipeline.a.o:
    com.facebook.imagepipeline.cache.CountingMemoryCache$Entry val$entry -> a
    com.facebook.imagepipeline.cache.CountingMemoryCache this$0 -> b
    void release(java.lang.Object) -> a
com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy -> com.facebook.imagepipeline.a.p:
com.facebook.imagepipeline.cache.CountingMemoryCache$Entry -> com.facebook.imagepipeline.a.q:
    java.lang.Object key -> a
    com.facebook.common.references.CloseableReference valueRef -> b
    int clientCount -> c
    boolean isOrphan -> d
    com.facebook.imagepipeline.cache.CountingMemoryCache$Entry of(java.lang.Object,com.facebook.common.references.CloseableReference) -> a
com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier -> com.facebook.imagepipeline.a.r:
    android.app.ActivityManager mActivityManager -> a
    com.facebook.imagepipeline.cache.MemoryCacheParams get() -> b
    int getMaxCacheSize() -> c
    java.lang.Object get() -> a
com.facebook.imagepipeline.cache.DefaultCacheKeyFactory -> com.facebook.imagepipeline.a.s:
    com.facebook.imagepipeline.cache.DefaultCacheKeyFactory sInstance -> a
    com.facebook.imagepipeline.cache.DefaultCacheKeyFactory getInstance() -> a
    com.facebook.cache.common.CacheKey getBitmapCacheKey(com.facebook.imagepipeline.request.ImageRequest) -> a
    com.facebook.cache.common.CacheKey getEncodedCacheKey(com.facebook.imagepipeline.request.ImageRequest) -> b
    android.net.Uri getCacheKeySourceUri(android.net.Uri) -> a
com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier -> com.facebook.imagepipeline.a.t:
    com.facebook.imagepipeline.cache.MemoryCacheParams get() -> b
    int getMaxCacheSize() -> c
    java.lang.Object get() -> a
com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory -> com.facebook.imagepipeline.a.u:
    com.facebook.imagepipeline.cache.CountingMemoryCache get(com.facebook.common.internal.Supplier,com.facebook.common.memory.MemoryTrimmableRegistry) -> a
com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory$1 -> com.facebook.imagepipeline.a.v:
    int getSizeInBytes(com.facebook.imagepipeline.memory.PooledByteBuffer) -> a
    int getSizeInBytes(java.lang.Object) -> a
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory -> com.facebook.imagepipeline.a.w:
    com.facebook.imagepipeline.cache.MemoryCache get(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.ImageCacheStatsTracker) -> a
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1 -> com.facebook.imagepipeline.a.x:
    com.facebook.imagepipeline.cache.ImageCacheStatsTracker val$imageCacheStatsTracker -> a
    void onCacheHit() -> a
    void onCacheMiss() -> b
    void onCachePut() -> c
com.facebook.imagepipeline.cache.ImageCacheStatsTracker -> com.facebook.imagepipeline.a.y:
    void onBitmapCachePut() -> a
    void onBitmapCacheHit() -> b
    void onBitmapCacheMiss() -> c
    void onMemoryCachePut() -> d
    void onMemoryCacheHit() -> e
    void onMemoryCacheMiss() -> f
    void onStagingAreaHit() -> g
    void onStagingAreaMiss() -> h
    void onDiskCacheHit() -> i
    void onDiskCacheMiss() -> j
    void onDiskCacheGetFail() -> k
    void registerBitmapMemoryCache(com.facebook.imagepipeline.cache.CountingMemoryCache) -> a
    void registerEncodedMemoryCache(com.facebook.imagepipeline.cache.CountingMemoryCache) -> b
com.facebook.imagepipeline.cache.InstrumentedMemoryCache -> com.facebook.imagepipeline.a.z:
    com.facebook.imagepipeline.cache.MemoryCache mDelegate -> a
    com.facebook.imagepipeline.cache.MemoryCacheTracker mTracker -> b
    com.facebook.common.references.CloseableReference get(java.lang.Object) -> a
    com.facebook.common.references.CloseableReference cache(java.lang.Object,com.facebook.common.references.CloseableReference) -> a
com.facebook.imagepipeline.cache.MemoryCache -> com.facebook.imagepipeline.a.aa:
    com.facebook.common.references.CloseableReference cache(java.lang.Object,com.facebook.common.references.CloseableReference) -> a
    com.facebook.common.references.CloseableReference get(java.lang.Object) -> a
com.facebook.imagepipeline.cache.MemoryCacheParams -> com.facebook.imagepipeline.a.ab:
    int maxCacheSize -> a
    int maxCacheEntries -> b
    int maxEvictionQueueSize -> c
    int maxEvictionQueueEntries -> d
    int maxCacheEntrySize -> e
com.facebook.imagepipeline.cache.MemoryCacheTracker -> com.facebook.imagepipeline.a.ac:
    void onCacheHit() -> a
    void onCacheMiss() -> b
    void onCachePut() -> c
com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy -> com.facebook.imagepipeline.a.ad:
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker -> com.facebook.imagepipeline.a.ae:
    com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker sInstance -> a
    com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker getInstance() -> l
    void onBitmapCachePut() -> a
    void onBitmapCacheHit() -> b
    void onBitmapCacheMiss() -> c
    void onMemoryCachePut() -> d
    void onMemoryCacheHit() -> e
    void onMemoryCacheMiss() -> f
    void onStagingAreaHit() -> g
    void onStagingAreaMiss() -> h
    void onDiskCacheHit() -> i
    void onDiskCacheMiss() -> j
    void onDiskCacheGetFail() -> k
    void registerBitmapMemoryCache(com.facebook.imagepipeline.cache.CountingMemoryCache) -> a
    void registerEncodedMemoryCache(com.facebook.imagepipeline.cache.CountingMemoryCache) -> b
com.facebook.imagepipeline.cache.StagingArea -> com.facebook.imagepipeline.a.af:
    java.lang.Class TAG -> a
    java.util.Map mMap -> b
    com.facebook.imagepipeline.cache.StagingArea getInstance() -> a
    void put(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> a
    boolean remove(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> b
    com.facebook.imagepipeline.image.EncodedImage get(com.facebook.cache.common.CacheKey) -> a
    void logStats() -> b
com.facebook.imagepipeline.cache.ValueDescriptor -> com.facebook.imagepipeline.a.ag:
    int getSizeInBytes(java.lang.Object) -> a
com.facebook.imagepipeline.common.ImageDecodeOptions -> com.facebook.imagepipeline.common.a:
    com.facebook.imagepipeline.common.ImageDecodeOptions DEFAULTS -> g
    int minDecodeIntervalMs -> a
    int backgroundColor -> b
    boolean forceOldAnimationCode -> c
    boolean decodePreviewFrame -> d
    boolean useLastFrameForPreview -> e
    boolean decodeAllFrames -> f
    com.facebook.imagepipeline.common.ImageDecodeOptions defaults() -> a
    com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder newBuilder() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder -> com.facebook.imagepipeline.common.b:
    int mMinDecodeIntervalMs -> a
    int mBackgroundColor -> b
    boolean mForceOldAnimationCode -> c
    boolean mDecodePreviewFrame -> d
    boolean mUseLastFrameForPreview -> e
    boolean mDecodeAllFrames -> f
    int getMinDecodeIntervalMs() -> a
    int getBackgroundColor() -> b
    boolean getForceOldAnimationCode() -> c
    boolean getDecodePreviewFrame() -> d
    boolean getUseLastFrameForPreview() -> e
    boolean getDecodeAllFrames() -> f
    com.facebook.imagepipeline.common.ImageDecodeOptions build() -> g
com.facebook.imagepipeline.common.Priority -> com.facebook.imagepipeline.common.Priority:
    com.facebook.imagepipeline.common.Priority LOW -> LOW
    com.facebook.imagepipeline.common.Priority MEDIUM -> MEDIUM
    com.facebook.imagepipeline.common.Priority HIGH -> HIGH
    com.facebook.imagepipeline.common.Priority[] $VALUES -> a
    com.facebook.imagepipeline.common.Priority[] values() -> values
    com.facebook.imagepipeline.common.Priority valueOf(java.lang.String) -> valueOf
    com.facebook.imagepipeline.common.Priority getHigherPriority(com.facebook.imagepipeline.common.Priority,com.facebook.imagepipeline.common.Priority) -> getHigherPriority
com.facebook.imagepipeline.common.ResizeOptions -> com.facebook.imagepipeline.common.c:
    int width -> a
    int height -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.facebook.imagepipeline.core.DefaultExecutorSupplier -> com.facebook.imagepipeline.b.a:
    int NUM_CPU_BOUND_THREADS -> a
    java.util.concurrent.Executor mIoBoundExecutor -> b
    java.util.concurrent.Executor mCpuBoundExecutor -> c
    java.util.concurrent.Executor mDecodeExecutor -> d
    java.util.concurrent.Executor forLocalStorageRead() -> a
    java.util.concurrent.Executor forLocalStorageWrite() -> b
    java.util.concurrent.Executor forDecode() -> c
    java.util.concurrent.Executor forBackgroundTasks() -> d
    java.util.concurrent.Executor forLightweightBackgroundTasks() -> e
com.facebook.imagepipeline.core.ExecutorSupplier -> com.facebook.imagepipeline.b.b:
    java.util.concurrent.Executor forLocalStorageRead() -> a
    java.util.concurrent.Executor forLocalStorageWrite() -> b
    java.util.concurrent.Executor forDecode() -> c
    java.util.concurrent.Executor forBackgroundTasks() -> d
    java.util.concurrent.Executor forLightweightBackgroundTasks() -> e
com.facebook.imagepipeline.core.ImagePipeline -> com.facebook.imagepipeline.b.c:
    java.util.concurrent.CancellationException PREFETCH_EXCEPTION -> a
    com.facebook.imagepipeline.core.ProducerSequenceFactory mProducerSequenceFactory -> b
    com.facebook.imagepipeline.listener.RequestListener mRequestListener -> c
    com.facebook.common.internal.Supplier mIsPrefetchEnabledSupplier -> d
    com.facebook.imagepipeline.cache.MemoryCache mBitmapMemoryCache -> e
    com.facebook.imagepipeline.cache.MemoryCache mEncodedMemoryCache -> f
    com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory -> g
    java.util.concurrent.atomic.AtomicLong mIdCounter -> h
    java.lang.String generateUniqueFutureId() -> a
    com.facebook.datasource.DataSource fetchImageFromBitmapCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> a
    com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> b
    com.facebook.datasource.DataSource submitFetchRequest(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,java.lang.Object) -> a
com.facebook.imagepipeline.core.ImagePipelineConfig -> com.facebook.imagepipeline.b.d:
    com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil mAnimatedDrawableUtil -> a
    com.facebook.imagepipeline.animated.factory.AnimatedImageFactory mAnimatedImageFactory -> b
    com.facebook.common.internal.Supplier mBitmapMemoryCacheParamsSupplier -> c
    com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory -> d
    android.content.Context mContext -> e
    boolean mDownsampleEnabled -> f
    com.facebook.common.internal.Supplier mEncodedMemoryCacheParamsSupplier -> g
    com.facebook.imagepipeline.core.ExecutorSupplier mExecutorSupplier -> h
    com.facebook.imagepipeline.cache.ImageCacheStatsTracker mImageCacheStatsTracker -> i
    com.facebook.imagepipeline.decoder.ImageDecoder mImageDecoder -> j
    com.facebook.common.internal.Supplier mIsPrefetchEnabledSupplier -> k
    com.facebook.cache.disk.DiskCacheConfig mMainDiskCacheConfig -> l
    com.facebook.common.memory.MemoryTrimmableRegistry mMemoryTrimmableRegistry -> m
    com.facebook.imagepipeline.producers.NetworkFetcher mNetworkFetcher -> n
    com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory mPlatformBitmapFactory -> o
    com.facebook.imagepipeline.memory.PoolFactory mPoolFactory -> p
    com.facebook.imagepipeline.decoder.ProgressiveJpegConfig mProgressiveJpegConfig -> q
    java.util.Set mRequestListeners -> r
    boolean mResizeAndRotateEnabledForNetwork -> s
    com.facebook.cache.disk.DiskCacheConfig mSmallImageDiskCacheConfig -> t
    com.facebook.cache.disk.DiskCacheConfig getDefaultMainDiskCacheConfig(android.content.Context) -> b
    com.facebook.common.internal.Supplier getBitmapMemoryCacheParamsSupplier() -> a
    com.facebook.imagepipeline.cache.CacheKeyFactory getCacheKeyFactory() -> b
    android.content.Context getContext() -> c
    com.facebook.common.internal.Supplier getEncodedMemoryCacheParamsSupplier() -> d
    com.facebook.imagepipeline.core.ExecutorSupplier getExecutorSupplier() -> e
    com.facebook.imagepipeline.cache.ImageCacheStatsTracker getImageCacheStatsTracker() -> f
    com.facebook.imagepipeline.decoder.ImageDecoder getImageDecoder() -> g
    com.facebook.common.internal.Supplier getIsPrefetchEnabledSupplier() -> h
    com.facebook.cache.disk.DiskCacheConfig getMainDiskCacheConfig() -> i
    com.facebook.common.memory.MemoryTrimmableRegistry getMemoryTrimmableRegistry() -> j
    com.facebook.imagepipeline.producers.NetworkFetcher getNetworkFetcher() -> k
    boolean isDownsampleEnabled() -> l
    com.facebook.imagepipeline.memory.PoolFactory getPoolFactory() -> m
    com.facebook.imagepipeline.decoder.ProgressiveJpegConfig getProgressiveJpegConfig() -> n
    java.util.Set getRequestListeners() -> o
    boolean isResizeAndRotateEnabledForNetwork() -> p
    com.facebook.cache.disk.DiskCacheConfig getSmallImageDiskCacheConfig() -> q
    com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory getPlatformBitmapFactory() -> r
    com.facebook.imagepipeline.core.ImagePipelineConfig$Builder newBuilder(android.content.Context) -> a
    com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil access$1500(com.facebook.imagepipeline.core.ImagePipelineConfig) -> a
com.facebook.imagepipeline.core.ImagePipelineConfig$1 -> com.facebook.imagepipeline.b.e:
    com.facebook.imagepipeline.core.ImagePipelineConfig this$0 -> a
    java.lang.Boolean get() -> b
    java.lang.Object get() -> a
com.facebook.imagepipeline.core.ImagePipelineConfig$2 -> com.facebook.imagepipeline.b.f:
    com.facebook.imagepipeline.core.ImagePipelineConfig this$0 -> a
    com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend get(com.facebook.imagepipeline.animated.base.AnimatedImageResult,android.graphics.Rect) -> a
com.facebook.imagepipeline.core.ImagePipelineConfig$3 -> com.facebook.imagepipeline.b.g:
    android.content.Context val$context -> a
    java.io.File get() -> b
    java.lang.Object get() -> a
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder -> com.facebook.imagepipeline.b.h:
    com.facebook.imagepipeline.animated.factory.AnimatedImageFactory mAnimatedImageFactory -> a
    com.facebook.common.internal.Supplier mBitmapMemoryCacheParamsSupplier -> b
    com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory -> c
    android.content.Context mContext -> d
    boolean mDownsampleEnabled -> e
    com.facebook.common.internal.Supplier mEncodedMemoryCacheParamsSupplier -> f
    com.facebook.imagepipeline.core.ExecutorSupplier mExecutorSupplier -> g
    com.facebook.imagepipeline.cache.ImageCacheStatsTracker mImageCacheStatsTracker -> h
    com.facebook.imagepipeline.decoder.ImageDecoder mImageDecoder -> i
    com.facebook.common.internal.Supplier mIsPrefetchEnabledSupplier -> j
    com.facebook.cache.disk.DiskCacheConfig mMainDiskCacheConfig -> k
    com.facebook.common.memory.MemoryTrimmableRegistry mMemoryTrimmableRegistry -> l
    com.facebook.imagepipeline.producers.NetworkFetcher mNetworkFetcher -> m
    com.facebook.imagepipeline.memory.PoolFactory mPoolFactory -> n
    com.facebook.imagepipeline.decoder.ProgressiveJpegConfig mProgressiveJpegConfig -> o
    java.util.Set mRequestListeners -> p
    boolean mResizeAndRotateEnabledForNetwork -> q
    com.facebook.cache.disk.DiskCacheConfig mSmallImageDiskCacheConfig -> r
    com.facebook.imagepipeline.core.ImagePipelineConfig build() -> a
    com.facebook.common.internal.Supplier access$000(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> a
    android.content.Context access$100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> b
    com.facebook.imagepipeline.cache.CacheKeyFactory access$200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> c
    boolean access$300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> d
    com.facebook.common.internal.Supplier access$400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> e
    com.facebook.imagepipeline.core.ExecutorSupplier access$500(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> f
    com.facebook.imagepipeline.cache.ImageCacheStatsTracker access$600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> g
    com.facebook.common.internal.Supplier access$700(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> h
    com.facebook.cache.disk.DiskCacheConfig access$800(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> i
    com.facebook.common.memory.MemoryTrimmableRegistry access$900(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> j
    com.facebook.imagepipeline.memory.PoolFactory access$1000(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> k
    com.facebook.imagepipeline.decoder.ProgressiveJpegConfig access$1100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> l
    java.util.Set access$1200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> m
    boolean access$1300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> n
    com.facebook.cache.disk.DiskCacheConfig access$1400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> o
    com.facebook.imagepipeline.animated.factory.AnimatedImageFactory access$1600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> p
    com.facebook.imagepipeline.decoder.ImageDecoder access$1700(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> q
    com.facebook.imagepipeline.producers.NetworkFetcher access$1800(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> r
com.facebook.imagepipeline.core.ImagePipelineFactory -> com.facebook.imagepipeline.b.i:
    com.facebook.imagepipeline.core.ImagePipelineFactory sInstance -> a
    com.facebook.imagepipeline.core.ImagePipelineConfig mConfig -> b
    com.facebook.imagepipeline.animated.factory.AnimatedDrawableFactory mAnimatedDrawableFactory -> c
    com.facebook.imagepipeline.cache.CountingMemoryCache mBitmapCountingMemoryCache -> d
    com.facebook.imagepipeline.cache.MemoryCache mBitmapMemoryCache -> e
    com.facebook.imagepipeline.cache.CountingMemoryCache mEncodedCountingMemoryCache -> f
    com.facebook.imagepipeline.cache.MemoryCache mEncodedMemoryCache -> g
    com.facebook.imagepipeline.cache.BufferedDiskCache mMainBufferedDiskCache -> h
    com.facebook.cache.disk.DiskStorageCache mMainDiskStorageCache -> i
    com.facebook.imagepipeline.core.ImagePipeline mImagePipeline -> j
    com.facebook.imagepipeline.core.ProducerFactory mProducerFactory -> k
    com.facebook.imagepipeline.core.ProducerSequenceFactory mProducerSequenceFactory -> l
    com.facebook.imagepipeline.cache.BufferedDiskCache mSmallImageBufferedDiskCache -> m
    com.facebook.cache.disk.DiskStorageCache mSmallImageDiskStorageCache -> n
    com.facebook.imagepipeline.core.ImagePipelineFactory getInstance() -> a
    void initialize(android.content.Context) -> a
    void initialize(com.facebook.imagepipeline.core.ImagePipelineConfig) -> a
    com.facebook.imagepipeline.cache.CountingMemoryCache getBitmapCountingMemoryCache() -> b
    com.facebook.imagepipeline.cache.MemoryCache getBitmapMemoryCache() -> c
    com.facebook.imagepipeline.cache.CountingMemoryCache getEncodedCountingMemoryCache() -> d
    com.facebook.imagepipeline.cache.MemoryCache getEncodedMemoryCache() -> e
    com.facebook.imagepipeline.cache.BufferedDiskCache getMainBufferedDiskCache() -> j
    com.facebook.cache.disk.DiskStorageCache getMainDiskStorageCache() -> f
    com.facebook.imagepipeline.core.ImagePipeline getImagePipeline() -> g
    com.facebook.imagepipeline.core.ProducerFactory getProducerFactory() -> k
    com.facebook.imagepipeline.core.ProducerSequenceFactory getProducerSequenceFactory() -> l
    com.facebook.cache.disk.DiskStorageCache getSmallImageDiskStorageCache() -> h
    com.facebook.imagepipeline.cache.BufferedDiskCache getSmallImageBufferedDiskCache() -> m
    com.facebook.imagepipeline.animated.factory.AnimatedDrawableFactory getAnimatedDrawableFactory() -> i
com.facebook.imagepipeline.core.ImagePipelineFactory$1 -> com.facebook.imagepipeline.b.j:
    com.facebook.common.executors.SerialExecutorService val$serialExecutorService -> a
    android.app.ActivityManager val$activityManager -> b
    com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil val$animatedDrawableUtil -> c
    com.facebook.common.time.MonotonicClock val$monotonicClock -> d
    com.facebook.imagepipeline.core.ImagePipelineFactory this$0 -> e
    com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl get(com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend,com.facebook.imagepipeline.animated.base.AnimatedDrawableOptions) -> a
com.facebook.imagepipeline.core.ImagePipelineFactory$2 -> com.facebook.imagepipeline.b.k:
    com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil val$animatedDrawableUtil -> a
    com.facebook.imagepipeline.core.ImagePipelineFactory this$0 -> b
    com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend get(com.facebook.imagepipeline.animated.base.AnimatedImageResult,android.graphics.Rect) -> a
com.facebook.imagepipeline.core.ProducerFactory -> com.facebook.imagepipeline.b.l:
    android.content.ContentResolver mContentResolver -> a
    android.content.res.Resources mResources -> b
    android.content.res.AssetManager mAssetManager -> c
    com.facebook.imagepipeline.memory.ByteArrayPool mByteArrayPool -> d
    com.facebook.imagepipeline.decoder.ImageDecoder mImageDecoder -> e
    com.facebook.imagepipeline.decoder.ProgressiveJpegConfig mProgressiveJpegConfig -> f
    boolean mDownsampleEnabled -> g
    com.facebook.imagepipeline.core.ExecutorSupplier mExecutorSupplier -> h
    com.facebook.imagepipeline.memory.PooledByteBufferFactory mPooledByteBufferFactory -> i
    com.facebook.imagepipeline.cache.BufferedDiskCache mDefaultBufferedDiskCache -> j
    com.facebook.imagepipeline.cache.BufferedDiskCache mSmallImageBufferedDiskCache -> k
    com.facebook.imagepipeline.cache.MemoryCache mEncodedMemoryCache -> l
    com.facebook.imagepipeline.cache.MemoryCache mBitmapMemoryCache -> m
    com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory -> n
    com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory mPlatformBitmapFactory -> o
    com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer newAddImageTransformMetaDataProducer(com.facebook.imagepipeline.producers.Producer) -> a
    com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer newBitmapMemoryCacheGetProducer(com.facebook.imagepipeline.producers.Producer) -> b
    com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer newBitmapMemoryCacheKeyMultiplexProducer(com.facebook.imagepipeline.producers.Producer) -> c
    com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer newBitmapMemoryCacheProducer(com.facebook.imagepipeline.producers.Producer) -> d
    com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer newBranchOnSeparateImagesProducer(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.Producer) -> a
    com.facebook.imagepipeline.producers.DataFetchProducer newDataFetchProducer() -> a
    com.facebook.imagepipeline.producers.DecodeProducer newDecodeProducer(com.facebook.imagepipeline.producers.Producer) -> e
    com.facebook.imagepipeline.producers.DiskCacheProducer newDiskCacheProducer(com.facebook.imagepipeline.producers.Producer) -> f
    com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer newEncodedCacheKeyMultiplexProducer(com.facebook.imagepipeline.producers.Producer) -> g
    com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer newEncodedMemoryCacheProducer(com.facebook.imagepipeline.producers.Producer) -> h
    com.facebook.imagepipeline.producers.LocalAssetFetchProducer newLocalAssetFetchProducer() -> b
    com.facebook.imagepipeline.producers.LocalContentUriFetchProducer newContentUriFetchProducer() -> c
    com.facebook.imagepipeline.producers.LocalExifThumbnailProducer newLocalExifThumbnailProducer() -> d
    com.facebook.imagepipeline.producers.LocalFileFetchProducer newLocalFileFetchProducer() -> e
    com.facebook.imagepipeline.producers.LocalResourceFetchProducer newLocalResourceFetchProducer() -> f
    com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer newLocalVideoThumbnailProducer() -> g
    com.facebook.imagepipeline.producers.NetworkFetchProducer newNetworkFetchProducer(com.facebook.imagepipeline.producers.NetworkFetcher) -> a
    com.facebook.imagepipeline.producers.PostprocessorProducer newPostprocessorProducer(com.facebook.imagepipeline.producers.Producer) -> i
    com.facebook.imagepipeline.producers.ResizeAndRotateProducer newResizeAndRotateProducer(com.facebook.imagepipeline.producers.Producer) -> j
    com.facebook.imagepipeline.producers.ThreadHandoffProducer newBackgroundThreadHandoffProducer(com.facebook.imagepipeline.producers.Producer) -> k
    com.facebook.imagepipeline.producers.ThrottlingProducer newThrottlingProducer(int,com.facebook.imagepipeline.producers.Producer) -> a
    com.facebook.imagepipeline.producers.WebpTranscodeProducer newWebpTranscodeProducer(com.facebook.imagepipeline.producers.Producer) -> l
com.facebook.imagepipeline.core.ProducerSequenceFactory -> com.facebook.imagepipeline.b.m:
    com.facebook.imagepipeline.core.ProducerFactory mProducerFactory -> j
    com.facebook.imagepipeline.producers.NetworkFetcher mNetworkFetcher -> k
    boolean mResizeAndRotateEnabledForNetwork -> l
    com.facebook.imagepipeline.producers.Producer mNetworkFetchSequence -> a
    com.facebook.imagepipeline.producers.Producer mCommonNetworkFetchToEncodedMemorySequence -> m
    com.facebook.imagepipeline.producers.Producer mLocalImageFileFetchSequence -> b
    com.facebook.imagepipeline.producers.Producer mLocalVideoFileFetchSequence -> c
    com.facebook.imagepipeline.producers.Producer mLocalContentUriFetchSequence -> d
    com.facebook.imagepipeline.producers.Producer mLocalResourceFetchSequence -> e
    com.facebook.imagepipeline.producers.Producer mLocalAssetFetchSequence -> f
    com.facebook.imagepipeline.producers.Producer mDataFetchSequence -> g
    java.util.Map mPostprocessorSequences -> h
    java.util.Map mCloseableImagePrefetchSequences -> i
    com.facebook.imagepipeline.producers.Producer getDecodedImageProducerSequence(com.facebook.imagepipeline.request.ImageRequest) -> a
    com.facebook.imagepipeline.producers.Producer getBasicDecodedImageSequence(com.facebook.imagepipeline.request.ImageRequest) -> b
    com.facebook.imagepipeline.producers.Producer getNetworkFetchSequence() -> a
    com.facebook.imagepipeline.producers.Producer getCommonNetworkFetchToEncodedMemorySequence() -> b
    com.facebook.imagepipeline.producers.Producer getLocalImageFileFetchSequence() -> c
    com.facebook.imagepipeline.producers.Producer getLocalVideoFileFetchSequence() -> d
    com.facebook.imagepipeline.producers.Producer getLocalContentUriFetchSequence() -> e
    com.facebook.imagepipeline.producers.Producer getLocalResourceFetchSequence() -> f
    com.facebook.imagepipeline.producers.Producer getLocalAssetFetchSequence() -> g
    com.facebook.imagepipeline.producers.Producer getDataFetchSequence() -> h
    com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToLocalTransformSequence(com.facebook.imagepipeline.producers.Producer) -> a
    com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToDecodeSequence(com.facebook.imagepipeline.producers.Producer) -> b
    com.facebook.imagepipeline.producers.Producer newEncodedCacheMultiplexToTranscodeSequence(com.facebook.imagepipeline.producers.Producer) -> c
    com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToBitmapCacheSequence(com.facebook.imagepipeline.producers.Producer) -> d
    com.facebook.imagepipeline.producers.Producer newLocalTransformationsSequence(com.facebook.imagepipeline.producers.Producer) -> e
    com.facebook.imagepipeline.producers.Producer getPostprocessorSequence(com.facebook.imagepipeline.producers.Producer) -> f
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter -> com.facebook.imagepipeline.c.a:
    com.facebook.imagepipeline.producers.SettableProducerContext mSettableProducerContext -> a
    com.facebook.imagepipeline.listener.RequestListener mRequestListener -> b
    com.facebook.imagepipeline.producers.Consumer createConsumer() -> j
    void onNewResultImpl(java.lang.Object,boolean) -> b
    void onFailureImpl(java.lang.Throwable) -> b
    void onCancellationImpl() -> k
    boolean close() -> h
    void access$000(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter,java.lang.Throwable) -> a
    void access$100(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter) -> a
    boolean access$200(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter,float) -> a
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter$1 -> com.facebook.imagepipeline.c.b:
    com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter this$0 -> a
    void onNewResultImpl(java.lang.Object,boolean) -> a
    void onFailureImpl(java.lang.Throwable) -> a
    void onCancellationImpl() -> a
    void onProgressUpdateImpl(float) -> a
com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter -> com.facebook.imagepipeline.c.c:
    com.facebook.datasource.DataSource create(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener) -> a
    com.facebook.common.references.CloseableReference getResult() -> j
    void closeResult(com.facebook.common.references.CloseableReference) -> a
    void onNewResultImpl(com.facebook.common.references.CloseableReference,boolean) -> a
    void onNewResultImpl(java.lang.Object,boolean) -> b
    void closeResult(java.lang.Object) -> a
    java.lang.Object getResult() -> d
com.facebook.imagepipeline.decoder.ImageDecoder -> com.facebook.imagepipeline.d.a:
    com.facebook.imagepipeline.animated.factory.AnimatedImageFactory mAnimatedImageFactory -> a
    com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory mBitmapFactoryWithPool -> b
    com.facebook.imagepipeline.image.CloseableImage decodeImage(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions) -> a
    com.facebook.imagepipeline.image.CloseableImage decodeGif(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ImageDecodeOptions) -> a
    com.facebook.imagepipeline.image.CloseableStaticBitmap decodeStaticImage(com.facebook.imagepipeline.image.EncodedImage) -> a
    com.facebook.imagepipeline.image.CloseableStaticBitmap decodeJpeg(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo) -> a
    com.facebook.imagepipeline.image.CloseableImage decodeAnimatedWebp(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ImageDecodeOptions) -> b
com.facebook.imagepipeline.decoder.ImageDecoder$1 -> com.facebook.imagepipeline.d.b:
    int[] $SwitchMap$com$facebook$imageformat$ImageFormat -> a
com.facebook.imagepipeline.decoder.ProgressiveJpegConfig -> com.facebook.imagepipeline.d.c:
    int getNextScanNumberToDecode(int) -> a
    com.facebook.imagepipeline.image.QualityInfo getQualityInfo(int) -> b
com.facebook.imagepipeline.decoder.ProgressiveJpegParser -> com.facebook.imagepipeline.d.d:
    int mParserState -> a
    int mLastByteRead -> b
    int mBytesParsed -> c
    int mNextFullScanNumber -> d
    int mBestScanNumber -> e
    int mBestScanEndOffset -> f
    com.facebook.imagepipeline.memory.ByteArrayPool mByteArrayPool -> g
    boolean parseMoreData(com.facebook.imagepipeline.image.EncodedImage) -> a
    boolean doParseMoreData(java.io.InputStream) -> a
    boolean doesMarkerStartSegment(int) -> a
    void newScanOrImageEndFound(int) -> b
    int getBestScanEndOffset() -> a
    int getBestScanNumber() -> b
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig -> com.facebook.imagepipeline.d.e:
    com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DynamicValueConfig mDynamicValueConfig -> a
    int getNextScanNumberToDecode(int) -> a
    com.facebook.imagepipeline.image.QualityInfo getQualityInfo(int) -> b
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$1 -> com.facebook.imagepipeline.d.f:
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DefaultDynamicValueConfig -> com.facebook.imagepipeline.d.g:
    java.util.List getScansToDecode() -> a
    int getGoodEnoughScanNumber() -> b
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DynamicValueConfig -> com.facebook.imagepipeline.d.h:
    java.util.List getScansToDecode() -> a
    int getGoodEnoughScanNumber() -> b
com.facebook.imagepipeline.gif.GifFrame -> com.facebook.imagepipeline.gif.GifFrame:
    long mNativeContext -> mNativeContext
    void finalize() -> finalize
    void dispose() -> a
    void renderFrame(int,int,android.graphics.Bitmap) -> a
    int getWidth() -> b
    int getHeight() -> c
    int getXOffset() -> d
    int getYOffset() -> e
    int getDisposalMode() -> f
    void nativeRenderFrame(int,int,android.graphics.Bitmap) -> nativeRenderFrame
    int nativeGetDurationMs() -> nativeGetDurationMs
    int nativeGetWidth() -> nativeGetWidth
    int nativeGetHeight() -> nativeGetHeight
    int nativeGetXOffset() -> nativeGetXOffset
    int nativeGetYOffset() -> nativeGetYOffset
    int nativeGetDisposalMode() -> nativeGetDisposalMode
    boolean nativeHasTransparency() -> nativeHasTransparency
    void nativeDispose() -> nativeDispose
    void nativeFinalize() -> nativeFinalize
com.facebook.imagepipeline.gif.GifImage -> com.facebook.imagepipeline.gif.GifImage:
    boolean sInitialized -> a
    long mNativeContext -> mNativeContext
    void ensure() -> g
    com.facebook.imagepipeline.gif.GifImage create(long,int) -> a
    void finalize() -> finalize
    int getWidth() -> a
    int getHeight() -> b
    int getFrameCount() -> c
    int[] getFrameDurations() -> d
    com.facebook.imagepipeline.gif.GifFrame getFrame(int) -> c
    boolean doesRenderSupportScaling() -> e
    int getSizeInBytes() -> f
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo getFrameInfo(int) -> b
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod fromGifDisposalMethod(int) -> d
    com.facebook.imagepipeline.gif.GifImage nativeCreateFromDirectByteBuffer(java.nio.ByteBuffer) -> nativeCreateFromDirectByteBuffer
    com.facebook.imagepipeline.gif.GifImage nativeCreateFromNativeMemory(long,int) -> nativeCreateFromNativeMemory
    int nativeGetWidth() -> nativeGetWidth
    int nativeGetHeight() -> nativeGetHeight
    int nativeGetDuration() -> nativeGetDuration
    int nativeGetFrameCount() -> nativeGetFrameCount
    int[] nativeGetFrameDurations() -> nativeGetFrameDurations
    int nativeGetLoopCount() -> nativeGetLoopCount
    com.facebook.imagepipeline.gif.GifFrame nativeGetFrame(int) -> nativeGetFrame
    int nativeGetSizeInBytes() -> nativeGetSizeInBytes
    void nativeDispose() -> nativeDispose
    void nativeFinalize() -> nativeFinalize
    com.facebook.imagepipeline.animated.base.AnimatedImageFrame getFrame(int) -> a
com.facebook.imagepipeline.image.CloseableAnimatedImage -> com.facebook.imagepipeline.e.a:
    com.facebook.imagepipeline.animated.base.AnimatedImageResult mImageResult -> a
    void close() -> close
    boolean isClosed() -> a
    int getSizeInBytes() -> b
    boolean isStateful() -> c
    com.facebook.imagepipeline.animated.base.AnimatedImageResult getImageResult() -> d
com.facebook.imagepipeline.image.CloseableBitmap -> com.facebook.imagepipeline.e.b:
com.facebook.imagepipeline.image.CloseableImage -> com.facebook.imagepipeline.e.c:
    int getSizeInBytes() -> b
    void close() -> close
    boolean isClosed() -> a
    com.facebook.imagepipeline.image.QualityInfo getQualityInfo() -> e
    boolean isStateful() -> c
    void finalize() -> finalize
com.facebook.imagepipeline.image.CloseableStaticBitmap -> com.facebook.imagepipeline.e.d:
    com.facebook.common.references.CloseableReference mBitmapReference -> a
    android.graphics.Bitmap mBitmap -> b
    com.facebook.imagepipeline.image.QualityInfo mQualityInfo -> c
    void close() -> close
    boolean isClosed() -> a
    android.graphics.Bitmap getUnderlyingBitmap() -> d
    int getSizeInBytes() -> b
    com.facebook.imagepipeline.image.QualityInfo getQualityInfo() -> e
com.facebook.imagepipeline.image.EncodedImage -> com.facebook.imagepipeline.e.e:
    com.facebook.common.references.CloseableReference mPooledByteBufferRef -> a
    com.facebook.common.internal.Supplier mInputStreamSupplier -> b
    int mStreamSize -> c
    com.facebook.imageformat.ImageFormat mImageFormat -> d
    int mRotationAngle -> e
    int mWidth -> f
    int mHeight -> g
    int mSampleSize -> h
    com.facebook.imagepipeline.image.EncodedImage cloneOrNull(com.facebook.imagepipeline.image.EncodedImage) -> a
    com.facebook.imagepipeline.image.EncodedImage cloneOrNull() -> a
    void close() -> close
    boolean isValid() -> b
    com.facebook.common.references.CloseableReference getByteBufferRef() -> c
    java.io.InputStream getInputStream() -> d
    void setImageFormat(com.facebook.imageformat.ImageFormat) -> a
    void setHeight(int) -> a
    void setWidth(int) -> b
    void setRotationAngle(int) -> c
    void setSampleSize(int) -> d
    com.facebook.imageformat.ImageFormat getImageFormat() -> e
    int getRotationAngle() -> f
    int getWidth() -> g
    int getHeight() -> h
    int getSampleSize() -> i
    int getSize() -> j
    boolean isMetaDataAvailable(com.facebook.imagepipeline.image.EncodedImage) -> b
    void closeSafely(com.facebook.imagepipeline.image.EncodedImage) -> c
    boolean isValid(com.facebook.imagepipeline.image.EncodedImage) -> d
com.facebook.imagepipeline.image.ImageInfo -> com.facebook.imagepipeline.e.f:
com.facebook.imagepipeline.image.ImmutableQualityInfo -> com.facebook.imagepipeline.e.g:
    com.facebook.imagepipeline.image.QualityInfo FULL_QUALITY -> a
    int mQuality -> b
    boolean mIsOfGoodEnoughQuality -> c
    boolean mIsOfFullQuality -> d
    int getQuality() -> a
    boolean isOfGoodEnoughQuality() -> b
    boolean isOfFullQuality() -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.facebook.imagepipeline.image.QualityInfo of(int,boolean,boolean) -> a
com.facebook.imagepipeline.image.QualityInfo -> com.facebook.imagepipeline.e.h:
    int getQuality() -> a
    boolean isOfGoodEnoughQuality() -> b
    boolean isOfFullQuality() -> c
com.facebook.imagepipeline.listener.ForwardingRequestListener -> com.facebook.imagepipeline.f.a:
    java.util.List mRequestListeners -> a
    void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean) -> a
    void onProducerStart(java.lang.String,java.lang.String) -> a
    void onProducerFinishWithSuccess(java.lang.String,java.lang.String,java.util.Map) -> a
    void onProducerFinishWithFailure(java.lang.String,java.lang.String,java.lang.Throwable,java.util.Map) -> a
    void onProducerFinishWithCancellation(java.lang.String,java.lang.String,java.util.Map) -> b
    void onProducerEvent(java.lang.String,java.lang.String,java.lang.String) -> a
    void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean) -> a
    void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean) -> a
    void onRequestCancellation(java.lang.String) -> a
    boolean requiresExtraMap(java.lang.String) -> b
    void onException(java.lang.String,java.lang.Throwable) -> a
com.facebook.imagepipeline.listener.RequestListener -> com.facebook.imagepipeline.f.b:
    void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean) -> a
    void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean) -> a
    void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean) -> a
    void onRequestCancellation(java.lang.String) -> a
com.facebook.imagepipeline.memory.BasePool -> com.facebook.imagepipeline.memory.BasePool:
    java.lang.Class TAG -> g
    com.facebook.common.memory.MemoryTrimmableRegistry mMemoryTrimmableRegistry -> a
    com.facebook.imagepipeline.memory.PoolParams mPoolParams -> b
    android.util.SparseArray mBuckets -> c
    java.util.Set mInUseValues -> d
    boolean mAllowNewBuckets -> h
    com.facebook.imagepipeline.memory.BasePool$Counter mUsed -> e
    com.facebook.imagepipeline.memory.BasePool$Counter mFree -> f
    com.facebook.imagepipeline.memory.PoolStatsTracker mPoolStatsTracker -> i
    void initialize() -> a
    java.lang.Object get(int) -> a
    void release(java.lang.Object) -> a
    java.lang.Object alloc(int) -> b
    void free(java.lang.Object) -> b
    int getBucketedSize(int) -> c
    int getBucketedSizeForValue(java.lang.Object) -> c
    int getSizeInBytes(int) -> d
    boolean isReusable(java.lang.Object) -> d
    void ensurePoolSizeInvariant() -> d
    void initBuckets(android.util.SparseIntArray) -> a
    void trimToSoftCap() -> b
    void trimToSize(int) -> e
    com.facebook.imagepipeline.memory.Bucket getBucket(int) -> f
    com.facebook.imagepipeline.memory.Bucket newBucket(int) -> g
    boolean isMaxSizeSoftCapExceeded() -> c
    boolean canAllocate(int) -> h
    void logStats() -> e
com.facebook.imagepipeline.memory.BasePool$Counter -> com.facebook.imagepipeline.memory.a:
    int mCount -> a
    int mNumBytes -> b
    void increment(int) -> a
    void decrement(int) -> b
com.facebook.imagepipeline.memory.BasePool$InvalidSizeException -> com.facebook.imagepipeline.memory.BasePool$InvalidSizeException:
com.facebook.imagepipeline.memory.BasePool$PoolSizeViolationException -> com.facebook.imagepipeline.memory.BasePool$PoolSizeViolationException:
com.facebook.imagepipeline.memory.BitmapCounter -> com.facebook.imagepipeline.memory.b:
    int mCount -> a
    long mSize -> b
    int mMaxCount -> c
    int mMaxSize -> d
    boolean increase(android.graphics.Bitmap) -> a
    void decrease(android.graphics.Bitmap) -> b
    int getBitmapSize(android.graphics.Bitmap) -> c
com.facebook.imagepipeline.memory.BitmapCounterProvider -> com.facebook.imagepipeline.memory.c:
    int MAX_BITMAP_TOTAL_SIZE -> a
    int getMaxSizeHardCap() -> b
    com.facebook.imagepipeline.memory.BitmapCounter get() -> a
com.facebook.imagepipeline.memory.BitmapPool -> com.facebook.imagepipeline.memory.d:
    android.graphics.Bitmap alloc(int) -> i
    void free(android.graphics.Bitmap) -> a
    int getBucketedSize(int) -> c
    int getBucketedSizeForValue(android.graphics.Bitmap) -> b
    int getSizeInBytes(int) -> d
    boolean isReusable(android.graphics.Bitmap) -> c
    boolean isReusable(java.lang.Object) -> d
    int getBucketedSizeForValue(java.lang.Object) -> c
    void free(java.lang.Object) -> b
    java.lang.Object alloc(int) -> b
com.facebook.imagepipeline.memory.Bucket -> com.facebook.imagepipeline.memory.e:
    int mItemSize -> a
    int mMaxLength -> b
    java.util.Queue mFreeList -> c
    int mInUseLength -> d
    boolean isMaxLengthExceeded() -> a
    int getFreeListSize() -> b
    java.lang.Object get() -> c
    java.lang.Object pop() -> d
    void incrementInUseCount() -> e
    void release(java.lang.Object) -> a
    void addToFreeList(java.lang.Object) -> b
    void decrementInUseCount() -> f
com.facebook.imagepipeline.memory.ByteArrayPool -> com.facebook.imagepipeline.memory.f:
com.facebook.imagepipeline.memory.DefaultBitmapPoolParams -> com.facebook.imagepipeline.memory.g:
    android.util.SparseIntArray DEFAULT_BUCKETS -> a
    int getMaxSizeHardCap() -> b
    com.facebook.imagepipeline.memory.PoolParams get() -> a
com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams -> com.facebook.imagepipeline.memory.h:
    com.facebook.imagepipeline.memory.PoolParams get() -> a
com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams -> com.facebook.imagepipeline.memory.i:
    com.facebook.imagepipeline.memory.PoolParams get() -> a
    int getMaxSizeSoftCap() -> b
    int getMaxSizeHardCap() -> c
com.facebook.imagepipeline.memory.DefaultSharedByteArrayParams -> com.facebook.imagepipeline.memory.j:
    android.util.SparseIntArray generateBuckets(int,int) -> a
    com.facebook.imagepipeline.memory.PoolParams get() -> a
com.facebook.imagepipeline.memory.GenericByteArrayPool -> com.facebook.imagepipeline.memory.k:
    int[] mBucketSizes -> g
    byte[] alloc(int) -> i
    void free(byte[]) -> a
    int getSizeInBytes(int) -> d
    int getBucketedSize(int) -> c
    int getBucketedSizeForValue(byte[]) -> b
    int getBucketedSizeForValue(java.lang.Object) -> c
    void free(java.lang.Object) -> b
    java.lang.Object alloc(int) -> b
com.facebook.imagepipeline.memory.NativeMemoryChunk -> com.facebook.imagepipeline.memory.NativeMemoryChunk:
    long mNativePtr -> a
    int mSize -> b
    boolean mClosed -> c
    void close() -> close
    boolean isClosed() -> a
    int getSize() -> b
    int write(int,byte[],int,int) -> a
    int read(int,byte[],int,int) -> b
    byte read(int) -> a
    void copy(int,com.facebook.imagepipeline.memory.NativeMemoryChunk,int,int) -> a
    long getNativePtr() -> c
    void doCopy(int,com.facebook.imagepipeline.memory.NativeMemoryChunk,int,int) -> b
    void finalize() -> finalize
    int adjustByteCount(int,int) -> a
    void checkBounds(int,int,int,int) -> a
    long nativeAllocate(int) -> nativeAllocate
    void nativeFree(long) -> nativeFree
    void nativeCopyToByteArray(long,byte[],int,int) -> nativeCopyToByteArray
    void nativeCopyFromByteArray(long,byte[],int,int) -> nativeCopyFromByteArray
    void nativeMemcpy(long,long,int) -> nativeMemcpy
    byte nativeReadByte(long) -> nativeReadByte
com.facebook.imagepipeline.memory.NativeMemoryChunkPool -> com.facebook.imagepipeline.memory.l:
    int[] mBucketSizes -> g
    int getMinBufferSize() -> d
    com.facebook.imagepipeline.memory.NativeMemoryChunk alloc(int) -> i
    void free(com.facebook.imagepipeline.memory.NativeMemoryChunk) -> a
    int getSizeInBytes(int) -> d
    int getBucketedSize(int) -> c
    int getBucketedSizeForValue(com.facebook.imagepipeline.memory.NativeMemoryChunk) -> b
    boolean isReusable(com.facebook.imagepipeline.memory.NativeMemoryChunk) -> c
    boolean isReusable(java.lang.Object) -> d
    int getBucketedSizeForValue(java.lang.Object) -> c
    void free(java.lang.Object) -> b
    java.lang.Object alloc(int) -> b
com.facebook.imagepipeline.memory.NativePooledByteBuffer -> com.facebook.imagepipeline.memory.m:
    int mSize -> b
    com.facebook.common.references.CloseableReference mBufRef -> a
    int size() -> a
    byte read(int) -> a
    void read(int,byte[],int,int) -> a
    long getNativePtr() -> b
    boolean isClosed() -> c
    void close() -> close
    void ensureValid() -> d
com.facebook.imagepipeline.memory.NativePooledByteBufferFactory -> com.facebook.imagepipeline.memory.n:
    com.facebook.imagepipeline.memory.PooledByteStreams mPooledByteStreams -> a
    com.facebook.imagepipeline.memory.NativeMemoryChunkPool mPool -> b
    com.facebook.imagepipeline.memory.NativePooledByteBuffer newByteBuffer(java.io.InputStream) -> a
    com.facebook.imagepipeline.memory.NativePooledByteBuffer newByteBuffer(byte[]) -> a
    com.facebook.imagepipeline.memory.NativePooledByteBuffer newByteBuffer(java.io.InputStream,int) -> a
    com.facebook.imagepipeline.memory.NativePooledByteBuffer newByteBuf(java.io.InputStream,com.facebook.imagepipeline.memory.NativePooledByteBufferOutputStream) -> a
    com.facebook.imagepipeline.memory.NativePooledByteBufferOutputStream newOutputStream() -> a
    com.facebook.imagepipeline.memory.NativePooledByteBufferOutputStream newOutputStream(int) -> a
    com.facebook.imagepipeline.memory.PooledByteBufferOutputStream newOutputStream(int) -> b
    com.facebook.imagepipeline.memory.PooledByteBufferOutputStream newOutputStream() -> b
    com.facebook.imagepipeline.memory.PooledByteBuffer newByteBuffer(java.io.InputStream,int) -> b
    com.facebook.imagepipeline.memory.PooledByteBuffer newByteBuffer(byte[]) -> b
    com.facebook.imagepipeline.memory.PooledByteBuffer newByteBuffer(java.io.InputStream) -> b
com.facebook.imagepipeline.memory.NativePooledByteBufferOutputStream -> com.facebook.imagepipeline.memory.NativePooledByteBufferOutputStream:
    com.facebook.imagepipeline.memory.NativeMemoryChunkPool mPool -> a
    com.facebook.common.references.CloseableReference mBufRef -> b
    int mCount -> c
    com.facebook.imagepipeline.memory.NativePooledByteBuffer toByteBuffer() -> a
    int size() -> b
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void realloc(int) -> a
    void ensureValid() -> d
    com.facebook.imagepipeline.memory.PooledByteBuffer toByteBuffer() -> c
com.facebook.imagepipeline.memory.NativePooledByteBufferOutputStream$InvalidStreamException -> com.facebook.imagepipeline.memory.NativePooledByteBufferOutputStream$InvalidStreamException:
com.facebook.imagepipeline.memory.NoOpPoolStatsTracker -> com.facebook.imagepipeline.memory.o:
    com.facebook.imagepipeline.memory.NoOpPoolStatsTracker sInstance -> a
    com.facebook.imagepipeline.memory.NoOpPoolStatsTracker getInstance() -> a
    void setBasePool(com.facebook.imagepipeline.memory.BasePool) -> a
    void onValueReuse(int) -> a
    void onSoftCapReached() -> b
    void onHardCapReached() -> c
    void onAlloc(int) -> b
    void onFree(int) -> c
    void onValueRelease(int) -> d
com.facebook.imagepipeline.memory.Pool -> com.facebook.imagepipeline.memory.p:
    java.lang.Object get(int) -> a
    void release(java.lang.Object) -> a
com.facebook.imagepipeline.memory.PoolConfig -> com.facebook.imagepipeline.memory.q:
    com.facebook.imagepipeline.memory.PoolParams mBitmapPoolParams -> a
    com.facebook.imagepipeline.memory.PoolStatsTracker mBitmapPoolStatsTracker -> b
    com.facebook.common.memory.MemoryTrimmableRegistry mMemoryTrimmableRegistry -> c
    com.facebook.imagepipeline.memory.PoolParams mNativeMemoryChunkPoolParams -> d
    com.facebook.imagepipeline.memory.PoolStatsTracker mNativeMemoryChunkPoolStatsTracker -> e
    com.facebook.imagepipeline.memory.PoolParams mSharedByteArrayParams -> f
    com.facebook.imagepipeline.memory.PoolParams mSmallByteArrayPoolParams -> g
    com.facebook.imagepipeline.memory.PoolStatsTracker mSmallByteArrayPoolStatsTracker -> h
    com.facebook.imagepipeline.memory.PoolParams getBitmapPoolParams() -> a
    com.facebook.imagepipeline.memory.PoolStatsTracker getBitmapPoolStatsTracker() -> b
    com.facebook.common.memory.MemoryTrimmableRegistry getMemoryTrimmableRegistry() -> c
    com.facebook.imagepipeline.memory.PoolParams getNativeMemoryChunkPoolParams() -> d
    com.facebook.imagepipeline.memory.PoolStatsTracker getNativeMemoryChunkPoolStatsTracker() -> e
    com.facebook.imagepipeline.memory.PoolParams getSharedByteArrayParams() -> f
    com.facebook.imagepipeline.memory.PoolParams getSmallByteArrayPoolParams() -> g
    com.facebook.imagepipeline.memory.PoolStatsTracker getSmallByteArrayPoolStatsTracker() -> h
    com.facebook.imagepipeline.memory.PoolConfig$Builder newBuilder() -> i
com.facebook.imagepipeline.memory.PoolConfig$1 -> com.facebook.imagepipeline.memory.r:
com.facebook.imagepipeline.memory.PoolConfig$Builder -> com.facebook.imagepipeline.memory.s:
    com.facebook.imagepipeline.memory.PoolParams mBitmapPoolParams -> a
    com.facebook.imagepipeline.memory.PoolStatsTracker mBitmapPoolStatsTracker -> b
    com.facebook.imagepipeline.memory.PoolParams mSmallByteArrayPoolParams -> c
    com.facebook.imagepipeline.memory.PoolStatsTracker mSmallByteArrayPoolStatsTracker -> d
    com.facebook.common.memory.MemoryTrimmableRegistry mMemoryTrimmableRegistry -> e
    com.facebook.imagepipeline.memory.PoolParams mNativeMemoryChunkPoolParams -> f
    com.facebook.imagepipeline.memory.PoolStatsTracker mNativeMemoryChunkPoolStatsTracker -> g
    com.facebook.imagepipeline.memory.PoolParams mSharedByteArrayParams -> h
    com.facebook.imagepipeline.memory.PoolConfig build() -> a
    com.facebook.imagepipeline.memory.PoolParams access$000(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> a
    com.facebook.imagepipeline.memory.PoolStatsTracker access$100(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> b
    com.facebook.common.memory.MemoryTrimmableRegistry access$200(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> c
    com.facebook.imagepipeline.memory.PoolParams access$300(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> d
    com.facebook.imagepipeline.memory.PoolStatsTracker access$400(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> e
    com.facebook.imagepipeline.memory.PoolParams access$500(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> f
    com.facebook.imagepipeline.memory.PoolParams access$600(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> g
    com.facebook.imagepipeline.memory.PoolStatsTracker access$700(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> h
com.facebook.imagepipeline.memory.PoolFactory -> com.facebook.imagepipeline.memory.t:
    com.facebook.imagepipeline.memory.PoolConfig mConfig -> a
    com.facebook.imagepipeline.memory.BitmapPool mBitmapPool -> b
    com.facebook.imagepipeline.memory.ByteArrayPool mSmallByteArrayPool -> c
    com.facebook.imagepipeline.memory.NativeMemoryChunkPool mNativeMemoryChunkPool -> d
    com.facebook.imagepipeline.memory.PooledByteBufferFactory mPooledByteBufferFactory -> e
    com.facebook.imagepipeline.memory.PooledByteStreams mPooledByteStreams -> f
    com.facebook.imagepipeline.memory.SharedByteArray mSharedByteArray -> g
    com.facebook.imagepipeline.memory.BitmapPool getBitmapPool() -> a
    com.facebook.imagepipeline.memory.ByteArrayPool getSmallByteArrayPool() -> b
    com.facebook.imagepipeline.memory.NativeMemoryChunkPool getNativeMemoryChunkPool() -> c
    com.facebook.imagepipeline.memory.PooledByteBufferFactory getPooledByteBufferFactory() -> d
    com.facebook.imagepipeline.memory.PooledByteStreams getPooledByteStreams() -> e
    com.facebook.imagepipeline.memory.SharedByteArray getSharedByteArray() -> f
com.facebook.imagepipeline.memory.PoolParams -> com.facebook.imagepipeline.memory.u:
    int maxSizeHardCap -> a
    int maxSizeSoftCap -> b
    android.util.SparseIntArray bucketSizes -> c
    int minBucketSize -> d
    int maxBucketSize -> e
com.facebook.imagepipeline.memory.PoolStatsTracker -> com.facebook.imagepipeline.memory.v:
    void setBasePool(com.facebook.imagepipeline.memory.BasePool) -> a
    void onValueReuse(int) -> a
    void onSoftCapReached() -> b
    void onHardCapReached() -> c
    void onAlloc(int) -> b
    void onFree(int) -> c
    void onValueRelease(int) -> d
com.facebook.imagepipeline.memory.PooledByteArrayBufferedInputStream -> com.facebook.imagepipeline.memory.w:
    java.io.InputStream mInputStream -> a
    byte[] mByteArray -> b
    com.facebook.common.references.ResourceReleaser mResourceReleaser -> c
    int mBufferedSize -> d
    int mBufferOffset -> e
    boolean mClosed -> f
    int read() -> read
    int read(byte[],int,int) -> read
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    boolean ensureDataInBuffer() -> a
    void ensureNotClosed() -> b
    void finalize() -> finalize
com.facebook.imagepipeline.memory.PooledByteBuffer -> com.facebook.imagepipeline.memory.PooledByteBuffer:
    int size() -> a
    byte read(int) -> a
    void read(int,byte[],int,int) -> a
    long getNativePtr() -> b
    boolean isClosed() -> c
com.facebook.imagepipeline.memory.PooledByteBuffer$ClosedException -> com.facebook.imagepipeline.memory.PooledByteBuffer$ClosedException:
com.facebook.imagepipeline.memory.PooledByteBufferFactory -> com.facebook.imagepipeline.memory.x:
    com.facebook.imagepipeline.memory.PooledByteBuffer newByteBuffer(java.io.InputStream) -> b
    com.facebook.imagepipeline.memory.PooledByteBuffer newByteBuffer(byte[]) -> b
    com.facebook.imagepipeline.memory.PooledByteBuffer newByteBuffer(java.io.InputStream,int) -> b
    com.facebook.imagepipeline.memory.PooledByteBufferOutputStream newOutputStream() -> b
    com.facebook.imagepipeline.memory.PooledByteBufferOutputStream newOutputStream(int) -> b
com.facebook.imagepipeline.memory.PooledByteBufferInputStream -> com.facebook.imagepipeline.memory.y:
    com.facebook.imagepipeline.memory.PooledByteBuffer mPooledByteBuffer -> a
    int mOffset -> b
    int mMark -> c
    int available() -> available
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
com.facebook.imagepipeline.memory.PooledByteBufferOutputStream -> com.facebook.imagepipeline.memory.z:
    com.facebook.imagepipeline.memory.PooledByteBuffer toByteBuffer() -> c
    int size() -> b
    void close() -> close
com.facebook.imagepipeline.memory.PooledByteStreams -> com.facebook.imagepipeline.memory.aa:
    int mTempBufSize -> a
    com.facebook.imagepipeline.memory.ByteArrayPool mByteArrayPool -> b
    long copy(java.io.InputStream,java.io.OutputStream) -> a
com.facebook.imagepipeline.memory.SharedByteArray -> com.facebook.imagepipeline.memory.ab:
    int mMinByteArraySize -> a
    int mMaxByteArraySize -> b
    com.facebook.common.references.OOMSoftReference mByteArraySoftRef -> c
    java.util.concurrent.Semaphore mSemaphore -> d
    com.facebook.common.references.ResourceReleaser mResourceReleaser -> e
    com.facebook.common.references.CloseableReference get(int) -> a
    byte[] getByteArray(int) -> c
    int getBucketedSize(int) -> b
    byte[] allocateByteArray(int) -> d
com.facebook.imagepipeline.memory.SharedByteArray$1 -> com.facebook.imagepipeline.memory.ac:
    com.facebook.imagepipeline.memory.SharedByteArray this$0 -> a
    void release(byte[]) -> a
    void release(java.lang.Object) -> a
com.facebook.imagepipeline.nativecode.Bitmaps -> com.facebook.imagepipeline.nativecode.Bitmaps:
    android.graphics.Bitmap$Config BITMAP_CONFIG -> a
    void pinBitmap(android.graphics.Bitmap) -> a
    void reconfigureBitmap(android.graphics.Bitmap,int,int) -> a
    void nativePinBitmap(android.graphics.Bitmap) -> nativePinBitmap
    void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int) -> nativeCopyBitmap
com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader -> com.facebook.imagepipeline.nativecode.a:
    java.util.List DEPENDENCIES -> a
    void load() -> a
com.facebook.imagepipeline.nativecode.JpegTranscoder -> com.facebook.imagepipeline.nativecode.JpegTranscoder:
    boolean isRotationAngleAllowed(int) -> a
    void transcodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int) -> a
    void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int) -> nativeTranscodeJpeg
com.facebook.imagepipeline.nativecode.WebpTranscoder -> com.facebook.imagepipeline.nativecode.WebpTranscoder:
    boolean mIsExtendedWebpSupported -> a
    boolean isExtendedWebpSupported() -> a
    boolean isWebpNativelySupported(com.facebook.imageformat.ImageFormat) -> a
    void transcodeWebpToJpeg(java.io.InputStream,java.io.OutputStream,int) -> a
    void transcodeWebpToPng(java.io.InputStream,java.io.OutputStream) -> a
    void nativeTranscodeWebpToJpeg(java.io.InputStream,java.io.OutputStream,int) -> nativeTranscodeWebpToJpeg
    void nativeTranscodeWebpToPng(java.io.InputStream,java.io.OutputStream) -> nativeTranscodeWebpToPng
com.facebook.imagepipeline.nativecode.WebpTranscoder$1 -> com.facebook.imagepipeline.nativecode.b:
    int[] $SwitchMap$com$facebook$imageformat$ImageFormat -> a
com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer -> com.facebook.imagepipeline.producers.a:
    com.facebook.imagepipeline.producers.Producer mNextProducer -> a
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    com.facebook.imagepipeline.image.EncodedImage setEncodedImageMetaData(com.facebook.imagepipeline.image.EncodedImage) -> b
    int getRotationAngle(com.facebook.imagepipeline.image.EncodedImage) -> c
    com.facebook.imagepipeline.image.EncodedImage access$100(com.facebook.imagepipeline.image.EncodedImage) -> a
com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$1 -> com.facebook.imagepipeline.producers.b:
com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer -> com.facebook.imagepipeline.producers.c:
    void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
    void onNewResultImpl(java.lang.Object,boolean) -> a
com.facebook.imagepipeline.producers.BaseConsumer -> com.facebook.imagepipeline.producers.d:
    boolean mIsFinished -> a
    void onNewResult(java.lang.Object,boolean) -> b
    void onFailure(java.lang.Throwable) -> b
    void onCancellation() -> b
    void onProgressUpdate(float) -> b
    void onNewResultImpl(java.lang.Object,boolean) -> a
    void onFailureImpl(java.lang.Throwable) -> a
    void onCancellationImpl() -> a
    void onProgressUpdateImpl(float) -> a
    void onUnhandledException(java.lang.Exception) -> a
com.facebook.imagepipeline.producers.BaseNetworkFetcher -> com.facebook.imagepipeline.producers.e:
    boolean shouldPropagate(com.facebook.imagepipeline.producers.FetchState) -> a
    void onFetchCompletion(com.facebook.imagepipeline.producers.FetchState,int) -> a
    java.util.Map getExtraMap(com.facebook.imagepipeline.producers.FetchState,int) -> b
com.facebook.imagepipeline.producers.BaseProducerContext -> com.facebook.imagepipeline.producers.f:
    com.facebook.imagepipeline.request.ImageRequest mImageRequest -> a
    java.lang.String mId -> b
    com.facebook.imagepipeline.producers.ProducerListener mProducerListener -> c
    java.lang.Object mCallerContext -> d
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel mLowestPermittedRequestLevel -> e
    boolean mIsPrefetch -> f
    com.facebook.imagepipeline.common.Priority mPriority -> g
    boolean mIsIntermediateResultExpected -> h
    boolean mIsCancelled -> i
    java.util.List mCallbacks -> j
    com.facebook.imagepipeline.request.ImageRequest getImageRequest() -> a
    java.lang.String getId() -> b
    com.facebook.imagepipeline.producers.ProducerListener getListener() -> c
    java.lang.Object getCallerContext() -> d
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel() -> e
    boolean isPrefetch() -> f
    com.facebook.imagepipeline.common.Priority getPriority() -> g
    boolean isIntermediateResultExpected() -> h
    void addCallbacks(com.facebook.imagepipeline.producers.ProducerContextCallbacks) -> a
    void cancel() -> i
    java.util.List setIsPrefetchNoCallbacks(boolean) -> a
    java.util.List setPriorityNoCallbacks(com.facebook.imagepipeline.common.Priority) -> a
    java.util.List setIsIntermediateResultExpectedNoCallbacks(boolean) -> b
    java.util.List cancelNoCallbacks() -> j
    void callOnCancellationRequested(java.util.List) -> a
    void callOnIsPrefetchChanged(java.util.List) -> b
    void callOnIsIntermediateResultExpectedChanged(java.util.List) -> c
    void callOnPriorityChanged(java.util.List) -> d
com.facebook.imagepipeline.producers.BaseProducerContextCallbacks -> com.facebook.imagepipeline.producers.g:
    void onCancellationRequested() -> a
    void onIsPrefetchChanged() -> b
    void onIsIntermediateResultExpectedChanged() -> c
    void onPriorityChanged() -> d
com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer -> com.facebook.imagepipeline.producers.h:
    com.facebook.imagepipeline.producers.Consumer wrapConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey) -> a
    java.lang.String getProducerName() -> a
com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer -> com.facebook.imagepipeline.producers.i:
    com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory -> b
    android.util.Pair getKey(com.facebook.imagepipeline.producers.ProducerContext) -> a
    com.facebook.common.references.CloseableReference cloneOrNull(com.facebook.common.references.CloseableReference) -> a
    java.io.Closeable cloneOrNull(java.io.Closeable) -> a
    java.lang.Object getKey(com.facebook.imagepipeline.producers.ProducerContext) -> b
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer -> com.facebook.imagepipeline.producers.j:
    com.facebook.imagepipeline.cache.MemoryCache mMemoryCache -> a
    com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory -> b
    com.facebook.imagepipeline.producers.Producer mNextProducer -> c
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    com.facebook.imagepipeline.producers.Consumer wrapConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey) -> a
    java.lang.String getProducerName() -> a
    com.facebook.imagepipeline.cache.MemoryCache access$000(com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer) -> a
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer$1 -> com.facebook.imagepipeline.producers.k:
    com.facebook.cache.common.CacheKey val$cacheKey -> a
    com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer this$0 -> b
    void onNewResultImpl(com.facebook.common.references.CloseableReference,boolean) -> a
    void onNewResultImpl(java.lang.Object,boolean) -> a
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer -> com.facebook.imagepipeline.producers.l:
    com.facebook.imagepipeline.producers.Producer mNextProducer1 -> a
    com.facebook.imagepipeline.producers.Producer mNextProducer2 -> b
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    com.facebook.imagepipeline.producers.Producer access$100(com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer) -> a
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$1 -> com.facebook.imagepipeline.producers.m:
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer -> com.facebook.imagepipeline.producers.n:
    com.facebook.imagepipeline.producers.ProducerContext mProducerContext -> b
    com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer this$0 -> a
    void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
    void onFailureImpl(java.lang.Throwable) -> a
    boolean isResultGoodEnough(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.request.ImageRequest) -> a
    void onNewResultImpl(java.lang.Object,boolean) -> a
com.facebook.imagepipeline.producers.Consumer -> com.facebook.imagepipeline.producers.o:
    void onNewResult(java.lang.Object,boolean) -> b
    void onFailure(java.lang.Throwable) -> b
    void onCancellation() -> b
    void onProgressUpdate(float) -> b
com.facebook.imagepipeline.producers.DataFetchProducer -> com.facebook.imagepipeline.producers.p:
    java.io.InputStream getInputStream(com.facebook.imagepipeline.request.ImageRequest) -> a
    int getLength(com.facebook.imagepipeline.request.ImageRequest) -> b
    java.lang.String getProducerName() -> a
    byte[] getData(java.lang.String) -> a
    boolean isBase64(java.lang.String) -> b
com.facebook.imagepipeline.producers.DecodeProducer -> com.facebook.imagepipeline.producers.q:
    com.facebook.imagepipeline.memory.ByteArrayPool mByteArrayPool -> a
    java.util.concurrent.Executor mExecutor -> b
    com.facebook.imagepipeline.decoder.ImageDecoder mImageDecoder -> c
    com.facebook.imagepipeline.decoder.ProgressiveJpegConfig mProgressiveJpegConfig -> d
    com.facebook.imagepipeline.producers.Producer mNextProducer -> e
    boolean mDownsampleEnabled -> f
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    boolean access$000(com.facebook.imagepipeline.producers.DecodeProducer) -> a
    java.util.concurrent.Executor access$200(com.facebook.imagepipeline.producers.DecodeProducer) -> b
    com.facebook.imagepipeline.decoder.ImageDecoder access$500(com.facebook.imagepipeline.producers.DecodeProducer) -> c
com.facebook.imagepipeline.producers.DecodeProducer$LocalImagesProgressiveDecoder -> com.facebook.imagepipeline.producers.r:
    com.facebook.imagepipeline.producers.DecodeProducer this$0 -> a
    boolean updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
    int getIntermediateImageEndOffset(com.facebook.imagepipeline.image.EncodedImage) -> a
    com.facebook.imagepipeline.image.QualityInfo getQualityInfo() -> c
com.facebook.imagepipeline.producers.DecodeProducer$NetworkImagesProgressiveDecoder -> com.facebook.imagepipeline.producers.s:
    com.facebook.imagepipeline.decoder.ProgressiveJpegParser mProgressiveJpegParser -> c
    com.facebook.imagepipeline.decoder.ProgressiveJpegConfig mProgressiveJpegConfig -> d
    int mLastScheduledScanNumber -> e
    com.facebook.imagepipeline.producers.DecodeProducer this$0 -> a
    boolean updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
    int getIntermediateImageEndOffset(com.facebook.imagepipeline.image.EncodedImage) -> a
    com.facebook.imagepipeline.image.QualityInfo getQualityInfo() -> c
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder -> com.facebook.imagepipeline.producers.t:
    com.facebook.imagepipeline.producers.ProducerContext mProducerContext -> a
    com.facebook.imagepipeline.producers.ProducerListener mProducerListener -> c
    com.facebook.imagepipeline.common.ImageDecodeOptions mImageDecodeOptions -> d
    boolean mIsFinished -> e
    com.facebook.imagepipeline.producers.JobScheduler mJobScheduler -> f
    com.facebook.imagepipeline.producers.DecodeProducer this$0 -> b
    void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,boolean) -> b
    void onFailureImpl(java.lang.Throwable) -> a
    void onCancellationImpl() -> a
    boolean updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
    void doDecode(com.facebook.imagepipeline.image.EncodedImage,boolean) -> c
    java.util.Map getExtraMap(com.facebook.imagepipeline.image.CloseableImage,long,com.facebook.imagepipeline.image.QualityInfo,boolean) -> a
    boolean isFinished() -> e
    void maybeFinish(boolean) -> a
    void handleResult(com.facebook.imagepipeline.image.CloseableImage,boolean) -> a
    void handleError(java.lang.Throwable) -> c
    void handleCancellation() -> f
    int getIntermediateImageEndOffset(com.facebook.imagepipeline.image.EncodedImage) -> a
    com.facebook.imagepipeline.image.QualityInfo getQualityInfo() -> c
    void onNewResultImpl(java.lang.Object,boolean) -> a
    void access$100(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder,com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
    com.facebook.imagepipeline.producers.ProducerContext access$300(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder) -> a
    com.facebook.imagepipeline.producers.JobScheduler access$400(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder) -> b
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1 -> com.facebook.imagepipeline.producers.u:
    com.facebook.imagepipeline.producers.DecodeProducer val$this$0 -> a
    com.facebook.imagepipeline.producers.ProducerContext val$producerContext -> b
    com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder this$1 -> c
    void run(com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2 -> com.facebook.imagepipeline.producers.v:
    com.facebook.imagepipeline.producers.DecodeProducer val$this$0 -> a
    com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder this$1 -> b
    void onIsIntermediateResultExpectedChanged() -> c
com.facebook.imagepipeline.producers.DelegatingConsumer -> com.facebook.imagepipeline.producers.w:
    com.facebook.imagepipeline.producers.Consumer mConsumer -> a
    com.facebook.imagepipeline.producers.Consumer getConsumer() -> d
    void onFailureImpl(java.lang.Throwable) -> a
    void onCancellationImpl() -> a
    void onProgressUpdateImpl(float) -> a
com.facebook.imagepipeline.producers.DiskCacheProducer -> com.facebook.imagepipeline.producers.x:
    com.facebook.imagepipeline.cache.BufferedDiskCache mDefaultBufferedDiskCache -> a
    com.facebook.imagepipeline.cache.BufferedDiskCache mSmallImageBufferedDiskCache -> b
    com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory -> c
    com.facebook.imagepipeline.producers.Producer mNextProducer -> d
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    void maybeStartNextProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    java.util.Map getExtraMap(com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,boolean) -> a
    void subscribeTaskForRequestCancellation(java.util.concurrent.atomic.AtomicBoolean,com.facebook.imagepipeline.producers.ProducerContext) -> a
    void access$100(com.facebook.imagepipeline.producers.DiskCacheProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
com.facebook.imagepipeline.producers.DiskCacheProducer$1 -> com.facebook.imagepipeline.producers.y:
    com.facebook.imagepipeline.producers.ProducerListener val$listener -> a
    java.lang.String val$requestId -> b
    com.facebook.imagepipeline.producers.Consumer val$consumer -> c
    com.facebook.imagepipeline.cache.BufferedDiskCache val$cache -> d
    com.facebook.cache.common.CacheKey val$cacheKey -> e
    com.facebook.imagepipeline.producers.ProducerContext val$producerContext -> f
    com.facebook.imagepipeline.producers.DiskCacheProducer this$0 -> g
    java.lang.Void then(bolts.Task) -> b
    java.lang.Object then(bolts.Task) -> a
com.facebook.imagepipeline.producers.DiskCacheProducer$2 -> com.facebook.imagepipeline.producers.z:
    java.util.concurrent.atomic.AtomicBoolean val$isCancelled -> a
    com.facebook.imagepipeline.producers.DiskCacheProducer this$0 -> b
    void onCancellationRequested() -> a
com.facebook.imagepipeline.producers.DiskCacheProducer$DiskCacheConsumer -> com.facebook.imagepipeline.producers.aa:
    com.facebook.imagepipeline.cache.BufferedDiskCache mCache -> b
    com.facebook.cache.common.CacheKey mCacheKey -> c
    com.facebook.imagepipeline.producers.DiskCacheProducer this$0 -> a
    void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
    void onNewResultImpl(java.lang.Object,boolean) -> a
com.facebook.imagepipeline.producers.DownsampleUtil -> com.facebook.imagepipeline.producers.ab:
    int determineSampleSize(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage) -> a
    float determineDownsampleRatio(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage) -> b
    int ratioToSampleSize(float) -> a
    int ratioToSampleSizeJPEG(float) -> b
    int getRotationAngle(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage) -> c
com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer -> com.facebook.imagepipeline.producers.ac:
    com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory -> b
    android.util.Pair getKey(com.facebook.imagepipeline.producers.ProducerContext) -> a
    com.facebook.imagepipeline.image.EncodedImage cloneOrNull(com.facebook.imagepipeline.image.EncodedImage) -> a
    java.io.Closeable cloneOrNull(java.io.Closeable) -> a
    java.lang.Object getKey(com.facebook.imagepipeline.producers.ProducerContext) -> b
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer -> com.facebook.imagepipeline.producers.ad:
    com.facebook.imagepipeline.cache.MemoryCache mMemoryCache -> a
    com.facebook.imagepipeline.cache.CacheKeyFactory mCacheKeyFactory -> b
    com.facebook.imagepipeline.producers.Producer mNextProducer -> c
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    com.facebook.imagepipeline.cache.MemoryCache access$000(com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer) -> a
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$1 -> com.facebook.imagepipeline.producers.ae:
    com.facebook.cache.common.CacheKey val$cacheKey -> a
    com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer this$0 -> b
    void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
    void onNewResultImpl(java.lang.Object,boolean) -> a
com.facebook.imagepipeline.producers.FetchState -> com.facebook.imagepipeline.producers.af:
    com.facebook.imagepipeline.producers.Consumer mConsumer -> a
    com.facebook.imagepipeline.producers.ProducerContext mContext -> b
    long mLastIntermediateResultTimeMs -> c
    com.facebook.imagepipeline.producers.Consumer getConsumer() -> a
    com.facebook.imagepipeline.producers.ProducerContext getContext() -> b
    java.lang.String getId() -> c
    com.facebook.imagepipeline.producers.ProducerListener getListener() -> d
    android.net.Uri getUri() -> e
    long getLastIntermediateResultTimeMs() -> f
    void setLastIntermediateResultTimeMs(long) -> a
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher -> com.facebook.imagepipeline.producers.ag:
    java.util.concurrent.ExecutorService mExecutorService -> a
    com.facebook.imagepipeline.producers.FetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    void fetch(com.facebook.imagepipeline.producers.FetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> a
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$1 -> com.facebook.imagepipeline.producers.ah:
    com.facebook.imagepipeline.producers.FetchState val$fetchState -> a
    com.facebook.imagepipeline.producers.NetworkFetcher$Callback val$callback -> b
    com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher this$0 -> c
    void run() -> run
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$2 -> com.facebook.imagepipeline.producers.ai:
    java.util.concurrent.Future val$future -> a
    com.facebook.imagepipeline.producers.NetworkFetcher$Callback val$callback -> b
    com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher this$0 -> c
    void onCancellationRequested() -> a
com.facebook.imagepipeline.producers.JobScheduler -> com.facebook.imagepipeline.producers.JobScheduler:
    java.util.concurrent.Executor mExecutor -> f
    com.facebook.imagepipeline.producers.JobScheduler$JobRunnable mJobRunnable -> g
    java.lang.Runnable mDoJobRunnable -> h
    java.lang.Runnable mSubmitJobRunnable -> i
    int mMinimumJobIntervalMs -> j
    com.facebook.imagepipeline.image.EncodedImage mEncodedImage -> a
    boolean mIsLast -> b
    com.facebook.imagepipeline.producers.JobScheduler$JobState mJobState -> c
    long mJobSubmitTime -> d
    long mJobStartTime -> e
    void clearJob() -> a
    boolean updateJob(com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
    boolean scheduleJob() -> b
    void enqueueJob(long) -> a
    void submitJob() -> d
    void doJob() -> e
    void onJobFinished() -> f
    boolean shouldProcess(com.facebook.imagepipeline.image.EncodedImage,boolean) -> b
    long getQueuedTime() -> c
    void access$000(com.facebook.imagepipeline.producers.JobScheduler) -> a
    void access$100(com.facebook.imagepipeline.producers.JobScheduler) -> b
com.facebook.imagepipeline.producers.JobScheduler$1 -> com.facebook.imagepipeline.producers.aj:
    com.facebook.imagepipeline.producers.JobScheduler this$0 -> a
    void run() -> run
com.facebook.imagepipeline.producers.JobScheduler$2 -> com.facebook.imagepipeline.producers.ak:
    com.facebook.imagepipeline.producers.JobScheduler this$0 -> a
    void run() -> run
com.facebook.imagepipeline.producers.JobScheduler$3 -> com.facebook.imagepipeline.producers.al:
    int[] $SwitchMap$com$facebook$imagepipeline$producers$JobScheduler$JobState -> a
com.facebook.imagepipeline.producers.JobScheduler$JobRunnable -> com.facebook.imagepipeline.producers.am:
    void run(com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
com.facebook.imagepipeline.producers.JobScheduler$JobState -> com.facebook.imagepipeline.producers.JobScheduler$JobState:
    com.facebook.imagepipeline.producers.JobScheduler$JobState IDLE -> IDLE
    com.facebook.imagepipeline.producers.JobScheduler$JobState QUEUED -> QUEUED
    com.facebook.imagepipeline.producers.JobScheduler$JobState RUNNING -> RUNNING
    com.facebook.imagepipeline.producers.JobScheduler$JobState RUNNING_AND_PENDING -> RUNNING_AND_PENDING
    com.facebook.imagepipeline.producers.JobScheduler$JobState[] $VALUES -> a
    com.facebook.imagepipeline.producers.JobScheduler$JobState[] values() -> values
    com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String) -> valueOf
com.facebook.imagepipeline.producers.LocalAssetFetchProducer -> com.facebook.imagepipeline.producers.an:
    android.content.res.AssetManager mAssetManager -> a
    java.io.InputStream getInputStream(com.facebook.imagepipeline.request.ImageRequest) -> a
    int getLength(com.facebook.imagepipeline.request.ImageRequest) -> b
    java.lang.String getProducerName() -> a
    java.lang.String getAssetName(com.facebook.imagepipeline.request.ImageRequest) -> c
com.facebook.imagepipeline.producers.LocalContentUriFetchProducer -> com.facebook.imagepipeline.producers.ao:
    java.lang.String DISPLAY_PHOTO_PATH -> a
    java.lang.String[] PROJECTION -> b
    android.content.ContentResolver mContentResolver -> c
    java.io.InputStream getInputStream(com.facebook.imagepipeline.request.ImageRequest) -> a
    boolean isContactUri(android.net.Uri) -> a
    boolean isCameraUri(android.net.Uri) -> b
    java.lang.String getCameraPath(android.net.Uri) -> c
    int getLength(com.facebook.imagepipeline.request.ImageRequest) -> b
    java.lang.String getProducerName() -> a
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer -> com.facebook.imagepipeline.producers.ap:
    java.util.concurrent.Executor mExecutor -> a
    com.facebook.imagepipeline.memory.PooledByteBufferFactory mPooledByteBufferFactory -> b
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    android.media.ExifInterface getExifInterface(java.lang.String) -> a
    com.facebook.imagepipeline.image.EncodedImage buildEncodedImage(com.facebook.imagepipeline.memory.PooledByteBuffer,android.media.ExifInterface) -> a
    int getRotationAngle(android.media.ExifInterface) -> a
    com.facebook.imagepipeline.memory.PooledByteBufferFactory access$000(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer) -> a
    com.facebook.imagepipeline.image.EncodedImage access$100(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer,com.facebook.imagepipeline.memory.PooledByteBuffer,android.media.ExifInterface) -> a
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1 -> com.facebook.imagepipeline.producers.aq:
    com.facebook.imagepipeline.request.ImageRequest val$imageRequest -> b
    com.facebook.imagepipeline.producers.LocalExifThumbnailProducer this$0 -> c
    com.facebook.imagepipeline.image.EncodedImage getResult() -> d
    void disposeResult(com.facebook.imagepipeline.image.EncodedImage) -> a
    java.util.Map getExtraMapOnSuccess(com.facebook.imagepipeline.image.EncodedImage) -> b
    void disposeResult(java.lang.Object) -> b
    java.util.Map getExtraMapOnSuccess(java.lang.Object) -> c
    java.lang.Object getResult() -> c
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$2 -> com.facebook.imagepipeline.producers.ar:
    com.facebook.imagepipeline.producers.StatefulProducerRunnable val$cancellableProducerRunnable -> a
    com.facebook.imagepipeline.producers.LocalExifThumbnailProducer this$0 -> b
    void onCancellationRequested() -> a
com.facebook.imagepipeline.producers.LocalFetchProducer -> com.facebook.imagepipeline.producers.as:
    java.util.concurrent.Executor mExecutor -> a
    com.facebook.imagepipeline.memory.PooledByteBufferFactory mPooledByteBufferFactory -> b
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    java.io.InputStream getInputStream(com.facebook.imagepipeline.request.ImageRequest) -> a
    int getLength(com.facebook.imagepipeline.request.ImageRequest) -> b
    java.lang.String getProducerName() -> a
    com.facebook.imagepipeline.memory.PooledByteBufferFactory access$000(com.facebook.imagepipeline.producers.LocalFetchProducer) -> a
com.facebook.imagepipeline.producers.LocalFetchProducer$1 -> com.facebook.imagepipeline.producers.at:
    com.facebook.imagepipeline.request.ImageRequest val$imageRequest -> b
    com.facebook.imagepipeline.producers.LocalFetchProducer this$0 -> c
    com.facebook.imagepipeline.image.EncodedImage getResult() -> d
    void disposeResult(com.facebook.imagepipeline.image.EncodedImage) -> a
    void disposeResult(java.lang.Object) -> b
    java.lang.Object getResult() -> c
com.facebook.imagepipeline.producers.LocalFetchProducer$2 -> com.facebook.imagepipeline.producers.au:
    com.facebook.imagepipeline.producers.StatefulProducerRunnable val$cancellableProducerRunnable -> a
    com.facebook.imagepipeline.producers.LocalFetchProducer this$0 -> b
    void onCancellationRequested() -> a
com.facebook.imagepipeline.producers.LocalFileFetchProducer -> com.facebook.imagepipeline.producers.av:
    java.io.InputStream getInputStream(com.facebook.imagepipeline.request.ImageRequest) -> a
    int getLength(com.facebook.imagepipeline.request.ImageRequest) -> b
    java.lang.String getProducerName() -> a
com.facebook.imagepipeline.producers.LocalResourceFetchProducer -> com.facebook.imagepipeline.producers.aw:
    android.content.res.Resources mResources -> a
    java.io.InputStream getInputStream(com.facebook.imagepipeline.request.ImageRequest) -> a
    int getLength(com.facebook.imagepipeline.request.ImageRequest) -> b
    java.lang.String getProducerName() -> a
    int getResourceId(com.facebook.imagepipeline.request.ImageRequest) -> c
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer -> com.facebook.imagepipeline.producers.ax:
    java.util.concurrent.Executor mExecutor -> a
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    int calculateKind(com.facebook.imagepipeline.request.ImageRequest) -> b
    int access$000(com.facebook.imagepipeline.request.ImageRequest) -> a
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1 -> com.facebook.imagepipeline.producers.ay:
    com.facebook.imagepipeline.request.ImageRequest val$imageRequest -> b
    com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer this$0 -> c
    com.facebook.common.references.CloseableReference getResult() -> d
    java.util.Map getExtraMapOnSuccess(com.facebook.common.references.CloseableReference) -> a
    void disposeResult(com.facebook.common.references.CloseableReference) -> b
    void disposeResult(java.lang.Object) -> b
    java.util.Map getExtraMapOnSuccess(java.lang.Object) -> c
    java.lang.Object getResult() -> c
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1$1 -> com.facebook.imagepipeline.producers.az:
    com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1 this$1 -> a
    void release(android.graphics.Bitmap) -> a
    void release(java.lang.Object) -> a
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$2 -> com.facebook.imagepipeline.producers.ba:
    com.facebook.imagepipeline.producers.StatefulProducerRunnable val$cancellableProducerRunnable -> a
    com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer this$0 -> b
    void onCancellationRequested() -> a
com.facebook.imagepipeline.producers.MultiplexProducer -> com.facebook.imagepipeline.producers.bb:
    java.util.Map mMultiplexers -> a
    com.facebook.imagepipeline.producers.Producer mNextProducer -> b
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer getExistingMultiplexer(java.lang.Object) -> a
    com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer createAndPutNewMultiplexer(java.lang.Object) -> b
    void removeMultiplexer(java.lang.Object,com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> a
    java.lang.Object getKey(com.facebook.imagepipeline.producers.ProducerContext) -> b
    java.io.Closeable cloneOrNull(java.io.Closeable) -> a
    com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer access$100(com.facebook.imagepipeline.producers.MultiplexProducer,java.lang.Object) -> a
    void access$700(com.facebook.imagepipeline.producers.MultiplexProducer,java.lang.Object,com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> a
    com.facebook.imagepipeline.producers.Producer access$900(com.facebook.imagepipeline.producers.MultiplexProducer) -> a
com.facebook.imagepipeline.producers.MultiplexProducer$1 -> com.facebook.imagepipeline.producers.bc:
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer -> com.facebook.imagepipeline.producers.bd:
    java.lang.Object mKey -> b
    java.util.concurrent.CopyOnWriteArraySet mConsumerContextPairs -> c
    java.io.Closeable mLastIntermediateResult -> d
    float mLastProgress -> e
    com.facebook.imagepipeline.producers.BaseProducerContext mMultiplexProducerContext -> f
    com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer mForwardingConsumer -> g
    com.facebook.imagepipeline.producers.MultiplexProducer this$0 -> a
    boolean addNewConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    void addCallbacks(android.util.Pair,com.facebook.imagepipeline.producers.ProducerContext) -> a
    void startNextProducerIfHasAttachedConsumers() -> a
    java.util.List updateIsPrefetch() -> b
    boolean computeIsPrefetch() -> c
    java.util.List updateIsIntermediateResultExpected() -> d
    boolean computeIsIntermediateResultExpected() -> e
    java.util.List updatePriority() -> f
    com.facebook.imagepipeline.common.Priority computePriority() -> g
    void onFailure(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,java.lang.Throwable) -> a
    void onNextResult(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,java.io.Closeable,boolean) -> a
    void onCancelled(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer) -> a
    void onProgressUpdate(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,float) -> a
    void closeSafely(java.io.Closeable) -> a
    void access$000(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> a
    java.util.concurrent.CopyOnWriteArraySet access$200(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> b
    com.facebook.imagepipeline.producers.BaseProducerContext access$300(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> c
    java.util.List access$400(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> d
    java.util.List access$500(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> e
    java.util.List access$600(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> f
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$1 -> com.facebook.imagepipeline.producers.be:
    android.util.Pair val$consumerContextPair -> a
    com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer this$1 -> b
    void onCancellationRequested() -> a
    void onIsPrefetchChanged() -> b
    void onIsIntermediateResultExpectedChanged() -> c
    void onPriorityChanged() -> d
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer -> com.facebook.imagepipeline.producers.bf:
    com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer this$1 -> a
    void onNewResultImpl(java.io.Closeable,boolean) -> a
    void onFailureImpl(java.lang.Throwable) -> a
    void onCancellationImpl() -> a
    void onProgressUpdateImpl(float) -> a
    void onNewResultImpl(java.lang.Object,boolean) -> a
com.facebook.imagepipeline.producers.NetworkFetchProducer -> com.facebook.imagepipeline.producers.bg:
    com.facebook.imagepipeline.memory.PooledByteBufferFactory mPooledByteBufferFactory -> a
    com.facebook.imagepipeline.memory.ByteArrayPool mByteArrayPool -> b
    com.facebook.imagepipeline.producers.NetworkFetcher mNetworkFetcher -> c
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    void onResponse(com.facebook.imagepipeline.producers.FetchState,java.io.InputStream,int) -> a
    float calculateProgress(int,int) -> a
    void maybeHandleIntermediateResult(com.facebook.imagepipeline.memory.PooledByteBufferOutputStream,com.facebook.imagepipeline.producers.FetchState) -> a
    void handleFinalResult(com.facebook.imagepipeline.memory.PooledByteBufferOutputStream,com.facebook.imagepipeline.producers.FetchState) -> b
    void notifyConsumer(com.facebook.imagepipeline.memory.PooledByteBufferOutputStream,boolean,com.facebook.imagepipeline.producers.Consumer) -> a
    void onFailure(com.facebook.imagepipeline.producers.FetchState,java.lang.Throwable) -> a
    void onCancellation(com.facebook.imagepipeline.producers.FetchState) -> a
    boolean shouldPropagateIntermediateResults(com.facebook.imagepipeline.producers.FetchState) -> b
    java.util.Map getExtraMap(com.facebook.imagepipeline.producers.FetchState,int) -> a
    void access$000(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState,java.io.InputStream,int) -> a
    void access$100(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState,java.lang.Throwable) -> a
    void access$200(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState) -> a
com.facebook.imagepipeline.producers.NetworkFetchProducer$1 -> com.facebook.imagepipeline.producers.bh:
    com.facebook.imagepipeline.producers.FetchState val$fetchState -> a
    com.facebook.imagepipeline.producers.NetworkFetchProducer this$0 -> b
    void onResponse(java.io.InputStream,int) -> a
    void onFailure(java.lang.Throwable) -> a
    void onCancellation() -> a
com.facebook.imagepipeline.producers.NetworkFetcher -> com.facebook.imagepipeline.producers.bi:
    com.facebook.imagepipeline.producers.FetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    void fetch(com.facebook.imagepipeline.producers.FetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> a
    boolean shouldPropagate(com.facebook.imagepipeline.producers.FetchState) -> a
    void onFetchCompletion(com.facebook.imagepipeline.producers.FetchState,int) -> a
    java.util.Map getExtraMap(com.facebook.imagepipeline.producers.FetchState,int) -> b
com.facebook.imagepipeline.producers.NetworkFetcher$Callback -> com.facebook.imagepipeline.producers.bj:
    void onResponse(java.io.InputStream,int) -> a
    void onFailure(java.lang.Throwable) -> a
    void onCancellation() -> a
com.facebook.imagepipeline.producers.PostprocessorProducer -> com.facebook.imagepipeline.producers.bk:
    com.facebook.imagepipeline.producers.Producer mNextProducer -> a
    com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory mBitmapFactory -> b
    java.util.concurrent.Executor mExecutor -> c
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    java.util.concurrent.Executor access$800(com.facebook.imagepipeline.producers.PostprocessorProducer) -> a
    com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory access$900(com.facebook.imagepipeline.producers.PostprocessorProducer) -> b
com.facebook.imagepipeline.producers.PostprocessorProducer$1 -> com.facebook.imagepipeline.producers.bl:
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer -> com.facebook.imagepipeline.producers.bm:
    com.facebook.imagepipeline.producers.ProducerListener mListener -> b
    java.lang.String mRequestId -> c
    com.facebook.imagepipeline.request.Postprocessor mPostprocessor -> d
    boolean mIsClosed -> e
    com.facebook.common.references.CloseableReference mSourceImageRef -> f
    boolean mIsLast -> g
    boolean mIsDirty -> h
    boolean mIsPostProcessingRunning -> i
    com.facebook.imagepipeline.producers.PostprocessorProducer this$0 -> a
    void onNewResultImpl(com.facebook.common.references.CloseableReference,boolean) -> a
    void onFailureImpl(java.lang.Throwable) -> a
    void onCancellationImpl() -> a
    void updateSourceImageRef(com.facebook.common.references.CloseableReference,boolean) -> b
    void submitPostprocessing() -> c
    void clearRunningAndStartIfDirty() -> e
    boolean setRunningIfDirtyAndNotRunning() -> f
    void doPostprocessing(com.facebook.common.references.CloseableReference,boolean) -> c
    java.util.Map getExtraMap(com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.request.Postprocessor) -> a
    boolean shouldPostprocess(com.facebook.imagepipeline.image.CloseableImage) -> a
    com.facebook.common.references.CloseableReference postprocessInternal(com.facebook.imagepipeline.image.CloseableImage) -> b
    void maybeNotifyOnNewResult(com.facebook.common.references.CloseableReference,boolean) -> d
    void maybeNotifyOnFailure(java.lang.Throwable) -> c
    void maybeNotifyOnCancellation() -> g
    boolean isClosed() -> h
    boolean close() -> i
    void onNewResultImpl(java.lang.Object,boolean) -> a
    void access$200(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> a
    com.facebook.common.references.CloseableReference access$300(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> b
    boolean access$400(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> c
    com.facebook.common.references.CloseableReference access$302(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.common.references.CloseableReference) -> a
    boolean access$502(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,boolean) -> a
    void access$600(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.common.references.CloseableReference,boolean) -> a
    void access$700(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> d
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$1 -> com.facebook.imagepipeline.producers.bn:
    com.facebook.imagepipeline.producers.PostprocessorProducer val$this$0 -> a
    com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer this$1 -> b
    void onCancellationRequested() -> a
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$2 -> com.facebook.imagepipeline.producers.bo:
    com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer this$1 -> a
    void run() -> run
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer -> com.facebook.imagepipeline.producers.bp:
    boolean mIsClosed -> b
    com.facebook.common.references.CloseableReference mSourceImageRef -> c
    com.facebook.imagepipeline.producers.PostprocessorProducer this$0 -> a
    void onNewResultImpl(com.facebook.common.references.CloseableReference,boolean) -> a
    void onFailureImpl(java.lang.Throwable) -> a
    void onCancellationImpl() -> a
    void updateInternal() -> c
    void setSourceImageRef(com.facebook.common.references.CloseableReference) -> a
    boolean close() -> e
    void onNewResultImpl(java.lang.Object,boolean) -> a
    boolean access$1000(com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer) -> a
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer$1 -> com.facebook.imagepipeline.producers.bq:
    com.facebook.imagepipeline.producers.PostprocessorProducer val$this$0 -> a
    com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer this$1 -> b
    void onCancellationRequested() -> a
com.facebook.imagepipeline.producers.PostprocessorProducer$SingleUsePostprocessorConsumer -> com.facebook.imagepipeline.producers.br:
    com.facebook.imagepipeline.producers.PostprocessorProducer this$0 -> a
    void onNewResultImpl(com.facebook.common.references.CloseableReference,boolean) -> a
    void onNewResultImpl(java.lang.Object,boolean) -> a
com.facebook.imagepipeline.producers.Producer -> com.facebook.imagepipeline.producers.bs:
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
com.facebook.imagepipeline.producers.ProducerContext -> com.facebook.imagepipeline.producers.bt:
    com.facebook.imagepipeline.request.ImageRequest getImageRequest() -> a
    java.lang.String getId() -> b
    com.facebook.imagepipeline.producers.ProducerListener getListener() -> c
    java.lang.Object getCallerContext() -> d
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel() -> e
    boolean isPrefetch() -> f
    com.facebook.imagepipeline.common.Priority getPriority() -> g
    boolean isIntermediateResultExpected() -> h
    void addCallbacks(com.facebook.imagepipeline.producers.ProducerContextCallbacks) -> a
com.facebook.imagepipeline.producers.ProducerContextCallbacks -> com.facebook.imagepipeline.producers.bu:
    void onCancellationRequested() -> a
    void onIsPrefetchChanged() -> b
    void onIsIntermediateResultExpectedChanged() -> c
    void onPriorityChanged() -> d
com.facebook.imagepipeline.producers.ProducerListener -> com.facebook.imagepipeline.producers.bv:
    void onProducerStart(java.lang.String,java.lang.String) -> a
    void onProducerEvent(java.lang.String,java.lang.String,java.lang.String) -> a
    void onProducerFinishWithSuccess(java.lang.String,java.lang.String,java.util.Map) -> a
    void onProducerFinishWithFailure(java.lang.String,java.lang.String,java.lang.Throwable,java.util.Map) -> a
    void onProducerFinishWithCancellation(java.lang.String,java.lang.String,java.util.Map) -> b
    boolean requiresExtraMap(java.lang.String) -> b
com.facebook.imagepipeline.producers.ResizeAndRotateProducer -> com.facebook.imagepipeline.producers.bw:
    java.util.concurrent.Executor mExecutor -> a
    com.facebook.imagepipeline.memory.PooledByteBufferFactory mPooledByteBufferFactory -> b
    boolean mDownsampleEnabled -> c
    com.facebook.imagepipeline.producers.Producer mNextProducer -> d
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    com.facebook.common.util.TriState shouldTransform(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage,boolean) -> b
    float determineResizeRatio(com.facebook.imagepipeline.common.ResizeOptions,int,int) -> a
    int roundNumerator(float) -> a
    int getScaleNumerator(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage) -> c
    int getRotationAngle(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage) -> d
    boolean shouldResize(int,boolean) -> a
    java.util.concurrent.Executor access$100(com.facebook.imagepipeline.producers.ResizeAndRotateProducer) -> a
    boolean access$500(com.facebook.imagepipeline.producers.ResizeAndRotateProducer) -> b
    com.facebook.common.util.TriState access$600(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
    com.facebook.imagepipeline.memory.PooledByteBufferFactory access$700(com.facebook.imagepipeline.producers.ResizeAndRotateProducer) -> c
    int access$800(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage) -> a
    int access$900(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage) -> b
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer -> com.facebook.imagepipeline.producers.bx:
    com.facebook.imagepipeline.producers.ProducerContext mProducerContext -> b
    boolean mIsCancelled -> c
    com.facebook.imagepipeline.producers.JobScheduler mJobScheduler -> d
    com.facebook.imagepipeline.producers.ResizeAndRotateProducer this$0 -> a
    void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
    void doTransform(com.facebook.imagepipeline.image.EncodedImage,boolean) -> b
    java.util.Map getExtraMap(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.request.ImageRequest,int) -> a
    void onNewResultImpl(java.lang.Object,boolean) -> a
    void access$000(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
    com.facebook.imagepipeline.producers.ProducerContext access$200(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer) -> a
    com.facebook.imagepipeline.producers.JobScheduler access$300(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer) -> b
    boolean access$402(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,boolean) -> a
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1 -> com.facebook.imagepipeline.producers.by:
    com.facebook.imagepipeline.producers.ResizeAndRotateProducer val$this$0 -> a
    com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer this$1 -> b
    void run(com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2 -> com.facebook.imagepipeline.producers.bz:
    com.facebook.imagepipeline.producers.ResizeAndRotateProducer val$this$0 -> a
    com.facebook.imagepipeline.producers.Consumer val$consumer -> b
    com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer this$1 -> c
    void onIsIntermediateResultExpectedChanged() -> c
    void onCancellationRequested() -> a
com.facebook.imagepipeline.producers.SettableProducerContext -> com.facebook.imagepipeline.producers.ca:
com.facebook.imagepipeline.producers.StatefulProducerRunnable -> com.facebook.imagepipeline.producers.cb:
    com.facebook.imagepipeline.producers.Consumer mConsumer -> b
    com.facebook.imagepipeline.producers.ProducerListener mProducerListener -> c
    java.lang.String mProducerName -> d
    java.lang.String mRequestId -> e
    void onSuccess(java.lang.Object) -> a
    void onFailure(java.lang.Exception) -> a
    void onCancellation() -> b
    java.util.Map getExtraMapOnSuccess(java.lang.Object) -> c
    java.util.Map getExtraMapOnFailure(java.lang.Exception) -> b
    java.util.Map getExtraMapOnCancellation() -> e
    void disposeResult(java.lang.Object) -> b
com.facebook.imagepipeline.producers.ThreadHandoffProducer -> com.facebook.imagepipeline.producers.cc:
    java.util.concurrent.Executor mExecutor -> a
    com.facebook.imagepipeline.producers.Producer mNextProducer -> b
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    com.facebook.imagepipeline.producers.Producer access$000(com.facebook.imagepipeline.producers.ThreadHandoffProducer) -> a
com.facebook.imagepipeline.producers.ThreadHandoffProducer$1 -> com.facebook.imagepipeline.producers.cd:
    com.facebook.imagepipeline.producers.ProducerListener val$producerListener -> b
    java.lang.String val$requestId -> c
    com.facebook.imagepipeline.producers.Consumer val$consumer -> d
    com.facebook.imagepipeline.producers.ProducerContext val$context -> e
    com.facebook.imagepipeline.producers.ThreadHandoffProducer this$0 -> f
    void onSuccess(java.lang.Object) -> a
    void disposeResult(java.lang.Object) -> b
    java.lang.Object getResult() -> c
com.facebook.imagepipeline.producers.ThreadHandoffProducer$2 -> com.facebook.imagepipeline.producers.ce:
    com.facebook.imagepipeline.producers.StatefulProducerRunnable val$statefulRunnable -> a
    com.facebook.imagepipeline.producers.ThreadHandoffProducer this$0 -> b
    void onCancellationRequested() -> a
com.facebook.imagepipeline.producers.ThrottlingProducer -> com.facebook.imagepipeline.producers.cf:
    com.facebook.imagepipeline.producers.Producer mNextProducer -> a
    int mMaxSimultaneousRequests -> b
    int mNumCurrentRequests -> c
    java.util.concurrent.ConcurrentLinkedQueue mPendingRequests -> d
    java.util.concurrent.Executor mExecutor -> e
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> b
    java.util.concurrent.ConcurrentLinkedQueue access$100(com.facebook.imagepipeline.producers.ThrottlingProducer) -> a
    int access$210(com.facebook.imagepipeline.producers.ThrottlingProducer) -> b
    java.util.concurrent.Executor access$300(com.facebook.imagepipeline.producers.ThrottlingProducer) -> c
com.facebook.imagepipeline.producers.ThrottlingProducer$1 -> com.facebook.imagepipeline.producers.cg:
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer -> com.facebook.imagepipeline.producers.ch:
    com.facebook.imagepipeline.producers.ThrottlingProducer this$0 -> a
    void onNewResultImpl(java.lang.Object,boolean) -> a
    void onFailureImpl(java.lang.Throwable) -> a
    void onCancellationImpl() -> a
    void onRequestFinished() -> c
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1 -> com.facebook.imagepipeline.producers.ci:
    android.util.Pair val$nextRequestPair -> a
    com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer this$1 -> b
    void run() -> run
com.facebook.imagepipeline.producers.WebpTranscodeProducer -> com.facebook.imagepipeline.producers.cj:
    java.util.concurrent.Executor mExecutor -> a
    com.facebook.imagepipeline.memory.PooledByteBufferFactory mPooledByteBufferFactory -> b
    com.facebook.imagepipeline.producers.Producer mNextProducer -> c
    void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    void transcodeLastResult(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    com.facebook.common.util.TriState shouldTranscode(com.facebook.imagepipeline.image.EncodedImage) -> b
    void doTranscode(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.memory.PooledByteBufferOutputStream) -> b
    com.facebook.common.util.TriState access$000(com.facebook.imagepipeline.image.EncodedImage) -> a
    void access$100(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> a
    com.facebook.imagepipeline.memory.PooledByteBufferFactory access$200(com.facebook.imagepipeline.producers.WebpTranscodeProducer) -> a
    void access$300(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.memory.PooledByteBufferOutputStream) -> a
com.facebook.imagepipeline.producers.WebpTranscodeProducer$1 -> com.facebook.imagepipeline.producers.ck:
    com.facebook.imagepipeline.image.EncodedImage val$encodedImageCopy -> b
    com.facebook.imagepipeline.producers.WebpTranscodeProducer this$0 -> c
    com.facebook.imagepipeline.image.EncodedImage getResult() -> d
    void disposeResult(com.facebook.imagepipeline.image.EncodedImage) -> a
    void onSuccess(com.facebook.imagepipeline.image.EncodedImage) -> b
    void onFailure(java.lang.Exception) -> a
    void onCancellation() -> b
    void disposeResult(java.lang.Object) -> b
    void onSuccess(java.lang.Object) -> a
    java.lang.Object getResult() -> c
com.facebook.imagepipeline.producers.WebpTranscodeProducer$2 -> com.facebook.imagepipeline.producers.cl:
    int[] $SwitchMap$com$facebook$imageformat$ImageFormat -> a
com.facebook.imagepipeline.producers.WebpTranscodeProducer$WebpTranscodeConsumer -> com.facebook.imagepipeline.producers.cm:
    com.facebook.imagepipeline.producers.ProducerContext mContext -> b
    com.facebook.common.util.TriState mShouldTranscodeWhenFinished -> c
    com.facebook.imagepipeline.producers.WebpTranscodeProducer this$0 -> a
    void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,boolean) -> a
    void onNewResultImpl(java.lang.Object,boolean) -> a
com.facebook.imagepipeline.request.ImageRequest -> com.facebook.imagepipeline.request.ImageRequest:
    com.facebook.imagepipeline.request.ImageRequest$ImageType mImageType -> b
    android.net.Uri mSourceUri -> c
    java.io.File mSourceFile -> d
    boolean mProgressiveRenderingEnabled -> e
    boolean mLocalThumbnailPreviewsEnabled -> f
    com.facebook.imagepipeline.common.ImageDecodeOptions mImageDecodeOptions -> g
    com.facebook.imagepipeline.common.ResizeOptions mResizeOptions -> a
    boolean mAutoRotateEnabled -> h
    com.facebook.imagepipeline.common.Priority mRequestPriority -> i
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel mLowestPermittedRequestLevel -> j
    boolean mIsDiskCacheEnabled -> k
    com.facebook.imagepipeline.request.Postprocessor mPostprocessor -> l
    com.facebook.imagepipeline.request.ImageRequest fromUri(android.net.Uri) -> a
    com.facebook.imagepipeline.request.ImageRequest$ImageType getImageType() -> a
    android.net.Uri getSourceUri() -> b
    int getPreferredWidth() -> c
    int getPreferredHeight() -> d
    com.facebook.imagepipeline.common.ResizeOptions getResizeOptions() -> e
    com.facebook.imagepipeline.common.ImageDecodeOptions getImageDecodeOptions() -> f
    boolean getAutoRotateEnabled() -> g
    boolean getProgressiveRenderingEnabled() -> h
    boolean getLocalThumbnailPreviewsEnabled() -> i
    com.facebook.imagepipeline.common.Priority getPriority() -> j
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel() -> k
    boolean isDiskCacheEnabled() -> l
    java.io.File getSourceFile() -> m
    com.facebook.imagepipeline.request.Postprocessor getPostprocessor() -> n
com.facebook.imagepipeline.request.ImageRequest$ImageType -> com.facebook.imagepipeline.request.ImageRequest$ImageType:
    com.facebook.imagepipeline.request.ImageRequest$ImageType SMALL -> SMALL
    com.facebook.imagepipeline.request.ImageRequest$ImageType DEFAULT -> DEFAULT
    com.facebook.imagepipeline.request.ImageRequest$ImageType[] $VALUES -> a
    com.facebook.imagepipeline.request.ImageRequest$ImageType[] values() -> values
    com.facebook.imagepipeline.request.ImageRequest$ImageType valueOf(java.lang.String) -> valueOf
com.facebook.imagepipeline.request.ImageRequest$RequestLevel -> com.facebook.imagepipeline.request.ImageRequest$RequestLevel:
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel FULL_FETCH -> FULL_FETCH
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel DISK_CACHE -> DISK_CACHE
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel ENCODED_MEMORY_CACHE -> ENCODED_MEMORY_CACHE
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel BITMAP_MEMORY_CACHE -> BITMAP_MEMORY_CACHE
    int mValue -> mValue
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] $VALUES -> a
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values() -> values
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel getMax(com.facebook.imagepipeline.request.ImageRequest$RequestLevel,com.facebook.imagepipeline.request.ImageRequest$RequestLevel) -> getMax
com.facebook.imagepipeline.request.ImageRequestBuilder -> com.facebook.imagepipeline.request.ImageRequestBuilder:
    android.net.Uri mSourceUri -> a
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel mLowestPermittedRequestLevel -> b
    boolean mAutoRotateEnabled -> c
    com.facebook.imagepipeline.common.ResizeOptions mResizeOptions -> d
    com.facebook.imagepipeline.common.ImageDecodeOptions mImageDecodeOptions -> e
    com.facebook.imagepipeline.request.ImageRequest$ImageType mImageType -> f
    boolean mProgressiveRenderingEnabled -> g
    boolean mLocalThumbnailPreviewsEnabled -> h
    com.facebook.imagepipeline.common.Priority mRequestPriority -> i
    com.facebook.imagepipeline.request.Postprocessor mPostprocessor -> j
    com.facebook.imagepipeline.request.ImageRequestBuilder newBuilderWithSource(android.net.Uri) -> a
    com.facebook.imagepipeline.request.ImageRequestBuilder setSource(android.net.Uri) -> b
    android.net.Uri getSourceUri() -> a
    com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel() -> b
    boolean isAutoRotateEnabled() -> c
    com.facebook.imagepipeline.common.ResizeOptions getResizeOptions() -> d
    com.facebook.imagepipeline.common.ImageDecodeOptions getImageDecodeOptions() -> e
    com.facebook.imagepipeline.request.ImageRequest$ImageType getImageType() -> f
    boolean isProgressiveRenderingEnabled() -> g
    boolean isLocalThumbnailPreviewsEnabled() -> h
    boolean isDiskCacheEnabled() -> i
    com.facebook.imagepipeline.common.Priority getRequestPriority() -> j
    com.facebook.imagepipeline.request.Postprocessor getPostprocessor() -> k
    com.facebook.imagepipeline.request.ImageRequest build() -> l
    void validate() -> m
com.facebook.imagepipeline.request.ImageRequestBuilder$BuilderException -> com.facebook.imagepipeline.request.ImageRequestBuilder$BuilderException:
com.facebook.imagepipeline.request.Postprocessor -> com.facebook.imagepipeline.request.a:
    com.facebook.common.references.CloseableReference process(android.graphics.Bitmap,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory) -> a
    java.lang.String getName() -> a
com.facebook.imagepipeline.request.RepeatedPostprocessor -> com.facebook.imagepipeline.request.b:
    void setCallback(com.facebook.imagepipeline.request.RepeatedPostprocessorRunner) -> a
com.facebook.imagepipeline.request.RepeatedPostprocessorRunner -> com.facebook.imagepipeline.request.c:
com.facebook.imagepipeline.webp.WebPFrame -> com.facebook.imagepipeline.webp.WebPFrame:
    long mNativeContext -> mNativeContext
    void finalize() -> finalize
    void dispose() -> a
    void renderFrame(int,int,android.graphics.Bitmap) -> a
    int getWidth() -> b
    int getHeight() -> c
    int getXOffset() -> d
    int getYOffset() -> e
    boolean shouldDisposeToBackgroundColor() -> f
    boolean shouldBlendWithPreviousFrame() -> g
    void nativeRenderFrame(int,int,android.graphics.Bitmap) -> nativeRenderFrame
    int nativeGetDurationMs() -> nativeGetDurationMs
    int nativeGetWidth() -> nativeGetWidth
    int nativeGetHeight() -> nativeGetHeight
    int nativeGetXOffset() -> nativeGetXOffset
    int nativeGetYOffset() -> nativeGetYOffset
    boolean nativeShouldDisposeToBackgroundColor() -> nativeShouldDisposeToBackgroundColor
    boolean nativeShouldBlendWithPreviousFrame() -> nativeShouldBlendWithPreviousFrame
    void nativeDispose() -> nativeDispose
    void nativeFinalize() -> nativeFinalize
com.facebook.imagepipeline.webp.WebPImage -> com.facebook.imagepipeline.webp.WebPImage:
    boolean sInitialized -> a
    long mNativeContext -> mNativeContext
    void ensure() -> g
    void finalize() -> finalize
    com.facebook.imagepipeline.webp.WebPImage create(long,int) -> a
    int getWidth() -> a
    int getHeight() -> b
    int getFrameCount() -> c
    int[] getFrameDurations() -> d
    com.facebook.imagepipeline.webp.WebPFrame getFrame(int) -> c
    int getSizeInBytes() -> f
    boolean doesRenderSupportScaling() -> e
    com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo getFrameInfo(int) -> b
    com.facebook.imagepipeline.webp.WebPImage nativeCreateFromDirectByteBuffer(java.nio.ByteBuffer) -> nativeCreateFromDirectByteBuffer
    com.facebook.imagepipeline.webp.WebPImage nativeCreateFromNativeMemory(long,int) -> nativeCreateFromNativeMemory
    int nativeGetWidth() -> nativeGetWidth
    int nativeGetHeight() -> nativeGetHeight
    int nativeGetDuration() -> nativeGetDuration
    int nativeGetFrameCount() -> nativeGetFrameCount
    int[] nativeGetFrameDurations() -> nativeGetFrameDurations
    int nativeGetLoopCount() -> nativeGetLoopCount
    com.facebook.imagepipeline.webp.WebPFrame nativeGetFrame(int) -> nativeGetFrame
    int nativeGetSizeInBytes() -> nativeGetSizeInBytes
    void nativeDispose() -> nativeDispose
    void nativeFinalize() -> nativeFinalize
    com.facebook.imagepipeline.animated.base.AnimatedImageFrame getFrame(int) -> a
com.facebook.imageutils.JfifUtil -> com.facebook.c.a:
    java.lang.Class TAG -> a
    int getAutoRotateAngleFromOrientation(int) -> a
    int getOrientation(java.io.InputStream) -> a
    android.graphics.Rect getDimensions(java.io.InputStream) -> b
    boolean moveToMarker(java.io.InputStream,int) -> a
    boolean isSOFn(int) -> b
    int moveToAPP1EXIF(java.io.InputStream) -> c
com.facebook.imageutils.StreamProcessor -> com.facebook.c.b:
    int readPackedInt(java.io.InputStream,int,boolean) -> a
com.facebook.imageutils.TiffUtil -> com.facebook.c.c:
    java.lang.Class TAG -> a
    int getAutoRotateAngleFromOrientation(int) -> a
    int readOrientationFromTIFF(java.io.InputStream,int) -> a
    int readTiffHeader(java.io.InputStream,int,com.facebook.imageutils.TiffUtil$TiffHeader) -> a
    int moveToTiffEntryWithTag(java.io.InputStream,int,boolean,int) -> a
    int getOrientationFromTiffEntry(java.io.InputStream,int,boolean) -> a
com.facebook.imageutils.TiffUtil$1 -> com.facebook.c.d:
com.facebook.imageutils.TiffUtil$TiffHeader -> com.facebook.c.e:
    boolean isLittleEndian -> a
    int byteOrder -> b
    int firstIfdOffset -> c
com.google.gson.DefaultDateTypeAdapter -> com.google.gson.a:
    java.text.DateFormat enUsFormat -> a
    java.text.DateFormat localFormat -> b
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> b
com.google.gson.ExclusionStrategy -> com.google.gson.b:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.FieldAttributes -> com.google.gson.c:
    java.lang.reflect.Field field -> a
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy[] $VALUES -> a
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> a
    java.lang.String upperCaseFirstLetter(java.lang.String) -> a
    java.lang.String modifyString(char,java.lang.String,int) -> a
    java.lang.String access$100(java.lang.String) -> access$100
    java.lang.String access$200(java.lang.String,java.lang.String) -> access$200
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy -> com.google.gson.d:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.e:
    java.lang.ThreadLocal calls -> c
    java.util.Map typeTokenCache -> d
    java.util.List factories -> e
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> f
    boolean serializeNulls -> g
    boolean htmlSafe -> h
    boolean generateNonExecutableJson -> i
    boolean prettyPrinting -> j
    com.google.gson.JsonDeserializationContext deserializationContext -> a
    com.google.gson.JsonSerializationContext serializationContext -> b
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> a
    com.google.gson.TypeAdapter floatAdapter(boolean) -> b
    void checkValidFloatingPoint(double) -> a
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> a
    com.google.gson.TypeAdapter atomicLongAdapter(com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapter atomicLongArrayAdapter(com.google.gson.TypeAdapter) -> b
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> a
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> a
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> a
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> a
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> a
com.google.gson.Gson$1 -> com.google.gson.f:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$2 -> com.google.gson.g:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$3 -> com.google.gson.h:
    com.google.gson.Gson this$0 -> a
    java.lang.Double read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$4 -> com.google.gson.i:
    com.google.gson.Gson this$0 -> a
    java.lang.Float read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$5 -> com.google.gson.j:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$6 -> com.google.gson.k:
    com.google.gson.TypeAdapter val$longAdapter -> a
    void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLong) -> a
    java.util.concurrent.atomic.AtomicLong read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$7 -> com.google.gson.l:
    com.google.gson.TypeAdapter val$longAdapter -> a
    void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLongArray) -> a
    java.util.concurrent.atomic.AtomicLongArray read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.m:
    com.google.gson.TypeAdapter delegate -> a
    void setDelegate(com.google.gson.TypeAdapter) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.GsonBuilder -> com.google.gson.n:
    com.google.gson.internal.Excluder excluder -> a
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> b
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> c
    java.util.Map instanceCreators -> d
    java.util.List factories -> e
    java.util.List hierarchyFactories -> f
    boolean serializeNulls -> g
    java.lang.String datePattern -> h
    int dateStyle -> i
    int timeStyle -> j
    boolean complexMapKeySerialization -> k
    boolean serializeSpecialFloatingPointValues -> l
    boolean escapeHtmlChars -> m
    boolean prettyPrinting -> n
    boolean generateNonExecutableJson -> o
    com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> a
    com.google.gson.Gson create() -> a
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> a
com.google.gson.InstanceCreator -> com.google.gson.o:
    java.lang.Object createInstance(java.lang.reflect.Type) -> a
com.google.gson.JsonArray -> com.google.gson.p:
    java.util.List elements -> a
    void add(com.google.gson.JsonElement) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean getAsBoolean() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonDeserializationContext -> com.google.gson.q:
com.google.gson.JsonDeserializer -> com.google.gson.r:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> b
com.google.gson.JsonElement -> com.google.gson.s:
    boolean isJsonArray() -> g
    boolean isJsonObject() -> h
    boolean isJsonPrimitive() -> i
    boolean isJsonNull() -> j
    com.google.gson.JsonObject getAsJsonObject() -> k
    com.google.gson.JsonArray getAsJsonArray() -> l
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> m
    boolean getAsBoolean() -> f
    java.lang.Boolean getAsBooleanWrapper() -> n
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonNull -> com.google.gson.t:
    com.google.gson.JsonNull INSTANCE -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.JsonObject -> com.google.gson.u:
    com.google.gson.internal.LinkedTreeMap members -> a
    void add(java.lang.String,com.google.gson.JsonElement) -> a
    java.util.Set entrySet() -> o
    com.google.gson.JsonElement get(java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonPrimitive -> com.google.gson.v:
    java.lang.Class[] PRIMITIVE_TYPES -> a
    java.lang.Object value -> b
    void setValue(java.lang.Object) -> a
    boolean isBoolean() -> o
    java.lang.Boolean getAsBooleanWrapper() -> n
    boolean getAsBoolean() -> f
    boolean isNumber() -> p
    java.lang.Number getAsNumber() -> a
    boolean isString() -> q
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean isPrimitiveOrString(java.lang.Object) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> a
com.google.gson.JsonSerializationContext -> com.google.gson.w:
com.google.gson.JsonSerializer -> com.google.gson.x:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> a
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.TreeTypeAdapter -> com.google.gson.y:
    com.google.gson.JsonSerializer serializer -> a
    com.google.gson.JsonDeserializer deserializer -> b
    com.google.gson.Gson gson -> c
    com.google.gson.reflect.TypeToken typeToken -> d
    com.google.gson.TypeAdapterFactory skipPast -> e
    com.google.gson.TypeAdapter delegate -> f
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.TypeAdapter delegate() -> b
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> a
    com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> b
com.google.gson.TreeTypeAdapter$1 -> com.google.gson.z:
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.aa:
    com.google.gson.reflect.TypeToken exactType -> a
    boolean matchRawType -> b
    java.lang.Class hierarchyType -> c
    com.google.gson.JsonSerializer serializer -> d
    com.google.gson.JsonDeserializer deserializer -> e
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.TypeAdapter -> com.google.gson.ab:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.TypeAdapter nullSafe() -> a
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
com.google.gson.TypeAdapter$1 -> com.google.gson.ac:
    com.google.gson.TypeAdapter this$0 -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
com.google.gson.TypeAdapterFactory -> com.google.gson.ad:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.annotations.Expose -> com.google.gson.a.a:
    boolean serialize() -> a
    boolean deserialize() -> b
com.google.gson.annotations.JsonAdapter -> com.google.gson.a.b:
    java.lang.Class value() -> a
com.google.gson.annotations.SerializedName -> com.google.gson.a.c:
    java.lang.String value() -> a
    java.lang.String[] alternate() -> b
com.google.gson.annotations.Since -> com.google.gson.a.d:
    double value() -> a
com.google.gson.annotations.Until -> com.google.gson.a.e:
    double value() -> a
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.a:
    java.lang.Object checkNotNull(java.lang.Object) -> a
    void checkArgument(boolean) -> a
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> a
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> a
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> a
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> b
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> c
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> d
    java.lang.Class getRawType(java.lang.reflect.Type) -> e
    boolean equal(java.lang.Object,java.lang.Object) -> a
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    int hashCodeOrZero(java.lang.Object) -> b
    java.lang.String typeToString(java.lang.reflect.Type) -> f
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> b
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> g
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> a
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> a
    int indexOf(java.lang.Object[],java.lang.Object) -> a
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> a
    void checkNotPrimitive(java.lang.reflect.Type) -> i
    void access$000(java.lang.reflect.Type) -> h
    int access$100(java.lang.Object) -> a
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.b:
    java.util.Map instanceCreators -> a
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> a
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> a
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.c:
    com.google.gson.InstanceCreator val$typeCreator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.d:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.e:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.f:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$13 -> com.google.gson.internal.g:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$14 -> com.google.gson.internal.h:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> d
    java.lang.Class val$rawType -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.i:
    com.google.gson.InstanceCreator val$rawTypeCreator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.j:
    java.lang.reflect.Constructor val$constructor -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.k:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.l:
    java.lang.reflect.Type val$type -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.m:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.n:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.o:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.p:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.Excluder -> com.google.gson.internal.q:
    com.google.gson.internal.Excluder DEFAULT -> a
    double version -> b
    int modifiers -> c
    boolean serializeInnerClasses -> d
    boolean requireExpose -> e
    java.util.List serializationStrategies -> f
    java.util.List deserializationStrategies -> g
    com.google.gson.internal.Excluder clone() -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    boolean excludeClass(java.lang.Class,boolean) -> a
    boolean isAnonymousOrLocal(java.lang.Class) -> a
    boolean isInnerClass(java.lang.Class) -> b
    boolean isStatic(java.lang.Class) -> c
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> a
    boolean isValidSince(com.google.gson.annotations.Since) -> a
    boolean isValidUntil(com.google.gson.annotations.Until) -> a
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.r:
    com.google.gson.TypeAdapter delegate -> f
    boolean val$skipDeserialize -> a
    boolean val$skipSerialize -> b
    com.google.gson.Gson val$gson -> c
    com.google.gson.reflect.TypeToken val$type -> d
    com.google.gson.internal.Excluder this$0 -> e
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.TypeAdapter delegate() -> b
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.s:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> a
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> a
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedTreeMap$Node root -> root
    int size -> size
    int modCount -> modCount
    com.google.gson.internal.LinkedTreeMap$Node header -> header
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    boolean equal(java.lang.Object,java.lang.Object) -> a
    void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> a
    void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> a
    void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> a
    void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> b
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.t:
    int compare(java.lang.Comparable,java.lang.Comparable) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.u:
    com.google.gson.internal.LinkedTreeMap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.v:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> a
    java.util.Map$Entry next() -> a
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.w:
    com.google.gson.internal.LinkedTreeMap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.x:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> a
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.y:
    com.google.gson.internal.LinkedTreeMap$Node next -> b
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> c
    int expectedModCount -> d
    com.google.gson.internal.LinkedTreeMap this$0 -> e
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedTreeMap$Node nextNode() -> b
    void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.z:
    com.google.gson.internal.LinkedTreeMap$Node parent -> a
    com.google.gson.internal.LinkedTreeMap$Node left -> b
    com.google.gson.internal.LinkedTreeMap$Node right -> c
    com.google.gson.internal.LinkedTreeMap$Node next -> d
    com.google.gson.internal.LinkedTreeMap$Node prev -> e
    java.lang.Object key -> f
    java.lang.Object value -> g
    int height -> h
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedTreeMap$Node first() -> a
    com.google.gson.internal.LinkedTreeMap$Node last() -> b
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.aa:
    java.lang.Object construct() -> a
com.google.gson.internal.Primitives -> com.google.gson.internal.ab:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> a
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> b
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    boolean isPrimitive(java.lang.reflect.Type) -> a
    java.lang.Class wrap(java.lang.Class) -> a
com.google.gson.internal.Streams -> com.google.gson.internal.ac:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.ad:
    java.lang.Object newInstance(java.lang.Class) -> a
    com.google.gson.internal.UnsafeAllocator create() -> a
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.ae:
    java.lang.reflect.Method val$allocateInstance -> a
    java.lang.Object val$unsafe -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.af:
    java.lang.reflect.Method val$newInstance -> a
    int val$constructorId -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.ag:
    java.lang.reflect.Method val$newInstance -> a
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.ah:
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.a.a:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.lang.Class componentType -> b
    com.google.gson.TypeAdapter componentTypeAdapter -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.a.b:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.a.c:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.a.d:
    com.google.gson.TypeAdapter elementTypeAdapter -> a
    com.google.gson.internal.ObjectConstructor constructor -> b
    java.util.Collection read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.a.e:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat enUsFormat -> b
    java.text.DateFormat localFormat -> c
    java.util.Date read(com.google.gson.stream.JsonReader) -> a
    java.util.Date deserializeToDate(java.lang.String) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.a.f:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory -> com.google.gson.internal.a.g:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter) -> a
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.a.h:
    java.io.Reader UNREADABLE_READER -> a
    java.lang.Object SENTINEL_CLOSED -> b
    java.util.List stack -> c
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    java.lang.Object peekStack() -> r
    java.lang.Object popStack() -> s
    void expect(com.google.gson.stream.JsonToken) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    java.lang.String toString() -> toString
    void promoteNameToValue() -> o
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.a.i:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.a.j:
    java.io.Writer UNWRITABLE_WRITER -> a
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> b
    java.util.List stack -> c
    java.lang.String pendingName -> d
    com.google.gson.JsonElement product -> e
    com.google.gson.JsonElement get() -> a
    com.google.gson.JsonElement peek() -> i
    void put(com.google.gson.JsonElement) -> a
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.a.k:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.a.l:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    boolean complexMapKeySerialization -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> a
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> a
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.a.m:
    com.google.gson.TypeAdapter keyTypeAdapter -> b
    com.google.gson.TypeAdapter valueTypeAdapter -> c
    com.google.gson.internal.ObjectConstructor constructor -> d
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> a
    java.util.Map read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> a
    java.lang.String keyToString(com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.a.n:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    com.google.gson.Gson gson -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.a.o:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.a.p:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.a.q:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> b
    com.google.gson.internal.Excluder excluder -> c
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    boolean excludeField(java.lang.reflect.Field,boolean,com.google.gson.internal.Excluder) -> a
    java.util.List getFieldNames(java.lang.reflect.Field) -> a
    java.util.List getFieldName(com.google.gson.FieldNamingStrategy,java.lang.reflect.Field) -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> a
    com.google.gson.TypeAdapter getFieldAdapter(com.google.gson.Gson,java.lang.reflect.Field,com.google.gson.reflect.TypeToken) -> a
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> a
    com.google.gson.TypeAdapter access$100(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Field,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.a.r:
    com.google.gson.TypeAdapter typeAdapter -> a
    com.google.gson.Gson val$context -> b
    java.lang.reflect.Field val$field -> c
    com.google.gson.reflect.TypeToken val$fieldType -> d
    boolean val$isPrimitive -> e
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> f
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
    boolean writeField(java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.a.s:
    com.google.gson.internal.ObjectConstructor constructor -> a
    java.util.Map boundFields -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.a.t:
    java.lang.String name -> g
    boolean serialized -> h
    boolean deserialized -> i
    boolean writeField(java.lang.Object) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.a.u:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Date read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.a.v:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.a.w:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Time read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.a.x:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.a.y:
    com.google.gson.Gson context -> a
    com.google.gson.TypeAdapter delegate -> b
    java.lang.reflect.Type type -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.a.z:
    com.google.gson.TypeAdapter CLASS -> a
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> b
    com.google.gson.TypeAdapter BIT_SET -> c
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> d
    com.google.gson.TypeAdapter BOOLEAN -> e
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> f
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> g
    com.google.gson.TypeAdapter BYTE -> h
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> i
    com.google.gson.TypeAdapter SHORT -> j
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> k
    com.google.gson.TypeAdapter INTEGER -> l
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> m
    com.google.gson.TypeAdapter ATOMIC_INTEGER -> n
    com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_FACTORY -> o
    com.google.gson.TypeAdapter ATOMIC_BOOLEAN -> p
    com.google.gson.TypeAdapterFactory ATOMIC_BOOLEAN_FACTORY -> q
    com.google.gson.TypeAdapter ATOMIC_INTEGER_ARRAY -> r
    com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_ARRAY_FACTORY -> s
    com.google.gson.TypeAdapter LONG -> t
    com.google.gson.TypeAdapter FLOAT -> u
    com.google.gson.TypeAdapter DOUBLE -> v
    com.google.gson.TypeAdapter NUMBER -> w
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> x
    com.google.gson.TypeAdapter CHARACTER -> y
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> z
    com.google.gson.TypeAdapter STRING -> A
    com.google.gson.TypeAdapter BIG_DECIMAL -> B
    com.google.gson.TypeAdapter BIG_INTEGER -> C
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> D
    com.google.gson.TypeAdapter STRING_BUILDER -> E
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> F
    com.google.gson.TypeAdapter STRING_BUFFER -> G
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> H
    com.google.gson.TypeAdapter URL -> I
    com.google.gson.TypeAdapterFactory URL_FACTORY -> J
    com.google.gson.TypeAdapter URI -> K
    com.google.gson.TypeAdapterFactory URI_FACTORY -> L
    com.google.gson.TypeAdapter INET_ADDRESS -> M
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> N
    com.google.gson.TypeAdapter UUID -> O
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> P
    com.google.gson.TypeAdapter CURRENCY -> Q
    com.google.gson.TypeAdapterFactory CURRENCY_FACTORY -> R
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> S
    com.google.gson.TypeAdapter CALENDAR -> T
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> U
    com.google.gson.TypeAdapter LOCALE -> V
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> W
    com.google.gson.TypeAdapter JSON_ELEMENT -> X
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> Y
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> Z
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> b
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> b
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.a.aa:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> a
    java.lang.Class read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.a.ab:
    java.util.concurrent.atomic.AtomicIntegerArray read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicIntegerArray) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.a.ac:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.a.ad:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.a.ae:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.a.af:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.a.ag:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.a.ah:
    java.lang.String read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.a.ai:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.a.aj:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.a.ak:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.a.al:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.a.am:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.a.an:
    java.net.URL read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.a.ao:
    java.net.URI read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.a.ap:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.a.aq:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.a.ar:
    java.util.Currency read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Currency) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.a.as:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$26$1 -> com.google.gson.internal.a.at:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> a
    com.google.gson.internal.bind.TypeAdapters$26 this$0 -> b
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.a.au:
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.a.av:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.a.aw:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.a.ax:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.a.ay:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.a.az:
    com.google.gson.reflect.TypeToken val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.a.ba:
    java.lang.Class val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$33 -> com.google.gson.internal.a.bb:
    java.lang.Class val$unboxed -> a
    java.lang.Class val$boxed -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$34 -> com.google.gson.internal.a.bc:
    java.lang.Class val$base -> a
    java.lang.Class val$sub -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$35 -> com.google.gson.internal.a.bd:
    java.lang.Class val$clazz -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$35$1 -> com.google.gson.internal.a.be:
    java.lang.Class val$requestedType -> a
    com.google.gson.internal.bind.TypeAdapters$35 this$0 -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
com.google.gson.internal.bind.TypeAdapters$36 -> com.google.gson.internal.a.bf:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.a.bg:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.a.bh:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.a.bi:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.a.bj:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.a.bk:
    java.util.concurrent.atomic.AtomicInteger read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicInteger) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.a.bl:
    java.util.concurrent.atomic.AtomicBoolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicBoolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.a.bm:
    java.util.Map nameToConstant -> a
    java.util.Map constantToName -> b
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.util.ISO8601Utils -> com.google.gson.internal.a.a.a:
    java.util.TimeZone TIMEZONE_UTC -> a
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> a
    boolean checkOffset(java.lang.String,int,char) -> a
    int parseInt(java.lang.String,int,int) -> a
    int indexOfNonDigit(java.lang.String,int) -> a
com.google.gson.reflect.TypeToken -> com.google.gson.b.a:
    java.lang.Class rawType -> a
    java.lang.reflect.Type type -> b
    int hashCode -> c
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> a
    java.lang.Class getRawType() -> a
    java.lang.reflect.Type getType() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> a
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> b
com.google.gson.stream.JsonReader -> com.google.gson.stream.a:
    char[] NON_EXECUTE_PREFIX -> a
    java.io.Reader in -> b
    boolean lenient -> c
    char[] buffer -> d
    int pos -> e
    int limit -> f
    int lineNumber -> g
    int lineStart -> h
    int peeked -> i
    long peekedLong -> j
    int peekedNumberLength -> k
    java.lang.String peekedString -> l
    int[] stack -> m
    int stackSize -> n
    java.lang.String[] pathNames -> o
    int[] pathIndices -> p
    void setLenient(boolean) -> a
    boolean isLenient() -> p
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    int doPeek() -> o
    int peekKeyword() -> r
    int peekNumber() -> s
    boolean isLiteral(char) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    java.lang.String nextQuotedValue(char) -> b
    java.lang.String nextUnquotedValue() -> t
    void skipQuotedValue(char) -> c
    void skipUnquotedValue() -> u
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    void push(int) -> a
    boolean fillBuffer(int) -> b
    int getLineNumber() -> v
    int getColumnNumber() -> w
    int nextNonWhitespace(boolean) -> b
    void checkLenient() -> x
    void skipToEndOfLine() -> y
    boolean skipTo(java.lang.String) -> a
    java.lang.String toString() -> toString
    java.lang.String getPath() -> q
    char readEscapeCharacter() -> z
    java.io.IOException syntaxError(java.lang.String) -> b
    void consumeNonExecutePrefix() -> A
    int access$000(com.google.gson.stream.JsonReader) -> a
    int access$100(com.google.gson.stream.JsonReader) -> b
    int access$002(com.google.gson.stream.JsonReader,int) -> a
    int access$200(com.google.gson.stream.JsonReader) -> c
    int access$300(com.google.gson.stream.JsonReader) -> d
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.b:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> a
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.gson.stream.c:
    java.lang.String[] REPLACEMENT_CHARS -> a
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> b
    java.io.Writer out -> c
    int[] stack -> d
    int stackSize -> e
    java.lang.String indent -> f
    java.lang.String separator -> g
    boolean lenient -> h
    boolean htmlSafe -> i
    java.lang.String deferredName -> j
    boolean serializeNulls -> k
    void setLenient(boolean) -> b
    boolean isLenient() -> g
    boolean getSerializeNulls() -> h
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> a
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> a
    void push(int) -> a
    int peek() -> a
    void replaceTop(int) -> b
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    void writeDeferredName() -> i
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> c
    void newline() -> j
    void beforeName() -> k
    void beforeValue(boolean) -> c
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
com.handmark.pulltorefresh.library.ILoadingLayout -> com.handmark.pulltorefresh.library.a:
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
com.handmark.pulltorefresh.library.LoadingLayoutProxy -> com.handmark.pulltorefresh.library.b:
    java.util.HashSet mLoadingLayouts -> a
    void addLayout(com.handmark.pulltorefresh.library.internal.LoadingLayout) -> a
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
com.handmark.pulltorefresh.library.OverscrollHelper -> com.handmark.pulltorefresh.library.c:
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,boolean) -> a
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,int,boolean) -> a
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,int,int,float,boolean) -> a
    boolean isAndroidOverScrollEnabled(android.view.View) -> a
com.handmark.pulltorefresh.library.OverscrollHelper$1 -> com.handmark.pulltorefresh.library.d:
    int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> a
com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase -> com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase:
    boolean mLastItemVisible -> b
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnLastItemVisibleListener mOnLastItemVisibleListener -> d
    android.view.View mEmptyView -> e
    com.handmark.pulltorefresh.library.internal.IndicatorLayout mIndicatorIvTop -> f
    com.handmark.pulltorefresh.library.internal.IndicatorLayout mIndicatorIvBottom -> g
    boolean mShowIndicator -> h
    boolean mScrollEmptyView -> i
    android.widget.FrameLayout$LayoutParams convertEmptyViewLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean getShowIndicator() -> getShowIndicator
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnLastItemVisibleListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnLastItemVisibleListener) -> setOnLastItemVisibleListener
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setScrollEmptyView(boolean) -> setScrollEmptyView
    void setShowIndicator(boolean) -> setShowIndicator
    void onPullToRefresh() -> a
    void onRefreshing(boolean) -> a
    void onReleaseToRefresh() -> b
    void onReset() -> c
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void updateUIForMode() -> f
    void addIndicatorViews() -> o
    boolean getShowIndicatorInternal() -> getShowIndicatorInternal
    boolean isFirstItemVisible() -> p
    boolean isLastItemVisible() -> q
    void removeIndicatorViews() -> r
    void updateIndicatorViewsVisibility() -> s
com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase$1 -> com.handmark.pulltorefresh.library.e:
    int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> a
com.handmark.pulltorefresh.library.PullToRefreshBase -> com.handmark.pulltorefresh.library.PullToRefreshBase:
    int mTouchSlop -> b
    float mLastMotionX -> c
    float mLastMotionY -> d
    float mInitialMotionX -> e
    float mInitialMotionY -> f
    boolean mIsBeingDragged -> g
    com.handmark.pulltorefresh.library.PullToRefreshBase$State mState -> h
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mMode -> i
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mCurrentMode -> j
    android.view.View mRefreshableView -> a
    android.widget.FrameLayout mRefreshableViewWrapper -> k
    boolean mShowViewWhileRefreshing -> l
    boolean mScrollingWhileRefreshingEnabled -> m
    boolean mFilterTouchEvents -> n
    boolean mOverScrollEnabled -> o
    boolean mLayoutVisibilityChangesEnabled -> p
    android.view.animation.Interpolator mScrollAnimationInterpolator -> q
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle mLoadingAnimationStyle -> r
    com.handmark.pulltorefresh.library.internal.LoadingLayout mHeaderLayout -> s
    com.handmark.pulltorefresh.library.internal.LoadingLayout mFooterLayout -> t
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener mOnRefreshListener -> u
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2 mOnRefreshListener2 -> v
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnPullEventListener mOnPullEventListener -> w
    com.handmark.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable mCurrentSmoothScrollRunnable -> x
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getCurrentMode() -> getCurrentMode
    boolean getFilterTouchEvents() -> getFilterTouchEvents
    com.handmark.pulltorefresh.library.ILoadingLayout getLoadingLayoutProxy() -> getLoadingLayoutProxy
    com.handmark.pulltorefresh.library.ILoadingLayout getLoadingLayoutProxy(boolean,boolean) -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getMode() -> getMode
    android.view.View getRefreshableView() -> getRefreshableView
    boolean getShowViewWhileRefreshing() -> getShowViewWhileRefreshing
    com.handmark.pulltorefresh.library.PullToRefreshBase$State getState() -> getState
    boolean isPullToRefreshEnabled() -> g
    boolean isPullToRefreshOverScrollEnabled() -> h
    boolean isRefreshing() -> i
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onRefreshComplete() -> j
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setScrollingWhileRefreshingEnabled(boolean) -> setScrollingWhileRefreshingEnabled
    void setDisableScrollingWhileRefreshing(boolean) -> setDisableScrollingWhileRefreshing
    void setFilterTouchEvents(boolean) -> setFilterTouchEvents
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setLoadingDrawable(android.graphics.drawable.Drawable,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setLoadingDrawable
    void setLongClickable(boolean) -> setLongClickable
    void setMode(com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setMode
    void setOnPullEventListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnPullEventListener) -> setOnPullEventListener
    void setOnRefreshListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener) -> setOnRefreshListener
    void setOnRefreshListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2) -> setOnRefreshListener
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setPullLabel(java.lang.CharSequence,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setPullLabel
    void setPullToRefreshEnabled(boolean) -> setPullToRefreshEnabled
    void setPullToRefreshOverScrollEnabled(boolean) -> setPullToRefreshOverScrollEnabled
    void setRefreshing() -> setRefreshing
    void setRefreshing(boolean) -> setRefreshing
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setRefreshingLabel(java.lang.CharSequence,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
    void setReleaseLabel(java.lang.CharSequence,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setReleaseLabel
    void setScrollAnimationInterpolator(android.view.animation.Interpolator) -> setScrollAnimationInterpolator
    void setShowViewWhileRefreshing(boolean) -> setShowViewWhileRefreshing
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    void setState(com.handmark.pulltorefresh.library.PullToRefreshBase$State,boolean[]) -> a
    void addViewInternal(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    void addViewInternal(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    com.handmark.pulltorefresh.library.internal.LoadingLayout createLoadingLayout(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,android.content.res.TypedArray) -> a
    com.handmark.pulltorefresh.library.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> b
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
    void disableLoadingLayoutVisibilityChanges() -> k
    com.handmark.pulltorefresh.library.internal.LoadingLayout getFooterLayout() -> getFooterLayout
    int getFooterSize() -> getFooterSize
    com.handmark.pulltorefresh.library.internal.LoadingLayout getHeaderLayout() -> getHeaderLayout
    int getHeaderSize() -> getHeaderSize
    int getPullToRefreshScrollDuration() -> getPullToRefreshScrollDuration
    int getPullToRefreshScrollDurationLonger() -> getPullToRefreshScrollDurationLonger
    android.widget.FrameLayout getRefreshableViewWrapper() -> getRefreshableViewWrapper
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    boolean isReadyForPullEnd() -> e
    boolean isReadyForPullStart() -> d
    void onPtrRestoreInstanceState(android.os.Bundle) -> a
    void onPtrSaveInstanceState(android.os.Bundle) -> b
    void onPullToRefresh() -> a
    void onRefreshing(boolean) -> a
    void onReleaseToRefresh() -> b
    void onReset() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void refreshLoadingViewsSize() -> l
    void refreshRefreshableViewSize(int,int) -> a
    void setHeaderScroll(int) -> setHeaderScroll
    void smoothScrollTo(int) -> a
    void smoothScrollTo(int,com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener) -> a
    void updateUIForMode() -> f
    void addRefreshableView(android.content.Context,android.view.View) -> a
    void callRefreshListener() -> o
    void init(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPull() -> p
    void pullEvent() -> q
    android.widget.LinearLayout$LayoutParams getLoadingLayoutLayoutParams() -> getLoadingLayoutLayoutParams
    int getMaximumPullScroll() -> getMaximumPullScroll
    void smoothScrollTo(int,long) -> a
    void smoothScrollTo(int,long,long,com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener) -> a
    boolean isHeaderShown() -> m
    boolean isFooterShown() -> n
    void access$000(com.handmark.pulltorefresh.library.PullToRefreshBase) -> a
    android.view.animation.Interpolator access$200(com.handmark.pulltorefresh.library.PullToRefreshBase) -> b
com.handmark.pulltorefresh.library.PullToRefreshBase$1 -> com.handmark.pulltorefresh.library.f:
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> a
    void onSmoothScrollFinished() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$2 -> com.handmark.pulltorefresh.library.g:
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> a
    void run() -> run
com.handmark.pulltorefresh.library.PullToRefreshBase$4 -> com.handmark.pulltorefresh.library.h:
    int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> a
    int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$State -> b
    int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> c
    int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$AnimationStyle -> d
com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle -> com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle:
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle ROTATE -> ROTATE
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle FLIP -> FLIP
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle[] $VALUES -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle[] values() -> values
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle valueOf(java.lang.String) -> valueOf
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle getDefault() -> getDefault
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle mapIntToValue(int) -> mapIntToValue
    com.handmark.pulltorefresh.library.internal.LoadingLayout createLoadingLayout(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation,android.content.res.TypedArray) -> createLoadingLayout
com.handmark.pulltorefresh.library.PullToRefreshBase$Mode -> com.handmark.pulltorefresh.library.PullToRefreshBase$Mode:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode DISABLED -> DISABLED
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_FROM_START -> PULL_FROM_START
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_FROM_END -> PULL_FROM_END
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode BOTH -> BOTH
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode MANUAL_REFRESH_ONLY -> MANUAL_REFRESH_ONLY
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_DOWN_TO_REFRESH -> PULL_DOWN_TO_REFRESH
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_UP_TO_REFRESH -> PULL_UP_TO_REFRESH
    int mIntValue -> mIntValue
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode[] $VALUES -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode[] values() -> values
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode valueOf(java.lang.String) -> valueOf
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mapIntToValue(int) -> mapIntToValue
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getDefault() -> getDefault
    boolean permitsPullToRefresh() -> permitsPullToRefresh
    boolean showHeaderLoadingLayout() -> showHeaderLoadingLayout
    boolean showFooterLoadingLayout() -> showFooterLoadingLayout
    int getIntValue() -> getIntValue
com.handmark.pulltorefresh.library.PullToRefreshBase$OnLastItemVisibleListener -> com.handmark.pulltorefresh.library.i:
    void onLastItemVisible() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$OnPullEventListener -> com.handmark.pulltorefresh.library.j:
    void onPullEvent(com.handmark.pulltorefresh.library.PullToRefreshBase,com.handmark.pulltorefresh.library.PullToRefreshBase$State,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener -> com.handmark.pulltorefresh.library.k:
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2 -> com.handmark.pulltorefresh.library.l:
    void onPullDownToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> a
    void onPullUpToRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> b
com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener -> com.handmark.pulltorefresh.library.m:
    void onSmoothScrollFinished() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation -> com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation VERTICAL -> VERTICAL
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation HORIZONTAL -> HORIZONTAL
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation[] $VALUES -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation[] values() -> values
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation valueOf(java.lang.String) -> valueOf
com.handmark.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable -> com.handmark.pulltorefresh.library.n:
    android.view.animation.Interpolator mInterpolator -> b
    int mScrollToY -> c
    int mScrollFromY -> d
    long mDuration -> e
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener mListener -> f
    boolean mContinueRunning -> g
    long mStartTime -> h
    int mCurrentY -> i
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> a
    void run() -> run
    void stop() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$State -> com.handmark.pulltorefresh.library.PullToRefreshBase$State:
    com.handmark.pulltorefresh.library.PullToRefreshBase$State RESET -> RESET
    com.handmark.pulltorefresh.library.PullToRefreshBase$State PULL_TO_REFRESH -> PULL_TO_REFRESH
    com.handmark.pulltorefresh.library.PullToRefreshBase$State RELEASE_TO_REFRESH -> RELEASE_TO_REFRESH
    com.handmark.pulltorefresh.library.PullToRefreshBase$State REFRESHING -> REFRESHING
    com.handmark.pulltorefresh.library.PullToRefreshBase$State MANUAL_REFRESHING -> MANUAL_REFRESHING
    com.handmark.pulltorefresh.library.PullToRefreshBase$State OVERSCROLLING -> OVERSCROLLING
    int mIntValue -> mIntValue
    com.handmark.pulltorefresh.library.PullToRefreshBase$State[] $VALUES -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$State[] values() -> values
    com.handmark.pulltorefresh.library.PullToRefreshBase$State valueOf(java.lang.String) -> valueOf
    com.handmark.pulltorefresh.library.PullToRefreshBase$State mapIntToValue(int) -> mapIntToValue
    int getIntValue() -> getIntValue
com.handmark.pulltorefresh.library.PullToRefreshExpandableListView -> com.handmark.pulltorefresh.library.PullToRefreshExpandableListView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    android.widget.ExpandableListView createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshExpandableListView$InternalExpandableListView -> com.handmark.pulltorefresh.library.o:
    com.handmark.pulltorefresh.library.PullToRefreshExpandableListView this$0 -> a
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.PullToRefreshExpandableListView$InternalExpandableListViewSDK9 -> com.handmark.pulltorefresh.library.p:
    com.handmark.pulltorefresh.library.PullToRefreshExpandableListView this$0 -> b
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.PullToRefreshGridView -> com.handmark.pulltorefresh.library.PullToRefreshGridView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    android.widget.GridView createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshGridView$InternalGridView -> com.handmark.pulltorefresh.library.q:
    com.handmark.pulltorefresh.library.PullToRefreshGridView this$0 -> a
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.PullToRefreshGridView$InternalGridViewSDK9 -> com.handmark.pulltorefresh.library.r:
    com.handmark.pulltorefresh.library.PullToRefreshGridView this$0 -> b
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.PullToRefreshHorizontalScrollView -> com.handmark.pulltorefresh.library.PullToRefreshHorizontalScrollView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    android.widget.HorizontalScrollView createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshHorizontalScrollView$InternalHorizontalScrollViewSDK9 -> com.handmark.pulltorefresh.library.s:
    com.handmark.pulltorefresh.library.PullToRefreshHorizontalScrollView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
    int getScrollRange() -> a
com.handmark.pulltorefresh.library.PullToRefreshListView -> com.handmark.pulltorefresh.library.PullToRefreshListView:
    com.handmark.pulltorefresh.library.internal.LoadingLayout mHeaderLoadingView -> b
    com.handmark.pulltorefresh.library.internal.LoadingLayout mFooterLoadingView -> c
    android.widget.FrameLayout mLvFooterLoadingFrame -> d
    boolean mListViewExtrasEnabled -> e
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    void onRefreshing(boolean) -> a
    void onReset() -> c
    com.handmark.pulltorefresh.library.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> b
    android.widget.ListView createListView(android.content.Context,android.util.AttributeSet) -> b
    android.widget.ListView createRefreshableView(android.content.Context,android.util.AttributeSet) -> c
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
    android.widget.FrameLayout access$000(com.handmark.pulltorefresh.library.PullToRefreshListView) -> a
com.handmark.pulltorefresh.library.PullToRefreshListView$1 -> com.handmark.pulltorefresh.library.t:
    int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> a
com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListView -> com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListView:
    boolean mAddedLvFooter -> b
    com.handmark.pulltorefresh.library.PullToRefreshListView this$0 -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
    void setAdapter(android.widget.Adapter) -> setAdapter
com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListViewSDK9 -> com.handmark.pulltorefresh.library.u:
    com.handmark.pulltorefresh.library.PullToRefreshListView this$0 -> b
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.PullToRefreshRecyclerView -> com.handmark.pulltorefresh.library.PullToRefreshRecyclerView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    android.support.v7.widget.RecyclerView createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshScrollView -> com.handmark.pulltorefresh.library.PullToRefreshScrollView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    android.widget.ScrollView createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshScrollView$InternalScrollViewSDK9 -> com.handmark.pulltorefresh.library.v:
    com.handmark.pulltorefresh.library.PullToRefreshScrollView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
    int getScrollRange() -> a
com.handmark.pulltorefresh.library.PullToRefreshWebView -> com.handmark.pulltorefresh.library.PullToRefreshWebView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener defaultOnRefreshListener -> b
    android.webkit.WebChromeClient defaultWebChromeClient -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    android.webkit.WebView createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    void onPtrRestoreInstanceState(android.os.Bundle) -> a
    void onPtrSaveInstanceState(android.os.Bundle) -> b
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshWebView$1 -> com.handmark.pulltorefresh.library.w:
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> a
com.handmark.pulltorefresh.library.PullToRefreshWebView$2 -> com.handmark.pulltorefresh.library.x:
    com.handmark.pulltorefresh.library.PullToRefreshWebView this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.handmark.pulltorefresh.library.PullToRefreshWebView$InternalWebViewSDK9 -> com.handmark.pulltorefresh.library.y:
    com.handmark.pulltorefresh.library.PullToRefreshWebView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
    int getScrollRange() -> a
com.handmark.pulltorefresh.library.R -> com.handmark.pulltorefresh.library.z:
com.handmark.pulltorefresh.library.R$anim -> com.handmark.pulltorefresh.library.aa:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_grow_fade_in_from_bottom -> abc_grow_fade_in_from_bottom
    int abc_popup_enter -> abc_popup_enter
    int abc_popup_exit -> abc_popup_exit
    int abc_shrink_fade_out_from_bottom -> abc_shrink_fade_out_from_bottom
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
    int slide_in_from_bottom -> slide_in_from_bottom
    int slide_in_from_top -> slide_in_from_top
    int slide_out_to_bottom -> slide_out_to_bottom
    int slide_out_to_top -> slide_out_to_top
com.handmark.pulltorefresh.library.R$dimen -> com.handmark.pulltorefresh.library.ab:
    int abc_action_bar_content_inset_material -> abc_action_bar_content_inset_material
    int abc_action_bar_default_height_material -> abc_action_bar_default_height_material
    int abc_action_bar_default_padding_end_material -> abc_action_bar_default_padding_end_material
    int abc_action_bar_default_padding_start_material -> abc_action_bar_default_padding_start_material
    int abc_action_bar_icon_vertical_padding_material -> abc_action_bar_icon_vertical_padding_material
    int abc_action_bar_overflow_padding_end_material -> abc_action_bar_overflow_padding_end_material
    int abc_action_bar_overflow_padding_start_material -> abc_action_bar_overflow_padding_start_material
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin_material -> abc_action_bar_subtitle_bottom_margin_material
    int abc_action_bar_subtitle_top_margin_material -> abc_action_bar_subtitle_top_margin_material
    int abc_action_button_min_height_material -> abc_action_button_min_height_material
    int abc_action_button_min_width_material -> abc_action_button_min_width_material
    int abc_action_button_min_width_overflow_material -> abc_action_button_min_width_overflow_material
    int abc_alert_dialog_button_bar_height -> abc_alert_dialog_button_bar_height
    int abc_button_inset_horizontal_material -> abc_button_inset_horizontal_material
    int abc_button_inset_vertical_material -> abc_button_inset_vertical_material
    int abc_button_padding_horizontal_material -> abc_button_padding_horizontal_material
    int abc_button_padding_vertical_material -> abc_button_padding_vertical_material
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_control_corner_material -> abc_control_corner_material
    int abc_control_inset_material -> abc_control_inset_material
    int abc_control_padding_material -> abc_control_padding_material
    int abc_dialog_list_padding_vertical_material -> abc_dialog_list_padding_vertical_material
    int abc_dialog_min_width_major -> abc_dialog_min_width_major
    int abc_dialog_min_width_minor -> abc_dialog_min_width_minor
    int abc_dialog_padding_material -> abc_dialog_padding_material
    int abc_dialog_padding_top_material -> abc_dialog_padding_top_material
    int abc_disabled_alpha_material_dark -> abc_disabled_alpha_material_dark
    int abc_disabled_alpha_material_light -> abc_disabled_alpha_material_light
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_edit_text_inset_bottom_material -> abc_edit_text_inset_bottom_material
    int abc_edit_text_inset_horizontal_material -> abc_edit_text_inset_horizontal_material
    int abc_edit_text_inset_top_material -> abc_edit_text_inset_top_material
    int abc_floating_window_z -> abc_floating_window_z
    int abc_list_item_padding_horizontal_material -> abc_list_item_padding_horizontal_material
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_search_view_text_min_width -> abc_search_view_text_min_width
    int abc_switch_padding -> abc_switch_padding
    int abc_text_size_body_1_material -> abc_text_size_body_1_material
    int abc_text_size_body_2_material -> abc_text_size_body_2_material
    int abc_text_size_button_material -> abc_text_size_button_material
    int abc_text_size_caption_material -> abc_text_size_caption_material
    int abc_text_size_display_1_material -> abc_text_size_display_1_material
    int abc_text_size_display_2_material -> abc_text_size_display_2_material
    int abc_text_size_display_3_material -> abc_text_size_display_3_material
    int abc_text_size_display_4_material -> abc_text_size_display_4_material
    int abc_text_size_headline_material -> abc_text_size_headline_material
    int abc_text_size_large_material -> abc_text_size_large_material
    int abc_text_size_medium_material -> abc_text_size_medium_material
    int abc_text_size_menu_material -> abc_text_size_menu_material
    int abc_text_size_small_material -> abc_text_size_small_material
    int abc_text_size_subhead_material -> abc_text_size_subhead_material
    int abc_text_size_subtitle_material_toolbar -> abc_text_size_subtitle_material_toolbar
    int abc_text_size_title_material -> abc_text_size_title_material
    int abc_text_size_title_material_toolbar -> abc_text_size_title_material_toolbar
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
    int disabled_alpha_material_dark -> disabled_alpha_material_dark
    int disabled_alpha_material_light -> disabled_alpha_material_light
    int header_footer_left_right_padding -> header_footer_left_right_padding
    int header_footer_top_bottom_padding -> header_footer_top_bottom_padding
    int highlight_alpha_material_colored -> highlight_alpha_material_colored
    int highlight_alpha_material_dark -> highlight_alpha_material_dark
    int highlight_alpha_material_light -> highlight_alpha_material_light
    int indicator_corner_radius -> indicator_corner_radius
    int indicator_internal_padding -> indicator_internal_padding
    int indicator_right_padding -> indicator_right_padding
    int item_touch_helper_max_drag_scroll_per_frame -> item_touch_helper_max_drag_scroll_per_frame
    int notification_large_icon_height -> notification_large_icon_height
    int notification_large_icon_width -> notification_large_icon_width
    int notification_subtext_size -> notification_subtext_size
com.handmark.pulltorefresh.library.R$drawable -> com.handmark.pulltorefresh.library.ac:
    int abc_ab_share_pack_mtrl_alpha -> abc_ab_share_pack_mtrl_alpha
    int abc_action_bar_item_background_material -> abc_action_bar_item_background_material
    int abc_btn_borderless_material -> abc_btn_borderless_material
    int abc_btn_check_material -> abc_btn_check_material
    int abc_btn_check_to_on_mtrl_000 -> abc_btn_check_to_on_mtrl_000
    int abc_btn_check_to_on_mtrl_015 -> abc_btn_check_to_on_mtrl_015
    int abc_btn_colored_material -> abc_btn_colored_material
    int abc_btn_default_mtrl_shape -> abc_btn_default_mtrl_shape
    int abc_btn_radio_material -> abc_btn_radio_material
    int abc_btn_radio_to_on_mtrl_000 -> abc_btn_radio_to_on_mtrl_000
    int abc_btn_radio_to_on_mtrl_015 -> abc_btn_radio_to_on_mtrl_015
    int abc_btn_rating_star_off_mtrl_alpha -> abc_btn_rating_star_off_mtrl_alpha
    int abc_btn_rating_star_on_mtrl_alpha -> abc_btn_rating_star_on_mtrl_alpha
    int abc_btn_switch_to_on_mtrl_00001 -> abc_btn_switch_to_on_mtrl_00001
    int abc_btn_switch_to_on_mtrl_00012 -> abc_btn_switch_to_on_mtrl_00012
    int abc_cab_background_internal_bg -> abc_cab_background_internal_bg
    int abc_cab_background_top_material -> abc_cab_background_top_material
    int abc_cab_background_top_mtrl_alpha -> abc_cab_background_top_mtrl_alpha
    int abc_control_background_material -> abc_control_background_material
    int abc_dialog_material_background_dark -> abc_dialog_material_background_dark
    int abc_dialog_material_background_light -> abc_dialog_material_background_light
    int abc_edit_text_material -> abc_edit_text_material
    int abc_ic_ab_back_mtrl_am_alpha -> abc_ic_ab_back_mtrl_am_alpha
    int abc_ic_clear_mtrl_alpha -> abc_ic_clear_mtrl_alpha
    int abc_ic_commit_search_api_mtrl_alpha -> abc_ic_commit_search_api_mtrl_alpha
    int abc_ic_go_search_api_mtrl_alpha -> abc_ic_go_search_api_mtrl_alpha
    int abc_ic_menu_copy_mtrl_am_alpha -> abc_ic_menu_copy_mtrl_am_alpha
    int abc_ic_menu_cut_mtrl_alpha -> abc_ic_menu_cut_mtrl_alpha
    int abc_ic_menu_moreoverflow_mtrl_alpha -> abc_ic_menu_moreoverflow_mtrl_alpha
    int abc_ic_menu_paste_mtrl_am_alpha -> abc_ic_menu_paste_mtrl_am_alpha
    int abc_ic_menu_selectall_mtrl_alpha -> abc_ic_menu_selectall_mtrl_alpha
    int abc_ic_menu_share_mtrl_alpha -> abc_ic_menu_share_mtrl_alpha
    int abc_ic_search_api_mtrl_alpha -> abc_ic_search_api_mtrl_alpha
    int abc_ic_voice_search_api_mtrl_alpha -> abc_ic_voice_search_api_mtrl_alpha
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_mtrl_alpha -> abc_list_divider_mtrl_alpha
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_hardkey_panel_mtrl_mult -> abc_menu_hardkey_panel_mtrl_mult
    int abc_popup_background_mtrl_mult -> abc_popup_background_mtrl_mult
    int abc_ratingbar_full_material -> abc_ratingbar_full_material
    int abc_spinner_mtrl_am_alpha -> abc_spinner_mtrl_am_alpha
    int abc_spinner_textfield_background_material -> abc_spinner_textfield_background_material
    int abc_switch_thumb_material -> abc_switch_thumb_material
    int abc_switch_track_mtrl_alpha -> abc_switch_track_mtrl_alpha
    int abc_tab_indicator_material -> abc_tab_indicator_material
    int abc_tab_indicator_mtrl_alpha -> abc_tab_indicator_mtrl_alpha
    int abc_text_cursor_material -> abc_text_cursor_material
    int abc_textfield_activated_mtrl_alpha -> abc_textfield_activated_mtrl_alpha
    int abc_textfield_default_mtrl_alpha -> abc_textfield_default_mtrl_alpha
    int abc_textfield_search_activated_mtrl_alpha -> abc_textfield_search_activated_mtrl_alpha
    int abc_textfield_search_default_mtrl_alpha -> abc_textfield_search_default_mtrl_alpha
    int abc_textfield_search_material -> abc_textfield_search_material
    int default_ptr_flip -> default_ptr_flip
    int default_ptr_rotate -> default_ptr_rotate
    int indicator_arrow -> indicator_arrow
    int indicator_bg_bottom -> indicator_bg_bottom
    int indicator_bg_top -> indicator_bg_top
    int notification_template_icon_bg -> notification_template_icon_bg
com.handmark.pulltorefresh.library.R$id -> com.handmark.pulltorefresh.library.ad:
    int action0 -> action0
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_root -> action_bar_root
    int action_bar_spinner -> action_bar_spinner
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_divider -> action_divider
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int alertTitle -> alertTitle
    int always -> always
    int beginning -> beginning
    int both -> both
    int buttonPanel -> buttonPanel
    int cancel_action -> cancel_action
    int checkbox -> checkbox
    int chronometer -> chronometer
    int collapseActionView -> collapseActionView
    int contentPanel -> contentPanel
    int custom -> custom
    int customPanel -> customPanel
    int decor_content_parent -> decor_content_parent
    int default_activity_button -> default_activity_button
    int disableHome -> disableHome
    int disabled -> disabled
    int edit_query -> edit_query
    int end -> end
    int end_padder -> end_padder
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int fl_inner -> fl_inner
    int flip -> flip
    int gridview -> gridview
    int home -> home
    int homeAsUp -> homeAsUp
    int icon -> icon
    int ifRoom -> ifRoom
    int image -> image
    int info -> info
    int item_touch_helper_previous_elevation -> item_touch_helper_previous_elevation
    int line1 -> line1
    int line3 -> line3
    int listMode -> listMode
    int list_item -> list_item
    int manualOnly -> manualOnly
    int media_actions -> media_actions
    int middle -> middle
    int multiply -> multiply
    int never -> never
    int none -> none
    int normal -> normal
    int parentPanel -> parentPanel
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int pullDownFromTop -> pullDownFromTop
    int pullFromEnd -> pullFromEnd
    int pullFromStart -> pullFromStart
    int pullUpFromBottom -> pullUpFromBottom
    int pull_to_refresh_image -> pull_to_refresh_image
    int pull_to_refresh_progress -> pull_to_refresh_progress
    int pull_to_refresh_sub_text -> pull_to_refresh_sub_text
    int pull_to_refresh_text -> pull_to_refresh_text
    int radio -> radio
    int recyclerview -> recyclerview
    int rotate -> rotate
    int screen -> screen
    int scrollView -> scrollView
    int scrollview -> scrollview
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int select_dialog_listview -> select_dialog_listview
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int split_action_bar -> split_action_bar
    int src_atop -> src_atop
    int src_in -> src_in
    int src_over -> src_over
    int status_bar_latest_event_content -> status_bar_latest_event_content
    int submit_area -> submit_area
    int tabMode -> tabMode
    int text -> text
    int text2 -> text2
    int textSpacerNoButtons -> textSpacerNoButtons
    int time -> time
    int title -> title
    int title_template -> title_template
    int topPanel -> topPanel
    int up -> up
    int useLogo -> useLogo
    int viewpager -> viewpager
    int webview -> webview
    int withText -> withText
    int wrap_content -> wrap_content
com.handmark.pulltorefresh.library.R$layout -> com.handmark.pulltorefresh.library.ae:
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_up_container -> abc_action_bar_up_container
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item_material -> abc_action_mode_close_item_material
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_alert_dialog_material -> abc_alert_dialog_material
    int abc_dialog_title_material -> abc_dialog_title_material
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen_content_include -> abc_screen_content_include
    int abc_screen_simple -> abc_screen_simple
    int abc_screen_simple_overlay_action_mode -> abc_screen_simple_overlay_action_mode
    int abc_screen_toolbar -> abc_screen_toolbar
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_select_dialog_material -> abc_select_dialog_material
    int notification_media_action -> notification_media_action
    int notification_media_cancel_action -> notification_media_cancel_action
    int notification_template_big_media -> notification_template_big_media
    int notification_template_big_media_narrow -> notification_template_big_media_narrow
    int notification_template_lines -> notification_template_lines
    int notification_template_media -> notification_template_media
    int notification_template_part_chronometer -> notification_template_part_chronometer
    int notification_template_part_time -> notification_template_part_time
    int pull_to_refresh_header_horizontal -> pull_to_refresh_header_horizontal
    int pull_to_refresh_header_vertical -> pull_to_refresh_header_vertical
    int select_dialog_item_material -> select_dialog_item_material
    int select_dialog_multichoice_material -> select_dialog_multichoice_material
    int select_dialog_singlechoice_material -> select_dialog_singlechoice_material
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
com.handmark.pulltorefresh.library.R$string -> com.handmark.pulltorefresh.library.af:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_home_description_format -> abc_action_bar_home_description_format
    int abc_action_bar_home_subtitle_description_format -> abc_action_bar_home_subtitle_description_format
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_search_hint -> abc_search_hint
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int abc_toolbar_collapse_description -> abc_toolbar_collapse_description
    int app_name -> app_name
    int pull_to_refresh_from_bottom_pull_label -> pull_to_refresh_from_bottom_pull_label
    int pull_to_refresh_from_bottom_refreshing_label -> pull_to_refresh_from_bottom_refreshing_label
    int pull_to_refresh_from_bottom_release_label -> pull_to_refresh_from_bottom_release_label
    int pull_to_refresh_pull_label -> pull_to_refresh_pull_label
    int pull_to_refresh_refreshing_label -> pull_to_refresh_refreshing_label
    int pull_to_refresh_release_label -> pull_to_refresh_release_label
    int status_bar_notification_info_overflow -> status_bar_notification_info_overflow
com.handmark.pulltorefresh.library.R$styleable -> com.handmark.pulltorefresh.library.ag:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AlertDialog -> AlertDialog
    int AlertDialog_android_layout -> AlertDialog_android_layout
    int AlertDialog_buttonPanelSideLayout -> AlertDialog_buttonPanelSideLayout
    int AlertDialog_listItemLayout -> AlertDialog_listItemLayout
    int AlertDialog_listLayout -> AlertDialog_listLayout
    int AlertDialog_multiChoiceItemLayout -> AlertDialog_multiChoiceItemLayout
    int AlertDialog_singleChoiceItemLayout -> AlertDialog_singleChoiceItemLayout
    int[] AppCompatTextView -> AppCompatTextView
    int AppCompatTextView_android_textAppearance -> AppCompatTextView_android_textAppearance
    int AppCompatTextView_textAllCaps -> AppCompatTextView_textAllCaps
    int[] CompoundButton -> CompoundButton
    int CompoundButton_android_button -> CompoundButton_android_button
    int CompoundButton_buttonTint -> CompoundButton_buttonTint
    int CompoundButton_buttonTintMode -> CompoundButton_buttonTintMode
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_arrowHeadLength -> DrawerArrowToggle_arrowHeadLength
    int DrawerArrowToggle_arrowShaftLength -> DrawerArrowToggle_arrowShaftLength
    int DrawerArrowToggle_barLength -> DrawerArrowToggle_barLength
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] PullToRefresh -> PullToRefresh
    int PullToRefresh_ptrAdapterViewBackground -> PullToRefresh_ptrAdapterViewBackground
    int PullToRefresh_ptrAnimationStyle -> PullToRefresh_ptrAnimationStyle
    int PullToRefresh_ptrDrawable -> PullToRefresh_ptrDrawable
    int PullToRefresh_ptrDrawableBottom -> PullToRefresh_ptrDrawableBottom
    int PullToRefresh_ptrDrawableEnd -> PullToRefresh_ptrDrawableEnd
    int PullToRefresh_ptrDrawableStart -> PullToRefresh_ptrDrawableStart
    int PullToRefresh_ptrDrawableTop -> PullToRefresh_ptrDrawableTop
    int PullToRefresh_ptrHeaderBackground -> PullToRefresh_ptrHeaderBackground
    int PullToRefresh_ptrHeaderSubTextColor -> PullToRefresh_ptrHeaderSubTextColor
    int PullToRefresh_ptrHeaderTextAppearance -> PullToRefresh_ptrHeaderTextAppearance
    int PullToRefresh_ptrHeaderTextColor -> PullToRefresh_ptrHeaderTextColor
    int PullToRefresh_ptrListViewExtrasEnabled -> PullToRefresh_ptrListViewExtrasEnabled
    int PullToRefresh_ptrMode -> PullToRefresh_ptrMode
    int PullToRefresh_ptrOverScroll -> PullToRefresh_ptrOverScroll
    int PullToRefresh_ptrRefreshableViewBackground -> PullToRefresh_ptrRefreshableViewBackground
    int PullToRefresh_ptrRotateDrawableWhilePulling -> PullToRefresh_ptrRotateDrawableWhilePulling
    int PullToRefresh_ptrScrollingWhileRefreshingEnabled -> PullToRefresh_ptrScrollingWhileRefreshingEnabled
    int PullToRefresh_ptrShowIndicator -> PullToRefresh_ptrShowIndicator
    int PullToRefresh_ptrSubHeaderTextAppearance -> PullToRefresh_ptrSubHeaderTextAppearance
    int[] RecyclerView -> RecyclerView
    int RecyclerView_android_orientation -> RecyclerView_android_orientation
    int RecyclerView_layoutManager -> RecyclerView_layoutManager
    int RecyclerView_reverseLayout -> RecyclerView_reverseLayout
    int RecyclerView_spanCount -> RecyclerView_spanCount
    int RecyclerView_stackFromEnd -> RecyclerView_stackFromEnd
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_defaultQueryHint -> SearchView_defaultQueryHint
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchHintIcon -> SearchView_searchHintIcon
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] Spinner -> Spinner
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_android_prompt -> Spinner_android_prompt
    int Spinner_popupTheme -> Spinner_popupTheme
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_track -> SwitchCompat_track
    int[] TextAppearance -> TextAppearance
    int TextAppearance_android_textColor -> TextAppearance_android_textColor
    int TextAppearance_android_textSize -> TextAppearance_android_textSize
    int TextAppearance_android_textStyle -> TextAppearance_android_textStyle
    int TextAppearance_android_typeface -> TextAppearance_android_typeface
    int TextAppearance_textAllCaps -> TextAppearance_textAllCaps
    int[] Theme -> Theme
    int Theme_actionBarDivider -> Theme_actionBarDivider
    int Theme_actionBarItemBackground -> Theme_actionBarItemBackground
    int Theme_actionBarPopupTheme -> Theme_actionBarPopupTheme
    int Theme_actionBarSize -> Theme_actionBarSize
    int Theme_actionBarSplitStyle -> Theme_actionBarSplitStyle
    int Theme_actionBarStyle -> Theme_actionBarStyle
    int Theme_actionBarTabBarStyle -> Theme_actionBarTabBarStyle
    int Theme_actionBarTabStyle -> Theme_actionBarTabStyle
    int Theme_actionBarTabTextStyle -> Theme_actionBarTabTextStyle
    int Theme_actionBarTheme -> Theme_actionBarTheme
    int Theme_actionBarWidgetTheme -> Theme_actionBarWidgetTheme
    int Theme_actionButtonStyle -> Theme_actionButtonStyle
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_actionMenuTextAppearance -> Theme_actionMenuTextAppearance
    int Theme_actionMenuTextColor -> Theme_actionMenuTextColor
    int Theme_actionModeBackground -> Theme_actionModeBackground
    int Theme_actionModeCloseButtonStyle -> Theme_actionModeCloseButtonStyle
    int Theme_actionModeCloseDrawable -> Theme_actionModeCloseDrawable
    int Theme_actionModeCopyDrawable -> Theme_actionModeCopyDrawable
    int Theme_actionModeCutDrawable -> Theme_actionModeCutDrawable
    int Theme_actionModeFindDrawable -> Theme_actionModeFindDrawable
    int Theme_actionModePasteDrawable -> Theme_actionModePasteDrawable
    int Theme_actionModePopupWindowStyle -> Theme_actionModePopupWindowStyle
    int Theme_actionModeSelectAllDrawable -> Theme_actionModeSelectAllDrawable
    int Theme_actionModeShareDrawable -> Theme_actionModeShareDrawable
    int Theme_actionModeSplitBackground -> Theme_actionModeSplitBackground
    int Theme_actionModeStyle -> Theme_actionModeStyle
    int Theme_actionModeWebSearchDrawable -> Theme_actionModeWebSearchDrawable
    int Theme_actionOverflowButtonStyle -> Theme_actionOverflowButtonStyle
    int Theme_actionOverflowMenuStyle -> Theme_actionOverflowMenuStyle
    int Theme_activityChooserViewStyle -> Theme_activityChooserViewStyle
    int Theme_alertDialogButtonGroupStyle -> Theme_alertDialogButtonGroupStyle
    int Theme_alertDialogCenterButtons -> Theme_alertDialogCenterButtons
    int Theme_alertDialogStyle -> Theme_alertDialogStyle
    int Theme_alertDialogTheme -> Theme_alertDialogTheme
    int Theme_android_windowAnimationStyle -> Theme_android_windowAnimationStyle
    int Theme_android_windowIsFloating -> Theme_android_windowIsFloating
    int Theme_autoCompleteTextViewStyle -> Theme_autoCompleteTextViewStyle
    int Theme_borderlessButtonStyle -> Theme_borderlessButtonStyle
    int Theme_buttonBarButtonStyle -> Theme_buttonBarButtonStyle
    int Theme_buttonBarNegativeButtonStyle -> Theme_buttonBarNegativeButtonStyle
    int Theme_buttonBarNeutralButtonStyle -> Theme_buttonBarNeutralButtonStyle
    int Theme_buttonBarPositiveButtonStyle -> Theme_buttonBarPositiveButtonStyle
    int Theme_buttonBarStyle -> Theme_buttonBarStyle
    int Theme_buttonStyle -> Theme_buttonStyle
    int Theme_buttonStyleSmall -> Theme_buttonStyleSmall
    int Theme_checkboxStyle -> Theme_checkboxStyle
    int Theme_checkedTextViewStyle -> Theme_checkedTextViewStyle
    int Theme_colorAccent -> Theme_colorAccent
    int Theme_colorButtonNormal -> Theme_colorButtonNormal
    int Theme_colorControlActivated -> Theme_colorControlActivated
    int Theme_colorControlHighlight -> Theme_colorControlHighlight
    int Theme_colorControlNormal -> Theme_colorControlNormal
    int Theme_colorPrimary -> Theme_colorPrimary
    int Theme_colorPrimaryDark -> Theme_colorPrimaryDark
    int Theme_colorSwitchThumbNormal -> Theme_colorSwitchThumbNormal
    int Theme_controlBackground -> Theme_controlBackground
    int Theme_dialogPreferredPadding -> Theme_dialogPreferredPadding
    int Theme_dialogTheme -> Theme_dialogTheme
    int Theme_dividerHorizontal -> Theme_dividerHorizontal
    int Theme_dividerVertical -> Theme_dividerVertical
    int Theme_dropDownListViewStyle -> Theme_dropDownListViewStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_editTextBackground -> Theme_editTextBackground
    int Theme_editTextColor -> Theme_editTextColor
    int Theme_editTextStyle -> Theme_editTextStyle
    int Theme_homeAsUpIndicator -> Theme_homeAsUpIndicator
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_listDividerAlertDialog -> Theme_listDividerAlertDialog
    int Theme_listPopupWindowStyle -> Theme_listPopupWindowStyle
    int Theme_listPreferredItemHeight -> Theme_listPreferredItemHeight
    int Theme_listPreferredItemHeightLarge -> Theme_listPreferredItemHeightLarge
    int Theme_listPreferredItemHeightSmall -> Theme_listPreferredItemHeightSmall
    int Theme_listPreferredItemPaddingLeft -> Theme_listPreferredItemPaddingLeft
    int Theme_listPreferredItemPaddingRight -> Theme_listPreferredItemPaddingRight
    int Theme_panelBackground -> Theme_panelBackground
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int Theme_popupWindowStyle -> Theme_popupWindowStyle
    int Theme_radioButtonStyle -> Theme_radioButtonStyle
    int Theme_ratingBarStyle -> Theme_ratingBarStyle
    int Theme_searchViewStyle -> Theme_searchViewStyle
    int Theme_selectableItemBackground -> Theme_selectableItemBackground
    int Theme_selectableItemBackgroundBorderless -> Theme_selectableItemBackgroundBorderless
    int Theme_spinnerDropDownItemStyle -> Theme_spinnerDropDownItemStyle
    int Theme_spinnerStyle -> Theme_spinnerStyle
    int Theme_switchStyle -> Theme_switchStyle
    int Theme_textAppearanceLargePopupMenu -> Theme_textAppearanceLargePopupMenu
    int Theme_textAppearanceListItem -> Theme_textAppearanceListItem
    int Theme_textAppearanceListItemSmall -> Theme_textAppearanceListItemSmall
    int Theme_textAppearanceSearchResultSubtitle -> Theme_textAppearanceSearchResultSubtitle
    int Theme_textAppearanceSearchResultTitle -> Theme_textAppearanceSearchResultTitle
    int Theme_textAppearanceSmallPopupMenu -> Theme_textAppearanceSmallPopupMenu
    int Theme_textColorAlertDialogListItem -> Theme_textColorAlertDialogListItem
    int Theme_textColorSearchUrl -> Theme_textColorSearchUrl
    int Theme_toolbarNavigationButtonStyle -> Theme_toolbarNavigationButtonStyle
    int Theme_toolbarStyle -> Theme_toolbarStyle
    int Theme_windowActionBar -> Theme_windowActionBar
    int Theme_windowActionBarOverlay -> Theme_windowActionBarOverlay
    int Theme_windowActionModeOverlay -> Theme_windowActionModeOverlay
    int Theme_windowFixedHeightMajor -> Theme_windowFixedHeightMajor
    int Theme_windowFixedHeightMinor -> Theme_windowFixedHeightMinor
    int Theme_windowFixedWidthMajor -> Theme_windowFixedWidthMajor
    int Theme_windowFixedWidthMinor -> Theme_windowFixedWidthMinor
    int Theme_windowMinWidthMajor -> Theme_windowMinWidthMajor
    int Theme_windowMinWidthMinor -> Theme_windowMinWidthMinor
    int Theme_windowNoTitle -> Theme_windowNoTitle
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_logo -> Toolbar_logo
    int Toolbar_logoDescription -> Toolbar_logoDescription
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_subtitleTextColor -> Toolbar_subtitleTextColor
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int Toolbar_titleTextColor -> Toolbar_titleTextColor
    int[] View -> View
    int[] ViewBackgroundHelper -> ViewBackgroundHelper
    int ViewBackgroundHelper_android_background -> ViewBackgroundHelper_android_background
    int ViewBackgroundHelper_backgroundTint -> ViewBackgroundHelper_backgroundTint
    int ViewBackgroundHelper_backgroundTintMode -> ViewBackgroundHelper_backgroundTintMode
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
    int View_android_focusable -> View_android_focusable
    int View_android_theme -> View_android_theme
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int View_theme -> View_theme
com.handmark.pulltorefresh.library.extras.PullToRefreshWebView2 -> com.handmark.pulltorefresh.library.extras.PullToRefreshWebView2:
    com.handmark.pulltorefresh.library.extras.PullToRefreshWebView2$JsValueCallback mJsCallback -> b
    java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullDown -> c
    java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullUp -> d
    android.webkit.WebView createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.extras.PullToRefreshWebView2$JsValueCallback -> com.handmark.pulltorefresh.library.extras.a:
    com.handmark.pulltorefresh.library.extras.PullToRefreshWebView2 this$0 -> a
com.handmark.pulltorefresh.library.extras.listfragment.PullToRefreshBaseListFragment -> com.handmark.pulltorefresh.library.extras.listfragment.a:
    com.handmark.pulltorefresh.library.PullToRefreshBase mPullToRefreshListView -> i
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    com.handmark.pulltorefresh.library.PullToRefreshBase onCreatePullToRefreshListView(android.view.LayoutInflater,android.os.Bundle) -> a
com.handmark.pulltorefresh.library.extras.listfragment.PullToRefreshExpandableListFragment -> com.handmark.pulltorefresh.library.extras.listfragment.PullToRefreshExpandableListFragment:
    com.handmark.pulltorefresh.library.PullToRefreshExpandableListView onCreatePullToRefreshListView(android.view.LayoutInflater,android.os.Bundle) -> b
    com.handmark.pulltorefresh.library.PullToRefreshBase onCreatePullToRefreshListView(android.view.LayoutInflater,android.os.Bundle) -> a
com.handmark.pulltorefresh.library.extras.listfragment.PullToRefreshListFragment -> com.handmark.pulltorefresh.library.extras.listfragment.PullToRefreshListFragment:
    com.handmark.pulltorefresh.library.PullToRefreshListView onCreatePullToRefreshListView(android.view.LayoutInflater,android.os.Bundle) -> b
    com.handmark.pulltorefresh.library.PullToRefreshBase onCreatePullToRefreshListView(android.view.LayoutInflater,android.os.Bundle) -> a
com.handmark.pulltorefresh.library.extras.viewpager.PullToRefreshViewPager -> com.handmark.pulltorefresh.library.extras.viewpager.PullToRefreshViewPager:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> getPullToRefreshScrollDirection
    android.support.v4.view.ViewPager createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.internal.EmptyViewMethodAccessor -> com.handmark.pulltorefresh.library.internal.a:
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.internal.FlipLoadingLayout -> com.handmark.pulltorefresh.library.internal.FlipLoadingLayout:
    android.view.animation.Animation mRotateAnimation -> f
    android.view.animation.Animation mResetRotateAnimation -> g
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void pullToRefreshImpl() -> a
    void refreshingImpl() -> b
    void releaseToRefreshImpl() -> c
    void resetImpl() -> d
    int getDefaultDrawableResId() -> getDefaultDrawableResId
    float getDrawableRotationAngle() -> getDrawableRotationAngle
com.handmark.pulltorefresh.library.internal.FlipLoadingLayout$1 -> com.handmark.pulltorefresh.library.internal.b:
    int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> a
com.handmark.pulltorefresh.library.internal.IndicatorLayout -> com.handmark.pulltorefresh.library.internal.IndicatorLayout:
    android.view.animation.Animation mInAnim -> a
    android.view.animation.Animation mOutAnim -> b
    android.widget.ImageView mArrowImageView -> c
    android.view.animation.Animation mRotateAnimation -> d
    android.view.animation.Animation mResetRotateAnimation -> e
    boolean isVisible() -> a
    void hide() -> b
    void show() -> c
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void releaseToRefresh() -> d
    void pullToRefresh() -> e
com.handmark.pulltorefresh.library.internal.IndicatorLayout$1 -> com.handmark.pulltorefresh.library.internal.c:
    int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> a
com.handmark.pulltorefresh.library.internal.LoadingLayout -> com.handmark.pulltorefresh.library.internal.LoadingLayout:
    android.view.animation.Interpolator ANIMATION_INTERPOLATOR -> a
    android.widget.FrameLayout mInnerLayout -> f
    android.widget.ImageView mHeaderImage -> b
    android.widget.ProgressBar mHeaderProgress -> c
    boolean mUseIntrinsicAnimation -> g
    android.widget.TextView mHeaderText -> h
    android.widget.TextView mSubHeaderText -> i
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mMode -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation mScrollDirection -> e
    java.lang.CharSequence mPullLabel -> j
    java.lang.CharSequence mRefreshingLabel -> k
    java.lang.CharSequence mReleaseLabel -> l
    void setHeight(int) -> setHeight
    void setWidth(int) -> setWidth
    int getContentSize() -> getContentSize
    void hideAllViews() -> e
    void onPull(float) -> b
    void pullToRefresh() -> f
    void refreshing() -> g
    void releaseToRefresh() -> h
    void reset() -> i
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
    void setTextTypeface(android.graphics.Typeface) -> setTextTypeface
    void showInvisibleViews() -> j
    int getDefaultDrawableResId() -> getDefaultDrawableResId
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void pullToRefreshImpl() -> a
    void refreshingImpl() -> b
    void releaseToRefreshImpl() -> c
    void resetImpl() -> d
    void setSubHeaderText(java.lang.CharSequence) -> setSubHeaderText
    void setSubTextAppearance(int) -> setSubTextAppearance
    void setSubTextColor(android.content.res.ColorStateList) -> setSubTextColor
    void setTextAppearance(int) -> setTextAppearance
    void setTextColor(android.content.res.ColorStateList) -> setTextColor
com.handmark.pulltorefresh.library.internal.LoadingLayout$1 -> com.handmark.pulltorefresh.library.internal.d:
    int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> a
    int[] $SwitchMap$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> b
com.handmark.pulltorefresh.library.internal.RotateLoadingLayout -> com.handmark.pulltorefresh.library.internal.RotateLoadingLayout:
    android.view.animation.Animation mRotateAnimation -> f
    android.graphics.Matrix mHeaderImageMatrix -> g
    float mRotationPivotX -> h
    float mRotationPivotY -> i
    boolean mRotateDrawableWhilePulling -> j
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void refreshingImpl() -> b
    void resetImpl() -> d
    void resetImageRotation() -> k
    void pullToRefreshImpl() -> a
    void releaseToRefreshImpl() -> c
    int getDefaultDrawableResId() -> getDefaultDrawableResId
com.handmark.pulltorefresh.library.internal.Utils -> com.handmark.pulltorefresh.library.internal.e:
    void warnDeprecation(java.lang.String,java.lang.String) -> a
com.handmark.pulltorefresh.library.internal.ViewCompat -> com.handmark.pulltorefresh.library.internal.f:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> a
com.handmark.pulltorefresh.library.internal.ViewCompat$SDK16 -> com.handmark.pulltorefresh.library.internal.g:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> a
com.loopj.android.http.AsyncHttpClient -> com.loopj.android.http.AsyncHttpClient:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String HEADER_CONTENT_TYPE -> HEADER_CONTENT_TYPE
    java.lang.String HEADER_CONTENT_RANGE -> HEADER_CONTENT_RANGE
    java.lang.String HEADER_CONTENT_ENCODING -> HEADER_CONTENT_ENCODING
    java.lang.String HEADER_CONTENT_DISPOSITION -> HEADER_CONTENT_DISPOSITION
    java.lang.String HEADER_ACCEPT_ENCODING -> HEADER_ACCEPT_ENCODING
    java.lang.String ENCODING_GZIP -> ENCODING_GZIP
    int DEFAULT_MAX_CONNECTIONS -> DEFAULT_MAX_CONNECTIONS
    int DEFAULT_SOCKET_TIMEOUT -> DEFAULT_SOCKET_TIMEOUT
    int DEFAULT_MAX_RETRIES -> DEFAULT_MAX_RETRIES
    int DEFAULT_RETRY_SLEEP_TIME_MILLIS -> DEFAULT_RETRY_SLEEP_TIME_MILLIS
    int DEFAULT_SOCKET_BUFFER_SIZE -> DEFAULT_SOCKET_BUFFER_SIZE
    com.loopj.android.http.LogInterface log -> log
    cz.msebera.android.httpclient.impl.client.DefaultHttpClient httpClient -> httpClient
    cz.msebera.android.httpclient.protocol.HttpContext httpContext -> httpContext
    java.util.Map requestMap -> requestMap
    java.util.Map clientHeaderMap -> clientHeaderMap
    int maxConnections -> maxConnections
    int connectTimeout -> connectTimeout
    int responseTimeout -> responseTimeout
    java.util.concurrent.ExecutorService threadPool -> threadPool
    boolean isUrlEncodingEnabled -> isUrlEncodingEnabled
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry getDefaultSchemeRegistry(boolean,int,int) -> getDefaultSchemeRegistry
    void allowRetryExceptionClass(java.lang.Class) -> allowRetryExceptionClass
    void blockRetryExceptionClass(java.lang.Class) -> blockRetryExceptionClass
    java.lang.String getUrlWithQueryString(boolean,java.lang.String,com.loopj.android.http.RequestParams) -> getUrlWithQueryString
    boolean isInputStreamGZIPCompressed(java.io.PushbackInputStream) -> isInputStreamGZIPCompressed
    void silentCloseInputStream(java.io.InputStream) -> silentCloseInputStream
    void silentCloseOutputStream(java.io.OutputStream) -> silentCloseOutputStream
    void endEntityViaReflection(cz.msebera.android.httpclient.HttpEntity) -> endEntityViaReflection
    cz.msebera.android.httpclient.client.HttpClient getHttpClient() -> getHttpClient
    cz.msebera.android.httpclient.protocol.HttpContext getHttpContext() -> getHttpContext
    boolean isLoggingEnabled() -> isLoggingEnabled
    void setLoggingEnabled(boolean) -> setLoggingEnabled
    int getLoggingLevel() -> getLoggingLevel
    void setLoggingLevel(int) -> setLoggingLevel
    com.loopj.android.http.LogInterface getLogInterface() -> getLogInterface
    void setLogInterface(com.loopj.android.http.LogInterface) -> setLogInterface
    void setCookieStore(cz.msebera.android.httpclient.client.CookieStore) -> setCookieStore
    java.util.concurrent.ExecutorService getThreadPool() -> getThreadPool
    void setThreadPool(java.util.concurrent.ExecutorService) -> setThreadPool
    java.util.concurrent.ExecutorService getDefaultThreadPool() -> getDefaultThreadPool
    cz.msebera.android.httpclient.conn.ClientConnectionManager createConnectionManager(cz.msebera.android.httpclient.conn.scheme.SchemeRegistry,cz.msebera.android.httpclient.params.BasicHttpParams) -> createConnectionManager
    void setEnableRedirects(boolean,boolean,boolean) -> setEnableRedirects
    void setEnableRedirects(boolean,boolean) -> setEnableRedirects
    void setEnableRedirects(boolean) -> setEnableRedirects
    void setRedirectHandler(cz.msebera.android.httpclient.client.RedirectHandler) -> setRedirectHandler
    void setUserAgent(java.lang.String) -> setUserAgent
    int getMaxConnections() -> getMaxConnections
    void setMaxConnections(int) -> setMaxConnections
    void setTimeout(int) -> setTimeout
    int getConnectTimeout() -> getConnectTimeout
    void setConnectTimeout(int) -> setConnectTimeout
    int getResponseTimeout() -> getResponseTimeout
    void setResponseTimeout(int) -> setResponseTimeout
    void setProxy(java.lang.String,int) -> setProxy
    void setProxy(java.lang.String,int,java.lang.String,java.lang.String) -> setProxy
    void setSSLSocketFactory(cz.msebera.android.httpclient.conn.ssl.SSLSocketFactory) -> setSSLSocketFactory
    void setMaxRetriesAndTimeout(int,int) -> setMaxRetriesAndTimeout
    void removeAllHeaders() -> removeAllHeaders
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    void setBasicAuth(java.lang.String,java.lang.String) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,boolean) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,cz.msebera.android.httpclient.auth.AuthScope) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,cz.msebera.android.httpclient.auth.AuthScope,boolean) -> setBasicAuth
    void setCredentials(cz.msebera.android.httpclient.auth.AuthScope,cz.msebera.android.httpclient.auth.Credentials) -> setCredentials
    void setAuthenticationPreemptive(boolean) -> setAuthenticationPreemptive
    void clearCredentialsProvider() -> clearCredentialsProvider
    void cancelRequests(android.content.Context,boolean) -> cancelRequests
    void cancelRequests(java.util.List,boolean) -> cancelRequests
    void cancelAllRequests(boolean) -> cancelAllRequests
    void cancelRequestsByTAG(java.lang.Object,boolean) -> cancelRequestsByTAG
    com.loopj.android.http.RequestHandle head(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,cz.msebera.android.httpclient.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle get(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,cz.msebera.android.httpclient.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,cz.msebera.android.httpclient.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle post(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,cz.msebera.android.httpclient.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,cz.msebera.android.httpclient.Header[],com.loopj.android.http.RequestParams,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,cz.msebera.android.httpclient.Header[],cz.msebera.android.httpclient.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle put(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,cz.msebera.android.httpclient.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,cz.msebera.android.httpclient.Header[],cz.msebera.android.httpclient.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle patch(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> patch
    com.loopj.android.http.RequestHandle patch(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> patch
    com.loopj.android.http.RequestHandle patch(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> patch
    com.loopj.android.http.RequestHandle patch(android.content.Context,java.lang.String,cz.msebera.android.httpclient.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> patch
    com.loopj.android.http.RequestHandle patch(android.content.Context,java.lang.String,cz.msebera.android.httpclient.Header[],cz.msebera.android.httpclient.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> patch
    com.loopj.android.http.RequestHandle delete(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,cz.msebera.android.httpclient.Header[],com.loopj.android.http.ResponseHandlerInterface) -> delete
    void delete(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,cz.msebera.android.httpclient.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,cz.msebera.android.httpclient.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.AsyncHttpRequest newAsyncHttpRequest(cz.msebera.android.httpclient.impl.client.DefaultHttpClient,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> newAsyncHttpRequest
    com.loopj.android.http.RequestHandle sendRequest(cz.msebera.android.httpclient.impl.client.DefaultHttpClient,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> sendRequest
    java.net.URI getURI(java.lang.String) -> getURI
    void setURLEncodingEnabled(boolean) -> setURLEncodingEnabled
    cz.msebera.android.httpclient.HttpEntity paramsToEntity(com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> paramsToEntity
    boolean isUrlEncodingEnabled() -> isUrlEncodingEnabled
    cz.msebera.android.httpclient.client.methods.HttpEntityEnclosingRequestBase addEntityToRequestBase(cz.msebera.android.httpclient.client.methods.HttpEntityEnclosingRequestBase,cz.msebera.android.httpclient.HttpEntity) -> addEntityToRequestBase
    java.util.Map access$000(com.loopj.android.http.AsyncHttpClient) -> access$000
    void access$100(com.loopj.android.http.AsyncHttpClient,java.util.List,boolean) -> access$100
com.loopj.android.http.AsyncHttpClient$1 -> com.loopj.android.http.AsyncHttpClient$1:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> com.loopj.android.http.AsyncHttpClient$2:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$3 -> com.loopj.android.http.AsyncHttpClient$3:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$4 -> com.loopj.android.http.AsyncHttpClient$4:
    java.util.List val$requestList -> val$requestList
    boolean val$mayInterruptIfRunning -> val$mayInterruptIfRunning
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void run() -> run
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> com.loopj.android.http.AsyncHttpClient$InflatingEntity:
    java.io.InputStream wrappedStream -> wrappedStream
    java.io.PushbackInputStream pushbackStream -> pushbackStream
    java.util.zip.GZIPInputStream gzippedStream -> gzippedStream
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void consumeContent() -> consumeContent
com.loopj.android.http.AsyncHttpRequest -> com.loopj.android.http.AsyncHttpRequest:
    cz.msebera.android.httpclient.impl.client.AbstractHttpClient client -> client
    cz.msebera.android.httpclient.protocol.HttpContext context -> context
    cz.msebera.android.httpclient.client.methods.HttpUriRequest request -> request
    com.loopj.android.http.ResponseHandlerInterface responseHandler -> responseHandler
    java.util.concurrent.atomic.AtomicBoolean isCancelled -> isCancelled
    int executionCount -> executionCount
    boolean cancelIsNotified -> cancelIsNotified
    boolean isFinished -> isFinished
    boolean isRequestPreProcessed -> isRequestPreProcessed
    void onPreProcessRequest(com.loopj.android.http.AsyncHttpRequest) -> onPreProcessRequest
    void onPostProcessRequest(com.loopj.android.http.AsyncHttpRequest) -> onPostProcessRequest
    void run() -> run
    void makeRequest() -> makeRequest
    void makeRequestWithRetries() -> makeRequestWithRetries
    boolean isCancelled() -> isCancelled
    void sendCancelNotification() -> sendCancelNotification
    boolean isDone() -> isDone
    boolean cancel(boolean) -> cancel
    com.loopj.android.http.AsyncHttpRequest setRequestTag(java.lang.Object) -> setRequestTag
    java.lang.Object getTag() -> getTag
com.loopj.android.http.AsyncHttpResponseHandler -> com.loopj.android.http.AsyncHttpResponseHandler:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String UTF8_BOM -> UTF8_BOM
    int SUCCESS_MESSAGE -> SUCCESS_MESSAGE
    int FAILURE_MESSAGE -> FAILURE_MESSAGE
    int START_MESSAGE -> START_MESSAGE
    int FINISH_MESSAGE -> FINISH_MESSAGE
    int PROGRESS_MESSAGE -> PROGRESS_MESSAGE
    int RETRY_MESSAGE -> RETRY_MESSAGE
    int CANCEL_MESSAGE -> CANCEL_MESSAGE
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String responseCharset -> responseCharset
    android.os.Handler handler -> handler
    boolean useSynchronousMode -> useSynchronousMode
    boolean usePoolThread -> usePoolThread
    java.net.URI requestURI -> requestURI
    cz.msebera.android.httpclient.Header[] requestHeaders -> requestHeaders
    android.os.Looper looper -> looper
    java.lang.ref.WeakReference TAG -> TAG
    java.lang.Object getTag() -> getTag
    void setTag(java.lang.Object) -> setTag
    java.net.URI getRequestURI() -> getRequestURI
    void setRequestURI(java.net.URI) -> setRequestURI
    cz.msebera.android.httpclient.Header[] getRequestHeaders() -> getRequestHeaders
    void setRequestHeaders(cz.msebera.android.httpclient.Header[]) -> setRequestHeaders
    boolean getUseSynchronousMode() -> getUseSynchronousMode
    void setUseSynchronousMode(boolean) -> setUseSynchronousMode
    boolean getUsePoolThread() -> getUsePoolThread
    void setUsePoolThread(boolean) -> setUsePoolThread
    java.lang.String getCharset() -> getCharset
    void setCharset(java.lang.String) -> setCharset
    void onProgress(long,long) -> onProgress
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onPreProcessResponse(com.loopj.android.http.ResponseHandlerInterface,cz.msebera.android.httpclient.HttpResponse) -> onPreProcessResponse
    void onPostProcessResponse(com.loopj.android.http.ResponseHandlerInterface,cz.msebera.android.httpclient.HttpResponse) -> onPostProcessResponse
    void onSuccess(int,cz.msebera.android.httpclient.Header[],byte[]) -> onSuccess
    void onFailure(int,cz.msebera.android.httpclient.Header[],byte[],java.lang.Throwable) -> onFailure
    void onRetry(int) -> onRetry
    void onCancel() -> onCancel
    void onUserException(java.lang.Throwable) -> onUserException
    void sendProgressMessage(long,long) -> sendProgressMessage
    void sendSuccessMessage(int,cz.msebera.android.httpclient.Header[],byte[]) -> sendSuccessMessage
    void sendFailureMessage(int,cz.msebera.android.httpclient.Header[],byte[],java.lang.Throwable) -> sendFailureMessage
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void sendRetryMessage(int) -> sendRetryMessage
    void sendCancelMessage() -> sendCancelMessage
    void handleMessage(android.os.Message) -> handleMessage
    void sendMessage(android.os.Message) -> sendMessage
    void postRunnable(java.lang.Runnable) -> postRunnable
    android.os.Message obtainMessage(int,java.lang.Object) -> obtainMessage
    void sendResponseMessage(cz.msebera.android.httpclient.HttpResponse) -> sendResponseMessage
    byte[] getResponseData(cz.msebera.android.httpclient.HttpEntity) -> getResponseData
com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler -> com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler:
    com.loopj.android.http.AsyncHttpResponseHandler mResponder -> mResponder
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.Base64 -> com.loopj.android.http.Base64:
    int DEFAULT -> DEFAULT
    int NO_PADDING -> NO_PADDING
    int NO_WRAP -> NO_WRAP
    int CRLF -> CRLF
    int URL_SAFE -> URL_SAFE
    int NO_CLOSE -> NO_CLOSE
    byte[] decode(java.lang.String,int) -> decode
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    java.lang.String encodeToString(byte[],int) -> encodeToString
    java.lang.String encodeToString(byte[],int,int,int) -> encodeToString
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
com.loopj.android.http.Base64$Coder -> com.loopj.android.http.Base64$Coder:
    byte[] output -> output
    int op -> op
    boolean process(byte[],int,int,boolean) -> process
    int maxOutputSize(int) -> maxOutputSize
com.loopj.android.http.Base64$Decoder -> com.loopj.android.http.Base64$Decoder:
    int[] DECODE -> DECODE
    int[] DECODE_WEBSAFE -> DECODE_WEBSAFE
    int SKIP -> SKIP
    int EQUALS -> EQUALS
    int[] alphabet -> alphabet
    int state -> state
    int value -> value
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.loopj.android.http.Base64$Encoder -> com.loopj.android.http.Base64$Encoder:
    int LINE_GROUPS -> LINE_GROUPS
    byte[] ENCODE -> ENCODE
    byte[] ENCODE_WEBSAFE -> ENCODE_WEBSAFE
    boolean do_padding -> do_padding
    boolean do_newline -> do_newline
    boolean do_cr -> do_cr
    byte[] tail -> tail
    byte[] alphabet -> alphabet
    int tailLen -> tailLen
    int count -> count
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.loopj.android.http.Base64DataException -> com.loopj.android.http.Base64DataException:
com.loopj.android.http.Base64OutputStream -> com.loopj.android.http.Base64OutputStream:
    byte[] EMPTY -> EMPTY
    com.loopj.android.http.Base64$Coder coder -> coder
    int flags -> flags
    byte[] buffer -> buffer
    int bpos -> bpos
    void write(int) -> write
    void flushBuffer() -> flushBuffer
    void write(byte[],int,int) -> write
    void close() -> close
    void internalWrite(byte[],int,int,boolean) -> internalWrite
    byte[] embiggen(byte[],int) -> embiggen
com.loopj.android.http.BaseJsonHttpResponseHandler -> com.loopj.android.http.BaseJsonHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onSuccess(int,cz.msebera.android.httpclient.Header[],java.lang.String,java.lang.Object) -> onSuccess
    void onFailure(int,cz.msebera.android.httpclient.Header[],java.lang.Throwable,java.lang.String,java.lang.Object) -> onFailure
    void onSuccess(int,cz.msebera.android.httpclient.Header[],java.lang.String) -> onSuccess
    void onFailure(int,cz.msebera.android.httpclient.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    java.lang.Object parseResponse(java.lang.String,boolean) -> parseResponse
com.loopj.android.http.BaseJsonHttpResponseHandler$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1:
    java.lang.String val$responseString -> val$responseString
    int val$statusCode -> val$statusCode
    cz.msebera.android.httpclient.Header[] val$headers -> val$headers
    com.loopj.android.http.BaseJsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$1$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.BaseJsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$1$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1$2:
    java.lang.Throwable val$t -> val$t
    com.loopj.android.http.BaseJsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2:
    java.lang.String val$responseString -> val$responseString
    int val$statusCode -> val$statusCode
    cz.msebera.android.httpclient.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    com.loopj.android.http.BaseJsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.BaseJsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2$2:
    com.loopj.android.http.BaseJsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BinaryHttpResponseHandler -> com.loopj.android.http.BinaryHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String[] mAllowedContentTypes -> mAllowedContentTypes
    java.lang.String[] getAllowedContentTypes() -> getAllowedContentTypes
    void onSuccess(int,cz.msebera.android.httpclient.Header[],byte[]) -> onSuccess
    void onFailure(int,cz.msebera.android.httpclient.Header[],byte[],java.lang.Throwable) -> onFailure
    void sendResponseMessage(cz.msebera.android.httpclient.HttpResponse) -> sendResponseMessage
com.loopj.android.http.BlackholeHttpResponseHandler -> com.loopj.android.http.BlackholeHttpResponseHandler:
    void onSuccess(int,cz.msebera.android.httpclient.Header[],byte[]) -> onSuccess
    void onFailure(int,cz.msebera.android.httpclient.Header[],byte[],java.lang.Throwable) -> onFailure
    void onProgress(long,long) -> onProgress
    void onCancel() -> onCancel
    void onFinish() -> onFinish
    void onPostProcessResponse(com.loopj.android.http.ResponseHandlerInterface,cz.msebera.android.httpclient.HttpResponse) -> onPostProcessResponse
    void onPreProcessResponse(com.loopj.android.http.ResponseHandlerInterface,cz.msebera.android.httpclient.HttpResponse) -> onPreProcessResponse
    void onRetry(int) -> onRetry
    void onStart() -> onStart
    void onUserException(java.lang.Throwable) -> onUserException
com.loopj.android.http.BuildConfig -> com.loopj.android.http.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.loopj.android.http.DataAsyncHttpResponseHandler -> com.loopj.android.http.DataAsyncHttpResponseHandler:
    int PROGRESS_DATA_MESSAGE -> PROGRESS_DATA_MESSAGE
    java.lang.String LOG_TAG -> LOG_TAG
    byte[] copyOfRange(byte[],int,int) -> copyOfRange
    void onProgressData(byte[]) -> onProgressData
    void sendProgressDataMessage(byte[]) -> sendProgressDataMessage
    void handleMessage(android.os.Message) -> handleMessage
    byte[] getResponseData(cz.msebera.android.httpclient.HttpEntity) -> getResponseData
com.loopj.android.http.FileAsyncHttpResponseHandler -> com.loopj.android.http.FileAsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    java.io.File file -> file
    boolean append -> append
    boolean renameIfExists -> renameIfExists
    java.io.File frontendFile -> frontendFile
    boolean deleteTargetFile() -> deleteTargetFile
    java.io.File getTemporaryFile(android.content.Context) -> getTemporaryFile
    java.io.File getOriginalFile() -> getOriginalFile
    java.io.File getTargetFile() -> getTargetFile
    java.io.File getTargetFileByParsingURL() -> getTargetFileByParsingURL
    void onFailure(int,cz.msebera.android.httpclient.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFailure(int,cz.msebera.android.httpclient.Header[],java.lang.Throwable,java.io.File) -> onFailure
    void onSuccess(int,cz.msebera.android.httpclient.Header[],byte[]) -> onSuccess
    void onSuccess(int,cz.msebera.android.httpclient.Header[],java.io.File) -> onSuccess
    byte[] getResponseData(cz.msebera.android.httpclient.HttpEntity) -> getResponseData
com.loopj.android.http.HttpDelete -> com.loopj.android.http.HttpDelete:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
com.loopj.android.http.HttpGet -> com.loopj.android.http.HttpGet:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
com.loopj.android.http.JsonHttpResponseHandler -> com.loopj.android.http.JsonHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean useRFC5179CompatibilityMode -> useRFC5179CompatibilityMode
    void onSuccess(int,cz.msebera.android.httpclient.Header[],org.json.JSONObject) -> onSuccess
    void onSuccess(int,cz.msebera.android.httpclient.Header[],org.json.JSONArray) -> onSuccess
    void onFailure(int,cz.msebera.android.httpclient.Header[],java.lang.Throwable,org.json.JSONObject) -> onFailure
    void onFailure(int,cz.msebera.android.httpclient.Header[],java.lang.Throwable,org.json.JSONArray) -> onFailure
    void onFailure(int,cz.msebera.android.httpclient.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,cz.msebera.android.httpclient.Header[],java.lang.String) -> onSuccess
    void onSuccess(int,cz.msebera.android.httpclient.Header[],byte[]) -> onSuccess
    void onFailure(int,cz.msebera.android.httpclient.Header[],byte[],java.lang.Throwable) -> onFailure
    java.lang.Object parseResponse(byte[]) -> parseResponse
    boolean isUseRFC5179CompatibilityMode() -> isUseRFC5179CompatibilityMode
    void setUseRFC5179CompatibilityMode(boolean) -> setUseRFC5179CompatibilityMode
    boolean access$000(com.loopj.android.http.JsonHttpResponseHandler) -> access$000
com.loopj.android.http.JsonHttpResponseHandler$1 -> com.loopj.android.http.JsonHttpResponseHandler$1:
    byte[] val$responseBytes -> val$responseBytes
    int val$statusCode -> val$statusCode
    cz.msebera.android.httpclient.Header[] val$headers -> val$headers
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$1 -> com.loopj.android.http.JsonHttpResponseHandler$1$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$2 -> com.loopj.android.http.JsonHttpResponseHandler$1$2:
    org.json.JSONException val$ex -> val$ex
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2 -> com.loopj.android.http.JsonHttpResponseHandler$2:
    byte[] val$responseBytes -> val$responseBytes
    int val$statusCode -> val$statusCode
    cz.msebera.android.httpclient.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$1 -> com.loopj.android.http.JsonHttpResponseHandler$2$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$2 -> com.loopj.android.http.JsonHttpResponseHandler$2$2:
    org.json.JSONException val$ex -> val$ex
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonStreamerEntity -> com.loopj.android.http.JsonStreamerEntity:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.UnsupportedOperationException ERR_UNSUPPORTED -> ERR_UNSUPPORTED
    int BUFFER_SIZE -> BUFFER_SIZE
    byte[] JSON_TRUE -> JSON_TRUE
    byte[] JSON_FALSE -> JSON_FALSE
    byte[] JSON_NULL -> JSON_NULL
    byte[] STREAM_NAME -> STREAM_NAME
    byte[] STREAM_TYPE -> STREAM_TYPE
    byte[] STREAM_CONTENTS -> STREAM_CONTENTS
    cz.msebera.android.httpclient.Header HEADER_JSON_CONTENT -> HEADER_JSON_CONTENT
    cz.msebera.android.httpclient.Header HEADER_GZIP_ENCODING -> HEADER_GZIP_ENCODING
    byte[] buffer -> buffer
    java.util.Map jsonParams -> jsonParams
    cz.msebera.android.httpclient.Header contentEncoding -> contentEncoding
    byte[] elapsedField -> elapsedField
    com.loopj.android.http.ResponseHandlerInterface progressHandler -> progressHandler
    byte[] escape(java.lang.String) -> escape
    void addPart(java.lang.String,java.lang.Object) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    cz.msebera.android.httpclient.Header getContentEncoding() -> getContentEncoding
    cz.msebera.android.httpclient.Header getContentType() -> getContentType
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    void writeToFromStream(java.io.OutputStream,com.loopj.android.http.RequestParams$StreamWrapper) -> writeToFromStream
    void writeToFromFile(java.io.OutputStream,com.loopj.android.http.RequestParams$FileWrapper) -> writeToFromFile
    void writeMetaData(java.io.OutputStream,java.lang.String,java.lang.String) -> writeMetaData
    void endMetaData(java.io.OutputStream) -> endMetaData
com.loopj.android.http.JsonValueInterface -> com.loopj.android.http.JsonValueInterface:
    byte[] getEscapedJsonValue() -> getEscapedJsonValue
com.loopj.android.http.LogHandler -> com.loopj.android.http.LogHandler:
    boolean mLoggingEnabled -> mLoggingEnabled
    int mLoggingLevel -> mLoggingLevel
    boolean isLoggingEnabled() -> isLoggingEnabled
    void setLoggingEnabled(boolean) -> setLoggingEnabled
    int getLoggingLevel() -> getLoggingLevel
    void setLoggingLevel(int) -> setLoggingLevel
    boolean shouldLog(int) -> shouldLog
    void log(int,java.lang.String,java.lang.String) -> log
    void logWithThrowable(int,java.lang.String,java.lang.String,java.lang.Throwable) -> logWithThrowable
    void checkedWtf(java.lang.String,java.lang.String,java.lang.Throwable) -> checkedWtf
    void v(java.lang.String,java.lang.String) -> v
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void i(java.lang.String,java.lang.String) -> i
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void wtf(java.lang.String,java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
com.loopj.android.http.LogInterface -> com.loopj.android.http.LogInterface:
    int VERBOSE -> VERBOSE
    int DEBUG -> DEBUG
    int INFO -> INFO
    int WARN -> WARN
    int ERROR -> ERROR
    int WTF -> WTF
    boolean isLoggingEnabled() -> isLoggingEnabled
    void setLoggingEnabled(boolean) -> setLoggingEnabled
    int getLoggingLevel() -> getLoggingLevel
    void setLoggingLevel(int) -> setLoggingLevel
    boolean shouldLog(int) -> shouldLog
    void v(java.lang.String,java.lang.String) -> v
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void i(java.lang.String,java.lang.String) -> i
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void wtf(java.lang.String,java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
com.loopj.android.http.MyRedirectHandler -> com.loopj.android.http.MyRedirectHandler:
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    boolean enableRedirects -> enableRedirects
    boolean isRedirectRequested(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getLocationURI
com.loopj.android.http.MySSLSocketFactory -> com.loopj.android.http.MySSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.security.KeyStore getKeystoreOfCA(java.io.InputStream) -> getKeystoreOfCA
    java.security.KeyStore getKeystore() -> getKeystore
    cz.msebera.android.httpclient.conn.ssl.SSLSocketFactory getFixedSocketFactory() -> getFixedSocketFactory
    cz.msebera.android.httpclient.impl.client.DefaultHttpClient getNewHttpClient(java.security.KeyStore) -> getNewHttpClient
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    void fixHttpsURLConnection() -> fixHttpsURLConnection
com.loopj.android.http.MySSLSocketFactory$1 -> com.loopj.android.http.MySSLSocketFactory$1:
    com.loopj.android.http.MySSLSocketFactory this$0 -> this$0
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.loopj.android.http.PersistentCookieStore -> com.loopj.android.http.PersistentCookieStore:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String COOKIE_PREFS -> COOKIE_PREFS
    java.lang.String COOKIE_NAME_STORE -> COOKIE_NAME_STORE
    java.lang.String COOKIE_NAME_PREFIX -> COOKIE_NAME_PREFIX
    java.util.concurrent.ConcurrentHashMap cookies -> cookies
    android.content.SharedPreferences cookiePrefs -> cookiePrefs
    boolean omitNonPersistentCookies -> omitNonPersistentCookies
    void addCookie(cz.msebera.android.httpclient.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    void setOmitNonPersistentCookies(boolean) -> setOmitNonPersistentCookies
    void deleteCookie(cz.msebera.android.httpclient.cookie.Cookie) -> deleteCookie
    java.lang.String encodeCookie(com.loopj.android.http.SerializableCookie) -> encodeCookie
    cz.msebera.android.httpclient.cookie.Cookie decodeCookie(java.lang.String) -> decodeCookie
    java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.loopj.android.http.PreemptiveAuthorizationHttpRequestInterceptor -> com.loopj.android.http.PreemptiveAuthorizationHttpRequestInterceptor:
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
com.loopj.android.http.RangeFileAsyncHttpResponseHandler -> com.loopj.android.http.RangeFileAsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    long current -> current
    boolean append -> append
    void sendResponseMessage(cz.msebera.android.httpclient.HttpResponse) -> sendResponseMessage
    byte[] getResponseData(cz.msebera.android.httpclient.HttpEntity) -> getResponseData
    void updateRequestHeaders(cz.msebera.android.httpclient.client.methods.HttpUriRequest) -> updateRequestHeaders
com.loopj.android.http.RequestHandle -> com.loopj.android.http.RequestHandle:
    java.lang.ref.WeakReference request -> request
    boolean cancel(boolean) -> cancel
    boolean isFinished() -> isFinished
    boolean isCancelled() -> isCancelled
    boolean shouldBeGarbageCollected() -> shouldBeGarbageCollected
    java.lang.Object getTag() -> getTag
    com.loopj.android.http.RequestHandle setTag(java.lang.Object) -> setTag
com.loopj.android.http.RequestHandle$1 -> com.loopj.android.http.RequestHandle$1:
    com.loopj.android.http.AsyncHttpRequest val$_request -> val$_request
    boolean val$mayInterruptIfRunning -> val$mayInterruptIfRunning
    com.loopj.android.http.RequestHandle this$0 -> this$0
    void run() -> run
com.loopj.android.http.RequestParams -> com.loopj.android.http.RequestParams:
    java.lang.String APPLICATION_OCTET_STREAM -> APPLICATION_OCTET_STREAM
    java.lang.String APPLICATION_JSON -> APPLICATION_JSON
    java.lang.String LOG_TAG -> LOG_TAG
    java.util.concurrent.ConcurrentHashMap urlParams -> urlParams
    java.util.concurrent.ConcurrentHashMap streamParams -> streamParams
    java.util.concurrent.ConcurrentHashMap fileParams -> fileParams
    java.util.concurrent.ConcurrentHashMap fileArrayParams -> fileArrayParams
    java.util.concurrent.ConcurrentHashMap urlParamsWithObjects -> urlParamsWithObjects
    boolean isRepeatable -> isRepeatable
    boolean forceMultipartEntity -> forceMultipartEntity
    boolean useJsonStreamer -> useJsonStreamer
    java.lang.String elapsedFieldInJsonStreamer -> elapsedFieldInJsonStreamer
    boolean autoCloseInputStreams -> autoCloseInputStreams
    java.lang.String contentEncoding -> contentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    void setForceMultipartEntityContentType(boolean) -> setForceMultipartEntityContentType
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.File[]) -> put
    void put(java.lang.String,java.io.File[],java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.File) -> put
    void put(java.lang.String,java.lang.String,java.io.File) -> put
    void put(java.lang.String,java.io.File,java.lang.String) -> put
    void put(java.lang.String,java.io.File,java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String,boolean) -> put
    void put(java.lang.String,java.lang.Object) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void add(java.lang.String,java.lang.String) -> add
    void remove(java.lang.String) -> remove
    boolean has(java.lang.String) -> has
    java.lang.String toString() -> toString
    void setHttpEntityIsRepeatable(boolean) -> setHttpEntityIsRepeatable
    void setUseJsonStreamer(boolean) -> setUseJsonStreamer
    void setElapsedFieldInJsonStreamer(java.lang.String) -> setElapsedFieldInJsonStreamer
    void setAutoCloseInputStreams(boolean) -> setAutoCloseInputStreams
    cz.msebera.android.httpclient.HttpEntity getEntity(com.loopj.android.http.ResponseHandlerInterface) -> getEntity
    cz.msebera.android.httpclient.HttpEntity createJsonStreamerEntity(com.loopj.android.http.ResponseHandlerInterface) -> createJsonStreamerEntity
    cz.msebera.android.httpclient.HttpEntity createFormEntity() -> createFormEntity
    cz.msebera.android.httpclient.HttpEntity createMultipartEntity(com.loopj.android.http.ResponseHandlerInterface) -> createMultipartEntity
    java.util.List getParamsList() -> getParamsList
    java.util.List getParamsList(java.lang.String,java.lang.Object) -> getParamsList
    java.lang.String getParamString() -> getParamString
com.loopj.android.http.RequestParams$1 -> com.loopj.android.http.RequestParams$1:
    java.lang.String val$key -> val$key
    java.lang.String val$value -> val$value
com.loopj.android.http.RequestParams$FileWrapper -> com.loopj.android.http.RequestParams$FileWrapper:
    java.io.File file -> file
    java.lang.String contentType -> contentType
    java.lang.String customFileName -> customFileName
com.loopj.android.http.RequestParams$StreamWrapper -> com.loopj.android.http.RequestParams$StreamWrapper:
    java.io.InputStream inputStream -> inputStream
    java.lang.String name -> name
    java.lang.String contentType -> contentType
    boolean autoClose -> autoClose
    com.loopj.android.http.RequestParams$StreamWrapper newInstance(java.io.InputStream,java.lang.String,java.lang.String,boolean) -> newInstance
com.loopj.android.http.ResponseHandlerInterface -> com.loopj.android.http.ResponseHandlerInterface:
    void sendResponseMessage(cz.msebera.android.httpclient.HttpResponse) -> sendResponseMessage
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void sendProgressMessage(long,long) -> sendProgressMessage
    void sendCancelMessage() -> sendCancelMessage
    void sendSuccessMessage(int,cz.msebera.android.httpclient.Header[],byte[]) -> sendSuccessMessage
    void sendFailureMessage(int,cz.msebera.android.httpclient.Header[],byte[],java.lang.Throwable) -> sendFailureMessage
    void sendRetryMessage(int) -> sendRetryMessage
    java.net.URI getRequestURI() -> getRequestURI
    void setRequestURI(java.net.URI) -> setRequestURI
    cz.msebera.android.httpclient.Header[] getRequestHeaders() -> getRequestHeaders
    void setRequestHeaders(cz.msebera.android.httpclient.Header[]) -> setRequestHeaders
    boolean getUseSynchronousMode() -> getUseSynchronousMode
    void setUseSynchronousMode(boolean) -> setUseSynchronousMode
    boolean getUsePoolThread() -> getUsePoolThread
    void setUsePoolThread(boolean) -> setUsePoolThread
    void onPreProcessResponse(com.loopj.android.http.ResponseHandlerInterface,cz.msebera.android.httpclient.HttpResponse) -> onPreProcessResponse
    void onPostProcessResponse(com.loopj.android.http.ResponseHandlerInterface,cz.msebera.android.httpclient.HttpResponse) -> onPostProcessResponse
    java.lang.Object getTag() -> getTag
    void setTag(java.lang.Object) -> setTag
com.loopj.android.http.RetryHandler -> com.loopj.android.http.RetryHandler:
    java.util.HashSet exceptionWhitelist -> exceptionWhitelist
    java.util.HashSet exceptionBlacklist -> exceptionBlacklist
    int maxRetries -> maxRetries
    int retrySleepTimeMS -> retrySleepTimeMS
    void addClassToWhitelist(java.lang.Class) -> addClassToWhitelist
    void addClassToBlacklist(java.lang.Class) -> addClassToBlacklist
    boolean retryRequest(java.io.IOException,int,cz.msebera.android.httpclient.protocol.HttpContext) -> retryRequest
    boolean isInList(java.util.HashSet,java.lang.Throwable) -> isInList
com.loopj.android.http.SaxAsyncHttpResponseHandler -> com.loopj.android.http.SaxAsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    org.xml.sax.helpers.DefaultHandler handler -> handler
    byte[] getResponseData(cz.msebera.android.httpclient.HttpEntity) -> getResponseData
    void onSuccess(int,cz.msebera.android.httpclient.Header[],org.xml.sax.helpers.DefaultHandler) -> onSuccess
    void onSuccess(int,cz.msebera.android.httpclient.Header[],byte[]) -> onSuccess
    void onFailure(int,cz.msebera.android.httpclient.Header[],org.xml.sax.helpers.DefaultHandler) -> onFailure
    void onFailure(int,cz.msebera.android.httpclient.Header[],byte[],java.lang.Throwable) -> onFailure
com.loopj.android.http.SerializableCookie -> com.loopj.android.http.SerializableCookie:
    long serialVersionUID -> serialVersionUID
    cz.msebera.android.httpclient.cookie.Cookie cookie -> cookie
    cz.msebera.android.httpclient.impl.cookie.BasicClientCookie clientCookie -> clientCookie
    cz.msebera.android.httpclient.cookie.Cookie getCookie() -> getCookie
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.loopj.android.http.SimpleMultipartEntity -> com.loopj.android.http.SimpleMultipartEntity:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String STR_CR_LF -> STR_CR_LF
    byte[] CR_LF -> CR_LF
    byte[] TRANSFER_ENCODING_BINARY -> TRANSFER_ENCODING_BINARY
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    java.lang.String boundary -> boundary
    byte[] boundaryLine -> boundaryLine
    byte[] boundaryEnd -> boundaryEnd
    java.util.List fileParts -> fileParts
    java.io.ByteArrayOutputStream out -> out
    com.loopj.android.http.ResponseHandlerInterface progressHandler -> progressHandler
    boolean isRepeatable -> isRepeatable
    long bytesWritten -> bytesWritten
    long totalSize -> totalSize
    void addPart(java.lang.String,java.lang.String,java.lang.String) -> addPart
    void addPartWithCharset(java.lang.String,java.lang.String,java.lang.String) -> addPartWithCharset
    void addPart(java.lang.String,java.lang.String) -> addPart
    void addPart(java.lang.String,java.io.File) -> addPart
    void addPart(java.lang.String,java.io.File,java.lang.String) -> addPart
    void addPart(java.lang.String,java.io.File,java.lang.String,java.lang.String) -> addPart
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String) -> addPart
    java.lang.String normalizeContentType(java.lang.String) -> normalizeContentType
    byte[] createContentType(java.lang.String) -> createContentType
    byte[] createContentDisposition(java.lang.String) -> createContentDisposition
    byte[] createContentDisposition(java.lang.String,java.lang.String) -> createContentDisposition
    void updateProgress(long) -> updateProgress
    long getContentLength() -> getContentLength
    cz.msebera.android.httpclient.Header getContentType() -> getContentType
    boolean isChunked() -> isChunked
    void setIsRepeatable(boolean) -> setIsRepeatable
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
    cz.msebera.android.httpclient.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    byte[] access$000(com.loopj.android.http.SimpleMultipartEntity) -> access$000
    byte[] access$100(com.loopj.android.http.SimpleMultipartEntity,java.lang.String,java.lang.String) -> access$100
    byte[] access$200(com.loopj.android.http.SimpleMultipartEntity,java.lang.String) -> access$200
    byte[] access$300() -> access$300
    byte[] access$400() -> access$400
    void access$500(com.loopj.android.http.SimpleMultipartEntity,long) -> access$500
com.loopj.android.http.SimpleMultipartEntity$FilePart -> com.loopj.android.http.SimpleMultipartEntity$FilePart:
    java.io.File file -> file
    byte[] header -> header
    com.loopj.android.http.SimpleMultipartEntity this$0 -> this$0
    byte[] createHeader(java.lang.String,java.lang.String,java.lang.String) -> createHeader
    long getTotalLength() -> getTotalLength
    void writeTo(java.io.OutputStream) -> writeTo
com.loopj.android.http.SyncHttpClient -> com.loopj.android.http.SyncHttpClient:
    com.loopj.android.http.RequestHandle sendRequest(cz.msebera.android.httpclient.impl.client.DefaultHttpClient,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> sendRequest
com.loopj.android.http.TextHttpResponseHandler -> com.loopj.android.http.TextHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String getResponseString(byte[],java.lang.String) -> getResponseString
    void onFailure(int,cz.msebera.android.httpclient.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,cz.msebera.android.httpclient.Header[],java.lang.String) -> onSuccess
    void onSuccess(int,cz.msebera.android.httpclient.Header[],byte[]) -> onSuccess
    void onFailure(int,cz.msebera.android.httpclient.Header[],byte[],java.lang.Throwable) -> onFailure
com.loopj.android.http.Utils -> com.loopj.android.http.Utils:
    void asserts(boolean,java.lang.String) -> asserts
    java.lang.Object notNull(java.lang.Object,java.lang.String) -> notNull
cz.msebera.android.httpclient.ConnectionClosedException -> cz.msebera.android.httpclient.ConnectionClosedException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.ConnectionReuseStrategy -> cz.msebera.android.httpclient.ConnectionReuseStrategy:
    boolean keepAlive(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> keepAlive
cz.msebera.android.httpclient.Consts -> cz.msebera.android.httpclient.Consts:
    int CR -> CR
    int LF -> LF
    int SP -> SP
    int HT -> HT
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset ASCII -> ASCII
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
cz.msebera.android.httpclient.ContentTooLongException -> cz.msebera.android.httpclient.ContentTooLongException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.FormattedHeader -> cz.msebera.android.httpclient.FormattedHeader:
    cz.msebera.android.httpclient.util.CharArrayBuffer getBuffer() -> getBuffer
    int getValuePos() -> getValuePos
cz.msebera.android.httpclient.Header -> cz.msebera.android.httpclient.Header:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    cz.msebera.android.httpclient.HeaderElement[] getElements() -> getElements
cz.msebera.android.httpclient.HeaderElement -> cz.msebera.android.httpclient.HeaderElement:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    cz.msebera.android.httpclient.NameValuePair[] getParameters() -> getParameters
    cz.msebera.android.httpclient.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    int getParameterCount() -> getParameterCount
    cz.msebera.android.httpclient.NameValuePair getParameter(int) -> getParameter
cz.msebera.android.httpclient.HeaderElementIterator -> cz.msebera.android.httpclient.HeaderElementIterator:
    boolean hasNext() -> hasNext
    cz.msebera.android.httpclient.HeaderElement nextElement() -> nextElement
cz.msebera.android.httpclient.HeaderIterator -> cz.msebera.android.httpclient.HeaderIterator:
    boolean hasNext() -> hasNext
    cz.msebera.android.httpclient.Header nextHeader() -> nextHeader
cz.msebera.android.httpclient.HttpClientConnection -> cz.msebera.android.httpclient.HttpClientConnection:
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(cz.msebera.android.httpclient.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> sendRequestEntity
    cz.msebera.android.httpclient.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(cz.msebera.android.httpclient.HttpResponse) -> receiveResponseEntity
    void flush() -> flush
cz.msebera.android.httpclient.HttpConnection -> cz.msebera.android.httpclient.HttpConnection:
    void close() -> close
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    cz.msebera.android.httpclient.HttpConnectionMetrics getMetrics() -> getMetrics
cz.msebera.android.httpclient.HttpConnectionFactory -> cz.msebera.android.httpclient.HttpConnectionFactory:
    cz.msebera.android.httpclient.HttpConnection createConnection(java.net.Socket) -> createConnection
cz.msebera.android.httpclient.HttpConnectionMetrics -> cz.msebera.android.httpclient.HttpConnectionMetrics:
    long getRequestCount() -> getRequestCount
    long getResponseCount() -> getResponseCount
    long getSentBytesCount() -> getSentBytesCount
    long getReceivedBytesCount() -> getReceivedBytesCount
    java.lang.Object getMetric(java.lang.String) -> getMetric
    void reset() -> reset
cz.msebera.android.httpclient.HttpEntity -> cz.msebera.android.httpclient.HttpEntity:
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    cz.msebera.android.httpclient.Header getContentType() -> getContentType
    cz.msebera.android.httpclient.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
cz.msebera.android.httpclient.HttpEntityEnclosingRequest -> cz.msebera.android.httpclient.HttpEntityEnclosingRequest:
    boolean expectContinue() -> expectContinue
    void setEntity(cz.msebera.android.httpclient.HttpEntity) -> setEntity
    cz.msebera.android.httpclient.HttpEntity getEntity() -> getEntity
cz.msebera.android.httpclient.HttpException -> cz.msebera.android.httpclient.HttpException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.HttpHeaders -> cz.msebera.android.httpclient.HttpHeaders:
    java.lang.String ACCEPT -> ACCEPT
    java.lang.String ACCEPT_CHARSET -> ACCEPT_CHARSET
    java.lang.String ACCEPT_ENCODING -> ACCEPT_ENCODING
    java.lang.String ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    java.lang.String ACCEPT_RANGES -> ACCEPT_RANGES
    java.lang.String AGE -> AGE
    java.lang.String ALLOW -> ALLOW
    java.lang.String AUTHORIZATION -> AUTHORIZATION
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CONNECTION -> CONNECTION
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.String CONTENT_MD5 -> CONTENT_MD5
    java.lang.String CONTENT_RANGE -> CONTENT_RANGE
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String DATE -> DATE
    java.lang.String DAV -> DAV
    java.lang.String DEPTH -> DEPTH
    java.lang.String DESTINATION -> DESTINATION
    java.lang.String ETAG -> ETAG
    java.lang.String EXPECT -> EXPECT
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String FROM -> FROM
    java.lang.String HOST -> HOST
    java.lang.String IF -> IF
    java.lang.String IF_MATCH -> IF_MATCH
    java.lang.String IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.String IF_NONE_MATCH -> IF_NONE_MATCH
    java.lang.String IF_RANGE -> IF_RANGE
    java.lang.String IF_UNMODIFIED_SINCE -> IF_UNMODIFIED_SINCE
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String LOCATION -> LOCATION
    java.lang.String LOCK_TOKEN -> LOCK_TOKEN
    java.lang.String MAX_FORWARDS -> MAX_FORWARDS
    java.lang.String OVERWRITE -> OVERWRITE
    java.lang.String PRAGMA -> PRAGMA
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String PROXY_AUTHORIZATION -> PROXY_AUTHORIZATION
    java.lang.String RANGE -> RANGE
    java.lang.String REFERER -> REFERER
    java.lang.String RETRY_AFTER -> RETRY_AFTER
    java.lang.String SERVER -> SERVER
    java.lang.String STATUS_URI -> STATUS_URI
    java.lang.String TE -> TE
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String TRAILER -> TRAILER
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String UPGRADE -> UPGRADE
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String VARY -> VARY
    java.lang.String VIA -> VIA
    java.lang.String WARNING -> WARNING
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
cz.msebera.android.httpclient.HttpHost -> cz.msebera.android.httpclient.HttpHost:
    long serialVersionUID -> serialVersionUID
    java.lang.String DEFAULT_SCHEME_NAME -> DEFAULT_SCHEME_NAME
    java.lang.String hostname -> hostname
    java.lang.String lcHostname -> lcHostname
    int port -> port
    java.lang.String schemeName -> schemeName
    java.net.InetAddress address -> address
    java.lang.String getHostName() -> getHostName
    int getPort() -> getPort
    java.lang.String getSchemeName() -> getSchemeName
    java.net.InetAddress getAddress() -> getAddress
    java.lang.String toURI() -> toURI
    java.lang.String toHostString() -> toHostString
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.HttpInetConnection -> cz.msebera.android.httpclient.HttpInetConnection:
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
cz.msebera.android.httpclient.HttpMessage -> cz.msebera.android.httpclient.HttpMessage:
    cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    boolean containsHeader(java.lang.String) -> containsHeader
    cz.msebera.android.httpclient.Header[] getHeaders(java.lang.String) -> getHeaders
    cz.msebera.android.httpclient.Header getFirstHeader(java.lang.String) -> getFirstHeader
    cz.msebera.android.httpclient.Header getLastHeader(java.lang.String) -> getLastHeader
    cz.msebera.android.httpclient.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(cz.msebera.android.httpclient.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(cz.msebera.android.httpclient.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(cz.msebera.android.httpclient.Header[]) -> setHeaders
    void removeHeader(cz.msebera.android.httpclient.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    cz.msebera.android.httpclient.HeaderIterator headerIterator() -> headerIterator
    cz.msebera.android.httpclient.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
    void setParams(cz.msebera.android.httpclient.params.HttpParams) -> setParams
cz.msebera.android.httpclient.HttpRequest -> cz.msebera.android.httpclient.HttpRequest:
    cz.msebera.android.httpclient.RequestLine getRequestLine() -> getRequestLine
cz.msebera.android.httpclient.HttpRequestFactory -> cz.msebera.android.httpclient.HttpRequestFactory:
    cz.msebera.android.httpclient.HttpRequest newHttpRequest(cz.msebera.android.httpclient.RequestLine) -> newHttpRequest
    cz.msebera.android.httpclient.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
cz.msebera.android.httpclient.HttpRequestInterceptor -> cz.msebera.android.httpclient.HttpRequestInterceptor:
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.HttpResponse -> cz.msebera.android.httpclient.HttpResponse:
    cz.msebera.android.httpclient.StatusLine getStatusLine() -> getStatusLine
    void setStatusLine(cz.msebera.android.httpclient.StatusLine) -> setStatusLine
    void setStatusLine(cz.msebera.android.httpclient.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(cz.msebera.android.httpclient.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    cz.msebera.android.httpclient.HttpEntity getEntity() -> getEntity
    void setEntity(cz.msebera.android.httpclient.HttpEntity) -> setEntity
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
cz.msebera.android.httpclient.HttpResponseFactory -> cz.msebera.android.httpclient.HttpResponseFactory:
    cz.msebera.android.httpclient.HttpResponse newHttpResponse(cz.msebera.android.httpclient.ProtocolVersion,int,cz.msebera.android.httpclient.protocol.HttpContext) -> newHttpResponse
    cz.msebera.android.httpclient.HttpResponse newHttpResponse(cz.msebera.android.httpclient.StatusLine,cz.msebera.android.httpclient.protocol.HttpContext) -> newHttpResponse
cz.msebera.android.httpclient.HttpResponseInterceptor -> cz.msebera.android.httpclient.HttpResponseInterceptor:
    void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.HttpServerConnection -> cz.msebera.android.httpclient.HttpServerConnection:
    cz.msebera.android.httpclient.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void sendResponseHeader(cz.msebera.android.httpclient.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(cz.msebera.android.httpclient.HttpResponse) -> sendResponseEntity
    void flush() -> flush
cz.msebera.android.httpclient.HttpStatus -> cz.msebera.android.httpclient.HttpStatus:
    int SC_CONTINUE -> SC_CONTINUE
    int SC_SWITCHING_PROTOCOLS -> SC_SWITCHING_PROTOCOLS
    int SC_PROCESSING -> SC_PROCESSING
    int SC_OK -> SC_OK
    int SC_CREATED -> SC_CREATED
    int SC_ACCEPTED -> SC_ACCEPTED
    int SC_NON_AUTHORITATIVE_INFORMATION -> SC_NON_AUTHORITATIVE_INFORMATION
    int SC_NO_CONTENT -> SC_NO_CONTENT
    int SC_RESET_CONTENT -> SC_RESET_CONTENT
    int SC_PARTIAL_CONTENT -> SC_PARTIAL_CONTENT
    int SC_MULTI_STATUS -> SC_MULTI_STATUS
    int SC_MULTIPLE_CHOICES -> SC_MULTIPLE_CHOICES
    int SC_MOVED_PERMANENTLY -> SC_MOVED_PERMANENTLY
    int SC_MOVED_TEMPORARILY -> SC_MOVED_TEMPORARILY
    int SC_SEE_OTHER -> SC_SEE_OTHER
    int SC_NOT_MODIFIED -> SC_NOT_MODIFIED
    int SC_USE_PROXY -> SC_USE_PROXY
    int SC_TEMPORARY_REDIRECT -> SC_TEMPORARY_REDIRECT
    int SC_BAD_REQUEST -> SC_BAD_REQUEST
    int SC_UNAUTHORIZED -> SC_UNAUTHORIZED
    int SC_PAYMENT_REQUIRED -> SC_PAYMENT_REQUIRED
    int SC_FORBIDDEN -> SC_FORBIDDEN
    int SC_NOT_FOUND -> SC_NOT_FOUND
    int SC_METHOD_NOT_ALLOWED -> SC_METHOD_NOT_ALLOWED
    int SC_NOT_ACCEPTABLE -> SC_NOT_ACCEPTABLE
    int SC_PROXY_AUTHENTICATION_REQUIRED -> SC_PROXY_AUTHENTICATION_REQUIRED
    int SC_REQUEST_TIMEOUT -> SC_REQUEST_TIMEOUT
    int SC_CONFLICT -> SC_CONFLICT
    int SC_GONE -> SC_GONE
    int SC_LENGTH_REQUIRED -> SC_LENGTH_REQUIRED
    int SC_PRECONDITION_FAILED -> SC_PRECONDITION_FAILED
    int SC_REQUEST_TOO_LONG -> SC_REQUEST_TOO_LONG
    int SC_REQUEST_URI_TOO_LONG -> SC_REQUEST_URI_TOO_LONG
    int SC_UNSUPPORTED_MEDIA_TYPE -> SC_UNSUPPORTED_MEDIA_TYPE
    int SC_REQUESTED_RANGE_NOT_SATISFIABLE -> SC_REQUESTED_RANGE_NOT_SATISFIABLE
    int SC_EXPECTATION_FAILED -> SC_EXPECTATION_FAILED
    int SC_INSUFFICIENT_SPACE_ON_RESOURCE -> SC_INSUFFICIENT_SPACE_ON_RESOURCE
    int SC_METHOD_FAILURE -> SC_METHOD_FAILURE
    int SC_UNPROCESSABLE_ENTITY -> SC_UNPROCESSABLE_ENTITY
    int SC_LOCKED -> SC_LOCKED
    int SC_FAILED_DEPENDENCY -> SC_FAILED_DEPENDENCY
    int SC_INTERNAL_SERVER_ERROR -> SC_INTERNAL_SERVER_ERROR
    int SC_NOT_IMPLEMENTED -> SC_NOT_IMPLEMENTED
    int SC_BAD_GATEWAY -> SC_BAD_GATEWAY
    int SC_SERVICE_UNAVAILABLE -> SC_SERVICE_UNAVAILABLE
    int SC_GATEWAY_TIMEOUT -> SC_GATEWAY_TIMEOUT
    int SC_HTTP_VERSION_NOT_SUPPORTED -> SC_HTTP_VERSION_NOT_SUPPORTED
    int SC_INSUFFICIENT_STORAGE -> SC_INSUFFICIENT_STORAGE
cz.msebera.android.httpclient.HttpVersion -> cz.msebera.android.httpclient.HttpVersion:
    long serialVersionUID -> serialVersionUID
    java.lang.String HTTP -> HTTP
    cz.msebera.android.httpclient.HttpVersion HTTP_0_9 -> HTTP_0_9
    cz.msebera.android.httpclient.HttpVersion HTTP_1_0 -> HTTP_1_0
    cz.msebera.android.httpclient.HttpVersion HTTP_1_1 -> HTTP_1_1
    cz.msebera.android.httpclient.ProtocolVersion forVersion(int,int) -> forVersion
cz.msebera.android.httpclient.MalformedChunkCodingException -> cz.msebera.android.httpclient.MalformedChunkCodingException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.MessageConstraintException -> cz.msebera.android.httpclient.MessageConstraintException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.MethodNotSupportedException -> cz.msebera.android.httpclient.MethodNotSupportedException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.NameValuePair -> cz.msebera.android.httpclient.NameValuePair:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
cz.msebera.android.httpclient.NoHttpResponseException -> cz.msebera.android.httpclient.NoHttpResponseException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.ParseException -> cz.msebera.android.httpclient.ParseException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.ProtocolException -> cz.msebera.android.httpclient.ProtocolException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.ProtocolVersion -> cz.msebera.android.httpclient.ProtocolVersion:
    long serialVersionUID -> serialVersionUID
    java.lang.String protocol -> protocol
    int major -> major
    int minor -> minor
    java.lang.String getProtocol() -> getProtocol
    int getMajor() -> getMajor
    int getMinor() -> getMinor
    cz.msebera.android.httpclient.ProtocolVersion forVersion(int,int) -> forVersion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isComparable(cz.msebera.android.httpclient.ProtocolVersion) -> isComparable
    int compareToVersion(cz.msebera.android.httpclient.ProtocolVersion) -> compareToVersion
    boolean greaterEquals(cz.msebera.android.httpclient.ProtocolVersion) -> greaterEquals
    boolean lessEquals(cz.msebera.android.httpclient.ProtocolVersion) -> lessEquals
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.ReasonPhraseCatalog -> cz.msebera.android.httpclient.ReasonPhraseCatalog:
    java.lang.String getReason(int,java.util.Locale) -> getReason
cz.msebera.android.httpclient.RequestLine -> cz.msebera.android.httpclient.RequestLine:
    java.lang.String getMethod() -> getMethod
    cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
cz.msebera.android.httpclient.StatusLine -> cz.msebera.android.httpclient.StatusLine:
    cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
cz.msebera.android.httpclient.TokenIterator -> cz.msebera.android.httpclient.TokenIterator:
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> nextToken
cz.msebera.android.httpclient.TruncatedChunkException -> cz.msebera.android.httpclient.TruncatedChunkException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.UnsupportedHttpVersionException -> cz.msebera.android.httpclient.UnsupportedHttpVersionException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.annotation.GuardedBy -> cz.msebera.android.httpclient.annotation.GuardedBy:
    java.lang.String value() -> value
cz.msebera.android.httpclient.annotation.Immutable -> cz.msebera.android.httpclient.annotation.Immutable:
cz.msebera.android.httpclient.annotation.NotThreadSafe -> cz.msebera.android.httpclient.annotation.NotThreadSafe:
cz.msebera.android.httpclient.annotation.ThreadSafe -> cz.msebera.android.httpclient.annotation.ThreadSafe:
cz.msebera.android.httpclient.auth.AUTH -> cz.msebera.android.httpclient.auth.AUTH:
    java.lang.String WWW_AUTH -> WWW_AUTH
    java.lang.String WWW_AUTH_RESP -> WWW_AUTH_RESP
    java.lang.String PROXY_AUTH -> PROXY_AUTH
    java.lang.String PROXY_AUTH_RESP -> PROXY_AUTH_RESP
cz.msebera.android.httpclient.auth.AuthOption -> cz.msebera.android.httpclient.auth.AuthOption:
    cz.msebera.android.httpclient.auth.AuthScheme authScheme -> authScheme
    cz.msebera.android.httpclient.auth.Credentials creds -> creds
    cz.msebera.android.httpclient.auth.AuthScheme getAuthScheme() -> getAuthScheme
    cz.msebera.android.httpclient.auth.Credentials getCredentials() -> getCredentials
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.auth.AuthProtocolState -> cz.msebera.android.httpclient.auth.AuthProtocolState:
    cz.msebera.android.httpclient.auth.AuthProtocolState UNCHALLENGED -> UNCHALLENGED
    cz.msebera.android.httpclient.auth.AuthProtocolState CHALLENGED -> CHALLENGED
    cz.msebera.android.httpclient.auth.AuthProtocolState HANDSHAKE -> HANDSHAKE
    cz.msebera.android.httpclient.auth.AuthProtocolState FAILURE -> FAILURE
    cz.msebera.android.httpclient.auth.AuthProtocolState SUCCESS -> SUCCESS
    cz.msebera.android.httpclient.auth.AuthProtocolState[] $VALUES -> $VALUES
    cz.msebera.android.httpclient.auth.AuthProtocolState[] values() -> values
    cz.msebera.android.httpclient.auth.AuthProtocolState valueOf(java.lang.String) -> valueOf
cz.msebera.android.httpclient.auth.AuthScheme -> cz.msebera.android.httpclient.auth.AuthScheme:
    void processChallenge(cz.msebera.android.httpclient.Header) -> processChallenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    boolean isComplete() -> isComplete
    cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest) -> authenticate
cz.msebera.android.httpclient.auth.AuthSchemeFactory -> cz.msebera.android.httpclient.auth.AuthSchemeFactory:
    cz.msebera.android.httpclient.auth.AuthScheme newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
cz.msebera.android.httpclient.auth.AuthSchemeProvider -> cz.msebera.android.httpclient.auth.AuthSchemeProvider:
    cz.msebera.android.httpclient.auth.AuthScheme create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.auth.AuthSchemeRegistry -> cz.msebera.android.httpclient.auth.AuthSchemeRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSchemes -> registeredSchemes
    void register(java.lang.String,cz.msebera.android.httpclient.auth.AuthSchemeFactory) -> register
    void unregister(java.lang.String) -> unregister
    cz.msebera.android.httpclient.auth.AuthScheme getAuthScheme(java.lang.String,cz.msebera.android.httpclient.params.HttpParams) -> getAuthScheme
    java.util.List getSchemeNames() -> getSchemeNames
    void setItems(java.util.Map) -> setItems
    cz.msebera.android.httpclient.auth.AuthSchemeProvider lookup(java.lang.String) -> lookup
    java.lang.Object lookup(java.lang.String) -> lookup
cz.msebera.android.httpclient.auth.AuthSchemeRegistry$1 -> cz.msebera.android.httpclient.auth.AuthSchemeRegistry$1:
    java.lang.String val$name -> val$name
    cz.msebera.android.httpclient.auth.AuthSchemeRegistry this$0 -> this$0
    cz.msebera.android.httpclient.auth.AuthScheme create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.auth.AuthScope -> cz.msebera.android.httpclient.auth.AuthScope:
    java.lang.String ANY_HOST -> ANY_HOST
    int ANY_PORT -> ANY_PORT
    java.lang.String ANY_REALM -> ANY_REALM
    java.lang.String ANY_SCHEME -> ANY_SCHEME
    cz.msebera.android.httpclient.auth.AuthScope ANY -> ANY
    java.lang.String scheme -> scheme
    java.lang.String realm -> realm
    java.lang.String host -> host
    int port -> port
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getRealm() -> getRealm
    java.lang.String getScheme() -> getScheme
    int match(cz.msebera.android.httpclient.auth.AuthScope) -> match
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
cz.msebera.android.httpclient.auth.AuthState -> cz.msebera.android.httpclient.auth.AuthState:
    cz.msebera.android.httpclient.auth.AuthProtocolState state -> state
    cz.msebera.android.httpclient.auth.AuthScheme authScheme -> authScheme
    cz.msebera.android.httpclient.auth.AuthScope authScope -> authScope
    cz.msebera.android.httpclient.auth.Credentials credentials -> credentials
    java.util.Queue authOptions -> authOptions
    void reset() -> reset
    cz.msebera.android.httpclient.auth.AuthProtocolState getState() -> getState
    void setState(cz.msebera.android.httpclient.auth.AuthProtocolState) -> setState
    cz.msebera.android.httpclient.auth.AuthScheme getAuthScheme() -> getAuthScheme
    cz.msebera.android.httpclient.auth.Credentials getCredentials() -> getCredentials
    void update(cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.auth.Credentials) -> update
    java.util.Queue getAuthOptions() -> getAuthOptions
    boolean hasAuthOptions() -> hasAuthOptions
    void update(java.util.Queue) -> update
    void invalidate() -> invalidate
    boolean isValid() -> isValid
    void setAuthScheme(cz.msebera.android.httpclient.auth.AuthScheme) -> setAuthScheme
    void setCredentials(cz.msebera.android.httpclient.auth.Credentials) -> setCredentials
    cz.msebera.android.httpclient.auth.AuthScope getAuthScope() -> getAuthScope
    void setAuthScope(cz.msebera.android.httpclient.auth.AuthScope) -> setAuthScope
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.auth.AuthenticationException -> cz.msebera.android.httpclient.auth.AuthenticationException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.auth.BasicUserPrincipal -> cz.msebera.android.httpclient.auth.BasicUserPrincipal:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    java.lang.String getName() -> getName
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.auth.ChallengeState -> cz.msebera.android.httpclient.auth.ChallengeState:
    cz.msebera.android.httpclient.auth.ChallengeState TARGET -> TARGET
    cz.msebera.android.httpclient.auth.ChallengeState PROXY -> PROXY
    cz.msebera.android.httpclient.auth.ChallengeState[] $VALUES -> $VALUES
    cz.msebera.android.httpclient.auth.ChallengeState[] values() -> values
    cz.msebera.android.httpclient.auth.ChallengeState valueOf(java.lang.String) -> valueOf
cz.msebera.android.httpclient.auth.ContextAwareAuthScheme -> cz.msebera.android.httpclient.auth.ContextAwareAuthScheme:
    cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> authenticate
cz.msebera.android.httpclient.auth.Credentials -> cz.msebera.android.httpclient.auth.Credentials:
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getPassword() -> getPassword
cz.msebera.android.httpclient.auth.InvalidCredentialsException -> cz.msebera.android.httpclient.auth.InvalidCredentialsException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.auth.MalformedChallengeException -> cz.msebera.android.httpclient.auth.MalformedChallengeException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.auth.NTCredentials -> cz.msebera.android.httpclient.auth.NTCredentials:
    long serialVersionUID -> serialVersionUID
    cz.msebera.android.httpclient.auth.NTUserPrincipal principal -> principal
    java.lang.String password -> password
    java.lang.String workstation -> workstation
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
    java.lang.String getDomain() -> getDomain
    java.lang.String getWorkstation() -> getWorkstation
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.auth.NTUserPrincipal -> cz.msebera.android.httpclient.auth.NTUserPrincipal:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    java.lang.String domain -> domain
    java.lang.String ntname -> ntname
    java.lang.String getName() -> getName
    java.lang.String getDomain() -> getDomain
    java.lang.String getUsername() -> getUsername
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.auth.UsernamePasswordCredentials -> cz.msebera.android.httpclient.auth.UsernamePasswordCredentials:
    long serialVersionUID -> serialVersionUID
    cz.msebera.android.httpclient.auth.BasicUserPrincipal principal -> principal
    java.lang.String password -> password
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.auth.params.AuthPNames -> cz.msebera.android.httpclient.auth.params.AuthPNames:
    java.lang.String CREDENTIAL_CHARSET -> CREDENTIAL_CHARSET
    java.lang.String TARGET_AUTH_PREF -> TARGET_AUTH_PREF
    java.lang.String PROXY_AUTH_PREF -> PROXY_AUTH_PREF
cz.msebera.android.httpclient.auth.params.AuthParamBean -> cz.msebera.android.httpclient.auth.params.AuthParamBean:
    void setCredentialCharset(java.lang.String) -> setCredentialCharset
cz.msebera.android.httpclient.auth.params.AuthParams -> cz.msebera.android.httpclient.auth.params.AuthParams:
    java.lang.String getCredentialCharset(cz.msebera.android.httpclient.params.HttpParams) -> getCredentialCharset
    void setCredentialCharset(cz.msebera.android.httpclient.params.HttpParams,java.lang.String) -> setCredentialCharset
cz.msebera.android.httpclient.client.AuthCache -> cz.msebera.android.httpclient.client.AuthCache:
    void put(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme) -> put
    cz.msebera.android.httpclient.auth.AuthScheme get(cz.msebera.android.httpclient.HttpHost) -> get
    void remove(cz.msebera.android.httpclient.HttpHost) -> remove
    void clear() -> clear
cz.msebera.android.httpclient.client.AuthenticationHandler -> cz.msebera.android.httpclient.client.AuthenticationHandler:
    boolean isAuthenticationRequested(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getChallenges
    cz.msebera.android.httpclient.auth.AuthScheme selectScheme(java.util.Map,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> selectScheme
cz.msebera.android.httpclient.client.AuthenticationStrategy -> cz.msebera.android.httpclient.client.AuthenticationStrategy:
    boolean isAuthenticationRequested(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getChallenges
    java.util.Queue select(java.util.Map,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> select
    void authSucceeded(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authSucceeded
    void authFailed(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authFailed
cz.msebera.android.httpclient.client.BackoffManager -> cz.msebera.android.httpclient.client.BackoffManager:
    void backOff(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> backOff
    void probe(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> probe
cz.msebera.android.httpclient.client.CircularRedirectException -> cz.msebera.android.httpclient.client.CircularRedirectException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.client.ClientProtocolException -> cz.msebera.android.httpclient.client.ClientProtocolException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.client.ConnectionBackoffStrategy -> cz.msebera.android.httpclient.client.ConnectionBackoffStrategy:
    boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    boolean shouldBackoff(cz.msebera.android.httpclient.HttpResponse) -> shouldBackoff
cz.msebera.android.httpclient.client.CookieStore -> cz.msebera.android.httpclient.client.CookieStore:
    void addCookie(cz.msebera.android.httpclient.cookie.Cookie) -> addCookie
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
cz.msebera.android.httpclient.client.CredentialsProvider -> cz.msebera.android.httpclient.client.CredentialsProvider:
    void setCredentials(cz.msebera.android.httpclient.auth.AuthScope,cz.msebera.android.httpclient.auth.Credentials) -> setCredentials
    cz.msebera.android.httpclient.auth.Credentials getCredentials(cz.msebera.android.httpclient.auth.AuthScope) -> getCredentials
    void clear() -> clear
cz.msebera.android.httpclient.client.HttpClient -> cz.msebera.android.httpclient.client.HttpClient:
    cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
    cz.msebera.android.httpclient.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest) -> execute
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> execute
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.client.ResponseHandler) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.client.ResponseHandler,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.ResponseHandler) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.ResponseHandler,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
cz.msebera.android.httpclient.client.HttpRequestRetryHandler -> cz.msebera.android.httpclient.client.HttpRequestRetryHandler:
    boolean retryRequest(java.io.IOException,int,cz.msebera.android.httpclient.protocol.HttpContext) -> retryRequest
cz.msebera.android.httpclient.client.HttpResponseException -> cz.msebera.android.httpclient.client.HttpResponseException:
    long serialVersionUID -> serialVersionUID
    int statusCode -> statusCode
    int getStatusCode() -> getStatusCode
cz.msebera.android.httpclient.client.NonRepeatableRequestException -> cz.msebera.android.httpclient.client.NonRepeatableRequestException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.client.RedirectException -> cz.msebera.android.httpclient.client.RedirectException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.client.RedirectHandler -> cz.msebera.android.httpclient.client.RedirectHandler:
    boolean isRedirectRequested(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getLocationURI
cz.msebera.android.httpclient.client.RedirectStrategy -> cz.msebera.android.httpclient.client.RedirectStrategy:
    boolean isRedirected(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isRedirected
    cz.msebera.android.httpclient.client.methods.HttpUriRequest getRedirect(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getRedirect
cz.msebera.android.httpclient.client.RequestDirector -> cz.msebera.android.httpclient.client.RequestDirector:
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
cz.msebera.android.httpclient.client.ResponseHandler -> cz.msebera.android.httpclient.client.ResponseHandler:
    java.lang.Object handleResponse(cz.msebera.android.httpclient.HttpResponse) -> handleResponse
cz.msebera.android.httpclient.client.ServiceUnavailableRetryStrategy -> cz.msebera.android.httpclient.client.ServiceUnavailableRetryStrategy:
    boolean retryRequest(cz.msebera.android.httpclient.HttpResponse,int,cz.msebera.android.httpclient.protocol.HttpContext) -> retryRequest
    long getRetryInterval() -> getRetryInterval
cz.msebera.android.httpclient.client.UserTokenHandler -> cz.msebera.android.httpclient.client.UserTokenHandler:
    java.lang.Object getUserToken(cz.msebera.android.httpclient.protocol.HttpContext) -> getUserToken
cz.msebera.android.httpclient.client.cache.CacheResponseStatus -> cz.msebera.android.httpclient.client.cache.CacheResponseStatus:
    cz.msebera.android.httpclient.client.cache.CacheResponseStatus CACHE_MODULE_RESPONSE -> CACHE_MODULE_RESPONSE
    cz.msebera.android.httpclient.client.cache.CacheResponseStatus CACHE_HIT -> CACHE_HIT
    cz.msebera.android.httpclient.client.cache.CacheResponseStatus CACHE_MISS -> CACHE_MISS
    cz.msebera.android.httpclient.client.cache.CacheResponseStatus VALIDATED -> VALIDATED
    cz.msebera.android.httpclient.client.cache.CacheResponseStatus[] $VALUES -> $VALUES
    cz.msebera.android.httpclient.client.cache.CacheResponseStatus[] values() -> values
    cz.msebera.android.httpclient.client.cache.CacheResponseStatus valueOf(java.lang.String) -> valueOf
cz.msebera.android.httpclient.client.cache.HeaderConstants -> cz.msebera.android.httpclient.client.cache.HeaderConstants:
    java.lang.String GET_METHOD -> GET_METHOD
    java.lang.String HEAD_METHOD -> HEAD_METHOD
    java.lang.String OPTIONS_METHOD -> OPTIONS_METHOD
    java.lang.String PUT_METHOD -> PUT_METHOD
    java.lang.String DELETE_METHOD -> DELETE_METHOD
    java.lang.String TRACE_METHOD -> TRACE_METHOD
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String IF_MATCH -> IF_MATCH
    java.lang.String IF_RANGE -> IF_RANGE
    java.lang.String IF_UNMODIFIED_SINCE -> IF_UNMODIFIED_SINCE
    java.lang.String IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.String IF_NONE_MATCH -> IF_NONE_MATCH
    java.lang.String PRAGMA -> PRAGMA
    java.lang.String MAX_FORWARDS -> MAX_FORWARDS
    java.lang.String ETAG -> ETAG
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String AGE -> AGE
    java.lang.String VARY -> VARY
    java.lang.String ALLOW -> ALLOW
    java.lang.String VIA -> VIA
    java.lang.String PUBLIC -> PUBLIC
    java.lang.String PRIVATE -> PRIVATE
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CACHE_CONTROL_NO_STORE -> CACHE_CONTROL_NO_STORE
    java.lang.String CACHE_CONTROL_NO_CACHE -> CACHE_CONTROL_NO_CACHE
    java.lang.String CACHE_CONTROL_MAX_AGE -> CACHE_CONTROL_MAX_AGE
    java.lang.String CACHE_CONTROL_MAX_STALE -> CACHE_CONTROL_MAX_STALE
    java.lang.String CACHE_CONTROL_MIN_FRESH -> CACHE_CONTROL_MIN_FRESH
    java.lang.String CACHE_CONTROL_MUST_REVALIDATE -> CACHE_CONTROL_MUST_REVALIDATE
    java.lang.String CACHE_CONTROL_PROXY_REVALIDATE -> CACHE_CONTROL_PROXY_REVALIDATE
    java.lang.String STALE_IF_ERROR -> STALE_IF_ERROR
    java.lang.String STALE_WHILE_REVALIDATE -> STALE_WHILE_REVALIDATE
    java.lang.String WARNING -> WARNING
    java.lang.String RANGE -> RANGE
    java.lang.String CONTENT_RANGE -> CONTENT_RANGE
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String AUTHORIZATION -> AUTHORIZATION
cz.msebera.android.httpclient.client.cache.HttpCacheContext -> cz.msebera.android.httpclient.client.cache.HttpCacheContext:
    java.lang.String CACHE_RESPONSE_STATUS -> CACHE_RESPONSE_STATUS
    cz.msebera.android.httpclient.client.cache.HttpCacheContext adapt(cz.msebera.android.httpclient.protocol.HttpContext) -> adapt
    cz.msebera.android.httpclient.client.cache.HttpCacheContext create() -> create
    cz.msebera.android.httpclient.client.cache.CacheResponseStatus getCacheResponseStatus() -> getCacheResponseStatus
cz.msebera.android.httpclient.client.cache.HttpCacheEntry -> cz.msebera.android.httpclient.client.cache.HttpCacheEntry:
    long serialVersionUID -> serialVersionUID
    java.util.Date requestDate -> requestDate
    java.util.Date responseDate -> responseDate
    cz.msebera.android.httpclient.StatusLine statusLine -> statusLine
    cz.msebera.android.httpclient.message.HeaderGroup responseHeaders -> responseHeaders
    cz.msebera.android.httpclient.client.cache.Resource resource -> resource
    java.util.Map variantMap -> variantMap
    java.util.Date date -> date
    java.util.Date parseDate() -> parseDate
    cz.msebera.android.httpclient.StatusLine getStatusLine() -> getStatusLine
    cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getReasonPhrase() -> getReasonPhrase
    int getStatusCode() -> getStatusCode
    java.util.Date getRequestDate() -> getRequestDate
    java.util.Date getResponseDate() -> getResponseDate
    cz.msebera.android.httpclient.Header[] getAllHeaders() -> getAllHeaders
    cz.msebera.android.httpclient.Header getFirstHeader(java.lang.String) -> getFirstHeader
    cz.msebera.android.httpclient.Header[] getHeaders(java.lang.String) -> getHeaders
    java.util.Date getDate() -> getDate
    cz.msebera.android.httpclient.client.cache.Resource getResource() -> getResource
    boolean hasVariants() -> hasVariants
    java.util.Map getVariantMap() -> getVariantMap
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.client.cache.HttpCacheEntrySerializationException -> cz.msebera.android.httpclient.client.cache.HttpCacheEntrySerializationException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.client.cache.HttpCacheEntrySerializer -> cz.msebera.android.httpclient.client.cache.HttpCacheEntrySerializer:
    void writeTo(cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.io.OutputStream) -> writeTo
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry readFrom(java.io.InputStream) -> readFrom
cz.msebera.android.httpclient.client.cache.HttpCacheInvalidator -> cz.msebera.android.httpclient.client.cache.HttpCacheInvalidator:
    void flushInvalidatedCacheEntries(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> flushInvalidatedCacheEntries
    void flushInvalidatedCacheEntries(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse) -> flushInvalidatedCacheEntries
cz.msebera.android.httpclient.client.cache.HttpCacheStorage -> cz.msebera.android.httpclient.client.cache.HttpCacheStorage:
    void putEntry(java.lang.String,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> putEntry
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry getEntry(java.lang.String) -> getEntry
    void removeEntry(java.lang.String) -> removeEntry
    void updateEntry(java.lang.String,cz.msebera.android.httpclient.client.cache.HttpCacheUpdateCallback) -> updateEntry
cz.msebera.android.httpclient.client.cache.HttpCacheUpdateCallback -> cz.msebera.android.httpclient.client.cache.HttpCacheUpdateCallback:
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry update(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> update
cz.msebera.android.httpclient.client.cache.HttpCacheUpdateException -> cz.msebera.android.httpclient.client.cache.HttpCacheUpdateException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.client.cache.InputLimit -> cz.msebera.android.httpclient.client.cache.InputLimit:
    long value -> value
    boolean reached -> reached
    long getValue() -> getValue
    void reached() -> reached
    boolean isReached() -> isReached
cz.msebera.android.httpclient.client.cache.Resource -> cz.msebera.android.httpclient.client.cache.Resource:
    java.io.InputStream getInputStream() -> getInputStream
    long length() -> length
    void dispose() -> dispose
cz.msebera.android.httpclient.client.cache.ResourceFactory -> cz.msebera.android.httpclient.client.cache.ResourceFactory:
    cz.msebera.android.httpclient.client.cache.Resource generate(java.lang.String,java.io.InputStream,cz.msebera.android.httpclient.client.cache.InputLimit) -> generate
    cz.msebera.android.httpclient.client.cache.Resource copy(java.lang.String,cz.msebera.android.httpclient.client.cache.Resource) -> copy
cz.msebera.android.httpclient.client.config.AuthSchemes -> cz.msebera.android.httpclient.client.config.AuthSchemes:
    java.lang.String BASIC -> BASIC
    java.lang.String DIGEST -> DIGEST
    java.lang.String NTLM -> NTLM
    java.lang.String SPNEGO -> SPNEGO
    java.lang.String KERBEROS -> KERBEROS
cz.msebera.android.httpclient.client.config.CookieSpecs -> cz.msebera.android.httpclient.client.config.CookieSpecs:
    java.lang.String BROWSER_COMPATIBILITY -> BROWSER_COMPATIBILITY
    java.lang.String NETSCAPE -> NETSCAPE
    java.lang.String STANDARD -> STANDARD
    java.lang.String BEST_MATCH -> BEST_MATCH
    java.lang.String IGNORE_COOKIES -> IGNORE_COOKIES
cz.msebera.android.httpclient.client.config.RequestConfig -> cz.msebera.android.httpclient.client.config.RequestConfig:
    cz.msebera.android.httpclient.client.config.RequestConfig DEFAULT -> DEFAULT
    boolean expectContinueEnabled -> expectContinueEnabled
    cz.msebera.android.httpclient.HttpHost proxy -> proxy
    java.net.InetAddress localAddress -> localAddress
    boolean staleConnectionCheckEnabled -> staleConnectionCheckEnabled
    java.lang.String cookieSpec -> cookieSpec
    boolean redirectsEnabled -> redirectsEnabled
    boolean relativeRedirectsAllowed -> relativeRedirectsAllowed
    boolean circularRedirectsAllowed -> circularRedirectsAllowed
    int maxRedirects -> maxRedirects
    boolean authenticationEnabled -> authenticationEnabled
    java.util.Collection targetPreferredAuthSchemes -> targetPreferredAuthSchemes
    java.util.Collection proxyPreferredAuthSchemes -> proxyPreferredAuthSchemes
    int connectionRequestTimeout -> connectionRequestTimeout
    int connectTimeout -> connectTimeout
    int socketTimeout -> socketTimeout
    boolean isExpectContinueEnabled() -> isExpectContinueEnabled
    cz.msebera.android.httpclient.HttpHost getProxy() -> getProxy
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    boolean isStaleConnectionCheckEnabled() -> isStaleConnectionCheckEnabled
    java.lang.String getCookieSpec() -> getCookieSpec
    boolean isRedirectsEnabled() -> isRedirectsEnabled
    boolean isRelativeRedirectsAllowed() -> isRelativeRedirectsAllowed
    boolean isCircularRedirectsAllowed() -> isCircularRedirectsAllowed
    int getMaxRedirects() -> getMaxRedirects
    boolean isAuthenticationEnabled() -> isAuthenticationEnabled
    java.util.Collection getTargetPreferredAuthSchemes() -> getTargetPreferredAuthSchemes
    java.util.Collection getProxyPreferredAuthSchemes() -> getProxyPreferredAuthSchemes
    int getConnectionRequestTimeout() -> getConnectionRequestTimeout
    int getConnectTimeout() -> getConnectTimeout
    int getSocketTimeout() -> getSocketTimeout
    cz.msebera.android.httpclient.client.config.RequestConfig clone() -> clone
    java.lang.String toString() -> toString
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder custom() -> custom
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder copy(cz.msebera.android.httpclient.client.config.RequestConfig) -> copy
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.client.config.RequestConfig$Builder -> cz.msebera.android.httpclient.client.config.RequestConfig$Builder:
    boolean expectContinueEnabled -> expectContinueEnabled
    cz.msebera.android.httpclient.HttpHost proxy -> proxy
    java.net.InetAddress localAddress -> localAddress
    boolean staleConnectionCheckEnabled -> staleConnectionCheckEnabled
    java.lang.String cookieSpec -> cookieSpec
    boolean redirectsEnabled -> redirectsEnabled
    boolean relativeRedirectsAllowed -> relativeRedirectsAllowed
    boolean circularRedirectsAllowed -> circularRedirectsAllowed
    int maxRedirects -> maxRedirects
    boolean authenticationEnabled -> authenticationEnabled
    java.util.Collection targetPreferredAuthSchemes -> targetPreferredAuthSchemes
    java.util.Collection proxyPreferredAuthSchemes -> proxyPreferredAuthSchemes
    int connectionRequestTimeout -> connectionRequestTimeout
    int connectTimeout -> connectTimeout
    int socketTimeout -> socketTimeout
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setExpectContinueEnabled(boolean) -> setExpectContinueEnabled
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setProxy(cz.msebera.android.httpclient.HttpHost) -> setProxy
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setLocalAddress(java.net.InetAddress) -> setLocalAddress
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setStaleConnectionCheckEnabled(boolean) -> setStaleConnectionCheckEnabled
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setCookieSpec(java.lang.String) -> setCookieSpec
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setRedirectsEnabled(boolean) -> setRedirectsEnabled
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setRelativeRedirectsAllowed(boolean) -> setRelativeRedirectsAllowed
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setCircularRedirectsAllowed(boolean) -> setCircularRedirectsAllowed
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setMaxRedirects(int) -> setMaxRedirects
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setAuthenticationEnabled(boolean) -> setAuthenticationEnabled
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setTargetPreferredAuthSchemes(java.util.Collection) -> setTargetPreferredAuthSchemes
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setProxyPreferredAuthSchemes(java.util.Collection) -> setProxyPreferredAuthSchemes
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setConnectionRequestTimeout(int) -> setConnectionRequestTimeout
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setConnectTimeout(int) -> setConnectTimeout
    cz.msebera.android.httpclient.client.config.RequestConfig$Builder setSocketTimeout(int) -> setSocketTimeout
    cz.msebera.android.httpclient.client.config.RequestConfig build() -> build
cz.msebera.android.httpclient.client.entity.DecompressingEntity -> cz.msebera.android.httpclient.client.entity.DecompressingEntity:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.InputStream content -> content
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    java.io.InputStream getDecompressingStream() -> getDecompressingStream
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
cz.msebera.android.httpclient.client.entity.DeflateDecompressingEntity -> cz.msebera.android.httpclient.client.entity.DeflateDecompressingEntity:
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    cz.msebera.android.httpclient.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    void writeTo(java.io.OutputStream) -> writeTo
    java.io.InputStream getContent() -> getContent
cz.msebera.android.httpclient.client.entity.DeflateInputStream -> cz.msebera.android.httpclient.client.entity.DeflateInputStream:
    java.io.InputStream sourceStream -> sourceStream
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
    void close() -> close
cz.msebera.android.httpclient.client.entity.DeflateInputStream$DeflateStream -> cz.msebera.android.httpclient.client.entity.DeflateInputStream$DeflateStream:
    boolean closed -> closed
    void close() -> close
cz.msebera.android.httpclient.client.entity.EntityBuilder -> cz.msebera.android.httpclient.client.entity.EntityBuilder:
    java.lang.String text -> text
    byte[] binary -> binary
    java.io.InputStream stream -> stream
    java.util.List parameters -> parameters
    java.io.Serializable serializable -> serializable
    java.io.File file -> file
    cz.msebera.android.httpclient.entity.ContentType contentType -> contentType
    java.lang.String contentEncoding -> contentEncoding
    boolean chunked -> chunked
    boolean gzipCompress -> gzipCompress
    cz.msebera.android.httpclient.client.entity.EntityBuilder create() -> create
    void clearContent() -> clearContent
    java.lang.String getText() -> getText
    cz.msebera.android.httpclient.client.entity.EntityBuilder setText(java.lang.String) -> setText
    byte[] getBinary() -> getBinary
    cz.msebera.android.httpclient.client.entity.EntityBuilder setBinary(byte[]) -> setBinary
    java.io.InputStream getStream() -> getStream
    cz.msebera.android.httpclient.client.entity.EntityBuilder setStream(java.io.InputStream) -> setStream
    java.util.List getParameters() -> getParameters
    cz.msebera.android.httpclient.client.entity.EntityBuilder setParameters(java.util.List) -> setParameters
    cz.msebera.android.httpclient.client.entity.EntityBuilder setParameters(cz.msebera.android.httpclient.NameValuePair[]) -> setParameters
    java.io.Serializable getSerializable() -> getSerializable
    cz.msebera.android.httpclient.client.entity.EntityBuilder setSerializable(java.io.Serializable) -> setSerializable
    java.io.File getFile() -> getFile
    cz.msebera.android.httpclient.client.entity.EntityBuilder setFile(java.io.File) -> setFile
    cz.msebera.android.httpclient.entity.ContentType getContentType() -> getContentType
    cz.msebera.android.httpclient.client.entity.EntityBuilder setContentType(cz.msebera.android.httpclient.entity.ContentType) -> setContentType
    java.lang.String getContentEncoding() -> getContentEncoding
    cz.msebera.android.httpclient.client.entity.EntityBuilder setContentEncoding(java.lang.String) -> setContentEncoding
    boolean isChunked() -> isChunked
    cz.msebera.android.httpclient.client.entity.EntityBuilder chunked() -> chunked
    boolean isGzipCompress() -> isGzipCompress
    cz.msebera.android.httpclient.client.entity.EntityBuilder gzipCompress() -> gzipCompress
    cz.msebera.android.httpclient.entity.ContentType getContentOrDefault(cz.msebera.android.httpclient.entity.ContentType) -> getContentOrDefault
    cz.msebera.android.httpclient.HttpEntity build() -> build
cz.msebera.android.httpclient.client.entity.GzipCompressingEntity -> cz.msebera.android.httpclient.client.entity.GzipCompressingEntity:
    java.lang.String GZIP_CODEC -> GZIP_CODEC
    cz.msebera.android.httpclient.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    boolean isChunked() -> isChunked
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
cz.msebera.android.httpclient.client.entity.GzipDecompressingEntity -> cz.msebera.android.httpclient.client.entity.GzipDecompressingEntity:
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    cz.msebera.android.httpclient.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    void writeTo(java.io.OutputStream) -> writeTo
    java.io.InputStream getContent() -> getContent
cz.msebera.android.httpclient.client.entity.LazyDecompressingInputStream -> cz.msebera.android.httpclient.client.entity.LazyDecompressingInputStream:
    java.io.InputStream wrappedStream -> wrappedStream
    cz.msebera.android.httpclient.client.entity.DecompressingEntity decompressingEntity -> decompressingEntity
    java.io.InputStream wrapperStream -> wrapperStream
    void initWrapper() -> initWrapper
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    boolean markSupported() -> markSupported
    int available() -> available
    void close() -> close
cz.msebera.android.httpclient.client.entity.UrlEncodedFormEntity -> cz.msebera.android.httpclient.client.entity.UrlEncodedFormEntity:
cz.msebera.android.httpclient.client.methods.AbortableHttpRequest -> cz.msebera.android.httpclient.client.methods.AbortableHttpRequest:
    void setConnectionRequest(cz.msebera.android.httpclient.conn.ClientConnectionRequest) -> setConnectionRequest
    void setReleaseTrigger(cz.msebera.android.httpclient.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    void abort() -> abort
cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest -> cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest:
    java.util.concurrent.atomic.AtomicBoolean aborted -> aborted
    java.util.concurrent.atomic.AtomicReference cancellableRef -> cancellableRef
    void setConnectionRequest(cz.msebera.android.httpclient.conn.ClientConnectionRequest) -> setConnectionRequest
    void setReleaseTrigger(cz.msebera.android.httpclient.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    void abort() -> abort
    boolean isAborted() -> isAborted
    void setCancellable(cz.msebera.android.httpclient.concurrent.Cancellable) -> setCancellable
    java.lang.Object clone() -> clone
    void completed() -> completed
    void reset() -> reset
cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest$1 -> cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest$1:
    cz.msebera.android.httpclient.conn.ClientConnectionRequest val$connRequest -> val$connRequest
    cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest this$0 -> this$0
    boolean cancel() -> cancel
cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest$2 -> cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest$2:
    cz.msebera.android.httpclient.conn.ConnectionReleaseTrigger val$releaseTrigger -> val$releaseTrigger
    cz.msebera.android.httpclient.client.methods.AbstractExecutionAwareRequest this$0 -> this$0
    boolean cancel() -> cancel
cz.msebera.android.httpclient.client.methods.CloseableHttpResponse -> cz.msebera.android.httpclient.client.methods.CloseableHttpResponse:
cz.msebera.android.httpclient.client.methods.Configurable -> cz.msebera.android.httpclient.client.methods.Configurable:
    cz.msebera.android.httpclient.client.config.RequestConfig getConfig() -> getConfig
cz.msebera.android.httpclient.client.methods.HttpDelete -> cz.msebera.android.httpclient.client.methods.HttpDelete:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
cz.msebera.android.httpclient.client.methods.HttpEntityEnclosingRequestBase -> cz.msebera.android.httpclient.client.methods.HttpEntityEnclosingRequestBase:
    cz.msebera.android.httpclient.HttpEntity entity -> entity
    cz.msebera.android.httpclient.HttpEntity getEntity() -> getEntity
    void setEntity(cz.msebera.android.httpclient.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.client.methods.HttpExecutionAware -> cz.msebera.android.httpclient.client.methods.HttpExecutionAware:
    boolean isAborted() -> isAborted
    void setCancellable(cz.msebera.android.httpclient.concurrent.Cancellable) -> setCancellable
cz.msebera.android.httpclient.client.methods.HttpGet -> cz.msebera.android.httpclient.client.methods.HttpGet:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
cz.msebera.android.httpclient.client.methods.HttpHead -> cz.msebera.android.httpclient.client.methods.HttpHead:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
cz.msebera.android.httpclient.client.methods.HttpOptions -> cz.msebera.android.httpclient.client.methods.HttpOptions:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
    java.util.Set getAllowedMethods(cz.msebera.android.httpclient.HttpResponse) -> getAllowedMethods
cz.msebera.android.httpclient.client.methods.HttpPatch -> cz.msebera.android.httpclient.client.methods.HttpPatch:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
cz.msebera.android.httpclient.client.methods.HttpPost -> cz.msebera.android.httpclient.client.methods.HttpPost:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
cz.msebera.android.httpclient.client.methods.HttpPut -> cz.msebera.android.httpclient.client.methods.HttpPut:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
cz.msebera.android.httpclient.client.methods.HttpRequestBase -> cz.msebera.android.httpclient.client.methods.HttpRequestBase:
    cz.msebera.android.httpclient.ProtocolVersion version -> version
    java.net.URI uri -> uri
    cz.msebera.android.httpclient.client.config.RequestConfig config -> config
    java.lang.String getMethod() -> getMethod
    void setProtocolVersion(cz.msebera.android.httpclient.ProtocolVersion) -> setProtocolVersion
    cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.net.URI getURI() -> getURI
    cz.msebera.android.httpclient.RequestLine getRequestLine() -> getRequestLine
    cz.msebera.android.httpclient.client.config.RequestConfig getConfig() -> getConfig
    void setConfig(cz.msebera.android.httpclient.client.config.RequestConfig) -> setConfig
    void setURI(java.net.URI) -> setURI
    void started() -> started
    void releaseConnection() -> releaseConnection
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.client.methods.HttpRequestWrapper -> cz.msebera.android.httpclient.client.methods.HttpRequestWrapper:
    cz.msebera.android.httpclient.HttpRequest original -> original
    java.lang.String method -> method
    cz.msebera.android.httpclient.ProtocolVersion version -> version
    java.net.URI uri -> uri
    cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    void setProtocolVersion(cz.msebera.android.httpclient.ProtocolVersion) -> setProtocolVersion
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    java.lang.String getMethod() -> getMethod
    void abort() -> abort
    boolean isAborted() -> isAborted
    cz.msebera.android.httpclient.RequestLine getRequestLine() -> getRequestLine
    cz.msebera.android.httpclient.HttpRequest getOriginal() -> getOriginal
    java.lang.String toString() -> toString
    cz.msebera.android.httpclient.client.methods.HttpRequestWrapper wrap(cz.msebera.android.httpclient.HttpRequest) -> wrap
    cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
cz.msebera.android.httpclient.client.methods.HttpRequestWrapper$1 -> cz.msebera.android.httpclient.client.methods.HttpRequestWrapper$1:
cz.msebera.android.httpclient.client.methods.HttpRequestWrapper$HttpEntityEnclosingRequestWrapper -> cz.msebera.android.httpclient.client.methods.HttpRequestWrapper$HttpEntityEnclosingRequestWrapper:
    cz.msebera.android.httpclient.HttpEntity entity -> entity
    cz.msebera.android.httpclient.HttpEntity getEntity() -> getEntity
    void setEntity(cz.msebera.android.httpclient.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
cz.msebera.android.httpclient.client.methods.HttpTrace -> cz.msebera.android.httpclient.client.methods.HttpTrace:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
cz.msebera.android.httpclient.client.methods.HttpUriRequest -> cz.msebera.android.httpclient.client.methods.HttpUriRequest:
    java.lang.String getMethod() -> getMethod
    java.net.URI getURI() -> getURI
    void abort() -> abort
    boolean isAborted() -> isAborted
cz.msebera.android.httpclient.client.methods.RequestBuilder -> cz.msebera.android.httpclient.client.methods.RequestBuilder:
    java.lang.String method -> method
    cz.msebera.android.httpclient.ProtocolVersion version -> version
    java.net.URI uri -> uri
    cz.msebera.android.httpclient.message.HeaderGroup headergroup -> headergroup
    cz.msebera.android.httpclient.HttpEntity entity -> entity
    java.util.LinkedList parameters -> parameters
    cz.msebera.android.httpclient.client.config.RequestConfig config -> config
    cz.msebera.android.httpclient.client.methods.RequestBuilder create(java.lang.String) -> create
    cz.msebera.android.httpclient.client.methods.RequestBuilder get() -> get
    cz.msebera.android.httpclient.client.methods.RequestBuilder head() -> head
    cz.msebera.android.httpclient.client.methods.RequestBuilder post() -> post
    cz.msebera.android.httpclient.client.methods.RequestBuilder put() -> put
    cz.msebera.android.httpclient.client.methods.RequestBuilder delete() -> delete
    cz.msebera.android.httpclient.client.methods.RequestBuilder trace() -> trace
    cz.msebera.android.httpclient.client.methods.RequestBuilder options() -> options
    cz.msebera.android.httpclient.client.methods.RequestBuilder copy(cz.msebera.android.httpclient.HttpRequest) -> copy
    cz.msebera.android.httpclient.client.methods.RequestBuilder doCopy(cz.msebera.android.httpclient.HttpRequest) -> doCopy
    java.lang.String getMethod() -> getMethod
    cz.msebera.android.httpclient.ProtocolVersion getVersion() -> getVersion
    cz.msebera.android.httpclient.client.methods.RequestBuilder setVersion(cz.msebera.android.httpclient.ProtocolVersion) -> setVersion
    java.net.URI getUri() -> getUri
    cz.msebera.android.httpclient.client.methods.RequestBuilder setUri(java.net.URI) -> setUri
    cz.msebera.android.httpclient.client.methods.RequestBuilder setUri(java.lang.String) -> setUri
    cz.msebera.android.httpclient.Header getFirstHeader(java.lang.String) -> getFirstHeader
    cz.msebera.android.httpclient.Header getLastHeader(java.lang.String) -> getLastHeader
    cz.msebera.android.httpclient.Header[] getHeaders(java.lang.String) -> getHeaders
    cz.msebera.android.httpclient.client.methods.RequestBuilder addHeader(cz.msebera.android.httpclient.Header) -> addHeader
    cz.msebera.android.httpclient.client.methods.RequestBuilder addHeader(java.lang.String,java.lang.String) -> addHeader
    cz.msebera.android.httpclient.client.methods.RequestBuilder removeHeader(cz.msebera.android.httpclient.Header) -> removeHeader
    cz.msebera.android.httpclient.client.methods.RequestBuilder removeHeaders(java.lang.String) -> removeHeaders
    cz.msebera.android.httpclient.client.methods.RequestBuilder setHeader(cz.msebera.android.httpclient.Header) -> setHeader
    cz.msebera.android.httpclient.client.methods.RequestBuilder setHeader(java.lang.String,java.lang.String) -> setHeader
    cz.msebera.android.httpclient.HttpEntity getEntity() -> getEntity
    cz.msebera.android.httpclient.client.methods.RequestBuilder setEntity(cz.msebera.android.httpclient.HttpEntity) -> setEntity
    java.util.List getParameters() -> getParameters
    cz.msebera.android.httpclient.client.methods.RequestBuilder addParameter(cz.msebera.android.httpclient.NameValuePair) -> addParameter
    cz.msebera.android.httpclient.client.methods.RequestBuilder addParameter(java.lang.String,java.lang.String) -> addParameter
    cz.msebera.android.httpclient.client.methods.RequestBuilder addParameters(cz.msebera.android.httpclient.NameValuePair[]) -> addParameters
    cz.msebera.android.httpclient.client.config.RequestConfig getConfig() -> getConfig
    cz.msebera.android.httpclient.client.methods.RequestBuilder setConfig(cz.msebera.android.httpclient.client.config.RequestConfig) -> setConfig
    cz.msebera.android.httpclient.client.methods.HttpUriRequest build() -> build
cz.msebera.android.httpclient.client.methods.RequestBuilder$InternalEntityEclosingRequest -> cz.msebera.android.httpclient.client.methods.RequestBuilder$InternalEntityEclosingRequest:
    java.lang.String method -> method
    java.lang.String getMethod() -> getMethod
cz.msebera.android.httpclient.client.methods.RequestBuilder$InternalRequest -> cz.msebera.android.httpclient.client.methods.RequestBuilder$InternalRequest:
    java.lang.String method -> method
    java.lang.String getMethod() -> getMethod
cz.msebera.android.httpclient.client.params.AllClientPNames -> cz.msebera.android.httpclient.client.params.AllClientPNames:
cz.msebera.android.httpclient.client.params.AuthPolicy -> cz.msebera.android.httpclient.client.params.AuthPolicy:
    java.lang.String NTLM -> NTLM
    java.lang.String DIGEST -> DIGEST
    java.lang.String BASIC -> BASIC
    java.lang.String SPNEGO -> SPNEGO
    java.lang.String KERBEROS -> KERBEROS
cz.msebera.android.httpclient.client.params.ClientPNames -> cz.msebera.android.httpclient.client.params.ClientPNames:
    java.lang.String CONNECTION_MANAGER_FACTORY_CLASS_NAME -> CONNECTION_MANAGER_FACTORY_CLASS_NAME
    java.lang.String HANDLE_REDIRECTS -> HANDLE_REDIRECTS
    java.lang.String REJECT_RELATIVE_REDIRECT -> REJECT_RELATIVE_REDIRECT
    java.lang.String MAX_REDIRECTS -> MAX_REDIRECTS
    java.lang.String ALLOW_CIRCULAR_REDIRECTS -> ALLOW_CIRCULAR_REDIRECTS
    java.lang.String HANDLE_AUTHENTICATION -> HANDLE_AUTHENTICATION
    java.lang.String COOKIE_POLICY -> COOKIE_POLICY
    java.lang.String VIRTUAL_HOST -> VIRTUAL_HOST
    java.lang.String DEFAULT_HEADERS -> DEFAULT_HEADERS
    java.lang.String DEFAULT_HOST -> DEFAULT_HOST
    java.lang.String CONN_MANAGER_TIMEOUT -> CONN_MANAGER_TIMEOUT
cz.msebera.android.httpclient.client.params.ClientParamBean -> cz.msebera.android.httpclient.client.params.ClientParamBean:
    void setConnectionManagerFactoryClassName(java.lang.String) -> setConnectionManagerFactoryClassName
    void setHandleRedirects(boolean) -> setHandleRedirects
    void setRejectRelativeRedirect(boolean) -> setRejectRelativeRedirect
    void setMaxRedirects(int) -> setMaxRedirects
    void setAllowCircularRedirects(boolean) -> setAllowCircularRedirects
    void setHandleAuthentication(boolean) -> setHandleAuthentication
    void setCookiePolicy(java.lang.String) -> setCookiePolicy
    void setVirtualHost(cz.msebera.android.httpclient.HttpHost) -> setVirtualHost
    void setDefaultHeaders(java.util.Collection) -> setDefaultHeaders
    void setDefaultHost(cz.msebera.android.httpclient.HttpHost) -> setDefaultHost
    void setConnectionManagerTimeout(long) -> setConnectionManagerTimeout
cz.msebera.android.httpclient.client.params.CookiePolicy -> cz.msebera.android.httpclient.client.params.CookiePolicy:
    java.lang.String BROWSER_COMPATIBILITY -> BROWSER_COMPATIBILITY
    java.lang.String NETSCAPE -> NETSCAPE
    java.lang.String RFC_2109 -> RFC_2109
    java.lang.String RFC_2965 -> RFC_2965
    java.lang.String BEST_MATCH -> BEST_MATCH
    java.lang.String IGNORE_COOKIES -> IGNORE_COOKIES
cz.msebera.android.httpclient.client.params.HttpClientParamConfig -> cz.msebera.android.httpclient.client.params.HttpClientParamConfig:
    cz.msebera.android.httpclient.client.config.RequestConfig getRequestConfig(cz.msebera.android.httpclient.params.HttpParams) -> getRequestConfig
cz.msebera.android.httpclient.client.params.HttpClientParams -> cz.msebera.android.httpclient.client.params.HttpClientParams:
    boolean isRedirecting(cz.msebera.android.httpclient.params.HttpParams) -> isRedirecting
    void setRedirecting(cz.msebera.android.httpclient.params.HttpParams,boolean) -> setRedirecting
    boolean isAuthenticating(cz.msebera.android.httpclient.params.HttpParams) -> isAuthenticating
    void setAuthenticating(cz.msebera.android.httpclient.params.HttpParams,boolean) -> setAuthenticating
    java.lang.String getCookiePolicy(cz.msebera.android.httpclient.params.HttpParams) -> getCookiePolicy
    void setCookiePolicy(cz.msebera.android.httpclient.params.HttpParams,java.lang.String) -> setCookiePolicy
    void setConnectionManagerTimeout(cz.msebera.android.httpclient.params.HttpParams,long) -> setConnectionManagerTimeout
    long getConnectionManagerTimeout(cz.msebera.android.httpclient.params.HttpParams) -> getConnectionManagerTimeout
cz.msebera.android.httpclient.client.protocol.ClientContext -> cz.msebera.android.httpclient.client.protocol.ClientContext:
    java.lang.String ROUTE -> ROUTE
    java.lang.String SCHEME_REGISTRY -> SCHEME_REGISTRY
    java.lang.String COOKIESPEC_REGISTRY -> COOKIESPEC_REGISTRY
    java.lang.String COOKIE_SPEC -> COOKIE_SPEC
    java.lang.String COOKIE_ORIGIN -> COOKIE_ORIGIN
    java.lang.String COOKIE_STORE -> COOKIE_STORE
    java.lang.String CREDS_PROVIDER -> CREDS_PROVIDER
    java.lang.String AUTH_CACHE -> AUTH_CACHE
    java.lang.String TARGET_AUTH_STATE -> TARGET_AUTH_STATE
    java.lang.String PROXY_AUTH_STATE -> PROXY_AUTH_STATE
    java.lang.String AUTH_SCHEME_PREF -> AUTH_SCHEME_PREF
    java.lang.String USER_TOKEN -> USER_TOKEN
    java.lang.String AUTHSCHEME_REGISTRY -> AUTHSCHEME_REGISTRY
    java.lang.String SOCKET_FACTORY_REGISTRY -> SOCKET_FACTORY_REGISTRY
    java.lang.String REQUEST_CONFIG -> REQUEST_CONFIG
cz.msebera.android.httpclient.client.protocol.ClientContextConfigurer -> cz.msebera.android.httpclient.client.protocol.ClientContextConfigurer:
    cz.msebera.android.httpclient.protocol.HttpContext context -> context
    void setCookieSpecRegistry(cz.msebera.android.httpclient.cookie.CookieSpecRegistry) -> setCookieSpecRegistry
    void setAuthSchemeRegistry(cz.msebera.android.httpclient.auth.AuthSchemeRegistry) -> setAuthSchemeRegistry
    void setCookieStore(cz.msebera.android.httpclient.client.CookieStore) -> setCookieStore
    void setCredentialsProvider(cz.msebera.android.httpclient.client.CredentialsProvider) -> setCredentialsProvider
cz.msebera.android.httpclient.client.protocol.HttpClientContext -> cz.msebera.android.httpclient.client.protocol.HttpClientContext:
    java.lang.String HTTP_ROUTE -> HTTP_ROUTE
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    java.lang.String COOKIESPEC_REGISTRY -> COOKIESPEC_REGISTRY
    java.lang.String COOKIE_SPEC -> COOKIE_SPEC
    java.lang.String COOKIE_ORIGIN -> COOKIE_ORIGIN
    java.lang.String COOKIE_STORE -> COOKIE_STORE
    java.lang.String CREDS_PROVIDER -> CREDS_PROVIDER
    java.lang.String AUTH_CACHE -> AUTH_CACHE
    java.lang.String TARGET_AUTH_STATE -> TARGET_AUTH_STATE
    java.lang.String PROXY_AUTH_STATE -> PROXY_AUTH_STATE
    java.lang.String USER_TOKEN -> USER_TOKEN
    java.lang.String AUTHSCHEME_REGISTRY -> AUTHSCHEME_REGISTRY
    java.lang.String REQUEST_CONFIG -> REQUEST_CONFIG
    cz.msebera.android.httpclient.client.protocol.HttpClientContext adapt(cz.msebera.android.httpclient.protocol.HttpContext) -> adapt
    cz.msebera.android.httpclient.client.protocol.HttpClientContext create() -> create
    cz.msebera.android.httpclient.conn.routing.RouteInfo getHttpRoute() -> getHttpRoute
    java.util.List getRedirectLocations() -> getRedirectLocations
    cz.msebera.android.httpclient.client.CookieStore getCookieStore() -> getCookieStore
    void setCookieStore(cz.msebera.android.httpclient.client.CookieStore) -> setCookieStore
    cz.msebera.android.httpclient.cookie.CookieSpec getCookieSpec() -> getCookieSpec
    cz.msebera.android.httpclient.cookie.CookieOrigin getCookieOrigin() -> getCookieOrigin
    cz.msebera.android.httpclient.config.Lookup getLookup(java.lang.String,java.lang.Class) -> getLookup
    cz.msebera.android.httpclient.config.Lookup getCookieSpecRegistry() -> getCookieSpecRegistry
    void setCookieSpecRegistry(cz.msebera.android.httpclient.config.Lookup) -> setCookieSpecRegistry
    cz.msebera.android.httpclient.config.Lookup getAuthSchemeRegistry() -> getAuthSchemeRegistry
    void setAuthSchemeRegistry(cz.msebera.android.httpclient.config.Lookup) -> setAuthSchemeRegistry
    cz.msebera.android.httpclient.client.CredentialsProvider getCredentialsProvider() -> getCredentialsProvider
    void setCredentialsProvider(cz.msebera.android.httpclient.client.CredentialsProvider) -> setCredentialsProvider
    cz.msebera.android.httpclient.client.AuthCache getAuthCache() -> getAuthCache
    void setAuthCache(cz.msebera.android.httpclient.client.AuthCache) -> setAuthCache
    cz.msebera.android.httpclient.auth.AuthState getTargetAuthState() -> getTargetAuthState
    cz.msebera.android.httpclient.auth.AuthState getProxyAuthState() -> getProxyAuthState
    java.lang.Object getUserToken(java.lang.Class) -> getUserToken
    java.lang.Object getUserToken() -> getUserToken
    void setUserToken(java.lang.Object) -> setUserToken
    cz.msebera.android.httpclient.client.config.RequestConfig getRequestConfig() -> getRequestConfig
    void setRequestConfig(cz.msebera.android.httpclient.client.config.RequestConfig) -> setRequestConfig
cz.msebera.android.httpclient.client.protocol.RequestAcceptEncoding -> cz.msebera.android.httpclient.client.protocol.RequestAcceptEncoding:
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.RequestAddCookies -> cz.msebera.android.httpclient.client.protocol.RequestAddCookies:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.RequestAuthCache -> cz.msebera.android.httpclient.client.protocol.RequestAuthCache:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
    void doPreemptiveAuth(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.client.CredentialsProvider) -> doPreemptiveAuth
cz.msebera.android.httpclient.client.protocol.RequestAuthenticationBase -> cz.msebera.android.httpclient.client.protocol.RequestAuthenticationBase:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    void process(cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
    void ensureAuthScheme(cz.msebera.android.httpclient.auth.AuthScheme) -> ensureAuthScheme
    cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> authenticate
cz.msebera.android.httpclient.client.protocol.RequestAuthenticationBase$1 -> cz.msebera.android.httpclient.client.protocol.RequestAuthenticationBase$1:
    int[] $SwitchMap$cz$msebera$android$httpclient$auth$AuthProtocolState -> $SwitchMap$cz$msebera$android$httpclient$auth$AuthProtocolState
cz.msebera.android.httpclient.client.protocol.RequestClientConnControl -> cz.msebera.android.httpclient.client.protocol.RequestClientConnControl:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    java.lang.String PROXY_CONN_DIRECTIVE -> PROXY_CONN_DIRECTIVE
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.RequestDefaultHeaders -> cz.msebera.android.httpclient.client.protocol.RequestDefaultHeaders:
    java.util.Collection defaultHeaders -> defaultHeaders
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.RequestExpectContinue -> cz.msebera.android.httpclient.client.protocol.RequestExpectContinue:
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.RequestProxyAuthentication -> cz.msebera.android.httpclient.client.protocol.RequestProxyAuthentication:
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.RequestTargetAuthentication -> cz.msebera.android.httpclient.client.protocol.RequestTargetAuthentication:
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.ResponseAuthCache -> cz.msebera.android.httpclient.client.protocol.ResponseAuthCache:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
    boolean isCachable(cz.msebera.android.httpclient.auth.AuthState) -> isCachable
    void cache(cz.msebera.android.httpclient.client.AuthCache,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme) -> cache
    void uncache(cz.msebera.android.httpclient.client.AuthCache,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme) -> uncache
cz.msebera.android.httpclient.client.protocol.ResponseAuthCache$1 -> cz.msebera.android.httpclient.client.protocol.ResponseAuthCache$1:
    int[] $SwitchMap$cz$msebera$android$httpclient$auth$AuthProtocolState -> $SwitchMap$cz$msebera$android$httpclient$auth$AuthProtocolState
cz.msebera.android.httpclient.client.protocol.ResponseContentEncoding -> cz.msebera.android.httpclient.client.protocol.ResponseContentEncoding:
    java.lang.String UNCOMPRESSED -> UNCOMPRESSED
    void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.client.protocol.ResponseProcessCookies -> cz.msebera.android.httpclient.client.protocol.ResponseProcessCookies:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
    void processCookies(cz.msebera.android.httpclient.HeaderIterator,cz.msebera.android.httpclient.cookie.CookieSpec,cz.msebera.android.httpclient.cookie.CookieOrigin,cz.msebera.android.httpclient.client.CookieStore) -> processCookies
    java.lang.String formatCooke(cz.msebera.android.httpclient.cookie.Cookie) -> formatCooke
cz.msebera.android.httpclient.client.utils.CloneUtils -> cz.msebera.android.httpclient.client.utils.CloneUtils:
    java.lang.Object cloneObject(java.lang.Object) -> cloneObject
    java.lang.Object clone(java.lang.Object) -> clone
cz.msebera.android.httpclient.client.utils.DateUtils -> cz.msebera.android.httpclient.client.utils.DateUtils:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.lang.String[] DEFAULT_PATTERNS -> DEFAULT_PATTERNS
    java.util.Date DEFAULT_TWO_DIGIT_YEAR_START -> DEFAULT_TWO_DIGIT_YEAR_START
    java.util.TimeZone GMT -> GMT
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date) -> parseDate
    java.lang.String formatDate(java.util.Date) -> formatDate
    java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
    void clearThreadLocal() -> clearThreadLocal
cz.msebera.android.httpclient.client.utils.DateUtils$DateFormatHolder -> cz.msebera.android.httpclient.client.utils.DateUtils$DateFormatHolder:
    java.lang.ThreadLocal THREADLOCAL_FORMATS -> THREADLOCAL_FORMATS
    java.text.SimpleDateFormat formatFor(java.lang.String) -> formatFor
    void clearThreadLocal() -> clearThreadLocal
cz.msebera.android.httpclient.client.utils.DateUtils$DateFormatHolder$1 -> cz.msebera.android.httpclient.client.utils.DateUtils$DateFormatHolder$1:
    java.lang.ref.SoftReference initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
cz.msebera.android.httpclient.client.utils.HttpClientUtils -> cz.msebera.android.httpclient.client.utils.HttpClientUtils:
    void closeQuietly(cz.msebera.android.httpclient.HttpResponse) -> closeQuietly
    void closeQuietly(cz.msebera.android.httpclient.client.methods.CloseableHttpResponse) -> closeQuietly
    void closeQuietly(cz.msebera.android.httpclient.client.HttpClient) -> closeQuietly
cz.msebera.android.httpclient.client.utils.Idn -> cz.msebera.android.httpclient.client.utils.Idn:
    java.lang.String toUnicode(java.lang.String) -> toUnicode
cz.msebera.android.httpclient.client.utils.JdkIdn -> cz.msebera.android.httpclient.client.utils.JdkIdn:
    java.lang.reflect.Method toUnicode -> toUnicode
    java.lang.String toUnicode(java.lang.String) -> toUnicode
cz.msebera.android.httpclient.client.utils.Punycode -> cz.msebera.android.httpclient.client.utils.Punycode:
    cz.msebera.android.httpclient.client.utils.Idn impl -> impl
    java.lang.String toUnicode(java.lang.String) -> toUnicode
cz.msebera.android.httpclient.client.utils.Rfc3492Idn -> cz.msebera.android.httpclient.client.utils.Rfc3492Idn:
    int base -> base
    int tmin -> tmin
    int tmax -> tmax
    int skew -> skew
    int damp -> damp
    int initial_bias -> initial_bias
    int initial_n -> initial_n
    char delimiter -> delimiter
    java.lang.String ACE_PREFIX -> ACE_PREFIX
    int adapt(int,int,boolean) -> adapt
    int digit(char) -> digit
    java.lang.String toUnicode(java.lang.String) -> toUnicode
    java.lang.String decode(java.lang.String) -> decode
cz.msebera.android.httpclient.client.utils.URIBuilder -> cz.msebera.android.httpclient.client.utils.URIBuilder:
    java.lang.String scheme -> scheme
    java.lang.String encodedSchemeSpecificPart -> encodedSchemeSpecificPart
    java.lang.String encodedAuthority -> encodedAuthority
    java.lang.String userInfo -> userInfo
    java.lang.String encodedUserInfo -> encodedUserInfo
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    java.lang.String encodedPath -> encodedPath
    java.lang.String encodedQuery -> encodedQuery
    java.util.List queryParams -> queryParams
    java.lang.String query -> query
    java.lang.String fragment -> fragment
    java.lang.String encodedFragment -> encodedFragment
    java.util.List parseQuery(java.lang.String,java.nio.charset.Charset) -> parseQuery
    java.net.URI build() -> build
    java.lang.String buildString() -> buildString
    void digestURI(java.net.URI) -> digestURI
    java.lang.String encodeUserInfo(java.lang.String) -> encodeUserInfo
    java.lang.String encodePath(java.lang.String) -> encodePath
    java.lang.String encodeUrlForm(java.util.List) -> encodeUrlForm
    java.lang.String encodeUric(java.lang.String) -> encodeUric
    cz.msebera.android.httpclient.client.utils.URIBuilder setScheme(java.lang.String) -> setScheme
    cz.msebera.android.httpclient.client.utils.URIBuilder setUserInfo(java.lang.String) -> setUserInfo
    cz.msebera.android.httpclient.client.utils.URIBuilder setUserInfo(java.lang.String,java.lang.String) -> setUserInfo
    cz.msebera.android.httpclient.client.utils.URIBuilder setHost(java.lang.String) -> setHost
    cz.msebera.android.httpclient.client.utils.URIBuilder setPort(int) -> setPort
    cz.msebera.android.httpclient.client.utils.URIBuilder setPath(java.lang.String) -> setPath
    cz.msebera.android.httpclient.client.utils.URIBuilder removeQuery() -> removeQuery
    cz.msebera.android.httpclient.client.utils.URIBuilder setQuery(java.lang.String) -> setQuery
    cz.msebera.android.httpclient.client.utils.URIBuilder setParameters(java.util.List) -> setParameters
    cz.msebera.android.httpclient.client.utils.URIBuilder addParameters(java.util.List) -> addParameters
    cz.msebera.android.httpclient.client.utils.URIBuilder setParameters(cz.msebera.android.httpclient.NameValuePair[]) -> setParameters
    cz.msebera.android.httpclient.client.utils.URIBuilder addParameter(java.lang.String,java.lang.String) -> addParameter
    cz.msebera.android.httpclient.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String) -> setParameter
    cz.msebera.android.httpclient.client.utils.URIBuilder clearParameters() -> clearParameters
    cz.msebera.android.httpclient.client.utils.URIBuilder setCustomQuery(java.lang.String) -> setCustomQuery
    cz.msebera.android.httpclient.client.utils.URIBuilder setFragment(java.lang.String) -> setFragment
    boolean isAbsolute() -> isAbsolute
    boolean isOpaque() -> isOpaque
    java.lang.String getScheme() -> getScheme
    java.lang.String getUserInfo() -> getUserInfo
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
    java.util.List getQueryParams() -> getQueryParams
    java.lang.String getFragment() -> getFragment
    java.lang.String toString() -> toString
    java.lang.String normalizePath(java.lang.String) -> normalizePath
cz.msebera.android.httpclient.client.utils.URIUtils -> cz.msebera.android.httpclient.client.utils.URIUtils:
    java.net.URI createURI(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> createURI
    java.net.URI rewriteURI(java.net.URI,cz.msebera.android.httpclient.HttpHost,boolean) -> rewriteURI
    java.net.URI rewriteURI(java.net.URI,cz.msebera.android.httpclient.HttpHost) -> rewriteURI
    java.net.URI rewriteURI(java.net.URI) -> rewriteURI
    java.net.URI resolve(java.net.URI,java.lang.String) -> resolve
    java.net.URI resolve(java.net.URI,java.net.URI) -> resolve
    java.net.URI resolveReferenceStartingWithQueryString(java.net.URI,java.net.URI) -> resolveReferenceStartingWithQueryString
    java.net.URI normalizeSyntax(java.net.URI) -> normalizeSyntax
    cz.msebera.android.httpclient.HttpHost extractHost(java.net.URI) -> extractHost
    java.net.URI resolve(java.net.URI,cz.msebera.android.httpclient.HttpHost,java.util.List) -> resolve
cz.msebera.android.httpclient.client.utils.URLEncodedUtils -> cz.msebera.android.httpclient.client.utils.URLEncodedUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    char QP_SEP_A -> QP_SEP_A
    char QP_SEP_S -> QP_SEP_S
    java.lang.String NAME_VALUE_SEPARATOR -> NAME_VALUE_SEPARATOR
    char[] QP_SEPS -> QP_SEPS
    java.lang.String QP_SEP_PATTERN -> QP_SEP_PATTERN
    java.util.BitSet UNRESERVED -> UNRESERVED
    java.util.BitSet PUNCT -> PUNCT
    java.util.BitSet USERINFO -> USERINFO
    java.util.BitSet PATHSAFE -> PATHSAFE
    java.util.BitSet URIC -> URIC
    java.util.BitSet RESERVED -> RESERVED
    java.util.BitSet URLENCODER -> URLENCODER
    int RADIX -> RADIX
    java.util.List parse(java.net.URI,java.lang.String) -> parse
    java.util.List parse(cz.msebera.android.httpclient.HttpEntity) -> parse
    boolean isEncoded(cz.msebera.android.httpclient.HttpEntity) -> isEncoded
    void parse(java.util.List,java.util.Scanner,java.lang.String) -> parse
    void parse(java.util.List,java.util.Scanner,java.lang.String,java.lang.String) -> parse
    java.util.List parse(java.lang.String,java.nio.charset.Charset) -> parse
    java.util.List parse(java.lang.String,java.nio.charset.Charset,char[]) -> parse
    java.lang.String format(java.util.List,java.lang.String) -> format
    java.lang.String format(java.util.List,char,java.lang.String) -> format
    java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> format
    java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset) -> format
    java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> urlEncode
    java.lang.String urlDecode(java.lang.String,java.nio.charset.Charset,boolean) -> urlDecode
    java.lang.String decodeFormFields(java.lang.String,java.lang.String) -> decodeFormFields
    java.lang.String decodeFormFields(java.lang.String,java.nio.charset.Charset) -> decodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> encodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> encodeFormFields
    java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> encUserInfo
    java.lang.String encUric(java.lang.String,java.nio.charset.Charset) -> encUric
    java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> encPath
cz.msebera.android.httpclient.concurrent.BasicFuture -> cz.msebera.android.httpclient.concurrent.BasicFuture:
    cz.msebera.android.httpclient.concurrent.FutureCallback callback -> callback
    boolean completed -> completed
    boolean cancelled -> cancelled
    java.lang.Object result -> result
    java.lang.Exception ex -> ex
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object getResult() -> getResult
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    boolean completed(java.lang.Object) -> completed
    boolean failed(java.lang.Exception) -> failed
    boolean cancel(boolean) -> cancel
    boolean cancel() -> cancel
cz.msebera.android.httpclient.concurrent.Cancellable -> cz.msebera.android.httpclient.concurrent.Cancellable:
    boolean cancel() -> cancel
cz.msebera.android.httpclient.concurrent.FutureCallback -> cz.msebera.android.httpclient.concurrent.FutureCallback:
    void completed(java.lang.Object) -> completed
    void failed(java.lang.Exception) -> failed
    void cancelled() -> cancelled
cz.msebera.android.httpclient.config.ConnectionConfig -> cz.msebera.android.httpclient.config.ConnectionConfig:
    cz.msebera.android.httpclient.config.ConnectionConfig DEFAULT -> DEFAULT
    int bufferSize -> bufferSize
    int fragmentSizeHint -> fragmentSizeHint
    java.nio.charset.Charset charset -> charset
    java.nio.charset.CodingErrorAction malformedInputAction -> malformedInputAction
    java.nio.charset.CodingErrorAction unmappableInputAction -> unmappableInputAction
    cz.msebera.android.httpclient.config.MessageConstraints messageConstraints -> messageConstraints
    int getBufferSize() -> getBufferSize
    int getFragmentSizeHint() -> getFragmentSizeHint
    java.nio.charset.Charset getCharset() -> getCharset
    java.nio.charset.CodingErrorAction getMalformedInputAction() -> getMalformedInputAction
    java.nio.charset.CodingErrorAction getUnmappableInputAction() -> getUnmappableInputAction
    cz.msebera.android.httpclient.config.MessageConstraints getMessageConstraints() -> getMessageConstraints
    cz.msebera.android.httpclient.config.ConnectionConfig clone() -> clone
    java.lang.String toString() -> toString
    cz.msebera.android.httpclient.config.ConnectionConfig$Builder custom() -> custom
    cz.msebera.android.httpclient.config.ConnectionConfig$Builder copy(cz.msebera.android.httpclient.config.ConnectionConfig) -> copy
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.config.ConnectionConfig$Builder -> cz.msebera.android.httpclient.config.ConnectionConfig$Builder:
    int bufferSize -> bufferSize
    int fragmentSizeHint -> fragmentSizeHint
    java.nio.charset.Charset charset -> charset
    java.nio.charset.CodingErrorAction malformedInputAction -> malformedInputAction
    java.nio.charset.CodingErrorAction unmappableInputAction -> unmappableInputAction
    cz.msebera.android.httpclient.config.MessageConstraints messageConstraints -> messageConstraints
    cz.msebera.android.httpclient.config.ConnectionConfig$Builder setBufferSize(int) -> setBufferSize
    cz.msebera.android.httpclient.config.ConnectionConfig$Builder setFragmentSizeHint(int) -> setFragmentSizeHint
    cz.msebera.android.httpclient.config.ConnectionConfig$Builder setCharset(java.nio.charset.Charset) -> setCharset
    cz.msebera.android.httpclient.config.ConnectionConfig$Builder setMalformedInputAction(java.nio.charset.CodingErrorAction) -> setMalformedInputAction
    cz.msebera.android.httpclient.config.ConnectionConfig$Builder setUnmappableInputAction(java.nio.charset.CodingErrorAction) -> setUnmappableInputAction
    cz.msebera.android.httpclient.config.ConnectionConfig$Builder setMessageConstraints(cz.msebera.android.httpclient.config.MessageConstraints) -> setMessageConstraints
    cz.msebera.android.httpclient.config.ConnectionConfig build() -> build
cz.msebera.android.httpclient.config.Lookup -> cz.msebera.android.httpclient.config.Lookup:
    java.lang.Object lookup(java.lang.String) -> lookup
cz.msebera.android.httpclient.config.MessageConstraints -> cz.msebera.android.httpclient.config.MessageConstraints:
    cz.msebera.android.httpclient.config.MessageConstraints DEFAULT -> DEFAULT
    int maxLineLength -> maxLineLength
    int maxHeaderCount -> maxHeaderCount
    int getMaxLineLength() -> getMaxLineLength
    int getMaxHeaderCount() -> getMaxHeaderCount
    cz.msebera.android.httpclient.config.MessageConstraints clone() -> clone
    java.lang.String toString() -> toString
    cz.msebera.android.httpclient.config.MessageConstraints lineLen(int) -> lineLen
    cz.msebera.android.httpclient.config.MessageConstraints$Builder custom() -> custom
    cz.msebera.android.httpclient.config.MessageConstraints$Builder copy(cz.msebera.android.httpclient.config.MessageConstraints) -> copy
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.config.MessageConstraints$Builder -> cz.msebera.android.httpclient.config.MessageConstraints$Builder:
    int maxLineLength -> maxLineLength
    int maxHeaderCount -> maxHeaderCount
    cz.msebera.android.httpclient.config.MessageConstraints$Builder setMaxLineLength(int) -> setMaxLineLength
    cz.msebera.android.httpclient.config.MessageConstraints$Builder setMaxHeaderCount(int) -> setMaxHeaderCount
    cz.msebera.android.httpclient.config.MessageConstraints build() -> build
cz.msebera.android.httpclient.config.Registry -> cz.msebera.android.httpclient.config.Registry:
    java.util.Map map -> map
    java.lang.Object lookup(java.lang.String) -> lookup
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.config.RegistryBuilder -> cz.msebera.android.httpclient.config.RegistryBuilder:
    java.util.Map items -> items
    cz.msebera.android.httpclient.config.RegistryBuilder create() -> create
    cz.msebera.android.httpclient.config.RegistryBuilder register(java.lang.String,java.lang.Object) -> register
    cz.msebera.android.httpclient.config.Registry build() -> build
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.config.SocketConfig -> cz.msebera.android.httpclient.config.SocketConfig:
    cz.msebera.android.httpclient.config.SocketConfig DEFAULT -> DEFAULT
    int soTimeout -> soTimeout
    boolean soReuseAddress -> soReuseAddress
    int soLinger -> soLinger
    boolean soKeepAlive -> soKeepAlive
    boolean tcpNoDelay -> tcpNoDelay
    int getSoTimeout() -> getSoTimeout
    boolean isSoReuseAddress() -> isSoReuseAddress
    int getSoLinger() -> getSoLinger
    boolean isSoKeepAlive() -> isSoKeepAlive
    boolean isTcpNoDelay() -> isTcpNoDelay
    cz.msebera.android.httpclient.config.SocketConfig clone() -> clone
    java.lang.String toString() -> toString
    cz.msebera.android.httpclient.config.SocketConfig$Builder custom() -> custom
    cz.msebera.android.httpclient.config.SocketConfig$Builder copy(cz.msebera.android.httpclient.config.SocketConfig) -> copy
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.config.SocketConfig$Builder -> cz.msebera.android.httpclient.config.SocketConfig$Builder:
    int soTimeout -> soTimeout
    boolean soReuseAddress -> soReuseAddress
    int soLinger -> soLinger
    boolean soKeepAlive -> soKeepAlive
    boolean tcpNoDelay -> tcpNoDelay
    cz.msebera.android.httpclient.config.SocketConfig$Builder setSoTimeout(int) -> setSoTimeout
    cz.msebera.android.httpclient.config.SocketConfig$Builder setSoReuseAddress(boolean) -> setSoReuseAddress
    cz.msebera.android.httpclient.config.SocketConfig$Builder setSoLinger(int) -> setSoLinger
    cz.msebera.android.httpclient.config.SocketConfig$Builder setSoKeepAlive(boolean) -> setSoKeepAlive
    cz.msebera.android.httpclient.config.SocketConfig$Builder setTcpNoDelay(boolean) -> setTcpNoDelay
    cz.msebera.android.httpclient.config.SocketConfig build() -> build
cz.msebera.android.httpclient.conn.BasicEofSensorWatcher -> cz.msebera.android.httpclient.conn.BasicEofSensorWatcher:
    cz.msebera.android.httpclient.conn.ManagedClientConnection managedConn -> managedConn
    boolean attemptReuse -> attemptReuse
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
cz.msebera.android.httpclient.conn.BasicManagedEntity -> cz.msebera.android.httpclient.conn.BasicManagedEntity:
    cz.msebera.android.httpclient.conn.ManagedClientConnection managedConn -> managedConn
    boolean attemptReuse -> attemptReuse
    boolean isRepeatable() -> isRepeatable
    java.io.InputStream getContent() -> getContent
    void ensureConsumed() -> ensureConsumed
    void consumeContent() -> consumeContent
    void writeTo(java.io.OutputStream) -> writeTo
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
    void releaseManagedConnection() -> releaseManagedConnection
cz.msebera.android.httpclient.conn.ClientConnectionManager -> cz.msebera.android.httpclient.conn.ClientConnectionManager:
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    cz.msebera.android.httpclient.conn.ClientConnectionRequest requestConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(cz.msebera.android.httpclient.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
cz.msebera.android.httpclient.conn.ClientConnectionManagerFactory -> cz.msebera.android.httpclient.conn.ClientConnectionManagerFactory:
    cz.msebera.android.httpclient.conn.ClientConnectionManager newInstance(cz.msebera.android.httpclient.params.HttpParams,cz.msebera.android.httpclient.conn.scheme.SchemeRegistry) -> newInstance
cz.msebera.android.httpclient.conn.ClientConnectionOperator -> cz.msebera.android.httpclient.conn.ClientConnectionOperator:
    cz.msebera.android.httpclient.conn.OperatedClientConnection createConnection() -> createConnection
    void openConnection(cz.msebera.android.httpclient.conn.OperatedClientConnection,cz.msebera.android.httpclient.HttpHost,java.net.InetAddress,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> openConnection
    void updateSecureConnection(cz.msebera.android.httpclient.conn.OperatedClientConnection,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> updateSecureConnection
cz.msebera.android.httpclient.conn.ClientConnectionRequest -> cz.msebera.android.httpclient.conn.ClientConnectionRequest:
    cz.msebera.android.httpclient.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
    void abortRequest() -> abortRequest
cz.msebera.android.httpclient.conn.ConnectTimeoutException -> cz.msebera.android.httpclient.conn.ConnectTimeoutException:
    long serialVersionUID -> serialVersionUID
    cz.msebera.android.httpclient.HttpHost host -> host
    cz.msebera.android.httpclient.HttpHost getHost() -> getHost
cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy -> cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy:
    long getKeepAliveDuration(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getKeepAliveDuration
cz.msebera.android.httpclient.conn.ConnectionPoolTimeoutException -> cz.msebera.android.httpclient.conn.ConnectionPoolTimeoutException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.conn.ConnectionReleaseTrigger -> cz.msebera.android.httpclient.conn.ConnectionReleaseTrigger:
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
cz.msebera.android.httpclient.conn.ConnectionRequest -> cz.msebera.android.httpclient.conn.ConnectionRequest:
    cz.msebera.android.httpclient.HttpClientConnection get(long,java.util.concurrent.TimeUnit) -> get
cz.msebera.android.httpclient.conn.DnsResolver -> cz.msebera.android.httpclient.conn.DnsResolver:
    java.net.InetAddress[] resolve(java.lang.String) -> resolve
cz.msebera.android.httpclient.conn.EofSensorInputStream -> cz.msebera.android.httpclient.conn.EofSensorInputStream:
    java.io.InputStream wrappedStream -> wrappedStream
    boolean selfClosed -> selfClosed
    cz.msebera.android.httpclient.conn.EofSensorWatcher eofWatcher -> eofWatcher
    boolean isSelfClosed() -> isSelfClosed
    java.io.InputStream getWrappedStream() -> getWrappedStream
    boolean isReadAllowed() -> isReadAllowed
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int available() -> available
    void close() -> close
    void checkEOF(int) -> checkEOF
    void checkClose() -> checkClose
    void checkAbort() -> checkAbort
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
cz.msebera.android.httpclient.conn.EofSensorWatcher -> cz.msebera.android.httpclient.conn.EofSensorWatcher:
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
cz.msebera.android.httpclient.conn.HttpClientConnectionManager -> cz.msebera.android.httpclient.conn.HttpClientConnectionManager:
    cz.msebera.android.httpclient.conn.ConnectionRequest requestConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(cz.msebera.android.httpclient.HttpClientConnection,java.lang.Object,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void connect(cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.conn.routing.HttpRoute,int,cz.msebera.android.httpclient.protocol.HttpContext) -> connect
    void upgrade(cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext) -> upgrade
    void routeComplete(cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext) -> routeComplete
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
cz.msebera.android.httpclient.conn.HttpConnectionFactory -> cz.msebera.android.httpclient.conn.HttpConnectionFactory:
    cz.msebera.android.httpclient.HttpConnection create(java.lang.Object,cz.msebera.android.httpclient.config.ConnectionConfig) -> create
cz.msebera.android.httpclient.conn.HttpHostConnectException -> cz.msebera.android.httpclient.conn.HttpHostConnectException:
    long serialVersionUID -> serialVersionUID
    cz.msebera.android.httpclient.HttpHost host -> host
    cz.msebera.android.httpclient.HttpHost getHost() -> getHost
cz.msebera.android.httpclient.conn.HttpInetSocketAddress -> cz.msebera.android.httpclient.conn.HttpInetSocketAddress:
    long serialVersionUID -> serialVersionUID
    cz.msebera.android.httpclient.HttpHost httphost -> httphost
    cz.msebera.android.httpclient.HttpHost getHttpHost() -> getHttpHost
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.conn.HttpRoutedConnection -> cz.msebera.android.httpclient.conn.HttpRoutedConnection:
    boolean isSecure() -> isSecure
    cz.msebera.android.httpclient.conn.routing.HttpRoute getRoute() -> getRoute
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
cz.msebera.android.httpclient.conn.ManagedClientConnection -> cz.msebera.android.httpclient.conn.ManagedClientConnection:
    boolean isSecure() -> isSecure
    cz.msebera.android.httpclient.conn.routing.HttpRoute getRoute() -> getRoute
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void open(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> open
    void tunnelTarget(boolean,cz.msebera.android.httpclient.params.HttpParams) -> tunnelTarget
    void tunnelProxy(cz.msebera.android.httpclient.HttpHost,boolean,cz.msebera.android.httpclient.params.HttpParams) -> tunnelProxy
    void layerProtocol(cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> layerProtocol
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setState(java.lang.Object) -> setState
    java.lang.Object getState() -> getState
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
cz.msebera.android.httpclient.conn.ManagedHttpClientConnection -> cz.msebera.android.httpclient.conn.ManagedHttpClientConnection:
    java.lang.String getId() -> getId
    void bind(java.net.Socket) -> bind
    java.net.Socket getSocket() -> getSocket
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
cz.msebera.android.httpclient.conn.MultihomePlainSocketFactory -> cz.msebera.android.httpclient.conn.MultihomePlainSocketFactory:
    cz.msebera.android.httpclient.conn.MultihomePlainSocketFactory DEFAULT_FACTORY -> DEFAULT_FACTORY
    cz.msebera.android.httpclient.conn.MultihomePlainSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
cz.msebera.android.httpclient.conn.OperatedClientConnection -> cz.msebera.android.httpclient.conn.OperatedClientConnection:
    cz.msebera.android.httpclient.HttpHost getTargetHost() -> getTargetHost
    boolean isSecure() -> isSecure
    java.net.Socket getSocket() -> getSocket
    void opening(java.net.Socket,cz.msebera.android.httpclient.HttpHost) -> opening
    void openCompleted(boolean,cz.msebera.android.httpclient.params.HttpParams) -> openCompleted
    void update(java.net.Socket,cz.msebera.android.httpclient.HttpHost,boolean,cz.msebera.android.httpclient.params.HttpParams) -> update
cz.msebera.android.httpclient.conn.SchemePortResolver -> cz.msebera.android.httpclient.conn.SchemePortResolver:
    int resolve(cz.msebera.android.httpclient.HttpHost) -> resolve
cz.msebera.android.httpclient.conn.UnsupportedSchemeException -> cz.msebera.android.httpclient.conn.UnsupportedSchemeException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.conn.params.ConnConnectionPNames -> cz.msebera.android.httpclient.conn.params.ConnConnectionPNames:
    java.lang.String MAX_STATUS_LINE_GARBAGE -> MAX_STATUS_LINE_GARBAGE
cz.msebera.android.httpclient.conn.params.ConnConnectionParamBean -> cz.msebera.android.httpclient.conn.params.ConnConnectionParamBean:
    void setMaxStatusLineGarbage(int) -> setMaxStatusLineGarbage
cz.msebera.android.httpclient.conn.params.ConnManagerPNames -> cz.msebera.android.httpclient.conn.params.ConnManagerPNames:
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String MAX_CONNECTIONS_PER_ROUTE -> MAX_CONNECTIONS_PER_ROUTE
    java.lang.String MAX_TOTAL_CONNECTIONS -> MAX_TOTAL_CONNECTIONS
cz.msebera.android.httpclient.conn.params.ConnManagerParamBean -> cz.msebera.android.httpclient.conn.params.ConnManagerParamBean:
    void setTimeout(long) -> setTimeout
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    void setConnectionsPerRoute(cz.msebera.android.httpclient.conn.params.ConnPerRouteBean) -> setConnectionsPerRoute
cz.msebera.android.httpclient.conn.params.ConnManagerParams -> cz.msebera.android.httpclient.conn.params.ConnManagerParams:
    int DEFAULT_MAX_TOTAL_CONNECTIONS -> DEFAULT_MAX_TOTAL_CONNECTIONS
    cz.msebera.android.httpclient.conn.params.ConnPerRoute DEFAULT_CONN_PER_ROUTE -> DEFAULT_CONN_PER_ROUTE
    long getTimeout(cz.msebera.android.httpclient.params.HttpParams) -> getTimeout
    void setTimeout(cz.msebera.android.httpclient.params.HttpParams,long) -> setTimeout
    void setMaxConnectionsPerRoute(cz.msebera.android.httpclient.params.HttpParams,cz.msebera.android.httpclient.conn.params.ConnPerRoute) -> setMaxConnectionsPerRoute
    cz.msebera.android.httpclient.conn.params.ConnPerRoute getMaxConnectionsPerRoute(cz.msebera.android.httpclient.params.HttpParams) -> getMaxConnectionsPerRoute
    void setMaxTotalConnections(cz.msebera.android.httpclient.params.HttpParams,int) -> setMaxTotalConnections
    int getMaxTotalConnections(cz.msebera.android.httpclient.params.HttpParams) -> getMaxTotalConnections
cz.msebera.android.httpclient.conn.params.ConnManagerParams$1 -> cz.msebera.android.httpclient.conn.params.ConnManagerParams$1:
    int getMaxForRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> getMaxForRoute
cz.msebera.android.httpclient.conn.params.ConnPerRoute -> cz.msebera.android.httpclient.conn.params.ConnPerRoute:
    int getMaxForRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> getMaxForRoute
cz.msebera.android.httpclient.conn.params.ConnPerRouteBean -> cz.msebera.android.httpclient.conn.params.ConnPerRouteBean:
    int DEFAULT_MAX_CONNECTIONS_PER_ROUTE -> DEFAULT_MAX_CONNECTIONS_PER_ROUTE
    java.util.concurrent.ConcurrentHashMap maxPerHostMap -> maxPerHostMap
    int defaultMax -> defaultMax
    int getDefaultMax() -> getDefaultMax
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    void setMaxForRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute,int) -> setMaxForRoute
    int getMaxForRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> getMaxForRoute
    void setMaxForRoutes(java.util.Map) -> setMaxForRoutes
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.conn.params.ConnRoutePNames -> cz.msebera.android.httpclient.conn.params.ConnRoutePNames:
    java.lang.String DEFAULT_PROXY -> DEFAULT_PROXY
    java.lang.String LOCAL_ADDRESS -> LOCAL_ADDRESS
    java.lang.String FORCED_ROUTE -> FORCED_ROUTE
cz.msebera.android.httpclient.conn.params.ConnRouteParamBean -> cz.msebera.android.httpclient.conn.params.ConnRouteParamBean:
    void setDefaultProxy(cz.msebera.android.httpclient.HttpHost) -> setDefaultProxy
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    void setForcedRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> setForcedRoute
cz.msebera.android.httpclient.conn.params.ConnRouteParams -> cz.msebera.android.httpclient.conn.params.ConnRouteParams:
    cz.msebera.android.httpclient.HttpHost NO_HOST -> NO_HOST
    cz.msebera.android.httpclient.conn.routing.HttpRoute NO_ROUTE -> NO_ROUTE
    cz.msebera.android.httpclient.HttpHost getDefaultProxy(cz.msebera.android.httpclient.params.HttpParams) -> getDefaultProxy
    void setDefaultProxy(cz.msebera.android.httpclient.params.HttpParams,cz.msebera.android.httpclient.HttpHost) -> setDefaultProxy
    cz.msebera.android.httpclient.conn.routing.HttpRoute getForcedRoute(cz.msebera.android.httpclient.params.HttpParams) -> getForcedRoute
    void setForcedRoute(cz.msebera.android.httpclient.params.HttpParams,cz.msebera.android.httpclient.conn.routing.HttpRoute) -> setForcedRoute
    java.net.InetAddress getLocalAddress(cz.msebera.android.httpclient.params.HttpParams) -> getLocalAddress
    void setLocalAddress(cz.msebera.android.httpclient.params.HttpParams,java.net.InetAddress) -> setLocalAddress
cz.msebera.android.httpclient.conn.routing.BasicRouteDirector -> cz.msebera.android.httpclient.conn.routing.BasicRouteDirector:
    int nextStep(cz.msebera.android.httpclient.conn.routing.RouteInfo,cz.msebera.android.httpclient.conn.routing.RouteInfo) -> nextStep
    int firstStep(cz.msebera.android.httpclient.conn.routing.RouteInfo) -> firstStep
    int directStep(cz.msebera.android.httpclient.conn.routing.RouteInfo,cz.msebera.android.httpclient.conn.routing.RouteInfo) -> directStep
    int proxiedStep(cz.msebera.android.httpclient.conn.routing.RouteInfo,cz.msebera.android.httpclient.conn.routing.RouteInfo) -> proxiedStep
cz.msebera.android.httpclient.conn.routing.HttpRoute -> cz.msebera.android.httpclient.conn.routing.HttpRoute:
    cz.msebera.android.httpclient.HttpHost targetHost -> targetHost
    java.net.InetAddress localAddress -> localAddress
    java.util.List proxyChain -> proxyChain
    cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType tunnelled -> tunnelled
    cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType layered -> layered
    boolean secure -> secure
    cz.msebera.android.httpclient.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    java.net.InetSocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    int getHopCount() -> getHopCount
    cz.msebera.android.httpclient.HttpHost getHopTarget(int) -> getHopTarget
    cz.msebera.android.httpclient.HttpHost getProxyHost() -> getProxyHost
    cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.conn.routing.HttpRouteDirector -> cz.msebera.android.httpclient.conn.routing.HttpRouteDirector:
    int UNREACHABLE -> UNREACHABLE
    int COMPLETE -> COMPLETE
    int CONNECT_TARGET -> CONNECT_TARGET
    int CONNECT_PROXY -> CONNECT_PROXY
    int TUNNEL_TARGET -> TUNNEL_TARGET
    int TUNNEL_PROXY -> TUNNEL_PROXY
    int LAYER_PROTOCOL -> LAYER_PROTOCOL
    int nextStep(cz.msebera.android.httpclient.conn.routing.RouteInfo,cz.msebera.android.httpclient.conn.routing.RouteInfo) -> nextStep
cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner -> cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner:
    cz.msebera.android.httpclient.conn.routing.HttpRoute determineRoute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> determineRoute
cz.msebera.android.httpclient.conn.routing.RouteInfo -> cz.msebera.android.httpclient.conn.routing.RouteInfo:
    cz.msebera.android.httpclient.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    cz.msebera.android.httpclient.HttpHost getHopTarget(int) -> getHopTarget
    cz.msebera.android.httpclient.HttpHost getProxyHost() -> getProxyHost
    cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType -> cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType:
    cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType PLAIN -> PLAIN
    cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType LAYERED -> LAYERED
    cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType[] $VALUES -> $VALUES
    cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType[] values() -> values
    cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType valueOf(java.lang.String) -> valueOf
cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType -> cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType:
    cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType PLAIN -> PLAIN
    cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType TUNNELLED -> TUNNELLED
    cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType[] $VALUES -> $VALUES
    cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType[] values() -> values
    cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType valueOf(java.lang.String) -> valueOf
cz.msebera.android.httpclient.conn.routing.RouteTracker -> cz.msebera.android.httpclient.conn.routing.RouteTracker:
    cz.msebera.android.httpclient.HttpHost targetHost -> targetHost
    java.net.InetAddress localAddress -> localAddress
    boolean connected -> connected
    cz.msebera.android.httpclient.HttpHost[] proxyChain -> proxyChain
    cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType tunnelled -> tunnelled
    cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType layered -> layered
    boolean secure -> secure
    void reset() -> reset
    void connectTarget(boolean) -> connectTarget
    void connectProxy(cz.msebera.android.httpclient.HttpHost,boolean) -> connectProxy
    void tunnelTarget(boolean) -> tunnelTarget
    void tunnelProxy(cz.msebera.android.httpclient.HttpHost,boolean) -> tunnelProxy
    void layerProtocol(boolean) -> layerProtocol
    cz.msebera.android.httpclient.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    cz.msebera.android.httpclient.HttpHost getHopTarget(int) -> getHopTarget
    cz.msebera.android.httpclient.HttpHost getProxyHost() -> getProxyHost
    boolean isConnected() -> isConnected
    cz.msebera.android.httpclient.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    cz.msebera.android.httpclient.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
    cz.msebera.android.httpclient.conn.routing.HttpRoute toRoute() -> toRoute
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.conn.scheme.HostNameResolver -> cz.msebera.android.httpclient.conn.scheme.HostNameResolver:
    java.net.InetAddress resolve(java.lang.String) -> resolve
cz.msebera.android.httpclient.conn.scheme.LayeredSchemeSocketFactory -> cz.msebera.android.httpclient.conn.scheme.LayeredSchemeSocketFactory:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
cz.msebera.android.httpclient.conn.scheme.LayeredSocketFactory -> cz.msebera.android.httpclient.conn.scheme.LayeredSocketFactory:
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
cz.msebera.android.httpclient.conn.scheme.LayeredSocketFactoryAdaptor -> cz.msebera.android.httpclient.conn.scheme.LayeredSocketFactoryAdaptor:
    cz.msebera.android.httpclient.conn.scheme.LayeredSchemeSocketFactory factory -> factory
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
cz.msebera.android.httpclient.conn.scheme.PlainSocketFactory -> cz.msebera.android.httpclient.conn.scheme.PlainSocketFactory:
    cz.msebera.android.httpclient.conn.scheme.HostNameResolver nameResolver -> nameResolver
    cz.msebera.android.httpclient.conn.scheme.PlainSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(cz.msebera.android.httpclient.params.HttpParams) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
cz.msebera.android.httpclient.conn.scheme.Scheme -> cz.msebera.android.httpclient.conn.scheme.Scheme:
    java.lang.String name -> name
    cz.msebera.android.httpclient.conn.scheme.SchemeSocketFactory socketFactory -> socketFactory
    int defaultPort -> defaultPort
    boolean layered -> layered
    java.lang.String stringRep -> stringRep
    int getDefaultPort() -> getDefaultPort
    cz.msebera.android.httpclient.conn.scheme.SocketFactory getSocketFactory() -> getSocketFactory
    cz.msebera.android.httpclient.conn.scheme.SchemeSocketFactory getSchemeSocketFactory() -> getSchemeSocketFactory
    java.lang.String getName() -> getName
    boolean isLayered() -> isLayered
    int resolvePort(int) -> resolvePort
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
cz.msebera.android.httpclient.conn.scheme.SchemeLayeredSocketFactory -> cz.msebera.android.httpclient.conn.scheme.SchemeLayeredSocketFactory:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,cz.msebera.android.httpclient.params.HttpParams) -> createLayeredSocket
cz.msebera.android.httpclient.conn.scheme.SchemeLayeredSocketFactoryAdaptor -> cz.msebera.android.httpclient.conn.scheme.SchemeLayeredSocketFactoryAdaptor:
    cz.msebera.android.httpclient.conn.scheme.LayeredSocketFactory factory -> factory
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,cz.msebera.android.httpclient.params.HttpParams) -> createLayeredSocket
cz.msebera.android.httpclient.conn.scheme.SchemeLayeredSocketFactoryAdaptor2 -> cz.msebera.android.httpclient.conn.scheme.SchemeLayeredSocketFactoryAdaptor2:
    cz.msebera.android.httpclient.conn.scheme.LayeredSchemeSocketFactory factory -> factory
    java.net.Socket createSocket(cz.msebera.android.httpclient.params.HttpParams) -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,cz.msebera.android.httpclient.params.HttpParams) -> createLayeredSocket
cz.msebera.android.httpclient.conn.scheme.SchemeRegistry -> cz.msebera.android.httpclient.conn.scheme.SchemeRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSchemes -> registeredSchemes
    cz.msebera.android.httpclient.conn.scheme.Scheme getScheme(java.lang.String) -> getScheme
    cz.msebera.android.httpclient.conn.scheme.Scheme getScheme(cz.msebera.android.httpclient.HttpHost) -> getScheme
    cz.msebera.android.httpclient.conn.scheme.Scheme get(java.lang.String) -> get
    cz.msebera.android.httpclient.conn.scheme.Scheme register(cz.msebera.android.httpclient.conn.scheme.Scheme) -> register
    cz.msebera.android.httpclient.conn.scheme.Scheme unregister(java.lang.String) -> unregister
    java.util.List getSchemeNames() -> getSchemeNames
    void setItems(java.util.Map) -> setItems
cz.msebera.android.httpclient.conn.scheme.SchemeSocketFactory -> cz.msebera.android.httpclient.conn.scheme.SchemeSocketFactory:
    java.net.Socket createSocket(cz.msebera.android.httpclient.params.HttpParams) -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
cz.msebera.android.httpclient.conn.scheme.SchemeSocketFactoryAdaptor -> cz.msebera.android.httpclient.conn.scheme.SchemeSocketFactoryAdaptor:
    cz.msebera.android.httpclient.conn.scheme.SocketFactory factory -> factory
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    java.net.Socket createSocket(cz.msebera.android.httpclient.params.HttpParams) -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    cz.msebera.android.httpclient.conn.scheme.SocketFactory getFactory() -> getFactory
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
cz.msebera.android.httpclient.conn.scheme.SocketFactory -> cz.msebera.android.httpclient.conn.scheme.SocketFactory:
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
cz.msebera.android.httpclient.conn.scheme.SocketFactoryAdaptor -> cz.msebera.android.httpclient.conn.scheme.SocketFactoryAdaptor:
    cz.msebera.android.httpclient.conn.scheme.SchemeSocketFactory factory -> factory
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    cz.msebera.android.httpclient.conn.scheme.SchemeSocketFactory getFactory() -> getFactory
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
cz.msebera.android.httpclient.conn.socket.ConnectionSocketFactory -> cz.msebera.android.httpclient.conn.socket.ConnectionSocketFactory:
    java.net.Socket createSocket(cz.msebera.android.httpclient.protocol.HttpContext) -> createSocket
    java.net.Socket connectSocket(int,java.net.Socket,cz.msebera.android.httpclient.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,cz.msebera.android.httpclient.protocol.HttpContext) -> connectSocket
cz.msebera.android.httpclient.conn.socket.LayeredConnectionSocketFactory -> cz.msebera.android.httpclient.conn.socket.LayeredConnectionSocketFactory:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,cz.msebera.android.httpclient.protocol.HttpContext) -> createLayeredSocket
cz.msebera.android.httpclient.conn.socket.PlainConnectionSocketFactory -> cz.msebera.android.httpclient.conn.socket.PlainConnectionSocketFactory:
    cz.msebera.android.httpclient.conn.socket.PlainConnectionSocketFactory INSTANCE -> INSTANCE
    cz.msebera.android.httpclient.conn.socket.PlainConnectionSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(cz.msebera.android.httpclient.protocol.HttpContext) -> createSocket
    java.net.Socket connectSocket(int,java.net.Socket,cz.msebera.android.httpclient.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,cz.msebera.android.httpclient.protocol.HttpContext) -> connectSocket
cz.msebera.android.httpclient.conn.ssl.AbstractVerifier -> cz.msebera.android.httpclient.conn.ssl.AbstractVerifier:
    java.lang.String[] BAD_COUNTRY_2LDS -> BAD_COUNTRY_2LDS
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    void verify(java.lang.String,javax.net.ssl.SSLSocket) -> verify
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    void verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean) -> verify
    boolean acceptableCountryWildcard(java.lang.String) -> acceptableCountryWildcard
    boolean validCountryWildcard(java.lang.String) -> validCountryWildcard
    java.lang.String[] getCNs(java.security.cert.X509Certificate) -> getCNs
    java.lang.String[] extractCNs(java.lang.String) -> extractCNs
    java.lang.String[] getSubjectAlts(java.security.cert.X509Certificate,java.lang.String) -> getSubjectAlts
    java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate) -> getDNSSubjectAlts
    int countDots(java.lang.String) -> countDots
    boolean isIPAddress(java.lang.String) -> isIPAddress
    java.lang.String normaliseIPv6Address(java.lang.String) -> normaliseIPv6Address
cz.msebera.android.httpclient.conn.ssl.AllowAllHostnameVerifier -> cz.msebera.android.httpclient.conn.ssl.AllowAllHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.conn.ssl.BrowserCompatHostnameVerifier -> cz.msebera.android.httpclient.conn.ssl.BrowserCompatHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    boolean validCountryWildcard(java.lang.String) -> validCountryWildcard
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.conn.ssl.PrivateKeyDetails -> cz.msebera.android.httpclient.conn.ssl.PrivateKeyDetails:
    java.lang.String type -> type
    java.security.cert.X509Certificate[] certChain -> certChain
    java.lang.String getType() -> getType
    java.security.cert.X509Certificate[] getCertChain() -> getCertChain
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.conn.ssl.PrivateKeyStrategy -> cz.msebera.android.httpclient.conn.ssl.PrivateKeyStrategy:
    java.lang.String chooseAlias(java.util.Map,java.net.Socket) -> chooseAlias
cz.msebera.android.httpclient.conn.ssl.SSLConnectionSocketFactory -> cz.msebera.android.httpclient.conn.ssl.SSLConnectionSocketFactory:
    java.lang.String TLS -> TLS
    java.lang.String SSL -> SSL
    java.lang.String SSLV2 -> SSLV2
    cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER -> ALLOW_ALL_HOSTNAME_VERIFIER
    cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER -> BROWSER_COMPATIBLE_HOSTNAME_VERIFIER
    cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER -> STRICT_HOSTNAME_VERIFIER
    javax.net.ssl.SSLSocketFactory socketfactory -> socketfactory
    cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier hostnameVerifier -> hostnameVerifier
    java.lang.String[] supportedProtocols -> supportedProtocols
    java.lang.String[] supportedCipherSuites -> supportedCipherSuites
    cz.msebera.android.httpclient.conn.ssl.SSLConnectionSocketFactory getSocketFactory() -> getSocketFactory
    java.lang.String[] split(java.lang.String) -> split
    cz.msebera.android.httpclient.conn.ssl.SSLConnectionSocketFactory getSystemSocketFactory() -> getSystemSocketFactory
    void prepareSocket(javax.net.ssl.SSLSocket) -> prepareSocket
    java.net.Socket createSocket(cz.msebera.android.httpclient.protocol.HttpContext) -> createSocket
    java.net.Socket connectSocket(int,java.net.Socket,cz.msebera.android.httpclient.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,cz.msebera.android.httpclient.protocol.HttpContext) -> connectSocket
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,cz.msebera.android.httpclient.protocol.HttpContext) -> createLayeredSocket
    cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    void verifyHostname(javax.net.ssl.SSLSocket,java.lang.String) -> verifyHostname
cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder -> cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder:
    java.lang.String TLS -> TLS
    java.lang.String SSL -> SSL
    java.lang.String protocol -> protocol
    java.util.Set keymanagers -> keymanagers
    java.util.Set trustmanagers -> trustmanagers
    java.security.SecureRandom secureRandom -> secureRandom
    cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder useTLS() -> useTLS
    cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder useSSL() -> useSSL
    cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder useProtocol(java.lang.String) -> useProtocol
    cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom) -> setSecureRandom
    cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,cz.msebera.android.httpclient.conn.ssl.TrustStrategy) -> loadTrustMaterial
    cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore) -> loadTrustMaterial
    cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[]) -> loadKeyMaterial
    cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],cz.msebera.android.httpclient.conn.ssl.PrivateKeyStrategy) -> loadKeyMaterial
    javax.net.ssl.SSLContext build() -> build
cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder$KeyManagerDelegate -> cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder$KeyManagerDelegate:
    javax.net.ssl.X509KeyManager keyManager -> keyManager
    cz.msebera.android.httpclient.conn.ssl.PrivateKeyStrategy aliasStrategy -> aliasStrategy
    java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[]) -> getClientAliases
    java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket) -> chooseClientAlias
    java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[]) -> getServerAliases
    java.lang.String chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket) -> chooseServerAlias
    java.security.cert.X509Certificate[] getCertificateChain(java.lang.String) -> getCertificateChain
    java.security.PrivateKey getPrivateKey(java.lang.String) -> getPrivateKey
cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder$TrustManagerDelegate -> cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder$TrustManagerDelegate:
    javax.net.ssl.X509TrustManager trustManager -> trustManager
    cz.msebera.android.httpclient.conn.ssl.TrustStrategy trustStrategy -> trustStrategy
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
cz.msebera.android.httpclient.conn.ssl.SSLContexts -> cz.msebera.android.httpclient.conn.ssl.SSLContexts:
    javax.net.ssl.SSLContext createDefault() -> createDefault
    javax.net.ssl.SSLContext createSystemDefault() -> createSystemDefault
    cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder custom() -> custom
cz.msebera.android.httpclient.conn.ssl.SSLInitializationException -> cz.msebera.android.httpclient.conn.ssl.SSLInitializationException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.conn.ssl.SSLSocketFactory -> cz.msebera.android.httpclient.conn.ssl.SSLSocketFactory:
    java.lang.String TLS -> TLS
    java.lang.String SSL -> SSL
    java.lang.String SSLV2 -> SSLV2
    cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER -> ALLOW_ALL_HOSTNAME_VERIFIER
    cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER -> BROWSER_COMPATIBLE_HOSTNAME_VERIFIER
    cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER -> STRICT_HOSTNAME_VERIFIER
    javax.net.ssl.SSLSocketFactory socketfactory -> socketfactory
    cz.msebera.android.httpclient.conn.scheme.HostNameResolver nameResolver -> nameResolver
    cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier hostnameVerifier -> hostnameVerifier
    java.lang.String[] supportedProtocols -> supportedProtocols
    java.lang.String[] supportedCipherSuites -> supportedCipherSuites
    cz.msebera.android.httpclient.conn.ssl.SSLSocketFactory getSocketFactory() -> getSocketFactory
    java.lang.String[] split(java.lang.String) -> split
    cz.msebera.android.httpclient.conn.ssl.SSLSocketFactory getSystemSocketFactory() -> getSystemSocketFactory
    java.net.Socket createSocket(cz.msebera.android.httpclient.params.HttpParams) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,cz.msebera.android.httpclient.params.HttpParams) -> createLayeredSocket
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
    void setHostnameVerifier(cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier) -> setHostnameVerifier
    cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,cz.msebera.android.httpclient.params.HttpParams) -> connectSocket
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    void prepareSocket(javax.net.ssl.SSLSocket) -> prepareSocket
    void internalPrepareSocket(javax.net.ssl.SSLSocket) -> internalPrepareSocket
    java.net.Socket createSocket(cz.msebera.android.httpclient.protocol.HttpContext) -> createSocket
    java.net.Socket connectSocket(int,java.net.Socket,cz.msebera.android.httpclient.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,cz.msebera.android.httpclient.protocol.HttpContext) -> connectSocket
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,cz.msebera.android.httpclient.protocol.HttpContext) -> createLayeredSocket
    void verifyHostname(javax.net.ssl.SSLSocket,java.lang.String) -> verifyHostname
cz.msebera.android.httpclient.conn.ssl.StrictHostnameVerifier -> cz.msebera.android.httpclient.conn.ssl.StrictHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.conn.ssl.TrustSelfSignedStrategy -> cz.msebera.android.httpclient.conn.ssl.TrustSelfSignedStrategy:
    boolean isTrusted(java.security.cert.X509Certificate[],java.lang.String) -> isTrusted
cz.msebera.android.httpclient.conn.ssl.TrustStrategy -> cz.msebera.android.httpclient.conn.ssl.TrustStrategy:
    boolean isTrusted(java.security.cert.X509Certificate[],java.lang.String) -> isTrusted
cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier -> cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier:
    void verify(java.lang.String,javax.net.ssl.SSLSocket) -> verify
    void verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
cz.msebera.android.httpclient.conn.util.InetAddressUtils -> cz.msebera.android.httpclient.conn.util.InetAddressUtils:
    java.lang.String IPV4_BASIC_PATTERN_STRING -> IPV4_BASIC_PATTERN_STRING
    java.util.regex.Pattern IPV4_PATTERN -> IPV4_PATTERN
    java.util.regex.Pattern IPV4_MAPPED_IPV6_PATTERN -> IPV4_MAPPED_IPV6_PATTERN
    java.util.regex.Pattern IPV6_STD_PATTERN -> IPV6_STD_PATTERN
    java.util.regex.Pattern IPV6_HEX_COMPRESSED_PATTERN -> IPV6_HEX_COMPRESSED_PATTERN
    char COLON_CHAR -> COLON_CHAR
    int MAX_COLON_COUNT -> MAX_COLON_COUNT
    boolean isIPv4Address(java.lang.String) -> isIPv4Address
    boolean isIPv4MappedIPv64Address(java.lang.String) -> isIPv4MappedIPv64Address
    boolean isIPv6StdAddress(java.lang.String) -> isIPv6StdAddress
    boolean isIPv6HexCompressedAddress(java.lang.String) -> isIPv6HexCompressedAddress
    boolean isIPv6Address(java.lang.String) -> isIPv6Address
cz.msebera.android.httpclient.cookie.ClientCookie -> cz.msebera.android.httpclient.cookie.ClientCookie:
    java.lang.String VERSION_ATTR -> VERSION_ATTR
    java.lang.String PATH_ATTR -> PATH_ATTR
    java.lang.String DOMAIN_ATTR -> DOMAIN_ATTR
    java.lang.String MAX_AGE_ATTR -> MAX_AGE_ATTR
    java.lang.String SECURE_ATTR -> SECURE_ATTR
    java.lang.String COMMENT_ATTR -> COMMENT_ATTR
    java.lang.String EXPIRES_ATTR -> EXPIRES_ATTR
    java.lang.String PORT_ATTR -> PORT_ATTR
    java.lang.String COMMENTURL_ATTR -> COMMENTURL_ATTR
    java.lang.String DISCARD_ATTR -> DISCARD_ATTR
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    boolean containsAttribute(java.lang.String) -> containsAttribute
cz.msebera.android.httpclient.cookie.Cookie -> cz.msebera.android.httpclient.cookie.Cookie:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getComment() -> getComment
    java.lang.String getCommentURL() -> getCommentURL
    java.util.Date getExpiryDate() -> getExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    java.lang.String getPath() -> getPath
    int[] getPorts() -> getPorts
    boolean isSecure() -> isSecure
    int getVersion() -> getVersion
    boolean isExpired(java.util.Date) -> isExpired
cz.msebera.android.httpclient.cookie.CookieAttributeHandler -> cz.msebera.android.httpclient.cookie.CookieAttributeHandler:
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
cz.msebera.android.httpclient.cookie.CookieIdentityComparator -> cz.msebera.android.httpclient.cookie.CookieIdentityComparator:
    long serialVersionUID -> serialVersionUID
    int compare(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.Cookie) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
cz.msebera.android.httpclient.cookie.CookieOrigin -> cz.msebera.android.httpclient.cookie.CookieOrigin:
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    boolean secure -> secure
    java.lang.String getHost() -> getHost
    java.lang.String getPath() -> getPath
    int getPort() -> getPort
    boolean isSecure() -> isSecure
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.cookie.CookiePathComparator -> cz.msebera.android.httpclient.cookie.CookiePathComparator:
    long serialVersionUID -> serialVersionUID
    java.lang.String normalizePath(cz.msebera.android.httpclient.cookie.Cookie) -> normalizePath
    int compare(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.Cookie) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
cz.msebera.android.httpclient.cookie.CookieRestrictionViolationException -> cz.msebera.android.httpclient.cookie.CookieRestrictionViolationException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.cookie.CookieSpec -> cz.msebera.android.httpclient.cookie.CookieSpec:
    int getVersion() -> getVersion
    java.util.List parse(cz.msebera.android.httpclient.Header,cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
    java.util.List formatCookies(java.util.List) -> formatCookies
    cz.msebera.android.httpclient.Header getVersionHeader() -> getVersionHeader
cz.msebera.android.httpclient.cookie.CookieSpecFactory -> cz.msebera.android.httpclient.cookie.CookieSpecFactory:
    cz.msebera.android.httpclient.cookie.CookieSpec newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
cz.msebera.android.httpclient.cookie.CookieSpecProvider -> cz.msebera.android.httpclient.cookie.CookieSpecProvider:
    cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.cookie.CookieSpecRegistry -> cz.msebera.android.httpclient.cookie.CookieSpecRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSpecs -> registeredSpecs
    void register(java.lang.String,cz.msebera.android.httpclient.cookie.CookieSpecFactory) -> register
    void unregister(java.lang.String) -> unregister
    cz.msebera.android.httpclient.cookie.CookieSpec getCookieSpec(java.lang.String,cz.msebera.android.httpclient.params.HttpParams) -> getCookieSpec
    cz.msebera.android.httpclient.cookie.CookieSpec getCookieSpec(java.lang.String) -> getCookieSpec
    java.util.List getSpecNames() -> getSpecNames
    void setItems(java.util.Map) -> setItems
    cz.msebera.android.httpclient.cookie.CookieSpecProvider lookup(java.lang.String) -> lookup
    java.lang.Object lookup(java.lang.String) -> lookup
cz.msebera.android.httpclient.cookie.CookieSpecRegistry$1 -> cz.msebera.android.httpclient.cookie.CookieSpecRegistry$1:
    java.lang.String val$name -> val$name
    cz.msebera.android.httpclient.cookie.CookieSpecRegistry this$0 -> this$0
    cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.cookie.MalformedCookieException -> cz.msebera.android.httpclient.cookie.MalformedCookieException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.cookie.SM -> cz.msebera.android.httpclient.cookie.SM:
    java.lang.String COOKIE -> COOKIE
    java.lang.String COOKIE2 -> COOKIE2
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String SET_COOKIE2 -> SET_COOKIE2
cz.msebera.android.httpclient.cookie.SetCookie -> cz.msebera.android.httpclient.cookie.SetCookie:
    void setValue(java.lang.String) -> setValue
    void setComment(java.lang.String) -> setComment
    void setExpiryDate(java.util.Date) -> setExpiryDate
    void setDomain(java.lang.String) -> setDomain
    void setPath(java.lang.String) -> setPath
    void setSecure(boolean) -> setSecure
    void setVersion(int) -> setVersion
cz.msebera.android.httpclient.cookie.SetCookie2 -> cz.msebera.android.httpclient.cookie.SetCookie2:
    void setCommentURL(java.lang.String) -> setCommentURL
    void setPorts(int[]) -> setPorts
    void setDiscard(boolean) -> setDiscard
cz.msebera.android.httpclient.cookie.params.CookieSpecPNames -> cz.msebera.android.httpclient.cookie.params.CookieSpecPNames:
    java.lang.String DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String SINGLE_COOKIE_HEADER -> SINGLE_COOKIE_HEADER
cz.msebera.android.httpclient.cookie.params.CookieSpecParamBean -> cz.msebera.android.httpclient.cookie.params.CookieSpecParamBean:
    void setDatePatterns(java.util.Collection) -> setDatePatterns
    void setSingleHeader(boolean) -> setSingleHeader
cz.msebera.android.httpclient.entity.AbstractHttpEntity -> cz.msebera.android.httpclient.entity.AbstractHttpEntity:
    int OUTPUT_BUFFER_SIZE -> OUTPUT_BUFFER_SIZE
    cz.msebera.android.httpclient.Header contentType -> contentType
    cz.msebera.android.httpclient.Header contentEncoding -> contentEncoding
    boolean chunked -> chunked
    cz.msebera.android.httpclient.Header getContentType() -> getContentType
    cz.msebera.android.httpclient.Header getContentEncoding() -> getContentEncoding
    boolean isChunked() -> isChunked
    void setContentType(cz.msebera.android.httpclient.Header) -> setContentType
    void setContentType(java.lang.String) -> setContentType
    void setContentEncoding(cz.msebera.android.httpclient.Header) -> setContentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    void setChunked(boolean) -> setChunked
    void consumeContent() -> consumeContent
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.entity.BasicHttpEntity -> cz.msebera.android.httpclient.entity.BasicHttpEntity:
    java.io.InputStream content -> content
    long length -> length
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isRepeatable() -> isRepeatable
    void setContentLength(long) -> setContentLength
    void setContent(java.io.InputStream) -> setContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
cz.msebera.android.httpclient.entity.BufferedHttpEntity -> cz.msebera.android.httpclient.entity.BufferedHttpEntity:
    byte[] buffer -> buffer
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
cz.msebera.android.httpclient.entity.ByteArrayEntity -> cz.msebera.android.httpclient.entity.ByteArrayEntity:
    byte[] content -> content
    byte[] b -> b
    int off -> off
    int len -> len
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.entity.ContentLengthStrategy -> cz.msebera.android.httpclient.entity.ContentLengthStrategy:
    int IDENTITY -> IDENTITY
    int CHUNKED -> CHUNKED
    long determineLength(cz.msebera.android.httpclient.HttpMessage) -> determineLength
cz.msebera.android.httpclient.entity.ContentProducer -> cz.msebera.android.httpclient.entity.ContentProducer:
    void writeTo(java.io.OutputStream) -> writeTo
cz.msebera.android.httpclient.entity.ContentType -> cz.msebera.android.httpclient.entity.ContentType:
    long serialVersionUID -> serialVersionUID
    cz.msebera.android.httpclient.entity.ContentType APPLICATION_ATOM_XML -> APPLICATION_ATOM_XML
    cz.msebera.android.httpclient.entity.ContentType APPLICATION_FORM_URLENCODED -> APPLICATION_FORM_URLENCODED
    cz.msebera.android.httpclient.entity.ContentType APPLICATION_JSON -> APPLICATION_JSON
    cz.msebera.android.httpclient.entity.ContentType APPLICATION_OCTET_STREAM -> APPLICATION_OCTET_STREAM
    cz.msebera.android.httpclient.entity.ContentType APPLICATION_SVG_XML -> APPLICATION_SVG_XML
    cz.msebera.android.httpclient.entity.ContentType APPLICATION_XHTML_XML -> APPLICATION_XHTML_XML
    cz.msebera.android.httpclient.entity.ContentType APPLICATION_XML -> APPLICATION_XML
    cz.msebera.android.httpclient.entity.ContentType MULTIPART_FORM_DATA -> MULTIPART_FORM_DATA
    cz.msebera.android.httpclient.entity.ContentType TEXT_HTML -> TEXT_HTML
    cz.msebera.android.httpclient.entity.ContentType TEXT_PLAIN -> TEXT_PLAIN
    cz.msebera.android.httpclient.entity.ContentType TEXT_XML -> TEXT_XML
    cz.msebera.android.httpclient.entity.ContentType WILDCARD -> WILDCARD
    cz.msebera.android.httpclient.entity.ContentType DEFAULT_TEXT -> DEFAULT_TEXT
    cz.msebera.android.httpclient.entity.ContentType DEFAULT_BINARY -> DEFAULT_BINARY
    java.lang.String mimeType -> mimeType
    java.nio.charset.Charset charset -> charset
    cz.msebera.android.httpclient.NameValuePair[] params -> params
    java.lang.String getMimeType() -> getMimeType
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String toString() -> toString
    boolean valid(java.lang.String) -> valid
    cz.msebera.android.httpclient.entity.ContentType create(java.lang.String,java.nio.charset.Charset) -> create
    cz.msebera.android.httpclient.entity.ContentType create(java.lang.String) -> create
    cz.msebera.android.httpclient.entity.ContentType create(java.lang.String,java.lang.String) -> create
    cz.msebera.android.httpclient.entity.ContentType create(cz.msebera.android.httpclient.HeaderElement) -> create
    cz.msebera.android.httpclient.entity.ContentType parse(java.lang.String) -> parse
    cz.msebera.android.httpclient.entity.ContentType get(cz.msebera.android.httpclient.HttpEntity) -> get
    cz.msebera.android.httpclient.entity.ContentType getOrDefault(cz.msebera.android.httpclient.HttpEntity) -> getOrDefault
    cz.msebera.android.httpclient.entity.ContentType withCharset(java.nio.charset.Charset) -> withCharset
    cz.msebera.android.httpclient.entity.ContentType withCharset(java.lang.String) -> withCharset
cz.msebera.android.httpclient.entity.EntityTemplate -> cz.msebera.android.httpclient.entity.EntityTemplate:
    cz.msebera.android.httpclient.entity.ContentProducer contentproducer -> contentproducer
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
cz.msebera.android.httpclient.entity.FileEntity -> cz.msebera.android.httpclient.entity.FileEntity:
    java.io.File file -> file
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.entity.HttpEntityWrapper -> cz.msebera.android.httpclient.entity.HttpEntityWrapper:
    cz.msebera.android.httpclient.HttpEntity wrappedEntity -> wrappedEntity
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    cz.msebera.android.httpclient.Header getContentType() -> getContentType
    cz.msebera.android.httpclient.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
cz.msebera.android.httpclient.entity.InputStreamEntity -> cz.msebera.android.httpclient.entity.InputStreamEntity:
    java.io.InputStream content -> content
    long length -> length
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
cz.msebera.android.httpclient.entity.SerializableEntity -> cz.msebera.android.httpclient.entity.SerializableEntity:
    byte[] objSer -> objSer
    java.io.Serializable objRef -> objRef
    void createBytes(java.io.Serializable) -> createBytes
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
cz.msebera.android.httpclient.entity.StringEntity -> cz.msebera.android.httpclient.entity.StringEntity:
    byte[] content -> content
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.entity.mime.AbstractMultipartForm -> cz.msebera.android.httpclient.entity.mime.AbstractMultipartForm:
    cz.msebera.android.httpclient.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    cz.msebera.android.httpclient.util.ByteArrayBuffer CR_LF -> CR_LF
    cz.msebera.android.httpclient.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    cz.msebera.android.httpclient.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(cz.msebera.android.httpclient.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(cz.msebera.android.httpclient.entity.mime.MinimalField,java.io.OutputStream) -> writeField
    void writeField(cz.msebera.android.httpclient.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    java.util.List getBodyParts() -> getBodyParts
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(java.io.OutputStream,boolean) -> doWriteTo
    void formatMultipartHeader(cz.msebera.android.httpclient.entity.mime.FormBodyPart,java.io.OutputStream) -> formatMultipartHeader
    void writeTo(java.io.OutputStream) -> writeTo
    long getTotalLength() -> getTotalLength
cz.msebera.android.httpclient.entity.mime.FormBodyPart -> cz.msebera.android.httpclient.entity.mime.FormBodyPart:
    java.lang.String name -> name
    cz.msebera.android.httpclient.entity.mime.Header header -> header
    cz.msebera.android.httpclient.entity.mime.content.ContentBody body -> body
    java.lang.String getName() -> getName
    cz.msebera.android.httpclient.entity.mime.content.ContentBody getBody() -> getBody
    cz.msebera.android.httpclient.entity.mime.Header getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisp(cz.msebera.android.httpclient.entity.mime.content.ContentBody) -> generateContentDisp
    void generateContentType(cz.msebera.android.httpclient.entity.mime.content.ContentBody) -> generateContentType
    void generateTransferEncoding(cz.msebera.android.httpclient.entity.mime.content.ContentBody) -> generateTransferEncoding
cz.msebera.android.httpclient.entity.mime.Header -> cz.msebera.android.httpclient.entity.mime.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(cz.msebera.android.httpclient.entity.mime.MinimalField) -> addField
    java.util.List getFields() -> getFields
    cz.msebera.android.httpclient.entity.mime.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(cz.msebera.android.httpclient.entity.mime.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.entity.mime.HttpBrowserCompatibleMultipart -> cz.msebera.android.httpclient.entity.mime.HttpBrowserCompatibleMultipart:
    java.util.List parts -> parts
    java.util.List getBodyParts() -> getBodyParts
    void formatMultipartHeader(cz.msebera.android.httpclient.entity.mime.FormBodyPart,java.io.OutputStream) -> formatMultipartHeader
cz.msebera.android.httpclient.entity.mime.HttpMultipartMode -> cz.msebera.android.httpclient.entity.mime.HttpMultipartMode:
    cz.msebera.android.httpclient.entity.mime.HttpMultipartMode STRICT -> STRICT
    cz.msebera.android.httpclient.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    cz.msebera.android.httpclient.entity.mime.HttpMultipartMode RFC6532 -> RFC6532
    cz.msebera.android.httpclient.entity.mime.HttpMultipartMode[] $VALUES -> $VALUES
    cz.msebera.android.httpclient.entity.mime.HttpMultipartMode[] values() -> values
    cz.msebera.android.httpclient.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
cz.msebera.android.httpclient.entity.mime.HttpRFC6532Multipart -> cz.msebera.android.httpclient.entity.mime.HttpRFC6532Multipart:
    java.util.List parts -> parts
    java.util.List getBodyParts() -> getBodyParts
    void formatMultipartHeader(cz.msebera.android.httpclient.entity.mime.FormBodyPart,java.io.OutputStream) -> formatMultipartHeader
cz.msebera.android.httpclient.entity.mime.HttpStrictMultipart -> cz.msebera.android.httpclient.entity.mime.HttpStrictMultipart:
    java.util.List parts -> parts
    java.util.List getBodyParts() -> getBodyParts
    void formatMultipartHeader(cz.msebera.android.httpclient.entity.mime.FormBodyPart,java.io.OutputStream) -> formatMultipartHeader
cz.msebera.android.httpclient.entity.mime.MIME -> cz.msebera.android.httpclient.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.nio.charset.Charset UTF8_CHARSET -> UTF8_CHARSET
cz.msebera.android.httpclient.entity.mime.MinimalField -> cz.msebera.android.httpclient.entity.mime.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder -> cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    java.lang.String DEFAULT_SUBTYPE -> DEFAULT_SUBTYPE
    java.lang.String subType -> subType
    cz.msebera.android.httpclient.entity.mime.HttpMultipartMode mode -> mode
    java.lang.String boundary -> boundary
    java.nio.charset.Charset charset -> charset
    java.util.List bodyParts -> bodyParts
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder create() -> create
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder setMode(cz.msebera.android.httpclient.entity.mime.HttpMultipartMode) -> setMode
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder setLaxMode() -> setLaxMode
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder setStrictMode() -> setStrictMode
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder setBoundary(java.lang.String) -> setBoundary
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder setCharset(java.nio.charset.Charset) -> setCharset
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder addPart(cz.msebera.android.httpclient.entity.mime.FormBodyPart) -> addPart
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder addPart(java.lang.String,cz.msebera.android.httpclient.entity.mime.content.ContentBody) -> addPart
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder addTextBody(java.lang.String,java.lang.String,cz.msebera.android.httpclient.entity.ContentType) -> addTextBody
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder addTextBody(java.lang.String,java.lang.String) -> addTextBody
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,byte[],cz.msebera.android.httpclient.entity.ContentType,java.lang.String) -> addBinaryBody
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,byte[]) -> addBinaryBody
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,java.io.File,cz.msebera.android.httpclient.entity.ContentType,java.lang.String) -> addBinaryBody
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,java.io.File) -> addBinaryBody
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,java.io.InputStream,cz.msebera.android.httpclient.entity.ContentType,java.lang.String) -> addBinaryBody
    cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,java.io.InputStream) -> addBinaryBody
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    cz.msebera.android.httpclient.entity.mime.MultipartFormEntity buildEntity() -> buildEntity
    cz.msebera.android.httpclient.HttpEntity build() -> build
cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder$1 -> cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder$1:
    int[] $SwitchMap$cz$msebera$android$httpclient$entity$mime$HttpMultipartMode -> $SwitchMap$cz$msebera$android$httpclient$entity$mime$HttpMultipartMode
cz.msebera.android.httpclient.entity.mime.MultipartFormEntity -> cz.msebera.android.httpclient.entity.mime.MultipartFormEntity:
    cz.msebera.android.httpclient.entity.mime.AbstractMultipartForm multipart -> multipart
    cz.msebera.android.httpclient.Header contentType -> contentType
    long contentLength -> contentLength
    cz.msebera.android.httpclient.entity.mime.AbstractMultipartForm getMultipart() -> getMultipart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    cz.msebera.android.httpclient.Header getContentType() -> getContentType
    cz.msebera.android.httpclient.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
cz.msebera.android.httpclient.entity.mime.content.AbstractContentBody -> cz.msebera.android.httpclient.entity.mime.content.AbstractContentBody:
    cz.msebera.android.httpclient.entity.ContentType contentType -> contentType
    cz.msebera.android.httpclient.entity.ContentType getContentType() -> getContentType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
cz.msebera.android.httpclient.entity.mime.content.ByteArrayBody -> cz.msebera.android.httpclient.entity.mime.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
cz.msebera.android.httpclient.entity.mime.content.ContentBody -> cz.msebera.android.httpclient.entity.mime.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
cz.msebera.android.httpclient.entity.mime.content.ContentDescriptor -> cz.msebera.android.httpclient.entity.mime.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
cz.msebera.android.httpclient.entity.mime.content.FileBody -> cz.msebera.android.httpclient.entity.mime.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
cz.msebera.android.httpclient.entity.mime.content.InputStreamBody -> cz.msebera.android.httpclient.entity.mime.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
cz.msebera.android.httpclient.entity.mime.content.StringBody -> cz.msebera.android.httpclient.entity.mime.content.StringBody:
    byte[] content -> content
    cz.msebera.android.httpclient.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    cz.msebera.android.httpclient.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    cz.msebera.android.httpclient.entity.mime.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
cz.msebera.android.httpclient.extras.Base64 -> cz.msebera.android.httpclient.extras.Base64:
    int DEFAULT -> DEFAULT
    int NO_PADDING -> NO_PADDING
    int NO_WRAP -> NO_WRAP
    int CRLF -> CRLF
    int URL_SAFE -> URL_SAFE
    int NO_CLOSE -> NO_CLOSE
    boolean $assertionsDisabled -> $assertionsDisabled
    byte[] decode(java.lang.String,int) -> decode
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    java.lang.String encodeToString(byte[],int) -> encodeToString
    java.lang.String encodeToString(byte[],int,int,int) -> encodeToString
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
cz.msebera.android.httpclient.extras.Base64$Coder -> cz.msebera.android.httpclient.extras.Base64$Coder:
    byte[] output -> output
    int op -> op
    boolean process(byte[],int,int,boolean) -> process
    int maxOutputSize(int) -> maxOutputSize
cz.msebera.android.httpclient.extras.Base64$Decoder -> cz.msebera.android.httpclient.extras.Base64$Decoder:
    int[] DECODE -> DECODE
    int[] DECODE_WEBSAFE -> DECODE_WEBSAFE
    int SKIP -> SKIP
    int EQUALS -> EQUALS
    int state -> state
    int value -> value
    int[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
cz.msebera.android.httpclient.extras.Base64$Encoder -> cz.msebera.android.httpclient.extras.Base64$Encoder:
    int LINE_GROUPS -> LINE_GROUPS
    byte[] ENCODE -> ENCODE
    byte[] ENCODE_WEBSAFE -> ENCODE_WEBSAFE
    byte[] tail -> tail
    int tailLen -> tailLen
    int count -> count
    boolean do_padding -> do_padding
    boolean do_newline -> do_newline
    boolean do_cr -> do_cr
    byte[] alphabet -> alphabet
    boolean $assertionsDisabled -> $assertionsDisabled
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
cz.msebera.android.httpclient.extras.HttpClientAndroidLog -> cz.msebera.android.httpclient.extras.HttpClientAndroidLog:
    java.lang.String logTag -> logTag
    boolean debugEnabled -> debugEnabled
    boolean errorEnabled -> errorEnabled
    boolean traceEnabled -> traceEnabled
    boolean warnEnabled -> warnEnabled
    boolean infoEnabled -> infoEnabled
    void enableDebug(boolean) -> enableDebug
    boolean isDebugEnabled() -> isDebugEnabled
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void enableError(boolean) -> enableError
    boolean isErrorEnabled() -> isErrorEnabled
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void enableWarn(boolean) -> enableWarn
    boolean isWarnEnabled() -> isWarnEnabled
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void enableInfo(boolean) -> enableInfo
    boolean isInfoEnabled() -> isInfoEnabled
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void enableTrace(boolean) -> enableTrace
    boolean isTraceEnabled() -> isTraceEnabled
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
cz.msebera.android.httpclient.extras.PRNGFixes -> cz.msebera.android.httpclient.extras.PRNGFixes:
    int VERSION_CODE_JELLY_BEAN -> VERSION_CODE_JELLY_BEAN
    int VERSION_CODE_JELLY_BEAN_MR2 -> VERSION_CODE_JELLY_BEAN_MR2
    byte[] BUILD_FINGERPRINT_AND_DEVICE_SERIAL -> BUILD_FINGERPRINT_AND_DEVICE_SERIAL
    void apply() -> apply
    void applyOpenSSLFix() -> applyOpenSSLFix
    void installLinuxPRNGSecureRandom() -> installLinuxPRNGSecureRandom
    byte[] generateSeed() -> generateSeed
    java.lang.String getDeviceSerialNumber() -> getDeviceSerialNumber
    byte[] getBuildFingerprintAndDeviceSerial() -> getBuildFingerprintAndDeviceSerial
    byte[] access$000() -> access$000
cz.msebera.android.httpclient.extras.PRNGFixes$LinuxPRNGSecureRandom -> cz.msebera.android.httpclient.extras.PRNGFixes$LinuxPRNGSecureRandom:
    java.io.File URANDOM_FILE -> URANDOM_FILE
    java.lang.Object sLock -> sLock
    java.io.DataInputStream sUrandomIn -> sUrandomIn
    java.io.OutputStream sUrandomOut -> sUrandomOut
    boolean mSeeded -> mSeeded
    void engineSetSeed(byte[]) -> engineSetSeed
    void engineNextBytes(byte[]) -> engineNextBytes
    byte[] engineGenerateSeed(int) -> engineGenerateSeed
    java.io.DataInputStream getUrandomInputStream() -> getUrandomInputStream
    java.io.OutputStream getUrandomOutputStream() -> getUrandomOutputStream
cz.msebera.android.httpclient.extras.PRNGFixes$LinuxPRNGSecureRandomProvider -> cz.msebera.android.httpclient.extras.PRNGFixes$LinuxPRNGSecureRandomProvider:
cz.msebera.android.httpclient.impl.AbstractHttpClientConnection -> cz.msebera.android.httpclient.impl.AbstractHttpClientConnection:
    cz.msebera.android.httpclient.impl.entity.EntitySerializer entityserializer -> entityserializer
    cz.msebera.android.httpclient.impl.entity.EntityDeserializer entitydeserializer -> entitydeserializer
    cz.msebera.android.httpclient.io.SessionInputBuffer inbuffer -> inbuffer
    cz.msebera.android.httpclient.io.SessionOutputBuffer outbuffer -> outbuffer
    cz.msebera.android.httpclient.io.EofSensor eofSensor -> eofSensor
    cz.msebera.android.httpclient.io.HttpMessageParser responseParser -> responseParser
    cz.msebera.android.httpclient.io.HttpMessageWriter requestWriter -> requestWriter
    cz.msebera.android.httpclient.impl.HttpConnectionMetricsImpl metrics -> metrics
    void assertOpen() -> assertOpen
    cz.msebera.android.httpclient.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    cz.msebera.android.httpclient.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    cz.msebera.android.httpclient.HttpResponseFactory createHttpResponseFactory() -> createHttpResponseFactory
    cz.msebera.android.httpclient.io.HttpMessageParser createResponseParser(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.HttpResponseFactory,cz.msebera.android.httpclient.params.HttpParams) -> createResponseParser
    cz.msebera.android.httpclient.io.HttpMessageWriter createRequestWriter(cz.msebera.android.httpclient.io.SessionOutputBuffer,cz.msebera.android.httpclient.params.HttpParams) -> createRequestWriter
    cz.msebera.android.httpclient.impl.HttpConnectionMetricsImpl createConnectionMetrics(cz.msebera.android.httpclient.io.HttpTransportMetrics,cz.msebera.android.httpclient.io.HttpTransportMetrics) -> createConnectionMetrics
    void init(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.io.SessionOutputBuffer,cz.msebera.android.httpclient.params.HttpParams) -> init
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(cz.msebera.android.httpclient.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> sendRequestEntity
    void doFlush() -> doFlush
    void flush() -> flush
    cz.msebera.android.httpclient.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(cz.msebera.android.httpclient.HttpResponse) -> receiveResponseEntity
    boolean isEof() -> isEof
    boolean isStale() -> isStale
    cz.msebera.android.httpclient.HttpConnectionMetrics getMetrics() -> getMetrics
cz.msebera.android.httpclient.impl.AbstractHttpServerConnection -> cz.msebera.android.httpclient.impl.AbstractHttpServerConnection:
    cz.msebera.android.httpclient.impl.entity.EntitySerializer entityserializer -> entityserializer
    cz.msebera.android.httpclient.impl.entity.EntityDeserializer entitydeserializer -> entitydeserializer
    cz.msebera.android.httpclient.io.SessionInputBuffer inbuffer -> inbuffer
    cz.msebera.android.httpclient.io.SessionOutputBuffer outbuffer -> outbuffer
    cz.msebera.android.httpclient.io.EofSensor eofSensor -> eofSensor
    cz.msebera.android.httpclient.io.HttpMessageParser requestParser -> requestParser
    cz.msebera.android.httpclient.io.HttpMessageWriter responseWriter -> responseWriter
    cz.msebera.android.httpclient.impl.HttpConnectionMetricsImpl metrics -> metrics
    void assertOpen() -> assertOpen
    cz.msebera.android.httpclient.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    cz.msebera.android.httpclient.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    cz.msebera.android.httpclient.HttpRequestFactory createHttpRequestFactory() -> createHttpRequestFactory
    cz.msebera.android.httpclient.io.HttpMessageParser createRequestParser(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.HttpRequestFactory,cz.msebera.android.httpclient.params.HttpParams) -> createRequestParser
    cz.msebera.android.httpclient.io.HttpMessageWriter createResponseWriter(cz.msebera.android.httpclient.io.SessionOutputBuffer,cz.msebera.android.httpclient.params.HttpParams) -> createResponseWriter
    cz.msebera.android.httpclient.impl.HttpConnectionMetricsImpl createConnectionMetrics(cz.msebera.android.httpclient.io.HttpTransportMetrics,cz.msebera.android.httpclient.io.HttpTransportMetrics) -> createConnectionMetrics
    void init(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.io.SessionOutputBuffer,cz.msebera.android.httpclient.params.HttpParams) -> init
    cz.msebera.android.httpclient.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void doFlush() -> doFlush
    void flush() -> flush
    void sendResponseHeader(cz.msebera.android.httpclient.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(cz.msebera.android.httpclient.HttpResponse) -> sendResponseEntity
    boolean isEof() -> isEof
    boolean isStale() -> isStale
    cz.msebera.android.httpclient.HttpConnectionMetrics getMetrics() -> getMetrics
cz.msebera.android.httpclient.impl.BHttpConnectionBase -> cz.msebera.android.httpclient.impl.BHttpConnectionBase:
    cz.msebera.android.httpclient.impl.io.SessionInputBufferImpl inbuffer -> inbuffer
    cz.msebera.android.httpclient.impl.io.SessionOutputBufferImpl outbuffer -> outbuffer
    cz.msebera.android.httpclient.impl.HttpConnectionMetricsImpl connMetrics -> connMetrics
    cz.msebera.android.httpclient.entity.ContentLengthStrategy incomingContentStrategy -> incomingContentStrategy
    cz.msebera.android.httpclient.entity.ContentLengthStrategy outgoingContentStrategy -> outgoingContentStrategy
    java.util.concurrent.atomic.AtomicReference socketHolder -> socketHolder
    void ensureOpen() -> ensureOpen
    java.io.InputStream getSocketInputStream(java.net.Socket) -> getSocketInputStream
    java.io.OutputStream getSocketOutputStream(java.net.Socket) -> getSocketOutputStream
    void bind(java.net.Socket) -> bind
    cz.msebera.android.httpclient.io.SessionInputBuffer getSessionInputBuffer() -> getSessionInputBuffer
    cz.msebera.android.httpclient.io.SessionOutputBuffer getSessionOutputBuffer() -> getSessionOutputBuffer
    void doFlush() -> doFlush
    boolean isOpen() -> isOpen
    java.net.Socket getSocket() -> getSocket
    java.io.OutputStream createOutputStream(long,cz.msebera.android.httpclient.io.SessionOutputBuffer) -> createOutputStream
    java.io.OutputStream prepareOutput(cz.msebera.android.httpclient.HttpMessage) -> prepareOutput
    java.io.InputStream createInputStream(long,cz.msebera.android.httpclient.io.SessionInputBuffer) -> createInputStream
    cz.msebera.android.httpclient.HttpEntity prepareInput(cz.msebera.android.httpclient.HttpMessage) -> prepareInput
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
    int fillInputBuffer(int) -> fillInputBuffer
    boolean awaitInput(int) -> awaitInput
    boolean isStale() -> isStale
    void incrementRequestCount() -> incrementRequestCount
    void incrementResponseCount() -> incrementResponseCount
    cz.msebera.android.httpclient.HttpConnectionMetrics getMetrics() -> getMetrics
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.ConnSupport -> cz.msebera.android.httpclient.impl.ConnSupport:
    java.nio.charset.CharsetDecoder createDecoder(cz.msebera.android.httpclient.config.ConnectionConfig) -> createDecoder
    java.nio.charset.CharsetEncoder createEncoder(cz.msebera.android.httpclient.config.ConnectionConfig) -> createEncoder
cz.msebera.android.httpclient.impl.DefaultBHttpClientConnection -> cz.msebera.android.httpclient.impl.DefaultBHttpClientConnection:
    cz.msebera.android.httpclient.io.HttpMessageParser responseParser -> responseParser
    cz.msebera.android.httpclient.io.HttpMessageWriter requestWriter -> requestWriter
    void onResponseReceived(cz.msebera.android.httpclient.HttpResponse) -> onResponseReceived
    void onRequestSubmitted(cz.msebera.android.httpclient.HttpRequest) -> onRequestSubmitted
    void bind(java.net.Socket) -> bind
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(cz.msebera.android.httpclient.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> sendRequestEntity
    cz.msebera.android.httpclient.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(cz.msebera.android.httpclient.HttpResponse) -> receiveResponseEntity
    void flush() -> flush
cz.msebera.android.httpclient.impl.DefaultBHttpClientConnectionFactory -> cz.msebera.android.httpclient.impl.DefaultBHttpClientConnectionFactory:
    cz.msebera.android.httpclient.impl.DefaultBHttpClientConnectionFactory INSTANCE -> INSTANCE
    cz.msebera.android.httpclient.config.ConnectionConfig cconfig -> cconfig
    cz.msebera.android.httpclient.entity.ContentLengthStrategy incomingContentStrategy -> incomingContentStrategy
    cz.msebera.android.httpclient.entity.ContentLengthStrategy outgoingContentStrategy -> outgoingContentStrategy
    cz.msebera.android.httpclient.io.HttpMessageWriterFactory requestWriterFactory -> requestWriterFactory
    cz.msebera.android.httpclient.io.HttpMessageParserFactory responseParserFactory -> responseParserFactory
    cz.msebera.android.httpclient.impl.DefaultBHttpClientConnection createConnection(java.net.Socket) -> createConnection
    cz.msebera.android.httpclient.HttpConnection createConnection(java.net.Socket) -> createConnection
cz.msebera.android.httpclient.impl.DefaultBHttpServerConnection -> cz.msebera.android.httpclient.impl.DefaultBHttpServerConnection:
    cz.msebera.android.httpclient.io.HttpMessageParser requestParser -> requestParser
    cz.msebera.android.httpclient.io.HttpMessageWriter responseWriter -> responseWriter
    void onRequestReceived(cz.msebera.android.httpclient.HttpRequest) -> onRequestReceived
    void onResponseSubmitted(cz.msebera.android.httpclient.HttpResponse) -> onResponseSubmitted
    void bind(java.net.Socket) -> bind
    cz.msebera.android.httpclient.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void sendResponseHeader(cz.msebera.android.httpclient.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(cz.msebera.android.httpclient.HttpResponse) -> sendResponseEntity
    void flush() -> flush
cz.msebera.android.httpclient.impl.DefaultBHttpServerConnectionFactory -> cz.msebera.android.httpclient.impl.DefaultBHttpServerConnectionFactory:
    cz.msebera.android.httpclient.impl.DefaultBHttpServerConnectionFactory INSTANCE -> INSTANCE
    cz.msebera.android.httpclient.config.ConnectionConfig cconfig -> cconfig
    cz.msebera.android.httpclient.entity.ContentLengthStrategy incomingContentStrategy -> incomingContentStrategy
    cz.msebera.android.httpclient.entity.ContentLengthStrategy outgoingContentStrategy -> outgoingContentStrategy
    cz.msebera.android.httpclient.io.HttpMessageParserFactory requestParserFactory -> requestParserFactory
    cz.msebera.android.httpclient.io.HttpMessageWriterFactory responseWriterFactory -> responseWriterFactory
    cz.msebera.android.httpclient.impl.DefaultBHttpServerConnection createConnection(java.net.Socket) -> createConnection
    cz.msebera.android.httpclient.HttpConnection createConnection(java.net.Socket) -> createConnection
cz.msebera.android.httpclient.impl.DefaultConnectionReuseStrategy -> cz.msebera.android.httpclient.impl.DefaultConnectionReuseStrategy:
    cz.msebera.android.httpclient.impl.DefaultConnectionReuseStrategy INSTANCE -> INSTANCE
    boolean keepAlive(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> keepAlive
    cz.msebera.android.httpclient.TokenIterator createTokenIterator(cz.msebera.android.httpclient.HeaderIterator) -> createTokenIterator
    boolean canResponseHaveBody(cz.msebera.android.httpclient.HttpResponse) -> canResponseHaveBody
cz.msebera.android.httpclient.impl.DefaultHttpClientConnection -> cz.msebera.android.httpclient.impl.DefaultHttpClientConnection:
    void bind(java.net.Socket,cz.msebera.android.httpclient.params.HttpParams) -> bind
cz.msebera.android.httpclient.impl.DefaultHttpRequestFactory -> cz.msebera.android.httpclient.impl.DefaultHttpRequestFactory:
    cz.msebera.android.httpclient.impl.DefaultHttpRequestFactory INSTANCE -> INSTANCE
    java.lang.String[] RFC2616_COMMON_METHODS -> RFC2616_COMMON_METHODS
    java.lang.String[] RFC2616_ENTITY_ENC_METHODS -> RFC2616_ENTITY_ENC_METHODS
    java.lang.String[] RFC2616_SPECIAL_METHODS -> RFC2616_SPECIAL_METHODS
    boolean isOneOf(java.lang.String[],java.lang.String) -> isOneOf
    cz.msebera.android.httpclient.HttpRequest newHttpRequest(cz.msebera.android.httpclient.RequestLine) -> newHttpRequest
    cz.msebera.android.httpclient.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
cz.msebera.android.httpclient.impl.DefaultHttpResponseFactory -> cz.msebera.android.httpclient.impl.DefaultHttpResponseFactory:
    cz.msebera.android.httpclient.impl.DefaultHttpResponseFactory INSTANCE -> INSTANCE
    cz.msebera.android.httpclient.ReasonPhraseCatalog reasonCatalog -> reasonCatalog
    cz.msebera.android.httpclient.HttpResponse newHttpResponse(cz.msebera.android.httpclient.ProtocolVersion,int,cz.msebera.android.httpclient.protocol.HttpContext) -> newHttpResponse
    cz.msebera.android.httpclient.HttpResponse newHttpResponse(cz.msebera.android.httpclient.StatusLine,cz.msebera.android.httpclient.protocol.HttpContext) -> newHttpResponse
    java.util.Locale determineLocale(cz.msebera.android.httpclient.protocol.HttpContext) -> determineLocale
cz.msebera.android.httpclient.impl.DefaultHttpServerConnection -> cz.msebera.android.httpclient.impl.DefaultHttpServerConnection:
    void bind(java.net.Socket,cz.msebera.android.httpclient.params.HttpParams) -> bind
cz.msebera.android.httpclient.impl.EnglishReasonPhraseCatalog -> cz.msebera.android.httpclient.impl.EnglishReasonPhraseCatalog:
    cz.msebera.android.httpclient.impl.EnglishReasonPhraseCatalog INSTANCE -> INSTANCE
    java.lang.String[][] REASON_PHRASES -> REASON_PHRASES
    java.lang.String getReason(int,java.util.Locale) -> getReason
    void setReason(int,java.lang.String) -> setReason
cz.msebera.android.httpclient.impl.HttpConnectionMetricsImpl -> cz.msebera.android.httpclient.impl.HttpConnectionMetricsImpl:
    java.lang.String REQUEST_COUNT -> REQUEST_COUNT
    java.lang.String RESPONSE_COUNT -> RESPONSE_COUNT
    java.lang.String SENT_BYTES_COUNT -> SENT_BYTES_COUNT
    java.lang.String RECEIVED_BYTES_COUNT -> RECEIVED_BYTES_COUNT
    cz.msebera.android.httpclient.io.HttpTransportMetrics inTransportMetric -> inTransportMetric
    cz.msebera.android.httpclient.io.HttpTransportMetrics outTransportMetric -> outTransportMetric
    long requestCount -> requestCount
    long responseCount -> responseCount
    java.util.Map metricsCache -> metricsCache
    long getReceivedBytesCount() -> getReceivedBytesCount
    long getSentBytesCount() -> getSentBytesCount
    long getRequestCount() -> getRequestCount
    void incrementRequestCount() -> incrementRequestCount
    long getResponseCount() -> getResponseCount
    void incrementResponseCount() -> incrementResponseCount
    java.lang.Object getMetric(java.lang.String) -> getMetric
    void setMetric(java.lang.String,java.lang.Object) -> setMetric
    void reset() -> reset
cz.msebera.android.httpclient.impl.NoConnectionReuseStrategy -> cz.msebera.android.httpclient.impl.NoConnectionReuseStrategy:
    cz.msebera.android.httpclient.impl.NoConnectionReuseStrategy INSTANCE -> INSTANCE
    boolean keepAlive(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> keepAlive
cz.msebera.android.httpclient.impl.SocketHttpClientConnection -> cz.msebera.android.httpclient.impl.SocketHttpClientConnection:
    boolean open -> open
    java.net.Socket socket -> socket
    void assertNotOpen() -> assertNotOpen
    void assertOpen() -> assertOpen
    cz.msebera.android.httpclient.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,cz.msebera.android.httpclient.params.HttpParams) -> createSessionInputBuffer
    cz.msebera.android.httpclient.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,cz.msebera.android.httpclient.params.HttpParams) -> createSessionOutputBuffer
    void bind(java.net.Socket,cz.msebera.android.httpclient.params.HttpParams) -> bind
    boolean isOpen() -> isOpen
    java.net.Socket getSocket() -> getSocket
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
    void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.SocketHttpServerConnection -> cz.msebera.android.httpclient.impl.SocketHttpServerConnection:
    boolean open -> open
    java.net.Socket socket -> socket
    void assertNotOpen() -> assertNotOpen
    void assertOpen() -> assertOpen
    cz.msebera.android.httpclient.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,cz.msebera.android.httpclient.params.HttpParams) -> createSessionInputBuffer
    cz.msebera.android.httpclient.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,cz.msebera.android.httpclient.params.HttpParams) -> createSessionOutputBuffer
    void bind(java.net.Socket,cz.msebera.android.httpclient.params.HttpParams) -> bind
    java.net.Socket getSocket() -> getSocket
    boolean isOpen() -> isOpen
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
    void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.auth.AuthSchemeBase -> cz.msebera.android.httpclient.impl.auth.AuthSchemeBase:
    cz.msebera.android.httpclient.auth.ChallengeState challengeState -> challengeState
    void processChallenge(cz.msebera.android.httpclient.Header) -> processChallenge
    cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> authenticate
    void parseChallenge(cz.msebera.android.httpclient.util.CharArrayBuffer,int,int) -> parseChallenge
    boolean isProxy() -> isProxy
    cz.msebera.android.httpclient.auth.ChallengeState getChallengeState() -> getChallengeState
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.auth.BasicScheme -> cz.msebera.android.httpclient.impl.auth.BasicScheme:
    boolean complete -> complete
    java.lang.String getSchemeName() -> getSchemeName
    void processChallenge(cz.msebera.android.httpclient.Header) -> processChallenge
    boolean isComplete() -> isComplete
    boolean isConnectionBased() -> isConnectionBased
    cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest) -> authenticate
    cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> authenticate
    cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,java.lang.String,boolean) -> authenticate
cz.msebera.android.httpclient.impl.auth.BasicSchemeFactory -> cz.msebera.android.httpclient.impl.auth.BasicSchemeFactory:
    java.nio.charset.Charset charset -> charset
    cz.msebera.android.httpclient.auth.AuthScheme newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
    cz.msebera.android.httpclient.auth.AuthScheme create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.impl.auth.DigestScheme -> cz.msebera.android.httpclient.impl.auth.DigestScheme:
    char[] HEXADECIMAL -> HEXADECIMAL
    boolean complete -> complete
    int QOP_UNKNOWN -> QOP_UNKNOWN
    int QOP_MISSING -> QOP_MISSING
    int QOP_AUTH_INT -> QOP_AUTH_INT
    int QOP_AUTH -> QOP_AUTH
    java.lang.String lastNonce -> lastNonce
    long nounceCount -> nounceCount
    java.lang.String cnonce -> cnonce
    java.lang.String a1 -> a1
    java.lang.String a2 -> a2
    void processChallenge(cz.msebera.android.httpclient.Header) -> processChallenge
    boolean isComplete() -> isComplete
    java.lang.String getSchemeName() -> getSchemeName
    boolean isConnectionBased() -> isConnectionBased
    void overrideParamter(java.lang.String,java.lang.String) -> overrideParamter
    cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest) -> authenticate
    cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> authenticate
    java.security.MessageDigest createMessageDigest(java.lang.String) -> createMessageDigest
    cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest) -> createDigestHeader
    java.lang.String getCnonce() -> getCnonce
    java.lang.String getA1() -> getA1
    java.lang.String getA2() -> getA2
    java.lang.String encode(byte[]) -> encode
    java.lang.String createCnonce() -> createCnonce
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.auth.DigestSchemeFactory -> cz.msebera.android.httpclient.impl.auth.DigestSchemeFactory:
    java.nio.charset.Charset charset -> charset
    cz.msebera.android.httpclient.auth.AuthScheme newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
    cz.msebera.android.httpclient.auth.AuthScheme create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.impl.auth.HttpAuthenticator -> cz.msebera.android.httpclient.impl.auth.HttpAuthenticator:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    boolean isAuthenticationRequested(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.client.AuthenticationStrategy,cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.protocol.HttpContext) -> isAuthenticationRequested
    boolean handleAuthChallenge(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.client.AuthenticationStrategy,cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.protocol.HttpContext) -> handleAuthChallenge
    void generateAuthResponse(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.protocol.HttpContext) -> generateAuthResponse
    void ensureAuthScheme(cz.msebera.android.httpclient.auth.AuthScheme) -> ensureAuthScheme
    cz.msebera.android.httpclient.Header doAuth(cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> doAuth
cz.msebera.android.httpclient.impl.auth.HttpAuthenticator$1 -> cz.msebera.android.httpclient.impl.auth.HttpAuthenticator$1:
    int[] $SwitchMap$cz$msebera$android$httpclient$auth$AuthProtocolState -> $SwitchMap$cz$msebera$android$httpclient$auth$AuthProtocolState
cz.msebera.android.httpclient.impl.auth.HttpEntityDigester -> cz.msebera.android.httpclient.impl.auth.HttpEntityDigester:
    java.security.MessageDigest digester -> digester
    boolean closed -> closed
    byte[] digest -> digest
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    byte[] getDigest() -> getDigest
cz.msebera.android.httpclient.impl.auth.NTLMEngine -> cz.msebera.android.httpclient.impl.auth.NTLMEngine:
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> generateType1Msg
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateType3Msg
cz.msebera.android.httpclient.impl.auth.NTLMEngineException -> cz.msebera.android.httpclient.impl.auth.NTLMEngineException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl -> cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl:
    int FLAG_REQUEST_UNICODE_ENCODING -> FLAG_REQUEST_UNICODE_ENCODING
    int FLAG_REQUEST_TARGET -> FLAG_REQUEST_TARGET
    int FLAG_REQUEST_SIGN -> FLAG_REQUEST_SIGN
    int FLAG_REQUEST_SEAL -> FLAG_REQUEST_SEAL
    int FLAG_REQUEST_LAN_MANAGER_KEY -> FLAG_REQUEST_LAN_MANAGER_KEY
    int FLAG_REQUEST_NTLMv1 -> FLAG_REQUEST_NTLMv1
    int FLAG_DOMAIN_PRESENT -> FLAG_DOMAIN_PRESENT
    int FLAG_WORKSTATION_PRESENT -> FLAG_WORKSTATION_PRESENT
    int FLAG_REQUEST_ALWAYS_SIGN -> FLAG_REQUEST_ALWAYS_SIGN
    int FLAG_REQUEST_NTLM2_SESSION -> FLAG_REQUEST_NTLM2_SESSION
    int FLAG_REQUEST_VERSION -> FLAG_REQUEST_VERSION
    int FLAG_TARGETINFO_PRESENT -> FLAG_TARGETINFO_PRESENT
    int FLAG_REQUEST_128BIT_KEY_EXCH -> FLAG_REQUEST_128BIT_KEY_EXCH
    int FLAG_REQUEST_EXPLICIT_KEY_EXCH -> FLAG_REQUEST_EXPLICIT_KEY_EXCH
    int FLAG_REQUEST_56BIT_ENCRYPTION -> FLAG_REQUEST_56BIT_ENCRYPTION
    java.security.SecureRandom RND_GEN -> RND_GEN
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String credentialCharset -> credentialCharset
    byte[] SIGNATURE -> SIGNATURE
    java.lang.String getResponseFor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getResponseFor
    java.lang.String getType1Message(java.lang.String,java.lang.String) -> getType1Message
    java.lang.String getType3Message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],int,java.lang.String,byte[]) -> getType3Message
    java.lang.String getCredentialCharset() -> getCredentialCharset
    void setCredentialCharset(java.lang.String) -> setCredentialCharset
    java.lang.String stripDotSuffix(java.lang.String) -> stripDotSuffix
    java.lang.String convertHost(java.lang.String) -> convertHost
    java.lang.String convertDomain(java.lang.String) -> convertDomain
    int readULong(byte[],int) -> readULong
    int readUShort(byte[],int) -> readUShort
    byte[] readSecurityBuffer(byte[],int) -> readSecurityBuffer
    byte[] makeRandomChallenge() -> makeRandomChallenge
    byte[] makeSecondaryKey() -> makeSecondaryKey
    byte[] hmacMD5(byte[],byte[]) -> hmacMD5
    byte[] RC4(byte[],byte[]) -> RC4
    byte[] ntlm2SessionResponse(byte[],byte[],byte[]) -> ntlm2SessionResponse
    byte[] lmHash(java.lang.String) -> lmHash
    byte[] ntlmHash(java.lang.String) -> ntlmHash
    byte[] lmv2Hash(java.lang.String,java.lang.String,byte[]) -> lmv2Hash
    byte[] ntlmv2Hash(java.lang.String,java.lang.String,byte[]) -> ntlmv2Hash
    byte[] lmResponse(byte[],byte[]) -> lmResponse
    byte[] lmv2Response(byte[],byte[],byte[]) -> lmv2Response
    byte[] createBlob(byte[],byte[],byte[]) -> createBlob
    java.security.Key createDESKey(byte[],int) -> createDESKey
    void oddParity(byte[]) -> oddParity
    void writeULong(byte[],int,int) -> writeULong
    int F(int,int,int) -> F
    int G(int,int,int) -> G
    int H(int,int,int) -> H
    int rotintlft(int,int) -> rotintlft
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> generateType1Msg
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateType3Msg
    byte[] access$000() -> access$000
    byte[] access$100() -> access$100
    byte[] access$200(java.lang.String) -> access$200
    byte[] access$300(byte[],byte[]) -> access$300
    byte[] access$400(java.lang.String) -> access$400
    byte[] access$500(java.lang.String,java.lang.String,byte[]) -> access$500
    byte[] access$600(java.lang.String,java.lang.String,byte[]) -> access$600
    byte[] access$700(byte[],byte[],byte[]) -> access$700
    byte[] access$800(byte[],byte[],byte[]) -> access$800
    java.security.Key access$900(byte[],int) -> access$900
    byte[] access$1000() -> access$1000
    int access$1100(byte[],int) -> access$1100
    int access$1200(byte[],int) -> access$1200
    byte[] access$1300(byte[],int) -> access$1300
    java.lang.String access$1400(java.lang.String) -> access$1400
    java.lang.String access$1500(java.lang.String) -> access$1500
cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen -> cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen:
    java.lang.String domain -> domain
    java.lang.String user -> user
    java.lang.String password -> password
    byte[] challenge -> challenge
    java.lang.String target -> target
    byte[] targetInformation -> targetInformation
    byte[] clientChallenge -> clientChallenge
    byte[] clientChallenge2 -> clientChallenge2
    byte[] secondaryKey -> secondaryKey
    byte[] timestamp -> timestamp
    byte[] lmHash -> lmHash
    byte[] lmResponse -> lmResponse
    byte[] ntlmHash -> ntlmHash
    byte[] ntlmResponse -> ntlmResponse
    byte[] ntlmv2Hash -> ntlmv2Hash
    byte[] lmv2Hash -> lmv2Hash
    byte[] lmv2Response -> lmv2Response
    byte[] ntlmv2Blob -> ntlmv2Blob
    byte[] ntlmv2Response -> ntlmv2Response
    byte[] ntlm2SessionResponse -> ntlm2SessionResponse
    byte[] lm2SessionResponse -> lm2SessionResponse
    byte[] lmUserSessionKey -> lmUserSessionKey
    byte[] ntlmUserSessionKey -> ntlmUserSessionKey
    byte[] ntlmv2UserSessionKey -> ntlmv2UserSessionKey
    byte[] ntlm2SessionResponseUserSessionKey -> ntlm2SessionResponseUserSessionKey
    byte[] lanManagerSessionKey -> lanManagerSessionKey
    byte[] getClientChallenge() -> getClientChallenge
    byte[] getClientChallenge2() -> getClientChallenge2
    byte[] getSecondaryKey() -> getSecondaryKey
    byte[] getLMHash() -> getLMHash
    byte[] getLMResponse() -> getLMResponse
    byte[] getNTLMHash() -> getNTLMHash
    byte[] getNTLMResponse() -> getNTLMResponse
    byte[] getLMv2Hash() -> getLMv2Hash
    byte[] getNTLMv2Hash() -> getNTLMv2Hash
    byte[] getTimestamp() -> getTimestamp
    byte[] getNTLMv2Blob() -> getNTLMv2Blob
    byte[] getNTLMv2Response() -> getNTLMv2Response
    byte[] getLMv2Response() -> getLMv2Response
    byte[] getNTLM2SessionResponse() -> getNTLM2SessionResponse
    byte[] getLM2SessionResponse() -> getLM2SessionResponse
    byte[] getLMUserSessionKey() -> getLMUserSessionKey
    byte[] getNTLMUserSessionKey() -> getNTLMUserSessionKey
    byte[] getNTLMv2UserSessionKey() -> getNTLMv2UserSessionKey
    byte[] getNTLM2SessionResponseUserSessionKey() -> getNTLM2SessionResponseUserSessionKey
    byte[] getLanManagerSessionKey() -> getLanManagerSessionKey
cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5 -> cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5:
    byte[] ipad -> ipad
    byte[] opad -> opad
    java.security.MessageDigest md5 -> md5
    byte[] getOutput() -> getOutput
    void update(byte[]) -> update
    void update(byte[],int,int) -> update
cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$MD4 -> cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$MD4:
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    long count -> count
    byte[] dataBuffer -> dataBuffer
    void update(byte[]) -> update
    byte[] getOutput() -> getOutput
    void processBuffer() -> processBuffer
    void round1(int[]) -> round1
    void round2(int[]) -> round2
    void round3(int[]) -> round3
cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$NTLMMessage -> cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$NTLMMessage:
    byte[] messageContents -> messageContents
    int currentOutputPosition -> currentOutputPosition
    int getPreambleLength() -> getPreambleLength
    int getMessageLength() -> getMessageLength
    byte readByte(int) -> readByte
    void readBytes(byte[],int) -> readBytes
    int readUShort(int) -> readUShort
    int readULong(int) -> readULong
    byte[] readSecurityBuffer(int) -> readSecurityBuffer
    void prepareResponse(int,int) -> prepareResponse
    void addByte(byte) -> addByte
    void addBytes(byte[]) -> addBytes
    void addUShort(int) -> addUShort
    void addULong(int) -> addULong
    java.lang.String getResponse() -> getResponse
cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$Type1Message -> cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$Type1Message:
    byte[] hostBytes -> hostBytes
    byte[] domainBytes -> domainBytes
    java.lang.String getResponse() -> getResponse
cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$Type2Message -> cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$Type2Message:
    byte[] challenge -> challenge
    java.lang.String target -> target
    byte[] targetInfo -> targetInfo
    int flags -> flags
    byte[] getChallenge() -> getChallenge
    java.lang.String getTarget() -> getTarget
    byte[] getTargetInfo() -> getTargetInfo
    int getFlags() -> getFlags
cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$Type3Message -> cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$Type3Message:
    int type2Flags -> type2Flags
    byte[] domainBytes -> domainBytes
    byte[] hostBytes -> hostBytes
    byte[] userBytes -> userBytes
    byte[] lmResp -> lmResp
    byte[] ntResp -> ntResp
    byte[] sessionKey -> sessionKey
    java.lang.String getResponse() -> getResponse
cz.msebera.android.httpclient.impl.auth.NTLMScheme -> cz.msebera.android.httpclient.impl.auth.NTLMScheme:
    cz.msebera.android.httpclient.impl.auth.NTLMEngine engine -> engine
    cz.msebera.android.httpclient.impl.auth.NTLMScheme$State state -> state
    java.lang.String challenge -> challenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    void parseChallenge(cz.msebera.android.httpclient.util.CharArrayBuffer,int,int) -> parseChallenge
    cz.msebera.android.httpclient.Header authenticate(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest) -> authenticate
    boolean isComplete() -> isComplete
cz.msebera.android.httpclient.impl.auth.NTLMScheme$State -> cz.msebera.android.httpclient.impl.auth.NTLMScheme$State:
    cz.msebera.android.httpclient.impl.auth.NTLMScheme$State UNINITIATED -> UNINITIATED
    cz.msebera.android.httpclient.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED -> CHALLENGE_RECEIVED
    cz.msebera.android.httpclient.impl.auth.NTLMScheme$State MSG_TYPE1_GENERATED -> MSG_TYPE1_GENERATED
    cz.msebera.android.httpclient.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED -> MSG_TYPE2_RECEVIED
    cz.msebera.android.httpclient.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED -> MSG_TYPE3_GENERATED
    cz.msebera.android.httpclient.impl.auth.NTLMScheme$State FAILED -> FAILED
    cz.msebera.android.httpclient.impl.auth.NTLMScheme$State[] $VALUES -> $VALUES
    cz.msebera.android.httpclient.impl.auth.NTLMScheme$State[] values() -> values
    cz.msebera.android.httpclient.impl.auth.NTLMScheme$State valueOf(java.lang.String) -> valueOf
cz.msebera.android.httpclient.impl.auth.NTLMSchemeFactory -> cz.msebera.android.httpclient.impl.auth.NTLMSchemeFactory:
    cz.msebera.android.httpclient.auth.AuthScheme newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
    cz.msebera.android.httpclient.auth.AuthScheme create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.impl.auth.RFC2617Scheme -> cz.msebera.android.httpclient.impl.auth.RFC2617Scheme:
    java.util.Map params -> params
    java.nio.charset.Charset credentialsCharset -> credentialsCharset
    java.nio.charset.Charset getCredentialsCharset() -> getCredentialsCharset
    java.lang.String getCredentialsCharset(cz.msebera.android.httpclient.HttpRequest) -> getCredentialsCharset
    void parseChallenge(cz.msebera.android.httpclient.util.CharArrayBuffer,int,int) -> parseChallenge
    java.util.Map getParameters() -> getParameters
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
cz.msebera.android.httpclient.impl.auth.SpnegoTokenGenerator -> cz.msebera.android.httpclient.impl.auth.SpnegoTokenGenerator:
    byte[] generateSpnegoDERObject(byte[]) -> generateSpnegoDERObject
cz.msebera.android.httpclient.impl.auth.UnsupportedDigestAlgorithmException -> cz.msebera.android.httpclient.impl.auth.UnsupportedDigestAlgorithmException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.impl.client.AIMDBackoffManager -> cz.msebera.android.httpclient.impl.client.AIMDBackoffManager:
    cz.msebera.android.httpclient.pool.ConnPoolControl connPerRoute -> connPerRoute
    cz.msebera.android.httpclient.impl.client.Clock clock -> clock
    java.util.Map lastRouteProbes -> lastRouteProbes
    java.util.Map lastRouteBackoffs -> lastRouteBackoffs
    long coolDown -> coolDown
    double backoffFactor -> backoffFactor
    int cap -> cap
    void backOff(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> backOff
    int getBackedOffPoolSize(int) -> getBackedOffPoolSize
    void probe(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> probe
    java.lang.Long getLastUpdate(java.util.Map,cz.msebera.android.httpclient.conn.routing.HttpRoute) -> getLastUpdate
    void setBackoffFactor(double) -> setBackoffFactor
    void setCooldownMillis(long) -> setCooldownMillis
    void setPerHostConnectionCap(int) -> setPerHostConnectionCap
cz.msebera.android.httpclient.impl.client.AbstractAuthenticationHandler -> cz.msebera.android.httpclient.impl.client.AbstractAuthenticationHandler:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    java.util.List DEFAULT_SCHEME_PRIORITY -> DEFAULT_SCHEME_PRIORITY
    java.util.Map parseChallenges(cz.msebera.android.httpclient.Header[]) -> parseChallenges
    java.util.List getAuthPreferences() -> getAuthPreferences
    java.util.List getAuthPreferences(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getAuthPreferences
    cz.msebera.android.httpclient.auth.AuthScheme selectScheme(java.util.Map,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> selectScheme
cz.msebera.android.httpclient.impl.client.AbstractHttpClient -> cz.msebera.android.httpclient.impl.client.AbstractHttpClient:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.params.HttpParams defaultParams -> defaultParams
    cz.msebera.android.httpclient.protocol.HttpRequestExecutor requestExec -> requestExec
    cz.msebera.android.httpclient.conn.ClientConnectionManager connManager -> connManager
    cz.msebera.android.httpclient.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    cz.msebera.android.httpclient.cookie.CookieSpecRegistry supportedCookieSpecs -> supportedCookieSpecs
    cz.msebera.android.httpclient.auth.AuthSchemeRegistry supportedAuthSchemes -> supportedAuthSchemes
    cz.msebera.android.httpclient.protocol.BasicHttpProcessor mutableProcessor -> mutableProcessor
    cz.msebera.android.httpclient.protocol.ImmutableHttpProcessor protocolProcessor -> protocolProcessor
    cz.msebera.android.httpclient.client.HttpRequestRetryHandler retryHandler -> retryHandler
    cz.msebera.android.httpclient.client.RedirectStrategy redirectStrategy -> redirectStrategy
    cz.msebera.android.httpclient.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    cz.msebera.android.httpclient.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    cz.msebera.android.httpclient.client.CookieStore cookieStore -> cookieStore
    cz.msebera.android.httpclient.client.CredentialsProvider credsProvider -> credsProvider
    cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    cz.msebera.android.httpclient.client.UserTokenHandler userTokenHandler -> userTokenHandler
    cz.msebera.android.httpclient.client.ConnectionBackoffStrategy connectionBackoffStrategy -> connectionBackoffStrategy
    cz.msebera.android.httpclient.client.BackoffManager backoffManager -> backoffManager
    cz.msebera.android.httpclient.params.HttpParams createHttpParams() -> createHttpParams
    cz.msebera.android.httpclient.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
    cz.msebera.android.httpclient.protocol.HttpContext createHttpContext() -> createHttpContext
    cz.msebera.android.httpclient.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    cz.msebera.android.httpclient.auth.AuthSchemeRegistry createAuthSchemeRegistry() -> createAuthSchemeRegistry
    cz.msebera.android.httpclient.cookie.CookieSpecRegistry createCookieSpecRegistry() -> createCookieSpecRegistry
    cz.msebera.android.httpclient.protocol.HttpRequestExecutor createRequestExecutor() -> createRequestExecutor
    cz.msebera.android.httpclient.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
    cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy() -> createConnectionKeepAliveStrategy
    cz.msebera.android.httpclient.client.HttpRequestRetryHandler createHttpRequestRetryHandler() -> createHttpRequestRetryHandler
    cz.msebera.android.httpclient.client.RedirectHandler createRedirectHandler() -> createRedirectHandler
    cz.msebera.android.httpclient.client.AuthenticationStrategy createTargetAuthenticationStrategy() -> createTargetAuthenticationStrategy
    cz.msebera.android.httpclient.client.AuthenticationHandler createTargetAuthenticationHandler() -> createTargetAuthenticationHandler
    cz.msebera.android.httpclient.client.AuthenticationStrategy createProxyAuthenticationStrategy() -> createProxyAuthenticationStrategy
    cz.msebera.android.httpclient.client.AuthenticationHandler createProxyAuthenticationHandler() -> createProxyAuthenticationHandler
    cz.msebera.android.httpclient.client.CookieStore createCookieStore() -> createCookieStore
    cz.msebera.android.httpclient.client.CredentialsProvider createCredentialsProvider() -> createCredentialsProvider
    cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    cz.msebera.android.httpclient.client.UserTokenHandler createUserTokenHandler() -> createUserTokenHandler
    cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
    void setParams(cz.msebera.android.httpclient.params.HttpParams) -> setParams
    cz.msebera.android.httpclient.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    cz.msebera.android.httpclient.protocol.HttpRequestExecutor getRequestExecutor() -> getRequestExecutor
    cz.msebera.android.httpclient.auth.AuthSchemeRegistry getAuthSchemes() -> getAuthSchemes
    void setAuthSchemes(cz.msebera.android.httpclient.auth.AuthSchemeRegistry) -> setAuthSchemes
    cz.msebera.android.httpclient.client.ConnectionBackoffStrategy getConnectionBackoffStrategy() -> getConnectionBackoffStrategy
    void setConnectionBackoffStrategy(cz.msebera.android.httpclient.client.ConnectionBackoffStrategy) -> setConnectionBackoffStrategy
    cz.msebera.android.httpclient.cookie.CookieSpecRegistry getCookieSpecs() -> getCookieSpecs
    cz.msebera.android.httpclient.client.BackoffManager getBackoffManager() -> getBackoffManager
    void setBackoffManager(cz.msebera.android.httpclient.client.BackoffManager) -> setBackoffManager
    void setCookieSpecs(cz.msebera.android.httpclient.cookie.CookieSpecRegistry) -> setCookieSpecs
    cz.msebera.android.httpclient.ConnectionReuseStrategy getConnectionReuseStrategy() -> getConnectionReuseStrategy
    void setReuseStrategy(cz.msebera.android.httpclient.ConnectionReuseStrategy) -> setReuseStrategy
    cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy() -> getConnectionKeepAliveStrategy
    void setKeepAliveStrategy(cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy) -> setKeepAliveStrategy
    cz.msebera.android.httpclient.client.HttpRequestRetryHandler getHttpRequestRetryHandler() -> getHttpRequestRetryHandler
    void setHttpRequestRetryHandler(cz.msebera.android.httpclient.client.HttpRequestRetryHandler) -> setHttpRequestRetryHandler
    cz.msebera.android.httpclient.client.RedirectHandler getRedirectHandler() -> getRedirectHandler
    void setRedirectHandler(cz.msebera.android.httpclient.client.RedirectHandler) -> setRedirectHandler
    cz.msebera.android.httpclient.client.RedirectStrategy getRedirectStrategy() -> getRedirectStrategy
    void setRedirectStrategy(cz.msebera.android.httpclient.client.RedirectStrategy) -> setRedirectStrategy
    cz.msebera.android.httpclient.client.AuthenticationHandler getTargetAuthenticationHandler() -> getTargetAuthenticationHandler
    void setTargetAuthenticationHandler(cz.msebera.android.httpclient.client.AuthenticationHandler) -> setTargetAuthenticationHandler
    cz.msebera.android.httpclient.client.AuthenticationStrategy getTargetAuthenticationStrategy() -> getTargetAuthenticationStrategy
    void setTargetAuthenticationStrategy(cz.msebera.android.httpclient.client.AuthenticationStrategy) -> setTargetAuthenticationStrategy
    cz.msebera.android.httpclient.client.AuthenticationHandler getProxyAuthenticationHandler() -> getProxyAuthenticationHandler
    void setProxyAuthenticationHandler(cz.msebera.android.httpclient.client.AuthenticationHandler) -> setProxyAuthenticationHandler
    cz.msebera.android.httpclient.client.AuthenticationStrategy getProxyAuthenticationStrategy() -> getProxyAuthenticationStrategy
    void setProxyAuthenticationStrategy(cz.msebera.android.httpclient.client.AuthenticationStrategy) -> setProxyAuthenticationStrategy
    cz.msebera.android.httpclient.client.CookieStore getCookieStore() -> getCookieStore
    void setCookieStore(cz.msebera.android.httpclient.client.CookieStore) -> setCookieStore
    cz.msebera.android.httpclient.client.CredentialsProvider getCredentialsProvider() -> getCredentialsProvider
    void setCredentialsProvider(cz.msebera.android.httpclient.client.CredentialsProvider) -> setCredentialsProvider
    cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner getRoutePlanner() -> getRoutePlanner
    void setRoutePlanner(cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner) -> setRoutePlanner
    cz.msebera.android.httpclient.client.UserTokenHandler getUserTokenHandler() -> getUserTokenHandler
    void setUserTokenHandler(cz.msebera.android.httpclient.client.UserTokenHandler) -> setUserTokenHandler
    cz.msebera.android.httpclient.protocol.BasicHttpProcessor getHttpProcessor() -> getHttpProcessor
    cz.msebera.android.httpclient.protocol.HttpProcessor getProtocolProcessor() -> getProtocolProcessor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    cz.msebera.android.httpclient.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    cz.msebera.android.httpclient.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    void addResponseInterceptor(cz.msebera.android.httpclient.HttpResponseInterceptor) -> addResponseInterceptor
    void addResponseInterceptor(cz.msebera.android.httpclient.HttpResponseInterceptor,int) -> addResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void addRequestInterceptor(cz.msebera.android.httpclient.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(cz.msebera.android.httpclient.HttpRequestInterceptor,int) -> addRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse doExecute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> doExecute
    cz.msebera.android.httpclient.client.RequestDirector createClientRequestDirector(cz.msebera.android.httpclient.protocol.HttpRequestExecutor,cz.msebera.android.httpclient.conn.ClientConnectionManager,cz.msebera.android.httpclient.ConnectionReuseStrategy,cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy,cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner,cz.msebera.android.httpclient.protocol.HttpProcessor,cz.msebera.android.httpclient.client.HttpRequestRetryHandler,cz.msebera.android.httpclient.client.RedirectHandler,cz.msebera.android.httpclient.client.AuthenticationHandler,cz.msebera.android.httpclient.client.AuthenticationHandler,cz.msebera.android.httpclient.client.UserTokenHandler,cz.msebera.android.httpclient.params.HttpParams) -> createClientRequestDirector
    cz.msebera.android.httpclient.client.RequestDirector createClientRequestDirector(cz.msebera.android.httpclient.protocol.HttpRequestExecutor,cz.msebera.android.httpclient.conn.ClientConnectionManager,cz.msebera.android.httpclient.ConnectionReuseStrategy,cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy,cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner,cz.msebera.android.httpclient.protocol.HttpProcessor,cz.msebera.android.httpclient.client.HttpRequestRetryHandler,cz.msebera.android.httpclient.client.RedirectStrategy,cz.msebera.android.httpclient.client.AuthenticationHandler,cz.msebera.android.httpclient.client.AuthenticationHandler,cz.msebera.android.httpclient.client.UserTokenHandler,cz.msebera.android.httpclient.params.HttpParams) -> createClientRequestDirector
    cz.msebera.android.httpclient.client.RequestDirector createClientRequestDirector(cz.msebera.android.httpclient.protocol.HttpRequestExecutor,cz.msebera.android.httpclient.conn.ClientConnectionManager,cz.msebera.android.httpclient.ConnectionReuseStrategy,cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy,cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner,cz.msebera.android.httpclient.protocol.HttpProcessor,cz.msebera.android.httpclient.client.HttpRequestRetryHandler,cz.msebera.android.httpclient.client.RedirectStrategy,cz.msebera.android.httpclient.client.AuthenticationStrategy,cz.msebera.android.httpclient.client.AuthenticationStrategy,cz.msebera.android.httpclient.client.UserTokenHandler,cz.msebera.android.httpclient.params.HttpParams) -> createClientRequestDirector
    cz.msebera.android.httpclient.params.HttpParams determineParams(cz.msebera.android.httpclient.HttpRequest) -> determineParams
    void close() -> close
cz.msebera.android.httpclient.impl.client.AuthenticationStrategyAdaptor -> cz.msebera.android.httpclient.impl.client.AuthenticationStrategyAdaptor:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.client.AuthenticationHandler handler -> handler
    boolean isAuthenticationRequested(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getChallenges
    java.util.Queue select(java.util.Map,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> select
    void authSucceeded(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authSucceeded
    void authFailed(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authFailed
    boolean isCachable(cz.msebera.android.httpclient.auth.AuthScheme) -> isCachable
    cz.msebera.android.httpclient.client.AuthenticationHandler getHandler() -> getHandler
cz.msebera.android.httpclient.impl.client.AuthenticationStrategyImpl -> cz.msebera.android.httpclient.impl.client.AuthenticationStrategyImpl:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    java.util.List DEFAULT_SCHEME_PRIORITY -> DEFAULT_SCHEME_PRIORITY
    int challengeCode -> challengeCode
    java.lang.String headerName -> headerName
    boolean isAuthenticationRequested(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getChallenges
    java.util.Collection getPreferredAuthSchemes(cz.msebera.android.httpclient.client.config.RequestConfig) -> getPreferredAuthSchemes
    java.util.Queue select(java.util.Map,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> select
    void authSucceeded(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authSucceeded
    boolean isCachable(cz.msebera.android.httpclient.auth.AuthScheme) -> isCachable
    void authFailed(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authFailed
cz.msebera.android.httpclient.impl.client.AutoRetryHttpClient -> cz.msebera.android.httpclient.impl.client.AutoRetryHttpClient:
    cz.msebera.android.httpclient.client.HttpClient backend -> backend
    cz.msebera.android.httpclient.client.ServiceUnavailableRetryStrategy retryStrategy -> retryStrategy
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.ResponseHandler) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.ResponseHandler,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest) -> execute
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.client.ResponseHandler) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.client.ResponseHandler,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    cz.msebera.android.httpclient.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
cz.msebera.android.httpclient.impl.client.BasicAuthCache -> cz.msebera.android.httpclient.impl.client.BasicAuthCache:
    java.util.HashMap map -> map
    cz.msebera.android.httpclient.conn.SchemePortResolver schemePortResolver -> schemePortResolver
    cz.msebera.android.httpclient.HttpHost getKey(cz.msebera.android.httpclient.HttpHost) -> getKey
    void put(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme) -> put
    cz.msebera.android.httpclient.auth.AuthScheme get(cz.msebera.android.httpclient.HttpHost) -> get
    void remove(cz.msebera.android.httpclient.HttpHost) -> remove
    void clear() -> clear
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.client.BasicCookieStore -> cz.msebera.android.httpclient.impl.client.BasicCookieStore:
    long serialVersionUID -> serialVersionUID
    java.util.TreeSet cookies -> cookies
    void addCookie(cz.msebera.android.httpclient.cookie.Cookie) -> addCookie
    void addCookies(cz.msebera.android.httpclient.cookie.Cookie[]) -> addCookies
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.client.BasicCredentialsProvider -> cz.msebera.android.httpclient.impl.client.BasicCredentialsProvider:
    java.util.concurrent.ConcurrentHashMap credMap -> credMap
    void setCredentials(cz.msebera.android.httpclient.auth.AuthScope,cz.msebera.android.httpclient.auth.Credentials) -> setCredentials
    cz.msebera.android.httpclient.auth.Credentials matchCredentials(java.util.Map,cz.msebera.android.httpclient.auth.AuthScope) -> matchCredentials
    cz.msebera.android.httpclient.auth.Credentials getCredentials(cz.msebera.android.httpclient.auth.AuthScope) -> getCredentials
    void clear() -> clear
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.client.BasicResponseHandler -> cz.msebera.android.httpclient.impl.client.BasicResponseHandler:
    java.lang.String handleResponse(cz.msebera.android.httpclient.HttpResponse) -> handleResponse
    java.lang.Object handleResponse(cz.msebera.android.httpclient.HttpResponse) -> handleResponse
cz.msebera.android.httpclient.impl.client.ClientParamsStack -> cz.msebera.android.httpclient.impl.client.ClientParamsStack:
    cz.msebera.android.httpclient.params.HttpParams applicationParams -> applicationParams
    cz.msebera.android.httpclient.params.HttpParams clientParams -> clientParams
    cz.msebera.android.httpclient.params.HttpParams requestParams -> requestParams
    cz.msebera.android.httpclient.params.HttpParams overrideParams -> overrideParams
    cz.msebera.android.httpclient.params.HttpParams getApplicationParams() -> getApplicationParams
    cz.msebera.android.httpclient.params.HttpParams getClientParams() -> getClientParams
    cz.msebera.android.httpclient.params.HttpParams getRequestParams() -> getRequestParams
    cz.msebera.android.httpclient.params.HttpParams getOverrideParams() -> getOverrideParams
    java.lang.Object getParameter(java.lang.String) -> getParameter
    cz.msebera.android.httpclient.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    cz.msebera.android.httpclient.params.HttpParams copy() -> copy
cz.msebera.android.httpclient.impl.client.Clock -> cz.msebera.android.httpclient.impl.client.Clock:
    long getCurrentTime() -> getCurrentTime
cz.msebera.android.httpclient.impl.client.CloseableHttpClient -> cz.msebera.android.httpclient.impl.client.CloseableHttpClient:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse doExecute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> doExecute
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    cz.msebera.android.httpclient.HttpHost determineTarget(cz.msebera.android.httpclient.client.methods.HttpUriRequest) -> determineTarget
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest) -> execute
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.client.ResponseHandler) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.client.ResponseHandler,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.ResponseHandler) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.ResponseHandler,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> execute
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest) -> execute
cz.msebera.android.httpclient.impl.client.CloseableHttpResponseProxy -> cz.msebera.android.httpclient.impl.client.CloseableHttpResponseProxy:
    java.lang.reflect.Constructor CONSTRUCTOR -> CONSTRUCTOR
    cz.msebera.android.httpclient.HttpResponse original -> original
    void close() -> close
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse newProxy(cz.msebera.android.httpclient.HttpResponse) -> newProxy
cz.msebera.android.httpclient.impl.client.ContentEncodingHttpClient -> cz.msebera.android.httpclient.impl.client.ContentEncodingHttpClient:
    cz.msebera.android.httpclient.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
cz.msebera.android.httpclient.impl.client.DecompressingHttpClient -> cz.msebera.android.httpclient.impl.client.DecompressingHttpClient:
    cz.msebera.android.httpclient.client.HttpClient backend -> backend
    cz.msebera.android.httpclient.HttpRequestInterceptor acceptEncodingInterceptor -> acceptEncodingInterceptor
    cz.msebera.android.httpclient.HttpResponseInterceptor contentEncodingInterceptor -> contentEncodingInterceptor
    cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
    cz.msebera.android.httpclient.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest) -> execute
    cz.msebera.android.httpclient.client.HttpClient getHttpClient() -> getHttpClient
    cz.msebera.android.httpclient.HttpHost getHttpHost(cz.msebera.android.httpclient.client.methods.HttpUriRequest) -> getHttpHost
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> execute
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.client.ResponseHandler) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.client.ResponseHandler,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.ResponseHandler) -> execute
    java.lang.Object execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.ResponseHandler,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
cz.msebera.android.httpclient.impl.client.DefaultBackoffStrategy -> cz.msebera.android.httpclient.impl.client.DefaultBackoffStrategy:
    boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    boolean shouldBackoff(cz.msebera.android.httpclient.HttpResponse) -> shouldBackoff
cz.msebera.android.httpclient.impl.client.DefaultConnectionKeepAliveStrategy -> cz.msebera.android.httpclient.impl.client.DefaultConnectionKeepAliveStrategy:
    cz.msebera.android.httpclient.impl.client.DefaultConnectionKeepAliveStrategy INSTANCE -> INSTANCE
    long getKeepAliveDuration(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getKeepAliveDuration
cz.msebera.android.httpclient.impl.client.DefaultHttpClient -> cz.msebera.android.httpclient.impl.client.DefaultHttpClient:
    cz.msebera.android.httpclient.params.HttpParams createHttpParams() -> createHttpParams
    void setDefaultHttpParams(cz.msebera.android.httpclient.params.HttpParams) -> setDefaultHttpParams
    cz.msebera.android.httpclient.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
cz.msebera.android.httpclient.impl.client.DefaultHttpRequestRetryHandler -> cz.msebera.android.httpclient.impl.client.DefaultHttpRequestRetryHandler:
    cz.msebera.android.httpclient.impl.client.DefaultHttpRequestRetryHandler INSTANCE -> INSTANCE
    int retryCount -> retryCount
    boolean requestSentRetryEnabled -> requestSentRetryEnabled
    java.util.Set nonRetriableClasses -> nonRetriableClasses
    boolean retryRequest(java.io.IOException,int,cz.msebera.android.httpclient.protocol.HttpContext) -> retryRequest
    boolean isRequestSentRetryEnabled() -> isRequestSentRetryEnabled
    int getRetryCount() -> getRetryCount
    boolean handleAsIdempotent(cz.msebera.android.httpclient.HttpRequest) -> handleAsIdempotent
    boolean requestIsAborted(cz.msebera.android.httpclient.HttpRequest) -> requestIsAborted
cz.msebera.android.httpclient.impl.client.DefaultProxyAuthenticationHandler -> cz.msebera.android.httpclient.impl.client.DefaultProxyAuthenticationHandler:
    boolean isAuthenticationRequested(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getChallenges
    java.util.List getAuthPreferences(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getAuthPreferences
cz.msebera.android.httpclient.impl.client.DefaultRedirectHandler -> cz.msebera.android.httpclient.impl.client.DefaultRedirectHandler:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    boolean isRedirectRequested(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getLocationURI
cz.msebera.android.httpclient.impl.client.DefaultRedirectStrategy -> cz.msebera.android.httpclient.impl.client.DefaultRedirectStrategy:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    cz.msebera.android.httpclient.impl.client.DefaultRedirectStrategy INSTANCE -> INSTANCE
    java.lang.String[] REDIRECT_METHODS -> REDIRECT_METHODS
    boolean isRedirected(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isRedirected
    java.net.URI getLocationURI(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getLocationURI
    java.net.URI createLocationURI(java.lang.String) -> createLocationURI
    boolean isRedirectable(java.lang.String) -> isRedirectable
    cz.msebera.android.httpclient.client.methods.HttpUriRequest getRedirect(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getRedirect
cz.msebera.android.httpclient.impl.client.DefaultRedirectStrategyAdaptor -> cz.msebera.android.httpclient.impl.client.DefaultRedirectStrategyAdaptor:
    cz.msebera.android.httpclient.client.RedirectHandler handler -> handler
    boolean isRedirected(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isRedirected
    cz.msebera.android.httpclient.client.methods.HttpUriRequest getRedirect(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getRedirect
    cz.msebera.android.httpclient.client.RedirectHandler getHandler() -> getHandler
cz.msebera.android.httpclient.impl.client.DefaultRequestDirector -> cz.msebera.android.httpclient.impl.client.DefaultRequestDirector:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.conn.ClientConnectionManager connManager -> connManager
    cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    cz.msebera.android.httpclient.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    cz.msebera.android.httpclient.protocol.HttpRequestExecutor requestExec -> requestExec
    cz.msebera.android.httpclient.protocol.HttpProcessor httpProcessor -> httpProcessor
    cz.msebera.android.httpclient.client.HttpRequestRetryHandler retryHandler -> retryHandler
    cz.msebera.android.httpclient.client.RedirectHandler redirectHandler -> redirectHandler
    cz.msebera.android.httpclient.client.RedirectStrategy redirectStrategy -> redirectStrategy
    cz.msebera.android.httpclient.client.AuthenticationHandler targetAuthHandler -> targetAuthHandler
    cz.msebera.android.httpclient.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    cz.msebera.android.httpclient.client.AuthenticationHandler proxyAuthHandler -> proxyAuthHandler
    cz.msebera.android.httpclient.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    cz.msebera.android.httpclient.client.UserTokenHandler userTokenHandler -> userTokenHandler
    cz.msebera.android.httpclient.params.HttpParams params -> params
    cz.msebera.android.httpclient.conn.ManagedClientConnection managedConn -> managedConn
    cz.msebera.android.httpclient.auth.AuthState targetAuthState -> targetAuthState
    cz.msebera.android.httpclient.auth.AuthState proxyAuthState -> proxyAuthState
    cz.msebera.android.httpclient.impl.client.HttpAuthenticator authenticator -> authenticator
    int execCount -> execCount
    int redirectCount -> redirectCount
    int maxRedirects -> maxRedirects
    cz.msebera.android.httpclient.HttpHost virtualHost -> virtualHost
    cz.msebera.android.httpclient.impl.client.RequestWrapper wrapRequest(cz.msebera.android.httpclient.HttpRequest) -> wrapRequest
    void rewriteRequestURI(cz.msebera.android.httpclient.impl.client.RequestWrapper,cz.msebera.android.httpclient.conn.routing.HttpRoute) -> rewriteRequestURI
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    void tryConnect(cz.msebera.android.httpclient.impl.client.RoutedRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> tryConnect
    cz.msebera.android.httpclient.HttpResponse tryExecute(cz.msebera.android.httpclient.impl.client.RoutedRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> tryExecute
    void releaseConnection() -> releaseConnection
    cz.msebera.android.httpclient.conn.routing.HttpRoute determineRoute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> determineRoute
    void establishRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext) -> establishRoute
    boolean createTunnelToTarget(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext) -> createTunnelToTarget
    boolean createTunnelToProxy(cz.msebera.android.httpclient.conn.routing.HttpRoute,int,cz.msebera.android.httpclient.protocol.HttpContext) -> createTunnelToProxy
    cz.msebera.android.httpclient.HttpRequest createConnectRequest(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext) -> createConnectRequest
    cz.msebera.android.httpclient.impl.client.RoutedRequest handleResponse(cz.msebera.android.httpclient.impl.client.RoutedRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> handleResponse
    void abortConnection() -> abortConnection
cz.msebera.android.httpclient.impl.client.DefaultServiceUnavailableRetryStrategy -> cz.msebera.android.httpclient.impl.client.DefaultServiceUnavailableRetryStrategy:
    int maxRetries -> maxRetries
    long retryInterval -> retryInterval
    boolean retryRequest(cz.msebera.android.httpclient.HttpResponse,int,cz.msebera.android.httpclient.protocol.HttpContext) -> retryRequest
    long getRetryInterval() -> getRetryInterval
cz.msebera.android.httpclient.impl.client.DefaultTargetAuthenticationHandler -> cz.msebera.android.httpclient.impl.client.DefaultTargetAuthenticationHandler:
    boolean isAuthenticationRequested(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getChallenges
    java.util.List getAuthPreferences(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getAuthPreferences
cz.msebera.android.httpclient.impl.client.DefaultUserTokenHandler -> cz.msebera.android.httpclient.impl.client.DefaultUserTokenHandler:
    cz.msebera.android.httpclient.impl.client.DefaultUserTokenHandler INSTANCE -> INSTANCE
    java.lang.Object getUserToken(cz.msebera.android.httpclient.protocol.HttpContext) -> getUserToken
    java.security.Principal getAuthPrincipal(cz.msebera.android.httpclient.auth.AuthState) -> getAuthPrincipal
cz.msebera.android.httpclient.impl.client.EntityEnclosingRequestWrapper -> cz.msebera.android.httpclient.impl.client.EntityEnclosingRequestWrapper:
    cz.msebera.android.httpclient.HttpEntity entity -> entity
    boolean consumed -> consumed
    cz.msebera.android.httpclient.HttpEntity getEntity() -> getEntity
    void setEntity(cz.msebera.android.httpclient.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    boolean isRepeatable() -> isRepeatable
    boolean access$002(cz.msebera.android.httpclient.impl.client.EntityEnclosingRequestWrapper,boolean) -> access$002
cz.msebera.android.httpclient.impl.client.EntityEnclosingRequestWrapper$EntityWrapper -> cz.msebera.android.httpclient.impl.client.EntityEnclosingRequestWrapper$EntityWrapper:
    cz.msebera.android.httpclient.impl.client.EntityEnclosingRequestWrapper this$0 -> this$0
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics -> cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics:
    java.util.concurrent.atomic.AtomicLong activeConnections -> activeConnections
    java.util.concurrent.atomic.AtomicLong scheduledConnections -> scheduledConnections
    cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics$DurationCounter successfulConnections -> successfulConnections
    cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics$DurationCounter failedConnections -> failedConnections
    cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics$DurationCounter requests -> requests
    cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics$DurationCounter tasks -> tasks
    java.util.concurrent.atomic.AtomicLong getActiveConnections() -> getActiveConnections
    java.util.concurrent.atomic.AtomicLong getScheduledConnections() -> getScheduledConnections
    cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics$DurationCounter getSuccessfulConnections() -> getSuccessfulConnections
    cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics$DurationCounter getFailedConnections() -> getFailedConnections
    cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics$DurationCounter getRequests() -> getRequests
    cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics$DurationCounter getTasks() -> getTasks
    long getActiveConnectionCount() -> getActiveConnectionCount
    long getScheduledConnectionCount() -> getScheduledConnectionCount
    long getSuccessfulConnectionCount() -> getSuccessfulConnectionCount
    long getSuccessfulConnectionAverageDuration() -> getSuccessfulConnectionAverageDuration
    long getFailedConnectionCount() -> getFailedConnectionCount
    long getFailedConnectionAverageDuration() -> getFailedConnectionAverageDuration
    long getRequestCount() -> getRequestCount
    long getRequestAverageDuration() -> getRequestAverageDuration
    long getTaskCount() -> getTaskCount
    long getTaskAverageDuration() -> getTaskAverageDuration
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics$DurationCounter -> cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics$DurationCounter:
    java.util.concurrent.atomic.AtomicLong count -> count
    java.util.concurrent.atomic.AtomicLong cumulativeDuration -> cumulativeDuration
    void increment(long) -> increment
    long count() -> count
    long averageDuration() -> averageDuration
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.client.FutureRequestExecutionService -> cz.msebera.android.httpclient.impl.client.FutureRequestExecutionService:
    cz.msebera.android.httpclient.client.HttpClient httpclient -> httpclient
    java.util.concurrent.ExecutorService executorService -> executorService
    cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics metrics -> metrics
    java.util.concurrent.atomic.AtomicBoolean closed -> closed
    cz.msebera.android.httpclient.impl.client.HttpRequestFutureTask execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.client.ResponseHandler) -> execute
    cz.msebera.android.httpclient.impl.client.HttpRequestFutureTask execute(cz.msebera.android.httpclient.client.methods.HttpUriRequest,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.client.ResponseHandler,cz.msebera.android.httpclient.concurrent.FutureCallback) -> execute
    cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics metrics() -> metrics
    void close() -> close
cz.msebera.android.httpclient.impl.client.HttpAuthenticator -> cz.msebera.android.httpclient.impl.client.HttpAuthenticator:
    boolean authenticate(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.client.AuthenticationStrategy,cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.protocol.HttpContext) -> authenticate
cz.msebera.android.httpclient.impl.client.HttpClientBuilder -> cz.msebera.android.httpclient.impl.client.HttpClientBuilder:
    cz.msebera.android.httpclient.protocol.HttpRequestExecutor requestExec -> requestExec
    cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier hostnameVerifier -> hostnameVerifier
    cz.msebera.android.httpclient.conn.socket.LayeredConnectionSocketFactory sslSocketFactory -> sslSocketFactory
    javax.net.ssl.SSLContext sslcontext -> sslcontext
    cz.msebera.android.httpclient.conn.HttpClientConnectionManager connManager -> connManager
    cz.msebera.android.httpclient.conn.SchemePortResolver schemePortResolver -> schemePortResolver
    cz.msebera.android.httpclient.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    cz.msebera.android.httpclient.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    cz.msebera.android.httpclient.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    cz.msebera.android.httpclient.client.UserTokenHandler userTokenHandler -> userTokenHandler
    cz.msebera.android.httpclient.protocol.HttpProcessor httpprocessor -> httpprocessor
    java.util.LinkedList requestFirst -> requestFirst
    java.util.LinkedList requestLast -> requestLast
    java.util.LinkedList responseFirst -> responseFirst
    java.util.LinkedList responseLast -> responseLast
    cz.msebera.android.httpclient.client.HttpRequestRetryHandler retryHandler -> retryHandler
    cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    cz.msebera.android.httpclient.client.RedirectStrategy redirectStrategy -> redirectStrategy
    cz.msebera.android.httpclient.client.ConnectionBackoffStrategy connectionBackoffStrategy -> connectionBackoffStrategy
    cz.msebera.android.httpclient.client.BackoffManager backoffManager -> backoffManager
    cz.msebera.android.httpclient.client.ServiceUnavailableRetryStrategy serviceUnavailStrategy -> serviceUnavailStrategy
    cz.msebera.android.httpclient.config.Lookup authSchemeRegistry -> authSchemeRegistry
    cz.msebera.android.httpclient.config.Lookup cookieSpecRegistry -> cookieSpecRegistry
    cz.msebera.android.httpclient.client.CookieStore cookieStore -> cookieStore
    cz.msebera.android.httpclient.client.CredentialsProvider credentialsProvider -> credentialsProvider
    java.lang.String userAgent -> userAgent
    cz.msebera.android.httpclient.HttpHost proxy -> proxy
    java.util.Collection defaultHeaders -> defaultHeaders
    cz.msebera.android.httpclient.config.SocketConfig defaultSocketConfig -> defaultSocketConfig
    cz.msebera.android.httpclient.config.ConnectionConfig defaultConnectionConfig -> defaultConnectionConfig
    cz.msebera.android.httpclient.client.config.RequestConfig defaultRequestConfig -> defaultRequestConfig
    boolean systemProperties -> systemProperties
    boolean redirectHandlingDisabled -> redirectHandlingDisabled
    boolean automaticRetriesDisabled -> automaticRetriesDisabled
    boolean contentCompressionDisabled -> contentCompressionDisabled
    boolean cookieManagementDisabled -> cookieManagementDisabled
    boolean authCachingDisabled -> authCachingDisabled
    boolean connectionStateDisabled -> connectionStateDisabled
    int maxConnTotal -> maxConnTotal
    int maxConnPerRoute -> maxConnPerRoute
    java.util.List closeables -> closeables
    java.lang.String DEFAULT_USER_AGENT -> DEFAULT_USER_AGENT
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder create() -> create
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setRequestExecutor(cz.msebera.android.httpclient.protocol.HttpRequestExecutor) -> setRequestExecutor
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setHostnameVerifier(cz.msebera.android.httpclient.conn.ssl.X509HostnameVerifier) -> setHostnameVerifier
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setSslcontext(javax.net.ssl.SSLContext) -> setSslcontext
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setSSLSocketFactory(cz.msebera.android.httpclient.conn.socket.LayeredConnectionSocketFactory) -> setSSLSocketFactory
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setMaxConnTotal(int) -> setMaxConnTotal
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setMaxConnPerRoute(int) -> setMaxConnPerRoute
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setDefaultSocketConfig(cz.msebera.android.httpclient.config.SocketConfig) -> setDefaultSocketConfig
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setDefaultConnectionConfig(cz.msebera.android.httpclient.config.ConnectionConfig) -> setDefaultConnectionConfig
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setConnectionManager(cz.msebera.android.httpclient.conn.HttpClientConnectionManager) -> setConnectionManager
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setConnectionReuseStrategy(cz.msebera.android.httpclient.ConnectionReuseStrategy) -> setConnectionReuseStrategy
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setKeepAliveStrategy(cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy) -> setKeepAliveStrategy
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setTargetAuthenticationStrategy(cz.msebera.android.httpclient.client.AuthenticationStrategy) -> setTargetAuthenticationStrategy
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setProxyAuthenticationStrategy(cz.msebera.android.httpclient.client.AuthenticationStrategy) -> setProxyAuthenticationStrategy
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setUserTokenHandler(cz.msebera.android.httpclient.client.UserTokenHandler) -> setUserTokenHandler
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder disableConnectionState() -> disableConnectionState
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setSchemePortResolver(cz.msebera.android.httpclient.conn.SchemePortResolver) -> setSchemePortResolver
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setUserAgent(java.lang.String) -> setUserAgent
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setDefaultHeaders(java.util.Collection) -> setDefaultHeaders
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder addInterceptorFirst(cz.msebera.android.httpclient.HttpResponseInterceptor) -> addInterceptorFirst
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder addInterceptorLast(cz.msebera.android.httpclient.HttpResponseInterceptor) -> addInterceptorLast
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder addInterceptorFirst(cz.msebera.android.httpclient.HttpRequestInterceptor) -> addInterceptorFirst
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder addInterceptorLast(cz.msebera.android.httpclient.HttpRequestInterceptor) -> addInterceptorLast
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder disableCookieManagement() -> disableCookieManagement
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder disableContentCompression() -> disableContentCompression
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder disableAuthCaching() -> disableAuthCaching
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setHttpProcessor(cz.msebera.android.httpclient.protocol.HttpProcessor) -> setHttpProcessor
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setRetryHandler(cz.msebera.android.httpclient.client.HttpRequestRetryHandler) -> setRetryHandler
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder disableAutomaticRetries() -> disableAutomaticRetries
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setProxy(cz.msebera.android.httpclient.HttpHost) -> setProxy
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setRoutePlanner(cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner) -> setRoutePlanner
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setRedirectStrategy(cz.msebera.android.httpclient.client.RedirectStrategy) -> setRedirectStrategy
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder disableRedirectHandling() -> disableRedirectHandling
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setConnectionBackoffStrategy(cz.msebera.android.httpclient.client.ConnectionBackoffStrategy) -> setConnectionBackoffStrategy
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setBackoffManager(cz.msebera.android.httpclient.client.BackoffManager) -> setBackoffManager
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setServiceUnavailableRetryStrategy(cz.msebera.android.httpclient.client.ServiceUnavailableRetryStrategy) -> setServiceUnavailableRetryStrategy
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setDefaultCookieStore(cz.msebera.android.httpclient.client.CookieStore) -> setDefaultCookieStore
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setDefaultCredentialsProvider(cz.msebera.android.httpclient.client.CredentialsProvider) -> setDefaultCredentialsProvider
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setDefaultAuthSchemeRegistry(cz.msebera.android.httpclient.config.Lookup) -> setDefaultAuthSchemeRegistry
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setDefaultCookieSpecRegistry(cz.msebera.android.httpclient.config.Lookup) -> setDefaultCookieSpecRegistry
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder setDefaultRequestConfig(cz.msebera.android.httpclient.client.config.RequestConfig) -> setDefaultRequestConfig
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder useSystemProperties() -> useSystemProperties
    cz.msebera.android.httpclient.impl.execchain.ClientExecChain decorateMainExec(cz.msebera.android.httpclient.impl.execchain.ClientExecChain) -> decorateMainExec
    cz.msebera.android.httpclient.impl.execchain.ClientExecChain decorateProtocolExec(cz.msebera.android.httpclient.impl.execchain.ClientExecChain) -> decorateProtocolExec
    void addCloseable(java.io.Closeable) -> addCloseable
    java.lang.String[] split(java.lang.String) -> split
    cz.msebera.android.httpclient.impl.client.CloseableHttpClient build() -> build
cz.msebera.android.httpclient.impl.client.HttpClients -> cz.msebera.android.httpclient.impl.client.HttpClients:
    cz.msebera.android.httpclient.impl.client.HttpClientBuilder custom() -> custom
    cz.msebera.android.httpclient.impl.client.CloseableHttpClient createDefault() -> createDefault
    cz.msebera.android.httpclient.impl.client.CloseableHttpClient createSystem() -> createSystem
    cz.msebera.android.httpclient.impl.client.CloseableHttpClient createMinimal() -> createMinimal
    cz.msebera.android.httpclient.impl.client.CloseableHttpClient createMinimal(cz.msebera.android.httpclient.conn.HttpClientConnectionManager) -> createMinimal
cz.msebera.android.httpclient.impl.client.HttpRequestFutureTask -> cz.msebera.android.httpclient.impl.client.HttpRequestFutureTask:
    cz.msebera.android.httpclient.client.methods.HttpUriRequest request -> request
    cz.msebera.android.httpclient.impl.client.HttpRequestTaskCallable callable -> callable
    boolean cancel(boolean) -> cancel
    long scheduledTime() -> scheduledTime
    long startedTime() -> startedTime
    long endedTime() -> endedTime
    long requestDuration() -> requestDuration
    long taskDuration() -> taskDuration
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.client.HttpRequestTaskCallable -> cz.msebera.android.httpclient.impl.client.HttpRequestTaskCallable:
    cz.msebera.android.httpclient.client.methods.HttpUriRequest request -> request
    cz.msebera.android.httpclient.client.HttpClient httpclient -> httpclient
    java.util.concurrent.atomic.AtomicBoolean cancelled -> cancelled
    long scheduled -> scheduled
    long started -> started
    long ended -> ended
    cz.msebera.android.httpclient.protocol.HttpContext context -> context
    cz.msebera.android.httpclient.client.ResponseHandler responseHandler -> responseHandler
    cz.msebera.android.httpclient.concurrent.FutureCallback callback -> callback
    cz.msebera.android.httpclient.impl.client.FutureRequestExecutionMetrics metrics -> metrics
    long getScheduled() -> getScheduled
    long getStarted() -> getStarted
    long getEnded() -> getEnded
    java.lang.Object call() -> call
    void cancel() -> cancel
cz.msebera.android.httpclient.impl.client.InternalHttpClient -> cz.msebera.android.httpclient.impl.client.InternalHttpClient:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.impl.execchain.ClientExecChain execChain -> execChain
    cz.msebera.android.httpclient.conn.HttpClientConnectionManager connManager -> connManager
    cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    cz.msebera.android.httpclient.config.Lookup cookieSpecRegistry -> cookieSpecRegistry
    cz.msebera.android.httpclient.config.Lookup authSchemeRegistry -> authSchemeRegistry
    cz.msebera.android.httpclient.client.CookieStore cookieStore -> cookieStore
    cz.msebera.android.httpclient.client.CredentialsProvider credentialsProvider -> credentialsProvider
    cz.msebera.android.httpclient.client.config.RequestConfig defaultConfig -> defaultConfig
    java.util.List closeables -> closeables
    cz.msebera.android.httpclient.conn.routing.HttpRoute determineRoute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> determineRoute
    void setupContext(cz.msebera.android.httpclient.client.protocol.HttpClientContext) -> setupContext
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse doExecute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> doExecute
    void close() -> close
    cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
    cz.msebera.android.httpclient.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    cz.msebera.android.httpclient.conn.HttpClientConnectionManager access$000(cz.msebera.android.httpclient.impl.client.InternalHttpClient) -> access$000
cz.msebera.android.httpclient.impl.client.InternalHttpClient$1 -> cz.msebera.android.httpclient.impl.client.InternalHttpClient$1:
    cz.msebera.android.httpclient.impl.client.InternalHttpClient this$0 -> this$0
    void shutdown() -> shutdown
    cz.msebera.android.httpclient.conn.ClientConnectionRequest requestConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(cz.msebera.android.httpclient.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
cz.msebera.android.httpclient.impl.client.LaxRedirectStrategy -> cz.msebera.android.httpclient.impl.client.LaxRedirectStrategy:
    java.lang.String[] REDIRECT_METHODS -> REDIRECT_METHODS
    boolean isRedirectable(java.lang.String) -> isRedirectable
cz.msebera.android.httpclient.impl.client.MinimalHttpClient -> cz.msebera.android.httpclient.impl.client.MinimalHttpClient:
    cz.msebera.android.httpclient.conn.HttpClientConnectionManager connManager -> connManager
    cz.msebera.android.httpclient.impl.execchain.MinimalClientExec requestExecutor -> requestExecutor
    cz.msebera.android.httpclient.params.HttpParams params -> params
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse doExecute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> doExecute
    cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
    void close() -> close
    cz.msebera.android.httpclient.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    cz.msebera.android.httpclient.conn.HttpClientConnectionManager access$000(cz.msebera.android.httpclient.impl.client.MinimalHttpClient) -> access$000
cz.msebera.android.httpclient.impl.client.MinimalHttpClient$1 -> cz.msebera.android.httpclient.impl.client.MinimalHttpClient$1:
    cz.msebera.android.httpclient.impl.client.MinimalHttpClient this$0 -> this$0
    void shutdown() -> shutdown
    cz.msebera.android.httpclient.conn.ClientConnectionRequest requestConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(cz.msebera.android.httpclient.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
cz.msebera.android.httpclient.impl.client.NoopUserTokenHandler -> cz.msebera.android.httpclient.impl.client.NoopUserTokenHandler:
    cz.msebera.android.httpclient.impl.client.NoopUserTokenHandler INSTANCE -> INSTANCE
    java.lang.Object getUserToken(cz.msebera.android.httpclient.protocol.HttpContext) -> getUserToken
cz.msebera.android.httpclient.impl.client.NullBackoffStrategy -> cz.msebera.android.httpclient.impl.client.NullBackoffStrategy:
    boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    boolean shouldBackoff(cz.msebera.android.httpclient.HttpResponse) -> shouldBackoff
cz.msebera.android.httpclient.impl.client.ProxyAuthenticationStrategy -> cz.msebera.android.httpclient.impl.client.ProxyAuthenticationStrategy:
    cz.msebera.android.httpclient.impl.client.ProxyAuthenticationStrategy INSTANCE -> INSTANCE
    java.util.Collection getPreferredAuthSchemes(cz.msebera.android.httpclient.client.config.RequestConfig) -> getPreferredAuthSchemes
    void authFailed(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authFailed
    void authSucceeded(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authSucceeded
    java.util.Queue select(java.util.Map,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> select
    java.util.Map getChallenges(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getChallenges
    boolean isAuthenticationRequested(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isAuthenticationRequested
cz.msebera.android.httpclient.impl.client.ProxyClient -> cz.msebera.android.httpclient.impl.client.ProxyClient:
    cz.msebera.android.httpclient.conn.HttpConnectionFactory connFactory -> connFactory
    cz.msebera.android.httpclient.config.ConnectionConfig connectionConfig -> connectionConfig
    cz.msebera.android.httpclient.client.config.RequestConfig requestConfig -> requestConfig
    cz.msebera.android.httpclient.protocol.HttpProcessor httpProcessor -> httpProcessor
    cz.msebera.android.httpclient.protocol.HttpRequestExecutor requestExec -> requestExec
    cz.msebera.android.httpclient.impl.client.ProxyAuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    cz.msebera.android.httpclient.impl.auth.HttpAuthenticator authenticator -> authenticator
    cz.msebera.android.httpclient.auth.AuthState proxyAuthState -> proxyAuthState
    cz.msebera.android.httpclient.auth.AuthSchemeRegistry authSchemeRegistry -> authSchemeRegistry
    cz.msebera.android.httpclient.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
    cz.msebera.android.httpclient.auth.AuthSchemeRegistry getAuthSchemeRegistry() -> getAuthSchemeRegistry
    java.net.Socket tunnel(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.Credentials) -> tunnel
cz.msebera.android.httpclient.impl.client.RedirectLocations -> cz.msebera.android.httpclient.impl.client.RedirectLocations:
    java.util.Set unique -> unique
    java.util.List all -> all
    boolean contains(java.net.URI) -> contains
    void add(java.net.URI) -> add
    boolean remove(java.net.URI) -> remove
    java.util.List getAll() -> getAll
    java.net.URI get(int) -> get
    int size() -> size
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.net.URI remove(int) -> remove
    boolean contains(java.lang.Object) -> contains
    java.lang.Object remove(int) -> remove
    java.lang.Object get(int) -> get
cz.msebera.android.httpclient.impl.client.RequestWrapper -> cz.msebera.android.httpclient.impl.client.RequestWrapper:
    cz.msebera.android.httpclient.HttpRequest original -> original
    java.net.URI uri -> uri
    java.lang.String method -> method
    cz.msebera.android.httpclient.ProtocolVersion version -> version
    int execCount -> execCount
    void resetHeaders() -> resetHeaders
    java.lang.String getMethod() -> getMethod
    void setMethod(java.lang.String) -> setMethod
    cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    void setProtocolVersion(cz.msebera.android.httpclient.ProtocolVersion) -> setProtocolVersion
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    cz.msebera.android.httpclient.RequestLine getRequestLine() -> getRequestLine
    void abort() -> abort
    boolean isAborted() -> isAborted
    cz.msebera.android.httpclient.HttpRequest getOriginal() -> getOriginal
    boolean isRepeatable() -> isRepeatable
    int getExecCount() -> getExecCount
    void incrementExecCount() -> incrementExecCount
cz.msebera.android.httpclient.impl.client.RoutedRequest -> cz.msebera.android.httpclient.impl.client.RoutedRequest:
    cz.msebera.android.httpclient.impl.client.RequestWrapper request -> request
    cz.msebera.android.httpclient.conn.routing.HttpRoute route -> route
    cz.msebera.android.httpclient.impl.client.RequestWrapper getRequest() -> getRequest
    cz.msebera.android.httpclient.conn.routing.HttpRoute getRoute() -> getRoute
cz.msebera.android.httpclient.impl.client.StandardHttpRequestRetryHandler -> cz.msebera.android.httpclient.impl.client.StandardHttpRequestRetryHandler:
    java.util.Map idempotentMethods -> idempotentMethods
    boolean handleAsIdempotent(cz.msebera.android.httpclient.HttpRequest) -> handleAsIdempotent
cz.msebera.android.httpclient.impl.client.SystemClock -> cz.msebera.android.httpclient.impl.client.SystemClock:
    long getCurrentTime() -> getCurrentTime
cz.msebera.android.httpclient.impl.client.SystemDefaultCredentialsProvider -> cz.msebera.android.httpclient.impl.client.SystemDefaultCredentialsProvider:
    java.util.Map SCHEME_MAP -> SCHEME_MAP
    cz.msebera.android.httpclient.impl.client.BasicCredentialsProvider internal -> internal
    java.lang.String translateScheme(java.lang.String) -> translateScheme
    void setCredentials(cz.msebera.android.httpclient.auth.AuthScope,cz.msebera.android.httpclient.auth.Credentials) -> setCredentials
    java.net.PasswordAuthentication getSystemCreds(cz.msebera.android.httpclient.auth.AuthScope,java.net.Authenticator$RequestorType) -> getSystemCreds
    cz.msebera.android.httpclient.auth.Credentials getCredentials(cz.msebera.android.httpclient.auth.AuthScope) -> getCredentials
    void clear() -> clear
cz.msebera.android.httpclient.impl.client.SystemDefaultHttpClient -> cz.msebera.android.httpclient.impl.client.SystemDefaultHttpClient:
    cz.msebera.android.httpclient.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    cz.msebera.android.httpclient.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
cz.msebera.android.httpclient.impl.client.TargetAuthenticationStrategy -> cz.msebera.android.httpclient.impl.client.TargetAuthenticationStrategy:
    cz.msebera.android.httpclient.impl.client.TargetAuthenticationStrategy INSTANCE -> INSTANCE
    java.util.Collection getPreferredAuthSchemes(cz.msebera.android.httpclient.client.config.RequestConfig) -> getPreferredAuthSchemes
    void authFailed(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authFailed
    void authSucceeded(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.auth.AuthScheme,cz.msebera.android.httpclient.protocol.HttpContext) -> authSucceeded
    java.util.Queue select(java.util.Map,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> select
    java.util.Map getChallenges(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> getChallenges
    boolean isAuthenticationRequested(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> isAuthenticationRequested
cz.msebera.android.httpclient.impl.client.TunnelRefusedException -> cz.msebera.android.httpclient.impl.client.TunnelRefusedException:
    long serialVersionUID -> serialVersionUID
    cz.msebera.android.httpclient.HttpResponse response -> response
    cz.msebera.android.httpclient.HttpResponse getResponse() -> getResponse
cz.msebera.android.httpclient.impl.client.cache.AsynchronousValidationRequest -> cz.msebera.android.httpclient.impl.client.cache.AsynchronousValidationRequest:
    cz.msebera.android.httpclient.impl.client.cache.AsynchronousValidator parent -> parent
    cz.msebera.android.httpclient.impl.client.cache.CachingExec cachingExec -> cachingExec
    cz.msebera.android.httpclient.conn.routing.HttpRoute route -> route
    cz.msebera.android.httpclient.client.methods.HttpRequestWrapper request -> request
    cz.msebera.android.httpclient.client.protocol.HttpClientContext context -> context
    cz.msebera.android.httpclient.client.methods.HttpExecutionAware execAware -> execAware
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry cacheEntry -> cacheEntry
    java.lang.String identifier -> identifier
    int consecutiveFailedAttempts -> consecutiveFailedAttempts
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    void run() -> run
    boolean revalidateCacheEntry() -> revalidateCacheEntry
    boolean isNotServerError(int) -> isNotServerError
    boolean isNotStale(cz.msebera.android.httpclient.HttpResponse) -> isNotStale
    java.lang.String getIdentifier() -> getIdentifier
    int getConsecutiveFailedAttempts() -> getConsecutiveFailedAttempts
cz.msebera.android.httpclient.impl.client.cache.AsynchronousValidator -> cz.msebera.android.httpclient.impl.client.cache.AsynchronousValidator:
    cz.msebera.android.httpclient.impl.client.cache.SchedulingStrategy schedulingStrategy -> schedulingStrategy
    java.util.Set queued -> queued
    cz.msebera.android.httpclient.impl.client.cache.CacheKeyGenerator cacheKeyGenerator -> cacheKeyGenerator
    cz.msebera.android.httpclient.impl.client.cache.FailureCache failureCache -> failureCache
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    void close() -> close
    void revalidateCacheEntry(cz.msebera.android.httpclient.impl.client.cache.CachingExec,cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> revalidateCacheEntry
    void markComplete(java.lang.String) -> markComplete
    void jobSuccessful(java.lang.String) -> jobSuccessful
    void jobFailed(java.lang.String) -> jobFailed
    java.util.Set getScheduledIdentifiers() -> getScheduledIdentifiers
cz.msebera.android.httpclient.impl.client.cache.BasicHttpCache -> cz.msebera.android.httpclient.impl.client.cache.BasicHttpCache:
    java.util.Set safeRequestMethods -> safeRequestMethods
    cz.msebera.android.httpclient.impl.client.cache.CacheKeyGenerator uriExtractor -> uriExtractor
    cz.msebera.android.httpclient.client.cache.ResourceFactory resourceFactory -> resourceFactory
    long maxObjectSizeBytes -> maxObjectSizeBytes
    cz.msebera.android.httpclient.impl.client.cache.CacheEntryUpdater cacheEntryUpdater -> cacheEntryUpdater
    cz.msebera.android.httpclient.impl.client.cache.CachedHttpResponseGenerator responseGenerator -> responseGenerator
    cz.msebera.android.httpclient.client.cache.HttpCacheInvalidator cacheInvalidator -> cacheInvalidator
    cz.msebera.android.httpclient.client.cache.HttpCacheStorage storage -> storage
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    void flushCacheEntriesFor(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> flushCacheEntriesFor
    void flushInvalidatedCacheEntriesFor(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse) -> flushInvalidatedCacheEntriesFor
    void storeInCache(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> storeInCache
    void storeNonVariantEntry(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> storeNonVariantEntry
    void storeVariantEntry(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> storeVariantEntry
    void reuseVariantEntryFor(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.impl.client.cache.Variant) -> reuseVariantEntryFor
    boolean isIncompleteResponse(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.client.cache.Resource) -> isIncompleteResponse
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse generateIncompleteResponseError(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.client.cache.Resource) -> generateIncompleteResponseError
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry doGetUpdatedParentEntry(java.lang.String,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.lang.String,java.lang.String) -> doGetUpdatedParentEntry
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry updateCacheEntry(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,cz.msebera.android.httpclient.HttpResponse,java.util.Date,java.util.Date) -> updateCacheEntry
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry updateVariantCacheEntry(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,cz.msebera.android.httpclient.HttpResponse,java.util.Date,java.util.Date,java.lang.String) -> updateVariantCacheEntry
    cz.msebera.android.httpclient.HttpResponse cacheAndReturnResponse(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,java.util.Date,java.util.Date) -> cacheAndReturnResponse
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse cacheAndReturnResponse(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.methods.CloseableHttpResponse,java.util.Date,java.util.Date) -> cacheAndReturnResponse
    cz.msebera.android.httpclient.impl.client.cache.SizeLimitedResponseReader getResponseReader(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.methods.CloseableHttpResponse) -> getResponseReader
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry getCacheEntry(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> getCacheEntry
    void flushInvalidatedCacheEntriesFor(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> flushInvalidatedCacheEntriesFor
    java.util.Map getVariantCacheEntriesWithEtags(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> getVariantCacheEntriesWithEtags
    void addVariantWithEtag(java.lang.String,java.lang.String,java.util.Map) -> addVariantWithEtag
    cz.msebera.android.httpclient.impl.client.cache.CacheKeyGenerator access$000(cz.msebera.android.httpclient.impl.client.cache.BasicHttpCache) -> access$000
cz.msebera.android.httpclient.impl.client.cache.BasicHttpCache$1 -> cz.msebera.android.httpclient.impl.client.cache.BasicHttpCache$1:
    cz.msebera.android.httpclient.HttpRequest val$req -> val$req
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry val$entry -> val$entry
    java.lang.String val$variantURI -> val$variantURI
    cz.msebera.android.httpclient.impl.client.cache.BasicHttpCache this$0 -> this$0
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry update(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> update
cz.msebera.android.httpclient.impl.client.cache.BasicHttpCache$2 -> cz.msebera.android.httpclient.impl.client.cache.BasicHttpCache$2:
    cz.msebera.android.httpclient.HttpRequest val$req -> val$req
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry val$entry -> val$entry
    java.lang.String val$variantKey -> val$variantKey
    java.lang.String val$variantCacheKey -> val$variantCacheKey
    cz.msebera.android.httpclient.impl.client.cache.BasicHttpCache this$0 -> this$0
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry update(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> update
cz.msebera.android.httpclient.impl.client.cache.BasicHttpCacheStorage -> cz.msebera.android.httpclient.impl.client.cache.BasicHttpCacheStorage:
    cz.msebera.android.httpclient.impl.client.cache.CacheMap entries -> entries
    void putEntry(java.lang.String,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> putEntry
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry getEntry(java.lang.String) -> getEntry
    void removeEntry(java.lang.String) -> removeEntry
    void updateEntry(java.lang.String,cz.msebera.android.httpclient.client.cache.HttpCacheUpdateCallback) -> updateEntry
cz.msebera.android.httpclient.impl.client.cache.BasicIdGenerator -> cz.msebera.android.httpclient.impl.client.cache.BasicIdGenerator:
    java.lang.String hostname -> hostname
    java.security.SecureRandom rnd -> rnd
    long count -> count
    void generate(java.lang.StringBuilder) -> generate
    java.lang.String generate() -> generate
cz.msebera.android.httpclient.impl.client.cache.CacheConfig -> cz.msebera.android.httpclient.impl.client.cache.CacheConfig:
    int DEFAULT_MAX_OBJECT_SIZE_BYTES -> DEFAULT_MAX_OBJECT_SIZE_BYTES
    int DEFAULT_MAX_CACHE_ENTRIES -> DEFAULT_MAX_CACHE_ENTRIES
    int DEFAULT_MAX_UPDATE_RETRIES -> DEFAULT_MAX_UPDATE_RETRIES
    boolean DEFAULT_303_CACHING_ENABLED -> DEFAULT_303_CACHING_ENABLED
    boolean DEFAULT_WEAK_ETAG_ON_PUTDELETE_ALLOWED -> DEFAULT_WEAK_ETAG_ON_PUTDELETE_ALLOWED
    boolean DEFAULT_HEURISTIC_CACHING_ENABLED -> DEFAULT_HEURISTIC_CACHING_ENABLED
    float DEFAULT_HEURISTIC_COEFFICIENT -> DEFAULT_HEURISTIC_COEFFICIENT
    long DEFAULT_HEURISTIC_LIFETIME -> DEFAULT_HEURISTIC_LIFETIME
    int DEFAULT_ASYNCHRONOUS_WORKERS_MAX -> DEFAULT_ASYNCHRONOUS_WORKERS_MAX
    int DEFAULT_ASYNCHRONOUS_WORKERS_CORE -> DEFAULT_ASYNCHRONOUS_WORKERS_CORE
    int DEFAULT_ASYNCHRONOUS_WORKER_IDLE_LIFETIME_SECS -> DEFAULT_ASYNCHRONOUS_WORKER_IDLE_LIFETIME_SECS
    int DEFAULT_REVALIDATION_QUEUE_SIZE -> DEFAULT_REVALIDATION_QUEUE_SIZE
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig DEFAULT -> DEFAULT
    long maxObjectSize -> maxObjectSize
    int maxCacheEntries -> maxCacheEntries
    int maxUpdateRetries -> maxUpdateRetries
    boolean allow303Caching -> allow303Caching
    boolean weakETagOnPutDeleteAllowed -> weakETagOnPutDeleteAllowed
    boolean heuristicCachingEnabled -> heuristicCachingEnabled
    float heuristicCoefficient -> heuristicCoefficient
    long heuristicDefaultLifetime -> heuristicDefaultLifetime
    boolean isSharedCache -> isSharedCache
    int asynchronousWorkersMax -> asynchronousWorkersMax
    int asynchronousWorkersCore -> asynchronousWorkersCore
    int asynchronousWorkerIdleLifetimeSecs -> asynchronousWorkerIdleLifetimeSecs
    int revalidationQueueSize -> revalidationQueueSize
    boolean neverCacheHTTP10ResponsesWithQuery -> neverCacheHTTP10ResponsesWithQuery
    int getMaxObjectSizeBytes() -> getMaxObjectSizeBytes
    void setMaxObjectSizeBytes(int) -> setMaxObjectSizeBytes
    long getMaxObjectSize() -> getMaxObjectSize
    void setMaxObjectSize(long) -> setMaxObjectSize
    boolean isNeverCacheHTTP10ResponsesWithQuery() -> isNeverCacheHTTP10ResponsesWithQuery
    int getMaxCacheEntries() -> getMaxCacheEntries
    void setMaxCacheEntries(int) -> setMaxCacheEntries
    int getMaxUpdateRetries() -> getMaxUpdateRetries
    void setMaxUpdateRetries(int) -> setMaxUpdateRetries
    boolean is303CachingEnabled() -> is303CachingEnabled
    boolean isWeakETagOnPutDeleteAllowed() -> isWeakETagOnPutDeleteAllowed
    boolean isHeuristicCachingEnabled() -> isHeuristicCachingEnabled
    void setHeuristicCachingEnabled(boolean) -> setHeuristicCachingEnabled
    float getHeuristicCoefficient() -> getHeuristicCoefficient
    void setHeuristicCoefficient(float) -> setHeuristicCoefficient
    long getHeuristicDefaultLifetime() -> getHeuristicDefaultLifetime
    void setHeuristicDefaultLifetime(long) -> setHeuristicDefaultLifetime
    boolean isSharedCache() -> isSharedCache
    void setSharedCache(boolean) -> setSharedCache
    int getAsynchronousWorkersMax() -> getAsynchronousWorkersMax
    void setAsynchronousWorkersMax(int) -> setAsynchronousWorkersMax
    int getAsynchronousWorkersCore() -> getAsynchronousWorkersCore
    void setAsynchronousWorkersCore(int) -> setAsynchronousWorkersCore
    int getAsynchronousWorkerIdleLifetimeSecs() -> getAsynchronousWorkerIdleLifetimeSecs
    void setAsynchronousWorkerIdleLifetimeSecs(int) -> setAsynchronousWorkerIdleLifetimeSecs
    int getRevalidationQueueSize() -> getRevalidationQueueSize
    void setRevalidationQueueSize(int) -> setRevalidationQueueSize
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig clone() -> clone
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder custom() -> custom
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder copy(cz.msebera.android.httpclient.impl.client.cache.CacheConfig) -> copy
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder -> cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder:
    long maxObjectSize -> maxObjectSize
    int maxCacheEntries -> maxCacheEntries
    int maxUpdateRetries -> maxUpdateRetries
    boolean allow303Caching -> allow303Caching
    boolean weakETagOnPutDeleteAllowed -> weakETagOnPutDeleteAllowed
    boolean heuristicCachingEnabled -> heuristicCachingEnabled
    float heuristicCoefficient -> heuristicCoefficient
    long heuristicDefaultLifetime -> heuristicDefaultLifetime
    boolean isSharedCache -> isSharedCache
    int asynchronousWorkersMax -> asynchronousWorkersMax
    int asynchronousWorkersCore -> asynchronousWorkersCore
    int asynchronousWorkerIdleLifetimeSecs -> asynchronousWorkerIdleLifetimeSecs
    int revalidationQueueSize -> revalidationQueueSize
    boolean neverCacheHTTP10ResponsesWithQuery -> neverCacheHTTP10ResponsesWithQuery
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder setMaxObjectSize(long) -> setMaxObjectSize
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder setMaxCacheEntries(int) -> setMaxCacheEntries
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder setMaxUpdateRetries(int) -> setMaxUpdateRetries
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder setAllow303Caching(boolean) -> setAllow303Caching
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder setWeakETagOnPutDeleteAllowed(boolean) -> setWeakETagOnPutDeleteAllowed
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder setHeuristicCachingEnabled(boolean) -> setHeuristicCachingEnabled
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder setHeuristicCoefficient(float) -> setHeuristicCoefficient
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder setHeuristicDefaultLifetime(long) -> setHeuristicDefaultLifetime
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder setSharedCache(boolean) -> setSharedCache
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder setAsynchronousWorkersMax(int) -> setAsynchronousWorkersMax
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder setAsynchronousWorkersCore(int) -> setAsynchronousWorkersCore
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder setAsynchronousWorkerIdleLifetimeSecs(int) -> setAsynchronousWorkerIdleLifetimeSecs
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder setRevalidationQueueSize(int) -> setRevalidationQueueSize
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig$Builder setNeverCacheHTTP10ResponsesWithQueryString(boolean) -> setNeverCacheHTTP10ResponsesWithQueryString
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig build() -> build
cz.msebera.android.httpclient.impl.client.cache.CacheEntity -> cz.msebera.android.httpclient.impl.client.cache.CacheEntity:
    long serialVersionUID -> serialVersionUID
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry cacheEntry -> cacheEntry
    cz.msebera.android.httpclient.Header getContentType() -> getContentType
    cz.msebera.android.httpclient.Header getContentEncoding() -> getContentEncoding
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.impl.client.cache.CacheEntryUpdater -> cz.msebera.android.httpclient.impl.client.cache.CacheEntryUpdater:
    cz.msebera.android.httpclient.client.cache.ResourceFactory resourceFactory -> resourceFactory
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry updateCacheEntry(java.lang.String,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date,java.util.Date,cz.msebera.android.httpclient.HttpResponse) -> updateCacheEntry
    cz.msebera.android.httpclient.Header[] mergeHeaders(cz.msebera.android.httpclient.client.cache.HttpCacheEntry,cz.msebera.android.httpclient.HttpResponse) -> mergeHeaders
    void removeCacheHeadersThatMatchResponse(java.util.List,cz.msebera.android.httpclient.HttpResponse) -> removeCacheHeadersThatMatchResponse
    void removeCacheEntry1xxWarnings(java.util.List,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> removeCacheEntry1xxWarnings
    boolean entryDateHeaderNewerThenResponse(cz.msebera.android.httpclient.client.cache.HttpCacheEntry,cz.msebera.android.httpclient.HttpResponse) -> entryDateHeaderNewerThenResponse
    boolean entryAndResponseHaveDateHeader(cz.msebera.android.httpclient.client.cache.HttpCacheEntry,cz.msebera.android.httpclient.HttpResponse) -> entryAndResponseHaveDateHeader
cz.msebera.android.httpclient.impl.client.cache.CacheInvalidator -> cz.msebera.android.httpclient.impl.client.cache.CacheInvalidator:
    cz.msebera.android.httpclient.client.cache.HttpCacheStorage storage -> storage
    cz.msebera.android.httpclient.impl.client.cache.CacheKeyGenerator cacheKeyGenerator -> cacheKeyGenerator
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    void flushInvalidatedCacheEntries(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> flushInvalidatedCacheEntries
    void flushEntry(java.lang.String) -> flushEntry
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry getEntry(java.lang.String) -> getEntry
    void flushUriIfSameHost(java.net.URL,java.net.URL) -> flushUriIfSameHost
    void flushRelativeUriFromSameHost(java.net.URL,java.lang.String) -> flushRelativeUriFromSameHost
    boolean flushAbsoluteUriFromSameHost(java.net.URL,java.lang.String) -> flushAbsoluteUriFromSameHost
    java.net.URL getAbsoluteURL(java.lang.String) -> getAbsoluteURL
    java.net.URL getRelativeURL(java.net.URL,java.lang.String) -> getRelativeURL
    boolean requestShouldNotBeCached(cz.msebera.android.httpclient.HttpRequest) -> requestShouldNotBeCached
    boolean notGetOrHeadRequest(java.lang.String) -> notGetOrHeadRequest
    void flushInvalidatedCacheEntries(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse) -> flushInvalidatedCacheEntries
    void flushLocationCacheEntry(java.net.URL,cz.msebera.android.httpclient.HttpResponse,java.net.URL) -> flushLocationCacheEntry
    java.net.URL getContentLocationURL(java.net.URL,cz.msebera.android.httpclient.HttpResponse) -> getContentLocationURL
    java.net.URL getLocationURL(java.net.URL,cz.msebera.android.httpclient.HttpResponse) -> getLocationURL
    boolean responseAndEntryEtagsDiffer(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> responseAndEntryEtagsDiffer
    boolean responseDateOlderThanEntryDate(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> responseDateOlderThanEntryDate
cz.msebera.android.httpclient.impl.client.cache.CacheKeyGenerator -> cz.msebera.android.httpclient.impl.client.cache.CacheKeyGenerator:
    java.net.URI BASE_URI -> BASE_URI
    java.lang.String getURI(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> getURI
    java.lang.String canonicalizeUri(java.lang.String) -> canonicalizeUri
    int canonicalizePort(int,java.lang.String) -> canonicalizePort
    boolean isRelativeRequest(cz.msebera.android.httpclient.HttpRequest) -> isRelativeRequest
    java.lang.String getFullHeaderValue(cz.msebera.android.httpclient.Header[]) -> getFullHeaderValue
    java.lang.String getVariantURI(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> getVariantURI
    java.lang.String getVariantKey(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> getVariantKey
cz.msebera.android.httpclient.impl.client.cache.CacheMap -> cz.msebera.android.httpclient.impl.client.cache.CacheMap:
    long serialVersionUID -> serialVersionUID
    int maxEntries -> maxEntries
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
cz.msebera.android.httpclient.impl.client.cache.CacheValidityPolicy -> cz.msebera.android.httpclient.impl.client.cache.CacheValidityPolicy:
    long MAX_AGE -> MAX_AGE
    long getCurrentAgeSecs(cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date) -> getCurrentAgeSecs
    long getFreshnessLifetimeSecs(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> getFreshnessLifetimeSecs
    boolean isResponseFresh(cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date) -> isResponseFresh
    boolean isResponseHeuristicallyFresh(cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date,float,long) -> isResponseHeuristicallyFresh
    long getHeuristicFreshnessLifetimeSecs(cz.msebera.android.httpclient.client.cache.HttpCacheEntry,float,long) -> getHeuristicFreshnessLifetimeSecs
    boolean isRevalidatable(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> isRevalidatable
    boolean mustRevalidate(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> mustRevalidate
    boolean proxyRevalidate(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> proxyRevalidate
    boolean mayReturnStaleWhileRevalidating(cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date) -> mayReturnStaleWhileRevalidating
    boolean mayReturnStaleIfError(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date) -> mayReturnStaleIfError
    boolean mayReturnStaleIfError(cz.msebera.android.httpclient.Header[],long) -> mayReturnStaleIfError
    java.util.Date getDateValue(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> getDateValue
    java.util.Date getLastModifiedValue(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> getLastModifiedValue
    long getContentLengthValue(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> getContentLengthValue
    boolean hasContentLengthHeader(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> hasContentLengthHeader
    boolean contentLengthHeaderMatchesActualLength(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> contentLengthHeaderMatchesActualLength
    long getApparentAgeSecs(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> getApparentAgeSecs
    long getAgeValue(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> getAgeValue
    long getCorrectedReceivedAgeSecs(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> getCorrectedReceivedAgeSecs
    long getResponseDelaySecs(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> getResponseDelaySecs
    long getCorrectedInitialAgeSecs(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> getCorrectedInitialAgeSecs
    long getResidentTimeSecs(cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date) -> getResidentTimeSecs
    long getMaxAge(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> getMaxAge
    java.util.Date getExpirationDate(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> getExpirationDate
    boolean hasCacheControlDirective(cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.lang.String) -> hasCacheControlDirective
    long getStalenessSecs(cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date) -> getStalenessSecs
cz.msebera.android.httpclient.impl.client.cache.CacheableRequestPolicy -> cz.msebera.android.httpclient.impl.client.cache.CacheableRequestPolicy:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    boolean isServableFromCache(cz.msebera.android.httpclient.HttpRequest) -> isServableFromCache
cz.msebera.android.httpclient.impl.client.cache.CachedHttpResponseGenerator -> cz.msebera.android.httpclient.impl.client.cache.CachedHttpResponseGenerator:
    cz.msebera.android.httpclient.impl.client.cache.CacheValidityPolicy validityStrategy -> validityStrategy
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse generateResponse(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> generateResponse
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse generateNotModifiedResponse(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> generateNotModifiedResponse
    void addMissingContentLengthHeader(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.HttpEntity) -> addMissingContentLengthHeader
    boolean transferEncodingIsPresent(cz.msebera.android.httpclient.HttpResponse) -> transferEncodingIsPresent
cz.msebera.android.httpclient.impl.client.cache.CachedResponseSuitabilityChecker -> cz.msebera.android.httpclient.impl.client.cache.CachedResponseSuitabilityChecker:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    boolean sharedCache -> sharedCache
    boolean useHeuristicCaching -> useHeuristicCaching
    float heuristicCoefficient -> heuristicCoefficient
    long heuristicDefaultLifetime -> heuristicDefaultLifetime
    cz.msebera.android.httpclient.impl.client.cache.CacheValidityPolicy validityStrategy -> validityStrategy
    boolean isFreshEnough(cz.msebera.android.httpclient.client.cache.HttpCacheEntry,cz.msebera.android.httpclient.HttpRequest,java.util.Date) -> isFreshEnough
    boolean originInsistsOnFreshness(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> originInsistsOnFreshness
    long getMaxStale(cz.msebera.android.httpclient.HttpRequest) -> getMaxStale
    boolean canCachedResponseBeUsed(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date) -> canCachedResponseBeUsed
    boolean isConditional(cz.msebera.android.httpclient.HttpRequest) -> isConditional
    boolean allConditionalsMatch(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date) -> allConditionalsMatch
    boolean hasUnsupportedConditionalHeaders(cz.msebera.android.httpclient.HttpRequest) -> hasUnsupportedConditionalHeaders
    boolean hasSupportedEtagValidator(cz.msebera.android.httpclient.HttpRequest) -> hasSupportedEtagValidator
    boolean hasSupportedLastModifiedValidator(cz.msebera.android.httpclient.HttpRequest) -> hasSupportedLastModifiedValidator
    boolean etagValidatorMatches(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> etagValidatorMatches
    boolean lastModifiedValidatorMatches(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date) -> lastModifiedValidatorMatches
    boolean hasValidDateField(cz.msebera.android.httpclient.HttpRequest,java.lang.String) -> hasValidDateField
cz.msebera.android.httpclient.impl.client.cache.CachingExec -> cz.msebera.android.httpclient.impl.client.cache.CachingExec:
    boolean SUPPORTS_RANGE_AND_CONTENT_RANGE_HEADERS -> SUPPORTS_RANGE_AND_CONTENT_RANGE_HEADERS
    java.util.concurrent.atomic.AtomicLong cacheHits -> cacheHits
    java.util.concurrent.atomic.AtomicLong cacheMisses -> cacheMisses
    java.util.concurrent.atomic.AtomicLong cacheUpdates -> cacheUpdates
    java.util.Map viaHeaders -> viaHeaders
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig cacheConfig -> cacheConfig
    cz.msebera.android.httpclient.impl.execchain.ClientExecChain backend -> backend
    cz.msebera.android.httpclient.impl.client.cache.HttpCache responseCache -> responseCache
    cz.msebera.android.httpclient.impl.client.cache.CacheValidityPolicy validityPolicy -> validityPolicy
    cz.msebera.android.httpclient.impl.client.cache.CachedHttpResponseGenerator responseGenerator -> responseGenerator
    cz.msebera.android.httpclient.impl.client.cache.CacheableRequestPolicy cacheableRequestPolicy -> cacheableRequestPolicy
    cz.msebera.android.httpclient.impl.client.cache.CachedResponseSuitabilityChecker suitabilityChecker -> suitabilityChecker
    cz.msebera.android.httpclient.impl.client.cache.ConditionalRequestBuilder conditionalRequestBuilder -> conditionalRequestBuilder
    cz.msebera.android.httpclient.impl.client.cache.ResponseProtocolCompliance responseCompliance -> responseCompliance
    cz.msebera.android.httpclient.impl.client.cache.RequestProtocolCompliance requestCompliance -> requestCompliance
    cz.msebera.android.httpclient.impl.client.cache.ResponseCachingPolicy responseCachingPolicy -> responseCachingPolicy
    cz.msebera.android.httpclient.impl.client.cache.AsynchronousValidator asynchRevalidator -> asynchRevalidator
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    long getCacheHits() -> getCacheHits
    long getCacheMisses() -> getCacheMisses
    long getCacheUpdates() -> getCacheUpdates
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper) -> execute
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext) -> execute
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware) -> execute
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse handleCacheHit(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> handleCacheHit
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse revalidateCacheEntry(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date) -> revalidateCacheEntry
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse handleCacheMiss(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware) -> handleCacheMiss
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry satisfyFromCache(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper) -> satisfyFromCache
    cz.msebera.android.httpclient.HttpResponse getFatallyNoncompliantResponse(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.protocol.HttpContext) -> getFatallyNoncompliantResponse
    java.util.Map getExistingCacheVariants(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper) -> getExistingCacheVariants
    void recordCacheMiss(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper) -> recordCacheMiss
    void recordCacheHit(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper) -> recordCacheHit
    void recordCacheUpdate(cz.msebera.android.httpclient.protocol.HttpContext) -> recordCacheUpdate
    void flushEntriesInvalidatedByRequest(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper) -> flushEntriesInvalidatedByRequest
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse generateCachedResponse(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date) -> generateCachedResponse
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse handleRevalidationFailure(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date) -> handleRevalidationFailure
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse generateGatewayTimeout(cz.msebera.android.httpclient.protocol.HttpContext) -> generateGatewayTimeout
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse unvalidatedCacheHit(cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> unvalidatedCacheHit
    boolean staleResponseNotAllowed(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date) -> staleResponseNotAllowed
    boolean mayCallBackend(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper) -> mayCallBackend
    boolean explicitFreshnessRequest(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.util.Date) -> explicitFreshnessRequest
    java.lang.String generateViaHeader(cz.msebera.android.httpclient.HttpMessage) -> generateViaHeader
    void setResponseStatus(cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.client.cache.CacheResponseStatus) -> setResponseStatus
    boolean supportsRangeAndContentRangeHeaders() -> supportsRangeAndContentRangeHeaders
    java.util.Date getCurrentDate() -> getCurrentDate
    boolean clientRequestsOurOptions(cz.msebera.android.httpclient.HttpRequest) -> clientRequestsOurOptions
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse callBackend(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware) -> callBackend
    boolean revalidationResponseIsTooOld(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> revalidationResponseIsTooOld
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse negotiateResponseFromVariants(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware,java.util.Map) -> negotiateResponseFromVariants
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse retryRequestUnconditionally(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> retryRequestUnconditionally
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry getUpdatedVariantEntry(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,java.util.Date,java.util.Date,cz.msebera.android.httpclient.client.methods.CloseableHttpResponse,cz.msebera.android.httpclient.impl.client.cache.Variant,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> getUpdatedVariantEntry
    void tryToUpdateVariantMap(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.impl.client.cache.Variant) -> tryToUpdateVariantMap
    boolean shouldSendNotModifiedResponse(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> shouldSendNotModifiedResponse
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse revalidateCacheEntry(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> revalidateCacheEntry
    boolean staleIfErrorAppliesTo(int) -> staleIfErrorAppliesTo
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse handleBackendResponse(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware,java.util.Date,java.util.Date,cz.msebera.android.httpclient.client.methods.CloseableHttpResponse) -> handleBackendResponse
    void storeRequestIfModifiedSinceFor304Response(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse) -> storeRequestIfModifiedSinceFor304Response
    boolean alreadyHaveNewerCacheEntry(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.HttpResponse) -> alreadyHaveNewerCacheEntry
cz.msebera.android.httpclient.impl.client.cache.CachingHttpClientBuilder -> cz.msebera.android.httpclient.impl.client.cache.CachingHttpClientBuilder:
    cz.msebera.android.httpclient.client.cache.ResourceFactory resourceFactory -> resourceFactory
    cz.msebera.android.httpclient.client.cache.HttpCacheStorage storage -> storage
    java.io.File cacheDir -> cacheDir
    cz.msebera.android.httpclient.impl.client.cache.CacheConfig cacheConfig -> cacheConfig
    cz.msebera.android.httpclient.impl.client.cache.SchedulingStrategy schedulingStrategy -> schedulingStrategy
    cz.msebera.android.httpclient.client.cache.HttpCacheInvalidator httpCacheInvalidator -> httpCacheInvalidator
    cz.msebera.android.httpclient.impl.client.cache.CachingHttpClientBuilder create() -> create
    cz.msebera.android.httpclient.impl.client.cache.CachingHttpClientBuilder setResourceFactory(cz.msebera.android.httpclient.client.cache.ResourceFactory) -> setResourceFactory
    cz.msebera.android.httpclient.impl.client.cache.CachingHttpClientBuilder setHttpCacheStorage(cz.msebera.android.httpclient.client.cache.HttpCacheStorage) -> setHttpCacheStorage
    cz.msebera.android.httpclient.impl.client.cache.CachingHttpClientBuilder setCacheDir(java.io.File) -> setCacheDir
    cz.msebera.android.httpclient.impl.client.cache.CachingHttpClientBuilder setCacheConfig(cz.msebera.android.httpclient.impl.client.cache.CacheConfig) -> setCacheConfig
    cz.msebera.android.httpclient.impl.client.cache.CachingHttpClientBuilder setSchedulingStrategy(cz.msebera.android.httpclient.impl.client.cache.SchedulingStrategy) -> setSchedulingStrategy
    cz.msebera.android.httpclient.impl.client.cache.CachingHttpClientBuilder setHttpCacheInvalidator(cz.msebera.android.httpclient.client.cache.HttpCacheInvalidator) -> setHttpCacheInvalidator
    cz.msebera.android.httpclient.impl.execchain.ClientExecChain decorateMainExec(cz.msebera.android.httpclient.impl.execchain.ClientExecChain) -> decorateMainExec
    cz.msebera.android.httpclient.impl.client.cache.AsynchronousValidator createAsynchronousRevalidator(cz.msebera.android.httpclient.impl.client.cache.CacheConfig) -> createAsynchronousRevalidator
    cz.msebera.android.httpclient.impl.client.cache.SchedulingStrategy createSchedulingStrategy(cz.msebera.android.httpclient.impl.client.cache.CacheConfig) -> createSchedulingStrategy
cz.msebera.android.httpclient.impl.client.cache.CachingHttpClients -> cz.msebera.android.httpclient.impl.client.cache.CachingHttpClients:
    cz.msebera.android.httpclient.impl.client.cache.CachingHttpClientBuilder custom() -> custom
    cz.msebera.android.httpclient.impl.client.CloseableHttpClient createMemoryBound() -> createMemoryBound
    cz.msebera.android.httpclient.impl.client.CloseableHttpClient createFileBound(java.io.File) -> createFileBound
cz.msebera.android.httpclient.impl.client.cache.CombinedEntity -> cz.msebera.android.httpclient.impl.client.cache.CombinedEntity:
    cz.msebera.android.httpclient.client.cache.Resource resource -> resource
    java.io.InputStream combinedStream -> combinedStream
    long getContentLength() -> getContentLength
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    void dispose() -> dispose
    void access$000(cz.msebera.android.httpclient.impl.client.cache.CombinedEntity) -> access$000
cz.msebera.android.httpclient.impl.client.cache.CombinedEntity$ResourceStream -> cz.msebera.android.httpclient.impl.client.cache.CombinedEntity$ResourceStream:
    cz.msebera.android.httpclient.impl.client.cache.CombinedEntity this$0 -> this$0
    void close() -> close
cz.msebera.android.httpclient.impl.client.cache.ConditionalRequestBuilder -> cz.msebera.android.httpclient.impl.client.cache.ConditionalRequestBuilder:
    cz.msebera.android.httpclient.client.methods.HttpRequestWrapper buildConditionalRequest(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> buildConditionalRequest
    cz.msebera.android.httpclient.client.methods.HttpRequestWrapper buildConditionalRequestFromVariants(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,java.util.Map) -> buildConditionalRequestFromVariants
    cz.msebera.android.httpclient.client.methods.HttpRequestWrapper buildUnconditionalRequest(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> buildUnconditionalRequest
cz.msebera.android.httpclient.impl.client.cache.DefaultFailureCache -> cz.msebera.android.httpclient.impl.client.cache.DefaultFailureCache:
    int DEFAULT_MAX_SIZE -> DEFAULT_MAX_SIZE
    int MAX_UPDATE_TRIES -> MAX_UPDATE_TRIES
    int maxSize -> maxSize
    java.util.concurrent.ConcurrentMap storage -> storage
    int getErrorCount(java.lang.String) -> getErrorCount
    void resetErrorCount(java.lang.String) -> resetErrorCount
    void increaseErrorCount(java.lang.String) -> increaseErrorCount
    void updateValue(java.lang.String) -> updateValue
    void removeOldestEntryIfMapSizeExceeded() -> removeOldestEntryIfMapSizeExceeded
    cz.msebera.android.httpclient.impl.client.cache.FailureCacheValue findValueWithOldestTimestamp() -> findValueWithOldestTimestamp
cz.msebera.android.httpclient.impl.client.cache.DefaultHttpCacheEntrySerializer -> cz.msebera.android.httpclient.impl.client.cache.DefaultHttpCacheEntrySerializer:
    void writeTo(cz.msebera.android.httpclient.client.cache.HttpCacheEntry,java.io.OutputStream) -> writeTo
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry readFrom(java.io.InputStream) -> readFrom
cz.msebera.android.httpclient.impl.client.cache.ExponentialBackOffSchedulingStrategy -> cz.msebera.android.httpclient.impl.client.cache.ExponentialBackOffSchedulingStrategy:
    long DEFAULT_BACK_OFF_RATE -> DEFAULT_BACK_OFF_RATE
    long DEFAULT_INITIAL_EXPIRY_IN_MILLIS -> DEFAULT_INITIAL_EXPIRY_IN_MILLIS
    long DEFAULT_MAX_EXPIRY_IN_MILLIS -> DEFAULT_MAX_EXPIRY_IN_MILLIS
    long backOffRate -> backOffRate
    long initialExpiryInMillis -> initialExpiryInMillis
    long maxExpiryInMillis -> maxExpiryInMillis
    java.util.concurrent.ScheduledExecutorService executor -> executor
    java.util.concurrent.ScheduledThreadPoolExecutor createThreadPoolFromCacheConfig(cz.msebera.android.httpclient.impl.client.cache.CacheConfig) -> createThreadPoolFromCacheConfig
    void schedule(cz.msebera.android.httpclient.impl.client.cache.AsynchronousValidationRequest) -> schedule
    void close() -> close
    long getBackOffRate() -> getBackOffRate
    long getInitialExpiryInMillis() -> getInitialExpiryInMillis
    long getMaxExpiryInMillis() -> getMaxExpiryInMillis
    long calculateDelayInMillis(int) -> calculateDelayInMillis
    java.lang.Object checkNotNull(java.lang.String,java.lang.Object) -> checkNotNull
    long checkNotNegative(java.lang.String,long) -> checkNotNegative
cz.msebera.android.httpclient.impl.client.cache.FailureCache -> cz.msebera.android.httpclient.impl.client.cache.FailureCache:
    int getErrorCount(java.lang.String) -> getErrorCount
    void resetErrorCount(java.lang.String) -> resetErrorCount
    void increaseErrorCount(java.lang.String) -> increaseErrorCount
cz.msebera.android.httpclient.impl.client.cache.FailureCacheValue -> cz.msebera.android.httpclient.impl.client.cache.FailureCacheValue:
    long creationTimeInNanos -> creationTimeInNanos
    java.lang.String key -> key
    int errorCount -> errorCount
    long getCreationTimeInNanos() -> getCreationTimeInNanos
    java.lang.String getKey() -> getKey
    int getErrorCount() -> getErrorCount
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.client.cache.FileResource -> cz.msebera.android.httpclient.impl.client.cache.FileResource:
    long serialVersionUID -> serialVersionUID
    java.io.File file -> file
    boolean disposed -> disposed
    java.io.File getFile() -> getFile
    java.io.InputStream getInputStream() -> getInputStream
    long length() -> length
    void dispose() -> dispose
cz.msebera.android.httpclient.impl.client.cache.FileResourceFactory -> cz.msebera.android.httpclient.impl.client.cache.FileResourceFactory:
    java.io.File cacheDir -> cacheDir
    cz.msebera.android.httpclient.impl.client.cache.BasicIdGenerator idgen -> idgen
    java.io.File generateUniqueCacheFile(java.lang.String) -> generateUniqueCacheFile
    cz.msebera.android.httpclient.client.cache.Resource generate(java.lang.String,java.io.InputStream,cz.msebera.android.httpclient.client.cache.InputLimit) -> generate
    cz.msebera.android.httpclient.client.cache.Resource copy(java.lang.String,cz.msebera.android.httpclient.client.cache.Resource) -> copy
cz.msebera.android.httpclient.impl.client.cache.HeapResource -> cz.msebera.android.httpclient.impl.client.cache.HeapResource:
    long serialVersionUID -> serialVersionUID
    byte[] b -> b
    byte[] getByteArray() -> getByteArray
    java.io.InputStream getInputStream() -> getInputStream
    long length() -> length
    void dispose() -> dispose
cz.msebera.android.httpclient.impl.client.cache.HeapResourceFactory -> cz.msebera.android.httpclient.impl.client.cache.HeapResourceFactory:
    cz.msebera.android.httpclient.client.cache.Resource generate(java.lang.String,java.io.InputStream,cz.msebera.android.httpclient.client.cache.InputLimit) -> generate
    cz.msebera.android.httpclient.client.cache.Resource copy(java.lang.String,cz.msebera.android.httpclient.client.cache.Resource) -> copy
    cz.msebera.android.httpclient.client.cache.Resource createResource(byte[]) -> createResource
cz.msebera.android.httpclient.impl.client.cache.HttpCache -> cz.msebera.android.httpclient.impl.client.cache.HttpCache:
    void flushCacheEntriesFor(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> flushCacheEntriesFor
    void flushInvalidatedCacheEntriesFor(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> flushInvalidatedCacheEntriesFor
    void flushInvalidatedCacheEntriesFor(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse) -> flushInvalidatedCacheEntriesFor
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry getCacheEntry(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> getCacheEntry
    java.util.Map getVariantCacheEntriesWithEtags(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest) -> getVariantCacheEntriesWithEtags
    cz.msebera.android.httpclient.HttpResponse cacheAndReturnResponse(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,java.util.Date,java.util.Date) -> cacheAndReturnResponse
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse cacheAndReturnResponse(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.methods.CloseableHttpResponse,java.util.Date,java.util.Date) -> cacheAndReturnResponse
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry updateCacheEntry(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,cz.msebera.android.httpclient.HttpResponse,java.util.Date,java.util.Date) -> updateCacheEntry
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry updateVariantCacheEntry(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.cache.HttpCacheEntry,cz.msebera.android.httpclient.HttpResponse,java.util.Date,java.util.Date,java.lang.String) -> updateVariantCacheEntry
    void reuseVariantEntryFor(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.impl.client.cache.Variant) -> reuseVariantEntryFor
cz.msebera.android.httpclient.impl.client.cache.IOUtils -> cz.msebera.android.httpclient.impl.client.cache.IOUtils:
    void consume(cz.msebera.android.httpclient.HttpEntity) -> consume
    void copy(java.io.InputStream,java.io.OutputStream) -> copy
    void closeSilently(java.io.Closeable) -> closeSilently
    void copyAndClose(java.io.InputStream,java.io.OutputStream) -> copyAndClose
    void copyFile(java.io.File,java.io.File) -> copyFile
cz.msebera.android.httpclient.impl.client.cache.ImmediateSchedulingStrategy -> cz.msebera.android.httpclient.impl.client.cache.ImmediateSchedulingStrategy:
    java.util.concurrent.ExecutorService executor -> executor
    void schedule(cz.msebera.android.httpclient.impl.client.cache.AsynchronousValidationRequest) -> schedule
    void close() -> close
    void awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
cz.msebera.android.httpclient.impl.client.cache.InternalURIUtils -> cz.msebera.android.httpclient.impl.client.cache.InternalURIUtils:
    java.net.URI rewriteURIForRoute(java.net.URI,cz.msebera.android.httpclient.conn.routing.RouteInfo) -> rewriteURIForRoute
cz.msebera.android.httpclient.impl.client.cache.ManagedHttpCacheStorage -> cz.msebera.android.httpclient.impl.client.cache.ManagedHttpCacheStorage:
    cz.msebera.android.httpclient.impl.client.cache.CacheMap entries -> entries
    java.lang.ref.ReferenceQueue morque -> morque
    java.util.Set resources -> resources
    java.util.concurrent.atomic.AtomicBoolean active -> active
    void ensureValidState() -> ensureValidState
    void keepResourceReference(cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> keepResourceReference
    void putEntry(java.lang.String,cz.msebera.android.httpclient.client.cache.HttpCacheEntry) -> putEntry
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry getEntry(java.lang.String) -> getEntry
    void removeEntry(java.lang.String) -> removeEntry
    void updateEntry(java.lang.String,cz.msebera.android.httpclient.client.cache.HttpCacheUpdateCallback) -> updateEntry
    void cleanResources() -> cleanResources
    void shutdown() -> shutdown
    void close() -> close
cz.msebera.android.httpclient.impl.client.cache.OptionsHttp11Response -> cz.msebera.android.httpclient.impl.client.cache.OptionsHttp11Response:
    cz.msebera.android.httpclient.StatusLine statusLine -> statusLine
    cz.msebera.android.httpclient.ProtocolVersion version -> version
    cz.msebera.android.httpclient.StatusLine getStatusLine() -> getStatusLine
    void setStatusLine(cz.msebera.android.httpclient.StatusLine) -> setStatusLine
    void setStatusLine(cz.msebera.android.httpclient.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(cz.msebera.android.httpclient.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    cz.msebera.android.httpclient.HttpEntity getEntity() -> getEntity
    void setEntity(cz.msebera.android.httpclient.HttpEntity) -> setEntity
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
    cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    boolean containsHeader(java.lang.String) -> containsHeader
    cz.msebera.android.httpclient.Header[] getHeaders(java.lang.String) -> getHeaders
    cz.msebera.android.httpclient.Header getFirstHeader(java.lang.String) -> getFirstHeader
    cz.msebera.android.httpclient.Header getLastHeader(java.lang.String) -> getLastHeader
    cz.msebera.android.httpclient.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(cz.msebera.android.httpclient.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(cz.msebera.android.httpclient.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(cz.msebera.android.httpclient.Header[]) -> setHeaders
    void removeHeader(cz.msebera.android.httpclient.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    cz.msebera.android.httpclient.HeaderIterator headerIterator() -> headerIterator
    cz.msebera.android.httpclient.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
    void setParams(cz.msebera.android.httpclient.params.HttpParams) -> setParams
cz.msebera.android.httpclient.impl.client.cache.Proxies -> cz.msebera.android.httpclient.impl.client.cache.Proxies:
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse enhanceResponse(cz.msebera.android.httpclient.HttpResponse) -> enhanceResponse
cz.msebera.android.httpclient.impl.client.cache.RequestProtocolCompliance -> cz.msebera.android.httpclient.impl.client.cache.RequestProtocolCompliance:
    boolean weakETagOnPutDeleteAllowed -> weakETagOnPutDeleteAllowed
    java.util.List disallowedWithNoCache -> disallowedWithNoCache
    java.util.List requestIsFatallyNonCompliant(cz.msebera.android.httpclient.HttpRequest) -> requestIsFatallyNonCompliant
    void makeRequestCompliant(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper) -> makeRequestCompliant
    void stripOtherFreshnessDirectivesWithNoCache(cz.msebera.android.httpclient.HttpRequest) -> stripOtherFreshnessDirectivesWithNoCache
    java.lang.String buildHeaderFromElements(java.util.List) -> buildHeaderFromElements
    boolean requestMustNotHaveEntity(cz.msebera.android.httpclient.HttpRequest) -> requestMustNotHaveEntity
    void decrementOPTIONSMaxForwardsIfGreaterThen0(cz.msebera.android.httpclient.HttpRequest) -> decrementOPTIONSMaxForwardsIfGreaterThen0
    void verifyOPTIONSRequestWithBodyHasContentType(cz.msebera.android.httpclient.HttpRequest) -> verifyOPTIONSRequestWithBodyHasContentType
    void addContentTypeHeaderIfMissing(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> addContentTypeHeaderIfMissing
    void verifyRequestWithExpectContinueFlagHas100continueHeader(cz.msebera.android.httpclient.HttpRequest) -> verifyRequestWithExpectContinueFlagHas100continueHeader
    void remove100ContinueHeaderIfExists(cz.msebera.android.httpclient.HttpRequest) -> remove100ContinueHeaderIfExists
    void add100ContinueHeaderIfMissing(cz.msebera.android.httpclient.HttpRequest) -> add100ContinueHeaderIfMissing
    boolean requestMinorVersionIsTooHighMajorVersionsMatch(cz.msebera.android.httpclient.HttpRequest) -> requestMinorVersionIsTooHighMajorVersionsMatch
    boolean requestVersionIsTooLow(cz.msebera.android.httpclient.HttpRequest) -> requestVersionIsTooLow
    cz.msebera.android.httpclient.HttpResponse getErrorForRequest(cz.msebera.android.httpclient.impl.client.cache.RequestProtocolError) -> getErrorForRequest
    cz.msebera.android.httpclient.impl.client.cache.RequestProtocolError requestHasWeakETagAndRange(cz.msebera.android.httpclient.HttpRequest) -> requestHasWeakETagAndRange
    cz.msebera.android.httpclient.impl.client.cache.RequestProtocolError requestHasWeekETagForPUTOrDELETEIfMatch(cz.msebera.android.httpclient.HttpRequest) -> requestHasWeekETagForPUTOrDELETEIfMatch
    cz.msebera.android.httpclient.impl.client.cache.RequestProtocolError requestContainsNoCacheDirectiveWithFieldName(cz.msebera.android.httpclient.HttpRequest) -> requestContainsNoCacheDirectiveWithFieldName
cz.msebera.android.httpclient.impl.client.cache.RequestProtocolCompliance$1 -> cz.msebera.android.httpclient.impl.client.cache.RequestProtocolCompliance$1:
    int[] $SwitchMap$cz$msebera$android$httpclient$impl$client$cache$RequestProtocolError -> $SwitchMap$cz$msebera$android$httpclient$impl$client$cache$RequestProtocolError
cz.msebera.android.httpclient.impl.client.cache.RequestProtocolError -> cz.msebera.android.httpclient.impl.client.cache.RequestProtocolError:
    cz.msebera.android.httpclient.impl.client.cache.RequestProtocolError UNKNOWN -> UNKNOWN
    cz.msebera.android.httpclient.impl.client.cache.RequestProtocolError BODY_BUT_NO_LENGTH_ERROR -> BODY_BUT_NO_LENGTH_ERROR
    cz.msebera.android.httpclient.impl.client.cache.RequestProtocolError WEAK_ETAG_ON_PUTDELETE_METHOD_ERROR -> WEAK_ETAG_ON_PUTDELETE_METHOD_ERROR
    cz.msebera.android.httpclient.impl.client.cache.RequestProtocolError WEAK_ETAG_AND_RANGE_ERROR -> WEAK_ETAG_AND_RANGE_ERROR
    cz.msebera.android.httpclient.impl.client.cache.RequestProtocolError NO_CACHE_DIRECTIVE_WITH_FIELD_NAME -> NO_CACHE_DIRECTIVE_WITH_FIELD_NAME
    cz.msebera.android.httpclient.impl.client.cache.RequestProtocolError[] $VALUES -> $VALUES
    cz.msebera.android.httpclient.impl.client.cache.RequestProtocolError[] values() -> values
    cz.msebera.android.httpclient.impl.client.cache.RequestProtocolError valueOf(java.lang.String) -> valueOf
cz.msebera.android.httpclient.impl.client.cache.ResourceReference -> cz.msebera.android.httpclient.impl.client.cache.ResourceReference:
    cz.msebera.android.httpclient.client.cache.Resource resource -> resource
    cz.msebera.android.httpclient.client.cache.Resource getResource() -> getResource
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
cz.msebera.android.httpclient.impl.client.cache.ResponseCachingPolicy -> cz.msebera.android.httpclient.impl.client.cache.ResponseCachingPolicy:
    java.lang.String[] AUTH_CACHEABLE_PARAMS -> AUTH_CACHEABLE_PARAMS
    long maxObjectSizeBytes -> maxObjectSizeBytes
    boolean sharedCache -> sharedCache
    boolean neverCache1_0ResponsesWithQueryString -> neverCache1_0ResponsesWithQueryString
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    java.util.Set cacheableStatuses -> cacheableStatuses
    java.util.Set uncacheableStatuses -> uncacheableStatuses
    boolean isResponseCacheable(java.lang.String,cz.msebera.android.httpclient.HttpResponse) -> isResponseCacheable
    boolean unknownStatusCode(int) -> unknownStatusCode
    boolean isExplicitlyNonCacheable(cz.msebera.android.httpclient.HttpResponse) -> isExplicitlyNonCacheable
    boolean hasCacheControlParameterFrom(cz.msebera.android.httpclient.HttpMessage,java.lang.String[]) -> hasCacheControlParameterFrom
    boolean isExplicitlyCacheable(cz.msebera.android.httpclient.HttpResponse) -> isExplicitlyCacheable
    boolean isResponseCacheable(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse) -> isResponseCacheable
    boolean expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl(cz.msebera.android.httpclient.HttpResponse) -> expiresHeaderLessOrEqualToDateHeaderAndNoCacheControl
    boolean from1_0Origin(cz.msebera.android.httpclient.HttpResponse) -> from1_0Origin
    boolean requestProtocolGreaterThanAccepted(cz.msebera.android.httpclient.HttpRequest) -> requestProtocolGreaterThanAccepted
cz.msebera.android.httpclient.impl.client.cache.ResponseProtocolCompliance -> cz.msebera.android.httpclient.impl.client.cache.ResponseProtocolCompliance:
    java.lang.String UNEXPECTED_100_CONTINUE -> UNEXPECTED_100_CONTINUE
    java.lang.String UNEXPECTED_PARTIAL_CONTENT -> UNEXPECTED_PARTIAL_CONTENT
    void ensureProtocolCompliance(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.HttpResponse) -> ensureProtocolCompliance
    void consumeBody(cz.msebera.android.httpclient.HttpResponse) -> consumeBody
    void warningsWithNonMatchingWarnDatesAreRemoved(cz.msebera.android.httpclient.HttpResponse) -> warningsWithNonMatchingWarnDatesAreRemoved
    void identityIsNotUsedInContentEncoding(cz.msebera.android.httpclient.HttpResponse) -> identityIsNotUsedInContentEncoding
    void ensure206ContainsDateHeader(cz.msebera.android.httpclient.HttpResponse) -> ensure206ContainsDateHeader
    void ensurePartialContentIsNotSentToAClientThatDidNotRequestIt(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse) -> ensurePartialContentIsNotSentToAClientThatDidNotRequestIt
    void ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse) -> ensure200ForOPTIONSRequestWithNoBodyHasContentLengthZero
    void ensure304DoesNotContainExtraEntityHeaders(cz.msebera.android.httpclient.HttpResponse) -> ensure304DoesNotContainExtraEntityHeaders
    boolean backendResponseMustNotHaveBody(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse) -> backendResponseMustNotHaveBody
    void requestDidNotExpect100ContinueButResponseIsOne(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.HttpResponse) -> requestDidNotExpect100ContinueButResponseIsOne
    void transferEncodingIsNotReturnedTo1_0Client(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.HttpResponse) -> transferEncodingIsNotReturnedTo1_0Client
    void removeResponseTransferEncoding(cz.msebera.android.httpclient.HttpResponse) -> removeResponseTransferEncoding
cz.msebera.android.httpclient.impl.client.cache.ResponseProxyHandler -> cz.msebera.android.httpclient.impl.client.cache.ResponseProxyHandler:
    java.lang.reflect.Method CLOSE_METHOD -> CLOSE_METHOD
    cz.msebera.android.httpclient.HttpResponse original -> original
    void close() -> close
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
cz.msebera.android.httpclient.impl.client.cache.SchedulingStrategy -> cz.msebera.android.httpclient.impl.client.cache.SchedulingStrategy:
    void schedule(cz.msebera.android.httpclient.impl.client.cache.AsynchronousValidationRequest) -> schedule
cz.msebera.android.httpclient.impl.client.cache.SizeLimitedResponseReader -> cz.msebera.android.httpclient.impl.client.cache.SizeLimitedResponseReader:
    cz.msebera.android.httpclient.client.cache.ResourceFactory resourceFactory -> resourceFactory
    long maxResponseSizeBytes -> maxResponseSizeBytes
    cz.msebera.android.httpclient.HttpRequest request -> request
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse response -> response
    java.io.InputStream instream -> instream
    cz.msebera.android.httpclient.client.cache.InputLimit limit -> limit
    cz.msebera.android.httpclient.client.cache.Resource resource -> resource
    boolean consumed -> consumed
    void readResponse() -> readResponse
    void ensureNotConsumed() -> ensureNotConsumed
    void ensureConsumed() -> ensureConsumed
    void doConsume() -> doConsume
    boolean isLimitReached() -> isLimitReached
    cz.msebera.android.httpclient.client.cache.Resource getResource() -> getResource
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse getReconstructedResponse() -> getReconstructedResponse
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse access$000(cz.msebera.android.httpclient.impl.client.cache.SizeLimitedResponseReader) -> access$000
cz.msebera.android.httpclient.impl.client.cache.SizeLimitedResponseReader$1 -> cz.msebera.android.httpclient.impl.client.cache.SizeLimitedResponseReader$1:
    cz.msebera.android.httpclient.impl.client.cache.SizeLimitedResponseReader this$0 -> this$0
    void close() -> close
cz.msebera.android.httpclient.impl.client.cache.Variant -> cz.msebera.android.httpclient.impl.client.cache.Variant:
    java.lang.String variantKey -> variantKey
    java.lang.String cacheKey -> cacheKey
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry entry -> entry
    java.lang.String getVariantKey() -> getVariantKey
    java.lang.String getCacheKey() -> getCacheKey
    cz.msebera.android.httpclient.client.cache.HttpCacheEntry getEntry() -> getEntry
cz.msebera.android.httpclient.impl.client.cache.WarningValue -> cz.msebera.android.httpclient.impl.client.cache.WarningValue:
    int offs -> offs
    int init_offs -> init_offs
    java.lang.String src -> src
    int warnCode -> warnCode
    java.lang.String warnAgent -> warnAgent
    java.lang.String warnText -> warnText
    java.util.Date warnDate -> warnDate
    java.lang.String TOPLABEL -> TOPLABEL
    java.lang.String DOMAINLABEL -> DOMAINLABEL
    java.lang.String HOSTNAME -> HOSTNAME
    java.lang.String IPV4ADDRESS -> IPV4ADDRESS
    java.lang.String HOST -> HOST
    java.lang.String PORT -> PORT
    java.lang.String HOSTPORT -> HOSTPORT
    java.util.regex.Pattern HOSTPORT_PATTERN -> HOSTPORT_PATTERN
    java.lang.String MONTH -> MONTH
    java.lang.String WEEKDAY -> WEEKDAY
    java.lang.String WKDAY -> WKDAY
    java.lang.String TIME -> TIME
    java.lang.String DATE3 -> DATE3
    java.lang.String DATE2 -> DATE2
    java.lang.String DATE1 -> DATE1
    java.lang.String ASCTIME_DATE -> ASCTIME_DATE
    java.lang.String RFC850_DATE -> RFC850_DATE
    java.lang.String RFC1123_DATE -> RFC1123_DATE
    java.lang.String HTTP_DATE -> HTTP_DATE
    java.lang.String WARN_DATE -> WARN_DATE
    java.util.regex.Pattern WARN_DATE_PATTERN -> WARN_DATE_PATTERN
    cz.msebera.android.httpclient.impl.client.cache.WarningValue[] getWarningValues(cz.msebera.android.httpclient.Header) -> getWarningValues
    void consumeLinearWhitespace() -> consumeLinearWhitespace
    boolean isChar(char) -> isChar
    boolean isControl(char) -> isControl
    boolean isSeparator(char) -> isSeparator
    void consumeToken() -> consumeToken
    boolean isTokenChar(char) -> isTokenChar
    void consumeHostPort() -> consumeHostPort
    void consumeWarnAgent() -> consumeWarnAgent
    void consumeQuotedString() -> consumeQuotedString
    void consumeWarnText() -> consumeWarnText
    void consumeWarnDate() -> consumeWarnDate
    void consumeWarnValue() -> consumeWarnValue
    void consumeCharacter(char) -> consumeCharacter
    void consumeWarnCode() -> consumeWarnCode
    void parseError() -> parseError
    int getWarnCode() -> getWarnCode
    java.lang.String getWarnAgent() -> getWarnAgent
    java.lang.String getWarnText() -> getWarnText
    java.util.Date getWarnDate() -> getWarnDate
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.conn.AbstractClientConnAdapter -> cz.msebera.android.httpclient.impl.conn.AbstractClientConnAdapter:
    cz.msebera.android.httpclient.conn.ClientConnectionManager connManager -> connManager
    cz.msebera.android.httpclient.conn.OperatedClientConnection wrappedConnection -> wrappedConnection
    boolean markedReusable -> markedReusable
    boolean released -> released
    long duration -> duration
    void detach() -> detach
    cz.msebera.android.httpclient.conn.OperatedClientConnection getWrappedConnection() -> getWrappedConnection
    cz.msebera.android.httpclient.conn.ClientConnectionManager getManager() -> getManager
    void assertNotAborted() -> assertNotAborted
    boolean isReleased() -> isReleased
    void assertValid(cz.msebera.android.httpclient.conn.OperatedClientConnection) -> assertValid
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    cz.msebera.android.httpclient.HttpConnectionMetrics getMetrics() -> getMetrics
    void flush() -> flush
    boolean isResponseAvailable(int) -> isResponseAvailable
    void receiveResponseEntity(cz.msebera.android.httpclient.HttpResponse) -> receiveResponseEntity
    cz.msebera.android.httpclient.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestEntity(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> sendRequestEntity
    void sendRequestHeader(cz.msebera.android.httpclient.HttpRequest) -> sendRequestHeader
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    boolean isSecure() -> isSecure
    void bind(java.net.Socket) -> bind
    java.net.Socket getSocket() -> getSocket
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
cz.msebera.android.httpclient.impl.conn.AbstractPoolEntry -> cz.msebera.android.httpclient.impl.conn.AbstractPoolEntry:
    cz.msebera.android.httpclient.conn.ClientConnectionOperator connOperator -> connOperator
    cz.msebera.android.httpclient.conn.OperatedClientConnection connection -> connection
    cz.msebera.android.httpclient.conn.routing.HttpRoute route -> route
    java.lang.Object state -> state
    cz.msebera.android.httpclient.conn.routing.RouteTracker tracker -> tracker
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
    void open(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> open
    void tunnelTarget(boolean,cz.msebera.android.httpclient.params.HttpParams) -> tunnelTarget
    void tunnelProxy(cz.msebera.android.httpclient.HttpHost,boolean,cz.msebera.android.httpclient.params.HttpParams) -> tunnelProxy
    void layerProtocol(cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> layerProtocol
    void shutdownEntry() -> shutdownEntry
cz.msebera.android.httpclient.impl.conn.AbstractPooledConnAdapter -> cz.msebera.android.httpclient.impl.conn.AbstractPooledConnAdapter:
    cz.msebera.android.httpclient.impl.conn.AbstractPoolEntry poolEntry -> poolEntry
    java.lang.String getId() -> getId
    cz.msebera.android.httpclient.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    void assertValid(cz.msebera.android.httpclient.impl.conn.AbstractPoolEntry) -> assertValid
    void assertAttached() -> assertAttached
    void detach() -> detach
    cz.msebera.android.httpclient.conn.routing.HttpRoute getRoute() -> getRoute
    void open(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> open
    void tunnelTarget(boolean,cz.msebera.android.httpclient.params.HttpParams) -> tunnelTarget
    void tunnelProxy(cz.msebera.android.httpclient.HttpHost,boolean,cz.msebera.android.httpclient.params.HttpParams) -> tunnelProxy
    void layerProtocol(cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> layerProtocol
    void close() -> close
    void shutdown() -> shutdown
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
cz.msebera.android.httpclient.impl.conn.BasicClientConnectionManager -> cz.msebera.android.httpclient.impl.conn.BasicClientConnectionManager:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    cz.msebera.android.httpclient.conn.ClientConnectionOperator connOperator -> connOperator
    cz.msebera.android.httpclient.impl.conn.HttpPoolEntry poolEntry -> poolEntry
    cz.msebera.android.httpclient.impl.conn.ManagedClientConnectionImpl conn -> conn
    boolean shutdown -> shutdown
    void finalize() -> finalize
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    cz.msebera.android.httpclient.conn.ClientConnectionOperator createConnectionOperator(cz.msebera.android.httpclient.conn.scheme.SchemeRegistry) -> createConnectionOperator
    cz.msebera.android.httpclient.conn.ClientConnectionRequest requestConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void assertNotShutdown() -> assertNotShutdown
    cz.msebera.android.httpclient.conn.ManagedClientConnection getConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    void shutdownConnection(cz.msebera.android.httpclient.HttpClientConnection) -> shutdownConnection
    void releaseConnection(cz.msebera.android.httpclient.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeExpiredConnections() -> closeExpiredConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void shutdown() -> shutdown
cz.msebera.android.httpclient.impl.conn.BasicClientConnectionManager$1 -> cz.msebera.android.httpclient.impl.conn.BasicClientConnectionManager$1:
    cz.msebera.android.httpclient.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    cz.msebera.android.httpclient.impl.conn.BasicClientConnectionManager this$0 -> this$0
    void abortRequest() -> abortRequest
    cz.msebera.android.httpclient.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
cz.msebera.android.httpclient.impl.conn.BasicHttpClientConnectionManager -> cz.msebera.android.httpclient.impl.conn.BasicHttpClientConnectionManager:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.impl.conn.HttpClientConnectionOperator connectionOperator -> connectionOperator
    cz.msebera.android.httpclient.conn.HttpConnectionFactory connFactory -> connFactory
    cz.msebera.android.httpclient.conn.ManagedHttpClientConnection conn -> conn
    cz.msebera.android.httpclient.conn.routing.HttpRoute route -> route
    java.lang.Object state -> state
    long updated -> updated
    long expiry -> expiry
    boolean leased -> leased
    cz.msebera.android.httpclient.config.SocketConfig socketConfig -> socketConfig
    cz.msebera.android.httpclient.config.ConnectionConfig connConfig -> connConfig
    java.util.concurrent.atomic.AtomicBoolean isShutdown -> isShutdown
    cz.msebera.android.httpclient.config.Registry getDefaultRegistry() -> getDefaultRegistry
    void finalize() -> finalize
    void close() -> close
    cz.msebera.android.httpclient.conn.routing.HttpRoute getRoute() -> getRoute
    java.lang.Object getState() -> getState
    cz.msebera.android.httpclient.config.SocketConfig getSocketConfig() -> getSocketConfig
    void setSocketConfig(cz.msebera.android.httpclient.config.SocketConfig) -> setSocketConfig
    cz.msebera.android.httpclient.config.ConnectionConfig getConnectionConfig() -> getConnectionConfig
    void setConnectionConfig(cz.msebera.android.httpclient.config.ConnectionConfig) -> setConnectionConfig
    cz.msebera.android.httpclient.conn.ConnectionRequest requestConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void closeConnection() -> closeConnection
    void shutdownConnection() -> shutdownConnection
    void checkExpiry() -> checkExpiry
    cz.msebera.android.httpclient.HttpClientConnection getConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    void releaseConnection(cz.msebera.android.httpclient.HttpClientConnection,java.lang.Object,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void connect(cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.conn.routing.HttpRoute,int,cz.msebera.android.httpclient.protocol.HttpContext) -> connect
    void upgrade(cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext) -> upgrade
    void routeComplete(cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext) -> routeComplete
    void closeExpiredConnections() -> closeExpiredConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void shutdown() -> shutdown
cz.msebera.android.httpclient.impl.conn.BasicHttpClientConnectionManager$1 -> cz.msebera.android.httpclient.impl.conn.BasicHttpClientConnectionManager$1:
    cz.msebera.android.httpclient.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    cz.msebera.android.httpclient.impl.conn.BasicHttpClientConnectionManager this$0 -> this$0
    boolean cancel() -> cancel
    cz.msebera.android.httpclient.HttpClientConnection get(long,java.util.concurrent.TimeUnit) -> get
cz.msebera.android.httpclient.impl.conn.CPool -> cz.msebera.android.httpclient.impl.conn.CPool:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    long timeToLive -> timeToLive
    java.util.concurrent.TimeUnit tunit -> tunit
    cz.msebera.android.httpclient.impl.conn.CPoolEntry createEntry(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.conn.ManagedHttpClientConnection) -> createEntry
    cz.msebera.android.httpclient.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
cz.msebera.android.httpclient.impl.conn.CPoolEntry -> cz.msebera.android.httpclient.impl.conn.CPoolEntry:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    boolean routeComplete -> routeComplete
    void markRouteComplete() -> markRouteComplete
    boolean isRouteComplete() -> isRouteComplete
    void closeConnection() -> closeConnection
    void shutdownConnection() -> shutdownConnection
    boolean isExpired(long) -> isExpired
    boolean isClosed() -> isClosed
    void close() -> close
cz.msebera.android.httpclient.impl.conn.CPoolProxy -> cz.msebera.android.httpclient.impl.conn.CPoolProxy:
    cz.msebera.android.httpclient.impl.conn.CPoolEntry poolEntry -> poolEntry
    cz.msebera.android.httpclient.impl.conn.CPoolEntry getPoolEntry() -> getPoolEntry
    cz.msebera.android.httpclient.impl.conn.CPoolEntry detach() -> detach
    cz.msebera.android.httpclient.conn.ManagedHttpClientConnection getConnection() -> getConnection
    cz.msebera.android.httpclient.conn.ManagedHttpClientConnection getValidConnection() -> getValidConnection
    void close() -> close
    void shutdown() -> shutdown
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    java.lang.String getId() -> getId
    void bind(java.net.Socket) -> bind
    java.net.Socket getSocket() -> getSocket
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(cz.msebera.android.httpclient.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> sendRequestEntity
    cz.msebera.android.httpclient.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(cz.msebera.android.httpclient.HttpResponse) -> receiveResponseEntity
    void flush() -> flush
    cz.msebera.android.httpclient.HttpConnectionMetrics getMetrics() -> getMetrics
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    java.lang.String toString() -> toString
    cz.msebera.android.httpclient.HttpClientConnection newProxy(cz.msebera.android.httpclient.impl.conn.CPoolEntry) -> newProxy
    cz.msebera.android.httpclient.impl.conn.CPoolProxy getProxy(cz.msebera.android.httpclient.HttpClientConnection) -> getProxy
    cz.msebera.android.httpclient.impl.conn.CPoolEntry getPoolEntry(cz.msebera.android.httpclient.HttpClientConnection) -> getPoolEntry
    cz.msebera.android.httpclient.impl.conn.CPoolEntry detach(cz.msebera.android.httpclient.HttpClientConnection) -> detach
cz.msebera.android.httpclient.impl.conn.ConnectionShutdownException -> cz.msebera.android.httpclient.impl.conn.ConnectionShutdownException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.impl.conn.DefaultClientConnection -> cz.msebera.android.httpclient.impl.conn.DefaultClientConnection:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog headerLog -> headerLog
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog wireLog -> wireLog
    java.net.Socket socket -> socket
    cz.msebera.android.httpclient.HttpHost targetHost -> targetHost
    boolean connSecure -> connSecure
    boolean shutdown -> shutdown
    java.util.Map attributes -> attributes
    java.lang.String getId() -> getId
    cz.msebera.android.httpclient.HttpHost getTargetHost() -> getTargetHost
    boolean isSecure() -> isSecure
    java.net.Socket getSocket() -> getSocket
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void opening(java.net.Socket,cz.msebera.android.httpclient.HttpHost) -> opening
    void openCompleted(boolean,cz.msebera.android.httpclient.params.HttpParams) -> openCompleted
    void shutdown() -> shutdown
    void close() -> close
    cz.msebera.android.httpclient.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,cz.msebera.android.httpclient.params.HttpParams) -> createSessionInputBuffer
    cz.msebera.android.httpclient.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,cz.msebera.android.httpclient.params.HttpParams) -> createSessionOutputBuffer
    cz.msebera.android.httpclient.io.HttpMessageParser createResponseParser(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.HttpResponseFactory,cz.msebera.android.httpclient.params.HttpParams) -> createResponseParser
    void bind(java.net.Socket) -> bind
    void update(java.net.Socket,cz.msebera.android.httpclient.HttpHost,boolean,cz.msebera.android.httpclient.params.HttpParams) -> update
    cz.msebera.android.httpclient.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestHeader(cz.msebera.android.httpclient.HttpRequest) -> sendRequestHeader
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
cz.msebera.android.httpclient.impl.conn.DefaultClientConnectionOperator -> cz.msebera.android.httpclient.impl.conn.DefaultClientConnectionOperator:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    cz.msebera.android.httpclient.conn.DnsResolver dnsResolver -> dnsResolver
    cz.msebera.android.httpclient.conn.OperatedClientConnection createConnection() -> createConnection
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry getSchemeRegistry(cz.msebera.android.httpclient.protocol.HttpContext) -> getSchemeRegistry
    void openConnection(cz.msebera.android.httpclient.conn.OperatedClientConnection,cz.msebera.android.httpclient.HttpHost,java.net.InetAddress,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> openConnection
    void updateSecureConnection(cz.msebera.android.httpclient.conn.OperatedClientConnection,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> updateSecureConnection
    void prepareSocket(java.net.Socket,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> prepareSocket
    java.net.InetAddress[] resolveHostname(java.lang.String) -> resolveHostname
cz.msebera.android.httpclient.impl.conn.DefaultHttpResponseParser -> cz.msebera.android.httpclient.impl.conn.DefaultHttpResponseParser:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.HttpResponseFactory responseFactory -> responseFactory
    cz.msebera.android.httpclient.util.CharArrayBuffer lineBuf -> lineBuf
    cz.msebera.android.httpclient.HttpResponse parseHead(cz.msebera.android.httpclient.io.SessionInputBuffer) -> parseHead
    boolean reject(cz.msebera.android.httpclient.util.CharArrayBuffer,int) -> reject
    cz.msebera.android.httpclient.HttpMessage parseHead(cz.msebera.android.httpclient.io.SessionInputBuffer) -> parseHead
cz.msebera.android.httpclient.impl.conn.DefaultHttpResponseParserFactory -> cz.msebera.android.httpclient.impl.conn.DefaultHttpResponseParserFactory:
    cz.msebera.android.httpclient.impl.conn.DefaultHttpResponseParserFactory INSTANCE -> INSTANCE
    cz.msebera.android.httpclient.message.LineParser lineParser -> lineParser
    cz.msebera.android.httpclient.HttpResponseFactory responseFactory -> responseFactory
    cz.msebera.android.httpclient.io.HttpMessageParser create(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.config.MessageConstraints) -> create
cz.msebera.android.httpclient.impl.conn.DefaultHttpRoutePlanner -> cz.msebera.android.httpclient.impl.conn.DefaultHttpRoutePlanner:
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    cz.msebera.android.httpclient.conn.routing.HttpRoute determineRoute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> determineRoute
cz.msebera.android.httpclient.impl.conn.DefaultManagedHttpClientConnection -> cz.msebera.android.httpclient.impl.conn.DefaultManagedHttpClientConnection:
    java.lang.String id -> id
    java.util.Map attributes -> attributes
    boolean shutdown -> shutdown
    java.lang.String getId() -> getId
    void shutdown() -> shutdown
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    void bind(java.net.Socket) -> bind
    java.net.Socket getSocket() -> getSocket
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
cz.msebera.android.httpclient.impl.conn.DefaultProxyRoutePlanner -> cz.msebera.android.httpclient.impl.conn.DefaultProxyRoutePlanner:
    cz.msebera.android.httpclient.HttpHost proxy -> proxy
    cz.msebera.android.httpclient.HttpHost determineProxy(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> determineProxy
cz.msebera.android.httpclient.impl.conn.DefaultResponseParser -> cz.msebera.android.httpclient.impl.conn.DefaultResponseParser:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.HttpResponseFactory responseFactory -> responseFactory
    cz.msebera.android.httpclient.util.CharArrayBuffer lineBuf -> lineBuf
    int maxGarbageLines -> maxGarbageLines
    int getMaxGarbageLines(cz.msebera.android.httpclient.params.HttpParams) -> getMaxGarbageLines
    cz.msebera.android.httpclient.HttpMessage parseHead(cz.msebera.android.httpclient.io.SessionInputBuffer) -> parseHead
cz.msebera.android.httpclient.impl.conn.DefaultRoutePlanner -> cz.msebera.android.httpclient.impl.conn.DefaultRoutePlanner:
    cz.msebera.android.httpclient.conn.SchemePortResolver schemePortResolver -> schemePortResolver
    cz.msebera.android.httpclient.conn.routing.HttpRoute determineRoute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> determineRoute
    cz.msebera.android.httpclient.HttpHost determineProxy(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> determineProxy
cz.msebera.android.httpclient.impl.conn.DefaultSchemePortResolver -> cz.msebera.android.httpclient.impl.conn.DefaultSchemePortResolver:
    cz.msebera.android.httpclient.impl.conn.DefaultSchemePortResolver INSTANCE -> INSTANCE
    int resolve(cz.msebera.android.httpclient.HttpHost) -> resolve
cz.msebera.android.httpclient.impl.conn.HttpClientConnectionOperator -> cz.msebera.android.httpclient.impl.conn.HttpClientConnectionOperator:
    java.lang.String SOCKET_FACTORY_REGISTRY -> SOCKET_FACTORY_REGISTRY
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.config.Lookup socketFactoryRegistry -> socketFactoryRegistry
    cz.msebera.android.httpclient.conn.SchemePortResolver schemePortResolver -> schemePortResolver
    cz.msebera.android.httpclient.conn.DnsResolver dnsResolver -> dnsResolver
    cz.msebera.android.httpclient.config.Lookup getSocketFactoryRegistry(cz.msebera.android.httpclient.protocol.HttpContext) -> getSocketFactoryRegistry
    void connect(cz.msebera.android.httpclient.conn.ManagedHttpClientConnection,cz.msebera.android.httpclient.HttpHost,java.net.InetSocketAddress,int,cz.msebera.android.httpclient.config.SocketConfig,cz.msebera.android.httpclient.protocol.HttpContext) -> connect
    void upgrade(cz.msebera.android.httpclient.conn.ManagedHttpClientConnection,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.protocol.HttpContext) -> upgrade
cz.msebera.android.httpclient.impl.conn.HttpConnPool -> cz.msebera.android.httpclient.impl.conn.HttpConnPool:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    long timeToLive -> timeToLive
    java.util.concurrent.TimeUnit tunit -> tunit
    cz.msebera.android.httpclient.impl.conn.HttpPoolEntry createEntry(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.conn.OperatedClientConnection) -> createEntry
    cz.msebera.android.httpclient.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
cz.msebera.android.httpclient.impl.conn.HttpConnPool$InternalConnFactory -> cz.msebera.android.httpclient.impl.conn.HttpConnPool$InternalConnFactory:
    cz.msebera.android.httpclient.conn.ClientConnectionOperator connOperator -> connOperator
    cz.msebera.android.httpclient.conn.OperatedClientConnection create(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> create
    java.lang.Object create(java.lang.Object) -> create
cz.msebera.android.httpclient.impl.conn.HttpPoolEntry -> cz.msebera.android.httpclient.impl.conn.HttpPoolEntry:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.conn.routing.RouteTracker tracker -> tracker
    boolean isExpired(long) -> isExpired
    cz.msebera.android.httpclient.conn.routing.RouteTracker getTracker() -> getTracker
    cz.msebera.android.httpclient.conn.routing.HttpRoute getPlannedRoute() -> getPlannedRoute
    cz.msebera.android.httpclient.conn.routing.HttpRoute getEffectiveRoute() -> getEffectiveRoute
    boolean isClosed() -> isClosed
    void close() -> close
cz.msebera.android.httpclient.impl.conn.IdleConnectionHandler -> cz.msebera.android.httpclient.impl.conn.IdleConnectionHandler:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    java.util.Map connectionToTimes -> connectionToTimes
    void add(cz.msebera.android.httpclient.HttpConnection,long,java.util.concurrent.TimeUnit) -> add
    boolean remove(cz.msebera.android.httpclient.HttpConnection) -> remove
    void removeAll() -> removeAll
    void closeIdleConnections(long) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
cz.msebera.android.httpclient.impl.conn.IdleConnectionHandler$TimeValues -> cz.msebera.android.httpclient.impl.conn.IdleConnectionHandler$TimeValues:
    long timeAdded -> timeAdded
    long timeExpires -> timeExpires
    long access$000(cz.msebera.android.httpclient.impl.conn.IdleConnectionHandler$TimeValues) -> access$000
    long access$100(cz.msebera.android.httpclient.impl.conn.IdleConnectionHandler$TimeValues) -> access$100
cz.msebera.android.httpclient.impl.conn.InMemoryDnsResolver -> cz.msebera.android.httpclient.impl.conn.InMemoryDnsResolver:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    java.util.Map dnsMap -> dnsMap
    void add(java.lang.String,java.net.InetAddress[]) -> add
    java.net.InetAddress[] resolve(java.lang.String) -> resolve
cz.msebera.android.httpclient.impl.conn.LoggingInputStream -> cz.msebera.android.httpclient.impl.conn.LoggingInputStream:
    java.io.InputStream in -> in
    cz.msebera.android.httpclient.impl.conn.Wire wire -> wire
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
    void close() -> close
cz.msebera.android.httpclient.impl.conn.LoggingManagedHttpClientConnection -> cz.msebera.android.httpclient.impl.conn.LoggingManagedHttpClientConnection:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog headerlog -> headerlog
    cz.msebera.android.httpclient.impl.conn.Wire wire -> wire
    void close() -> close
    void shutdown() -> shutdown
    java.io.InputStream getSocketInputStream(java.net.Socket) -> getSocketInputStream
    java.io.OutputStream getSocketOutputStream(java.net.Socket) -> getSocketOutputStream
    void onResponseReceived(cz.msebera.android.httpclient.HttpResponse) -> onResponseReceived
    void onRequestSubmitted(cz.msebera.android.httpclient.HttpRequest) -> onRequestSubmitted
cz.msebera.android.httpclient.impl.conn.LoggingOutputStream -> cz.msebera.android.httpclient.impl.conn.LoggingOutputStream:
    java.io.OutputStream out -> out
    cz.msebera.android.httpclient.impl.conn.Wire wire -> wire
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
cz.msebera.android.httpclient.impl.conn.LoggingSessionInputBuffer -> cz.msebera.android.httpclient.impl.conn.LoggingSessionInputBuffer:
    cz.msebera.android.httpclient.io.SessionInputBuffer in -> in
    cz.msebera.android.httpclient.io.EofSensor eofSensor -> eofSensor
    cz.msebera.android.httpclient.impl.conn.Wire wire -> wire
    java.lang.String charset -> charset
    boolean isDataAvailable(int) -> isDataAvailable
    int read(byte[],int,int) -> read
    int read() -> read
    int read(byte[]) -> read
    java.lang.String readLine() -> readLine
    int readLine(cz.msebera.android.httpclient.util.CharArrayBuffer) -> readLine
    cz.msebera.android.httpclient.io.HttpTransportMetrics getMetrics() -> getMetrics
    boolean isEof() -> isEof
cz.msebera.android.httpclient.impl.conn.LoggingSessionOutputBuffer -> cz.msebera.android.httpclient.impl.conn.LoggingSessionOutputBuffer:
    cz.msebera.android.httpclient.io.SessionOutputBuffer out -> out
    cz.msebera.android.httpclient.impl.conn.Wire wire -> wire
    java.lang.String charset -> charset
    void write(byte[],int,int) -> write
    void write(int) -> write
    void write(byte[]) -> write
    void flush() -> flush
    void writeLine(cz.msebera.android.httpclient.util.CharArrayBuffer) -> writeLine
    void writeLine(java.lang.String) -> writeLine
    cz.msebera.android.httpclient.io.HttpTransportMetrics getMetrics() -> getMetrics
cz.msebera.android.httpclient.impl.conn.ManagedClientConnectionImpl -> cz.msebera.android.httpclient.impl.conn.ManagedClientConnectionImpl:
    cz.msebera.android.httpclient.conn.ClientConnectionManager manager -> manager
    cz.msebera.android.httpclient.conn.ClientConnectionOperator operator -> operator
    cz.msebera.android.httpclient.impl.conn.HttpPoolEntry poolEntry -> poolEntry
    boolean reusable -> reusable
    long duration -> duration
    java.lang.String getId() -> getId
    cz.msebera.android.httpclient.impl.conn.HttpPoolEntry getPoolEntry() -> getPoolEntry
    cz.msebera.android.httpclient.impl.conn.HttpPoolEntry detach() -> detach
    cz.msebera.android.httpclient.conn.ClientConnectionManager getManager() -> getManager
    cz.msebera.android.httpclient.conn.OperatedClientConnection getConnection() -> getConnection
    cz.msebera.android.httpclient.conn.OperatedClientConnection ensureConnection() -> ensureConnection
    cz.msebera.android.httpclient.impl.conn.HttpPoolEntry ensurePoolEntry() -> ensurePoolEntry
    void close() -> close
    void shutdown() -> shutdown
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    cz.msebera.android.httpclient.HttpConnectionMetrics getMetrics() -> getMetrics
    void flush() -> flush
    boolean isResponseAvailable(int) -> isResponseAvailable
    void receiveResponseEntity(cz.msebera.android.httpclient.HttpResponse) -> receiveResponseEntity
    cz.msebera.android.httpclient.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestEntity(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> sendRequestEntity
    void sendRequestHeader(cz.msebera.android.httpclient.HttpRequest) -> sendRequestHeader
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    boolean isSecure() -> isSecure
    void bind(java.net.Socket) -> bind
    java.net.Socket getSocket() -> getSocket
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    cz.msebera.android.httpclient.conn.routing.HttpRoute getRoute() -> getRoute
    void open(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> open
    void tunnelTarget(boolean,cz.msebera.android.httpclient.params.HttpParams) -> tunnelTarget
    void tunnelProxy(cz.msebera.android.httpclient.HttpHost,boolean,cz.msebera.android.httpclient.params.HttpParams) -> tunnelProxy
    void layerProtocol(cz.msebera.android.httpclient.protocol.HttpContext,cz.msebera.android.httpclient.params.HttpParams) -> layerProtocol
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
cz.msebera.android.httpclient.impl.conn.ManagedHttpClientConnectionFactory -> cz.msebera.android.httpclient.impl.conn.ManagedHttpClientConnectionFactory:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    cz.msebera.android.httpclient.impl.conn.ManagedHttpClientConnectionFactory INSTANCE -> INSTANCE
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog headerlog -> headerlog
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog wirelog -> wirelog
    cz.msebera.android.httpclient.io.HttpMessageWriterFactory requestWriterFactory -> requestWriterFactory
    cz.msebera.android.httpclient.io.HttpMessageParserFactory responseParserFactory -> responseParserFactory
    cz.msebera.android.httpclient.conn.ManagedHttpClientConnection create(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.config.ConnectionConfig) -> create
    cz.msebera.android.httpclient.HttpConnection create(java.lang.Object,cz.msebera.android.httpclient.config.ConnectionConfig) -> create
cz.msebera.android.httpclient.impl.conn.PoolingClientConnectionManager -> cz.msebera.android.httpclient.impl.conn.PoolingClientConnectionManager:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    cz.msebera.android.httpclient.impl.conn.HttpConnPool pool -> pool
    cz.msebera.android.httpclient.conn.ClientConnectionOperator operator -> operator
    cz.msebera.android.httpclient.conn.DnsResolver dnsResolver -> dnsResolver
    void finalize() -> finalize
    cz.msebera.android.httpclient.conn.ClientConnectionOperator createConnectionOperator(cz.msebera.android.httpclient.conn.scheme.SchemeRegistry) -> createConnectionOperator
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    java.lang.String format(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> format
    java.lang.String formatStats(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> formatStats
    java.lang.String format(cz.msebera.android.httpclient.impl.conn.HttpPoolEntry) -> format
    cz.msebera.android.httpclient.conn.ClientConnectionRequest requestConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    cz.msebera.android.httpclient.conn.ManagedClientConnection leaseConnection(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit) -> leaseConnection
    void releaseConnection(cz.msebera.android.httpclient.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void shutdown() -> shutdown
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    int getMaxTotal() -> getMaxTotal
    void setMaxTotal(int) -> setMaxTotal
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getMaxPerRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> getMaxPerRoute
    void setMaxPerRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute,int) -> setMaxPerRoute
    cz.msebera.android.httpclient.pool.PoolStats getTotalStats() -> getTotalStats
    cz.msebera.android.httpclient.pool.PoolStats getStats(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> getStats
    cz.msebera.android.httpclient.pool.PoolStats getStats(java.lang.Object) -> getStats
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
cz.msebera.android.httpclient.impl.conn.PoolingClientConnectionManager$1 -> cz.msebera.android.httpclient.impl.conn.PoolingClientConnectionManager$1:
    java.util.concurrent.Future val$future -> val$future
    cz.msebera.android.httpclient.impl.conn.PoolingClientConnectionManager this$0 -> this$0
    void abortRequest() -> abortRequest
    cz.msebera.android.httpclient.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
cz.msebera.android.httpclient.impl.conn.PoolingHttpClientConnectionManager -> cz.msebera.android.httpclient.impl.conn.PoolingHttpClientConnectionManager:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.impl.conn.PoolingHttpClientConnectionManager$ConfigData configData -> configData
    cz.msebera.android.httpclient.impl.conn.CPool pool -> pool
    cz.msebera.android.httpclient.impl.conn.HttpClientConnectionOperator connectionOperator -> connectionOperator
    java.util.concurrent.atomic.AtomicBoolean isShutDown -> isShutDown
    cz.msebera.android.httpclient.config.Registry getDefaultRegistry() -> getDefaultRegistry
    void finalize() -> finalize
    void close() -> close
    java.lang.String format(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> format
    java.lang.String formatStats(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> formatStats
    java.lang.String format(cz.msebera.android.httpclient.impl.conn.CPoolEntry) -> format
    cz.msebera.android.httpclient.conn.ConnectionRequest requestConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    cz.msebera.android.httpclient.HttpClientConnection leaseConnection(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit) -> leaseConnection
    void releaseConnection(cz.msebera.android.httpclient.HttpClientConnection,java.lang.Object,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void connect(cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.conn.routing.HttpRoute,int,cz.msebera.android.httpclient.protocol.HttpContext) -> connect
    void upgrade(cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext) -> upgrade
    void routeComplete(cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.protocol.HttpContext) -> routeComplete
    void shutdown() -> shutdown
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    int getMaxTotal() -> getMaxTotal
    void setMaxTotal(int) -> setMaxTotal
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getMaxPerRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> getMaxPerRoute
    void setMaxPerRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute,int) -> setMaxPerRoute
    cz.msebera.android.httpclient.pool.PoolStats getTotalStats() -> getTotalStats
    cz.msebera.android.httpclient.pool.PoolStats getStats(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> getStats
    cz.msebera.android.httpclient.config.SocketConfig getDefaultSocketConfig() -> getDefaultSocketConfig
    void setDefaultSocketConfig(cz.msebera.android.httpclient.config.SocketConfig) -> setDefaultSocketConfig
    cz.msebera.android.httpclient.config.ConnectionConfig getDefaultConnectionConfig() -> getDefaultConnectionConfig
    void setDefaultConnectionConfig(cz.msebera.android.httpclient.config.ConnectionConfig) -> setDefaultConnectionConfig
    cz.msebera.android.httpclient.config.SocketConfig getSocketConfig(cz.msebera.android.httpclient.HttpHost) -> getSocketConfig
    void setSocketConfig(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.config.SocketConfig) -> setSocketConfig
    cz.msebera.android.httpclient.config.ConnectionConfig getConnectionConfig(cz.msebera.android.httpclient.HttpHost) -> getConnectionConfig
    void setConnectionConfig(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.config.ConnectionConfig) -> setConnectionConfig
    cz.msebera.android.httpclient.pool.PoolStats getStats(java.lang.Object) -> getStats
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
cz.msebera.android.httpclient.impl.conn.PoolingHttpClientConnectionManager$1 -> cz.msebera.android.httpclient.impl.conn.PoolingHttpClientConnectionManager$1:
    java.util.concurrent.Future val$future -> val$future
    cz.msebera.android.httpclient.impl.conn.PoolingHttpClientConnectionManager this$0 -> this$0
    boolean cancel() -> cancel
    cz.msebera.android.httpclient.HttpClientConnection get(long,java.util.concurrent.TimeUnit) -> get
cz.msebera.android.httpclient.impl.conn.PoolingHttpClientConnectionManager$ConfigData -> cz.msebera.android.httpclient.impl.conn.PoolingHttpClientConnectionManager$ConfigData:
    java.util.Map socketConfigMap -> socketConfigMap
    java.util.Map connectionConfigMap -> connectionConfigMap
    cz.msebera.android.httpclient.config.SocketConfig defaultSocketConfig -> defaultSocketConfig
    cz.msebera.android.httpclient.config.ConnectionConfig defaultConnectionConfig -> defaultConnectionConfig
    cz.msebera.android.httpclient.config.SocketConfig getDefaultSocketConfig() -> getDefaultSocketConfig
    void setDefaultSocketConfig(cz.msebera.android.httpclient.config.SocketConfig) -> setDefaultSocketConfig
    cz.msebera.android.httpclient.config.ConnectionConfig getDefaultConnectionConfig() -> getDefaultConnectionConfig
    void setDefaultConnectionConfig(cz.msebera.android.httpclient.config.ConnectionConfig) -> setDefaultConnectionConfig
    cz.msebera.android.httpclient.config.SocketConfig getSocketConfig(cz.msebera.android.httpclient.HttpHost) -> getSocketConfig
    void setSocketConfig(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.config.SocketConfig) -> setSocketConfig
    cz.msebera.android.httpclient.config.ConnectionConfig getConnectionConfig(cz.msebera.android.httpclient.HttpHost) -> getConnectionConfig
    void setConnectionConfig(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.config.ConnectionConfig) -> setConnectionConfig
cz.msebera.android.httpclient.impl.conn.PoolingHttpClientConnectionManager$InternalConnectionFactory -> cz.msebera.android.httpclient.impl.conn.PoolingHttpClientConnectionManager$InternalConnectionFactory:
    cz.msebera.android.httpclient.impl.conn.PoolingHttpClientConnectionManager$ConfigData configData -> configData
    cz.msebera.android.httpclient.conn.HttpConnectionFactory connFactory -> connFactory
    cz.msebera.android.httpclient.conn.ManagedHttpClientConnection create(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> create
    java.lang.Object create(java.lang.Object) -> create
cz.msebera.android.httpclient.impl.conn.ProxySelectorRoutePlanner -> cz.msebera.android.httpclient.impl.conn.ProxySelectorRoutePlanner:
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    java.net.ProxySelector proxySelector -> proxySelector
    java.net.ProxySelector getProxySelector() -> getProxySelector
    void setProxySelector(java.net.ProxySelector) -> setProxySelector
    cz.msebera.android.httpclient.conn.routing.HttpRoute determineRoute(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> determineRoute
    cz.msebera.android.httpclient.HttpHost determineProxy(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> determineProxy
    java.lang.String getHost(java.net.InetSocketAddress) -> getHost
    java.net.Proxy chooseProxy(java.util.List,cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> chooseProxy
cz.msebera.android.httpclient.impl.conn.ProxySelectorRoutePlanner$1 -> cz.msebera.android.httpclient.impl.conn.ProxySelectorRoutePlanner$1:
    int[] $SwitchMap$java$net$Proxy$Type -> $SwitchMap$java$net$Proxy$Type
cz.msebera.android.httpclient.impl.conn.SchemeRegistryFactory -> cz.msebera.android.httpclient.impl.conn.SchemeRegistryFactory:
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry createDefault() -> createDefault
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry createSystemDefault() -> createSystemDefault
cz.msebera.android.httpclient.impl.conn.SingleClientConnManager -> cz.msebera.android.httpclient.impl.conn.SingleClientConnManager:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    cz.msebera.android.httpclient.conn.ClientConnectionOperator connOperator -> connOperator
    boolean alwaysShutDown -> alwaysShutDown
    cz.msebera.android.httpclient.impl.conn.SingleClientConnManager$PoolEntry uniquePoolEntry -> uniquePoolEntry
    cz.msebera.android.httpclient.impl.conn.SingleClientConnManager$ConnAdapter managedConn -> managedConn
    long lastReleaseTime -> lastReleaseTime
    long connectionExpiresTime -> connectionExpiresTime
    boolean isShutDown -> isShutDown
    void finalize() -> finalize
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    cz.msebera.android.httpclient.conn.ClientConnectionOperator createConnectionOperator(cz.msebera.android.httpclient.conn.scheme.SchemeRegistry) -> createConnectionOperator
    void assertStillUp() -> assertStillUp
    cz.msebera.android.httpclient.conn.ClientConnectionRequest requestConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    cz.msebera.android.httpclient.conn.ManagedClientConnection getConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    void releaseConnection(cz.msebera.android.httpclient.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeExpiredConnections() -> closeExpiredConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void shutdown() -> shutdown
    void revokeConnection() -> revokeConnection
cz.msebera.android.httpclient.impl.conn.SingleClientConnManager$1 -> cz.msebera.android.httpclient.impl.conn.SingleClientConnManager$1:
    cz.msebera.android.httpclient.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    cz.msebera.android.httpclient.impl.conn.SingleClientConnManager this$0 -> this$0
    void abortRequest() -> abortRequest
    cz.msebera.android.httpclient.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
cz.msebera.android.httpclient.impl.conn.SingleClientConnManager$ConnAdapter -> cz.msebera.android.httpclient.impl.conn.SingleClientConnManager$ConnAdapter:
    cz.msebera.android.httpclient.impl.conn.SingleClientConnManager this$0 -> this$0
cz.msebera.android.httpclient.impl.conn.SingleClientConnManager$PoolEntry -> cz.msebera.android.httpclient.impl.conn.SingleClientConnManager$PoolEntry:
    cz.msebera.android.httpclient.impl.conn.SingleClientConnManager this$0 -> this$0
    void close() -> close
    void shutdown() -> shutdown
cz.msebera.android.httpclient.impl.conn.SystemDefaultDnsResolver -> cz.msebera.android.httpclient.impl.conn.SystemDefaultDnsResolver:
    cz.msebera.android.httpclient.impl.conn.SystemDefaultDnsResolver INSTANCE -> INSTANCE
    java.net.InetAddress[] resolve(java.lang.String) -> resolve
cz.msebera.android.httpclient.impl.conn.SystemDefaultRoutePlanner -> cz.msebera.android.httpclient.impl.conn.SystemDefaultRoutePlanner:
    java.net.ProxySelector proxySelector -> proxySelector
    cz.msebera.android.httpclient.HttpHost determineProxy(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> determineProxy
    java.lang.String getHost(java.net.InetSocketAddress) -> getHost
    java.net.Proxy chooseProxy(java.util.List) -> chooseProxy
cz.msebera.android.httpclient.impl.conn.SystemDefaultRoutePlanner$1 -> cz.msebera.android.httpclient.impl.conn.SystemDefaultRoutePlanner$1:
    int[] $SwitchMap$java$net$Proxy$Type -> $SwitchMap$java$net$Proxy$Type
cz.msebera.android.httpclient.impl.conn.Wire -> cz.msebera.android.httpclient.impl.conn.Wire:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    java.lang.String id -> id
    void wire(java.lang.String,java.io.InputStream) -> wire
    boolean enabled() -> enabled
    void output(java.io.InputStream) -> output
    void input(java.io.InputStream) -> input
    void output(byte[],int,int) -> output
    void input(byte[],int,int) -> input
    void output(byte[]) -> output
    void input(byte[]) -> input
    void output(int) -> output
    void input(int) -> input
    void output(java.lang.String) -> output
    void input(java.lang.String) -> input
cz.msebera.android.httpclient.impl.conn.tsccm.AbstractConnPool -> cz.msebera.android.httpclient.impl.conn.tsccm.AbstractConnPool:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    java.util.concurrent.locks.Lock poolLock -> poolLock
    java.util.Set leasedConnections -> leasedConnections
    int numConnections -> numConnections
    boolean isShutDown -> isShutDown
    java.util.Set issuedConnections -> issuedConnections
    java.lang.ref.ReferenceQueue refQueue -> refQueue
    cz.msebera.android.httpclient.impl.conn.IdleConnectionHandler idleConnHandler -> idleConnHandler
    void enableConnectionGC() -> enableConnectionGC
    cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry getEntry(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit) -> getEntry
    cz.msebera.android.httpclient.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    void freeEntry(cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    void handleReference(java.lang.ref.Reference) -> handleReference
    void handleLostEntry(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> handleLostEntry
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void deleteClosedConnections() -> deleteClosedConnections
    void shutdown() -> shutdown
    void closeConnection(cz.msebera.android.httpclient.conn.OperatedClientConnection) -> closeConnection
cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry -> cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry:
    long created -> created
    long updated -> updated
    long validUntil -> validUntil
    long expiry -> expiry
    cz.msebera.android.httpclient.conn.OperatedClientConnection getConnection() -> getConnection
    cz.msebera.android.httpclient.conn.routing.HttpRoute getPlannedRoute() -> getPlannedRoute
    cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntryRef getWeakRef() -> getWeakRef
    void shutdownEntry() -> shutdownEntry
    long getCreated() -> getCreated
    long getUpdated() -> getUpdated
    long getExpiry() -> getExpiry
    long getValidUntil() -> getValidUntil
    void updateExpiry(long,java.util.concurrent.TimeUnit) -> updateExpiry
    boolean isExpired(long) -> isExpired
cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntryRef -> cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntryRef:
    cz.msebera.android.httpclient.conn.routing.HttpRoute route -> route
    cz.msebera.android.httpclient.conn.routing.HttpRoute getRoute() -> getRoute
cz.msebera.android.httpclient.impl.conn.tsccm.BasicPooledConnAdapter -> cz.msebera.android.httpclient.impl.conn.tsccm.BasicPooledConnAdapter:
    cz.msebera.android.httpclient.conn.ClientConnectionManager getManager() -> getManager
    cz.msebera.android.httpclient.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    void detach() -> detach
cz.msebera.android.httpclient.impl.conn.tsccm.ConnPoolByRoute -> cz.msebera.android.httpclient.impl.conn.tsccm.ConnPoolByRoute:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    java.util.concurrent.locks.Lock poolLock -> poolLock
    cz.msebera.android.httpclient.conn.ClientConnectionOperator operator -> operator
    cz.msebera.android.httpclient.conn.params.ConnPerRoute connPerRoute -> connPerRoute
    java.util.Set leasedConnections -> leasedConnections
    java.util.Queue freeConnections -> freeConnections
    java.util.Queue waitingThreads -> waitingThreads
    java.util.Map routeToPool -> routeToPool
    long connTTL -> connTTL
    java.util.concurrent.TimeUnit connTTLTimeUnit -> connTTLTimeUnit
    boolean shutdown -> shutdown
    int maxTotalConnections -> maxTotalConnections
    int numConnections -> numConnections
    java.util.concurrent.locks.Lock getLock() -> getLock
    java.util.Queue createFreeConnQueue() -> createFreeConnQueue
    java.util.Queue createWaitingThreadQueue() -> createWaitingThreadQueue
    java.util.Map createRouteToPoolMap() -> createRouteToPoolMap
    cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> newRouteSpecificPool
    cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool) -> newWaitingThread
    void closeConnection(cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry) -> closeConnection
    cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool getRoutePool(cz.msebera.android.httpclient.conn.routing.HttpRoute,boolean) -> getRoutePool
    int getConnectionsInPool(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> getConnectionsInPool
    int getConnectionsInPool() -> getConnectionsInPool
    cz.msebera.android.httpclient.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThreadAborter) -> getEntryBlocking
    void freeEntry(cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry getFreeEntry(cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool,java.lang.Object) -> getFreeEntry
    cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry createEntry(cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool,cz.msebera.android.httpclient.conn.ClientConnectionOperator) -> createEntry
    void deleteEntry(cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    void deleteLeastUsedEntry() -> deleteLeastUsedEntry
    void handleLostEntry(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> handleLostEntry
    void notifyWaitingThread(cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool) -> notifyWaitingThread
    void deleteClosedConnections() -> deleteClosedConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    int getMaxTotalConnections() -> getMaxTotalConnections
    java.util.concurrent.locks.Lock access$000(cz.msebera.android.httpclient.impl.conn.tsccm.ConnPoolByRoute) -> access$000
cz.msebera.android.httpclient.impl.conn.tsccm.ConnPoolByRoute$1 -> cz.msebera.android.httpclient.impl.conn.tsccm.ConnPoolByRoute$1:
    cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThreadAborter val$aborter -> val$aborter
    cz.msebera.android.httpclient.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    cz.msebera.android.httpclient.impl.conn.tsccm.ConnPoolByRoute this$0 -> this$0
    void abortRequest() -> abortRequest
    cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
cz.msebera.android.httpclient.impl.conn.tsccm.PoolEntryRequest -> cz.msebera.android.httpclient.impl.conn.tsccm.PoolEntryRequest:
    cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    void abortRequest() -> abortRequest
cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool -> cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.conn.routing.HttpRoute route -> route
    int maxEntries -> maxEntries
    cz.msebera.android.httpclient.conn.params.ConnPerRoute connPerRoute -> connPerRoute
    java.util.LinkedList freeEntries -> freeEntries
    java.util.Queue waitingThreads -> waitingThreads
    int numEntries -> numEntries
    cz.msebera.android.httpclient.conn.routing.HttpRoute getRoute() -> getRoute
    int getMaxEntries() -> getMaxEntries
    boolean isUnused() -> isUnused
    int getCapacity() -> getCapacity
    int getEntryCount() -> getEntryCount
    cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object) -> allocEntry
    void freeEntry(cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry) -> freeEntry
    void createdEntry(cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry) -> createdEntry
    boolean deleteEntry(cz.msebera.android.httpclient.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    void dropEntry() -> dropEntry
    void queueThread(cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread) -> queueThread
    boolean hasThread() -> hasThread
    cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread nextThread() -> nextThread
    void removeThread(cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread) -> removeThread
cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool$1 -> cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool$1:
    cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool this$0 -> this$0
    int getMaxForRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> getMaxForRoute
cz.msebera.android.httpclient.impl.conn.tsccm.ThreadSafeClientConnManager -> cz.msebera.android.httpclient.impl.conn.tsccm.ThreadSafeClientConnManager:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    cz.msebera.android.httpclient.impl.conn.tsccm.AbstractConnPool connectionPool -> connectionPool
    cz.msebera.android.httpclient.impl.conn.tsccm.ConnPoolByRoute pool -> pool
    cz.msebera.android.httpclient.conn.ClientConnectionOperator connOperator -> connOperator
    cz.msebera.android.httpclient.conn.params.ConnPerRouteBean connPerRoute -> connPerRoute
    void finalize() -> finalize
    cz.msebera.android.httpclient.impl.conn.tsccm.AbstractConnPool createConnectionPool(cz.msebera.android.httpclient.params.HttpParams) -> createConnectionPool
    cz.msebera.android.httpclient.impl.conn.tsccm.ConnPoolByRoute createConnectionPool(long,java.util.concurrent.TimeUnit) -> createConnectionPool
    cz.msebera.android.httpclient.conn.ClientConnectionOperator createConnectionOperator(cz.msebera.android.httpclient.conn.scheme.SchemeRegistry) -> createConnectionOperator
    cz.msebera.android.httpclient.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    cz.msebera.android.httpclient.conn.ClientConnectionRequest requestConnection(cz.msebera.android.httpclient.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(cz.msebera.android.httpclient.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void shutdown() -> shutdown
    int getConnectionsInPool(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> getConnectionsInPool
    int getConnectionsInPool() -> getConnectionsInPool
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    int getMaxTotal() -> getMaxTotal
    void setMaxTotal(int) -> setMaxTotal
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getMaxForRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute) -> getMaxForRoute
    void setMaxForRoute(cz.msebera.android.httpclient.conn.routing.HttpRoute,int) -> setMaxForRoute
cz.msebera.android.httpclient.impl.conn.tsccm.ThreadSafeClientConnManager$1 -> cz.msebera.android.httpclient.impl.conn.tsccm.ThreadSafeClientConnManager$1:
    cz.msebera.android.httpclient.impl.conn.tsccm.PoolEntryRequest val$poolRequest -> val$poolRequest
    cz.msebera.android.httpclient.conn.routing.HttpRoute val$route -> val$route
    cz.msebera.android.httpclient.impl.conn.tsccm.ThreadSafeClientConnManager this$0 -> this$0
    void abortRequest() -> abortRequest
    cz.msebera.android.httpclient.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread -> cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread:
    java.util.concurrent.locks.Condition cond -> cond
    cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool pool -> pool
    java.lang.Thread waiter -> waiter
    boolean aborted -> aborted
    java.util.concurrent.locks.Condition getCondition() -> getCondition
    cz.msebera.android.httpclient.impl.conn.tsccm.RouteSpecificPool getPool() -> getPool
    java.lang.Thread getThread() -> getThread
    boolean await(java.util.Date) -> await
    void wakeup() -> wakeup
    void interrupt() -> interrupt
cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThreadAborter -> cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThreadAborter:
    cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread waitingThread -> waitingThread
    boolean aborted -> aborted
    void abort() -> abort
    void setWaitingThread(cz.msebera.android.httpclient.impl.conn.tsccm.WaitingThread) -> setWaitingThread
cz.msebera.android.httpclient.impl.cookie.AbstractCookieAttributeHandler -> cz.msebera.android.httpclient.impl.cookie.AbstractCookieAttributeHandler:
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
cz.msebera.android.httpclient.impl.cookie.AbstractCookieSpec -> cz.msebera.android.httpclient.impl.cookie.AbstractCookieSpec:
    java.util.Map attribHandlerMap -> attribHandlerMap
    void registerAttribHandler(java.lang.String,cz.msebera.android.httpclient.cookie.CookieAttributeHandler) -> registerAttribHandler
    cz.msebera.android.httpclient.cookie.CookieAttributeHandler findAttribHandler(java.lang.String) -> findAttribHandler
    cz.msebera.android.httpclient.cookie.CookieAttributeHandler getAttribHandler(java.lang.String) -> getAttribHandler
    java.util.Collection getAttribHandlers() -> getAttribHandlers
cz.msebera.android.httpclient.impl.cookie.BasicClientCookie -> cz.msebera.android.httpclient.impl.cookie.BasicClientCookie:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.util.Map attribs -> attribs
    java.lang.String value -> value
    java.lang.String cookieComment -> cookieComment
    java.lang.String cookieDomain -> cookieDomain
    java.util.Date cookieExpiryDate -> cookieExpiryDate
    java.lang.String cookiePath -> cookiePath
    boolean isSecure -> isSecure
    int cookieVersion -> cookieVersion
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getCommentURL() -> getCommentURL
    java.util.Date getExpiryDate() -> getExpiryDate
    void setExpiryDate(java.util.Date) -> setExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    boolean isSecure() -> isSecure
    void setSecure(boolean) -> setSecure
    int[] getPorts() -> getPorts
    int getVersion() -> getVersion
    void setVersion(int) -> setVersion
    boolean isExpired(java.util.Date) -> isExpired
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    boolean containsAttribute(java.lang.String) -> containsAttribute
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.cookie.BasicClientCookie2 -> cz.msebera.android.httpclient.impl.cookie.BasicClientCookie2:
    long serialVersionUID -> serialVersionUID
    java.lang.String commentURL -> commentURL
    int[] ports -> ports
    boolean discard -> discard
    int[] getPorts() -> getPorts
    void setPorts(int[]) -> setPorts
    java.lang.String getCommentURL() -> getCommentURL
    void setCommentURL(java.lang.String) -> setCommentURL
    void setDiscard(boolean) -> setDiscard
    boolean isPersistent() -> isPersistent
    boolean isExpired(java.util.Date) -> isExpired
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.impl.cookie.BasicCommentHandler -> cz.msebera.android.httpclient.impl.cookie.BasicCommentHandler:
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
cz.msebera.android.httpclient.impl.cookie.BasicDomainHandler -> cz.msebera.android.httpclient.impl.cookie.BasicDomainHandler:
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
cz.msebera.android.httpclient.impl.cookie.BasicExpiresHandler -> cz.msebera.android.httpclient.impl.cookie.BasicExpiresHandler:
    java.lang.String[] datepatterns -> datepatterns
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
cz.msebera.android.httpclient.impl.cookie.BasicMaxAgeHandler -> cz.msebera.android.httpclient.impl.cookie.BasicMaxAgeHandler:
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
cz.msebera.android.httpclient.impl.cookie.BasicPathHandler -> cz.msebera.android.httpclient.impl.cookie.BasicPathHandler:
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
cz.msebera.android.httpclient.impl.cookie.BasicSecureHandler -> cz.msebera.android.httpclient.impl.cookie.BasicSecureHandler:
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
cz.msebera.android.httpclient.impl.cookie.BestMatchSpec -> cz.msebera.android.httpclient.impl.cookie.BestMatchSpec:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    cz.msebera.android.httpclient.impl.cookie.RFC2965Spec strict -> strict
    cz.msebera.android.httpclient.impl.cookie.RFC2109Spec obsoleteStrict -> obsoleteStrict
    cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpec compat -> compat
    cz.msebera.android.httpclient.impl.cookie.RFC2965Spec getStrict() -> getStrict
    cz.msebera.android.httpclient.impl.cookie.RFC2109Spec getObsoleteStrict() -> getObsoleteStrict
    cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpec getCompat() -> getCompat
    java.util.List parse(cz.msebera.android.httpclient.Header,cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    cz.msebera.android.httpclient.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.cookie.BestMatchSpecFactory -> cz.msebera.android.httpclient.impl.cookie.BestMatchSpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    cz.msebera.android.httpclient.cookie.CookieSpec newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
    cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpec -> cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpec:
    java.lang.String[] DEFAULT_DATE_PATTERNS -> DEFAULT_DATE_PATTERNS
    java.lang.String[] datepatterns -> datepatterns
    java.util.List parse(cz.msebera.android.httpclient.Header,cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
    boolean isQuoteEnclosed(java.lang.String) -> isQuoteEnclosed
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    cz.msebera.android.httpclient.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpec$1 -> cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpec$1:
    cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpec this$0 -> this$0
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpec$2 -> cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpec$2:
    int[] $SwitchMap$cz$msebera$android$httpclient$impl$cookie$BrowserCompatSpecFactory$SecurityLevel -> $SwitchMap$cz$msebera$android$httpclient$impl$cookie$BrowserCompatSpecFactory$SecurityLevel
cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory -> cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory$SecurityLevel securityLevel -> securityLevel
    cz.msebera.android.httpclient.cookie.CookieSpec newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
    cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory$SecurityLevel -> cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory$SecurityLevel:
    cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory$SecurityLevel SECURITYLEVEL_DEFAULT -> SECURITYLEVEL_DEFAULT
    cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory$SecurityLevel SECURITYLEVEL_IE_MEDIUM -> SECURITYLEVEL_IE_MEDIUM
    cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory$SecurityLevel[] $VALUES -> $VALUES
    cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory$SecurityLevel[] values() -> values
    cz.msebera.android.httpclient.impl.cookie.BrowserCompatSpecFactory$SecurityLevel valueOf(java.lang.String) -> valueOf
cz.msebera.android.httpclient.impl.cookie.BrowserCompatVersionAttributeHandler -> cz.msebera.android.httpclient.impl.cookie.BrowserCompatVersionAttributeHandler:
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
cz.msebera.android.httpclient.impl.cookie.CookieSpecBase -> cz.msebera.android.httpclient.impl.cookie.CookieSpecBase:
    java.lang.String getDefaultPath(cz.msebera.android.httpclient.cookie.CookieOrigin) -> getDefaultPath
    java.lang.String getDefaultDomain(cz.msebera.android.httpclient.cookie.CookieOrigin) -> getDefaultDomain
    java.util.List parse(cz.msebera.android.httpclient.HeaderElement[],cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
cz.msebera.android.httpclient.impl.cookie.DateParseException -> cz.msebera.android.httpclient.impl.cookie.DateParseException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.impl.cookie.DateUtils -> cz.msebera.android.httpclient.impl.cookie.DateUtils:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.util.TimeZone GMT -> GMT
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date) -> parseDate
    java.lang.String formatDate(java.util.Date) -> formatDate
    java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
cz.msebera.android.httpclient.impl.cookie.IgnoreSpec -> cz.msebera.android.httpclient.impl.cookie.IgnoreSpec:
    int getVersion() -> getVersion
    java.util.List parse(cz.msebera.android.httpclient.Header,cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    cz.msebera.android.httpclient.Header getVersionHeader() -> getVersionHeader
cz.msebera.android.httpclient.impl.cookie.IgnoreSpecFactory -> cz.msebera.android.httpclient.impl.cookie.IgnoreSpecFactory:
    cz.msebera.android.httpclient.cookie.CookieSpec newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
    cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.impl.cookie.NetscapeDomainHandler -> cz.msebera.android.httpclient.impl.cookie.NetscapeDomainHandler:
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean isSpecialDomain(java.lang.String) -> isSpecialDomain
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
cz.msebera.android.httpclient.impl.cookie.NetscapeDraftHeaderParser -> cz.msebera.android.httpclient.impl.cookie.NetscapeDraftHeaderParser:
    cz.msebera.android.httpclient.impl.cookie.NetscapeDraftHeaderParser DEFAULT -> DEFAULT
    cz.msebera.android.httpclient.HeaderElement parseHeader(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseHeader
    cz.msebera.android.httpclient.NameValuePair parseNameValuePair(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseNameValuePair
cz.msebera.android.httpclient.impl.cookie.NetscapeDraftSpec -> cz.msebera.android.httpclient.impl.cookie.NetscapeDraftSpec:
    java.lang.String EXPIRES_PATTERN -> EXPIRES_PATTERN
    java.lang.String[] datepatterns -> datepatterns
    java.util.List parse(cz.msebera.android.httpclient.Header,cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    cz.msebera.android.httpclient.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.cookie.NetscapeDraftSpecFactory -> cz.msebera.android.httpclient.impl.cookie.NetscapeDraftSpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    cz.msebera.android.httpclient.cookie.CookieSpec newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
    cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.impl.cookie.PublicSuffixFilter -> cz.msebera.android.httpclient.impl.cookie.PublicSuffixFilter:
    cz.msebera.android.httpclient.cookie.CookieAttributeHandler wrapped -> wrapped
    java.util.Set exceptions -> exceptions
    java.util.Set suffixes -> suffixes
    void setPublicSuffixes(java.util.Collection) -> setPublicSuffixes
    void setExceptions(java.util.Collection) -> setExceptions
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean isForPublicSuffix(cz.msebera.android.httpclient.cookie.Cookie) -> isForPublicSuffix
cz.msebera.android.httpclient.impl.cookie.PublicSuffixListParser -> cz.msebera.android.httpclient.impl.cookie.PublicSuffixListParser:
    int MAX_LINE_LEN -> MAX_LINE_LEN
    cz.msebera.android.httpclient.impl.cookie.PublicSuffixFilter filter -> filter
    void parse(java.io.Reader) -> parse
    boolean readLine(java.io.Reader,java.lang.StringBuilder) -> readLine
cz.msebera.android.httpclient.impl.cookie.RFC2109DomainHandler -> cz.msebera.android.httpclient.impl.cookie.RFC2109DomainHandler:
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
cz.msebera.android.httpclient.impl.cookie.RFC2109Spec -> cz.msebera.android.httpclient.impl.cookie.RFC2109Spec:
    cz.msebera.android.httpclient.cookie.CookiePathComparator PATH_COMPARATOR -> PATH_COMPARATOR
    java.lang.String[] DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    java.util.List parse(cz.msebera.android.httpclient.Header,cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    java.util.List formatCookies(java.util.List) -> formatCookies
    java.util.List doFormatOneHeader(java.util.List) -> doFormatOneHeader
    java.util.List doFormatManyHeaders(java.util.List) -> doFormatManyHeaders
    void formatParamAsVer(cz.msebera.android.httpclient.util.CharArrayBuffer,java.lang.String,java.lang.String,int) -> formatParamAsVer
    void formatCookieAsVer(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.cookie.Cookie,int) -> formatCookieAsVer
    int getVersion() -> getVersion
    cz.msebera.android.httpclient.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.cookie.RFC2109SpecFactory -> cz.msebera.android.httpclient.impl.cookie.RFC2109SpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    cz.msebera.android.httpclient.cookie.CookieSpec newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
    cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.impl.cookie.RFC2109VersionHandler -> cz.msebera.android.httpclient.impl.cookie.RFC2109VersionHandler:
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
cz.msebera.android.httpclient.impl.cookie.RFC2965CommentUrlAttributeHandler -> cz.msebera.android.httpclient.impl.cookie.RFC2965CommentUrlAttributeHandler:
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
cz.msebera.android.httpclient.impl.cookie.RFC2965DiscardAttributeHandler -> cz.msebera.android.httpclient.impl.cookie.RFC2965DiscardAttributeHandler:
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
cz.msebera.android.httpclient.impl.cookie.RFC2965DomainAttributeHandler -> cz.msebera.android.httpclient.impl.cookie.RFC2965DomainAttributeHandler:
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
cz.msebera.android.httpclient.impl.cookie.RFC2965PortAttributeHandler -> cz.msebera.android.httpclient.impl.cookie.RFC2965PortAttributeHandler:
    int[] parsePortAttribute(java.lang.String) -> parsePortAttribute
    boolean portMatch(int,int[]) -> portMatch
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
cz.msebera.android.httpclient.impl.cookie.RFC2965Spec -> cz.msebera.android.httpclient.impl.cookie.RFC2965Spec:
    java.util.List parse(cz.msebera.android.httpclient.Header,cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
    java.util.List parse(cz.msebera.android.httpclient.HeaderElement[],cz.msebera.android.httpclient.cookie.CookieOrigin) -> parse
    java.util.List createCookies(cz.msebera.android.httpclient.HeaderElement[],cz.msebera.android.httpclient.cookie.CookieOrigin) -> createCookies
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
    void formatCookieAsVer(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.cookie.Cookie,int) -> formatCookieAsVer
    cz.msebera.android.httpclient.cookie.CookieOrigin adjustEffectiveHost(cz.msebera.android.httpclient.cookie.CookieOrigin) -> adjustEffectiveHost
    int getVersion() -> getVersion
    cz.msebera.android.httpclient.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.cookie.RFC2965SpecFactory -> cz.msebera.android.httpclient.impl.cookie.RFC2965SpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    cz.msebera.android.httpclient.cookie.CookieSpec newInstance(cz.msebera.android.httpclient.params.HttpParams) -> newInstance
    cz.msebera.android.httpclient.cookie.CookieSpec create(cz.msebera.android.httpclient.protocol.HttpContext) -> create
cz.msebera.android.httpclient.impl.cookie.RFC2965VersionAttributeHandler -> cz.msebera.android.httpclient.impl.cookie.RFC2965VersionAttributeHandler:
    void parse(cz.msebera.android.httpclient.cookie.SetCookie,java.lang.String) -> parse
    void validate(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> validate
    boolean match(cz.msebera.android.httpclient.cookie.Cookie,cz.msebera.android.httpclient.cookie.CookieOrigin) -> match
cz.msebera.android.httpclient.impl.entity.DisallowIdentityContentLengthStrategy -> cz.msebera.android.httpclient.impl.entity.DisallowIdentityContentLengthStrategy:
    cz.msebera.android.httpclient.impl.entity.DisallowIdentityContentLengthStrategy INSTANCE -> INSTANCE
    cz.msebera.android.httpclient.entity.ContentLengthStrategy contentLengthStrategy -> contentLengthStrategy
    long determineLength(cz.msebera.android.httpclient.HttpMessage) -> determineLength
cz.msebera.android.httpclient.impl.entity.EntityDeserializer -> cz.msebera.android.httpclient.impl.entity.EntityDeserializer:
    cz.msebera.android.httpclient.entity.ContentLengthStrategy lenStrategy -> lenStrategy
    cz.msebera.android.httpclient.entity.BasicHttpEntity doDeserialize(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.HttpMessage) -> doDeserialize
    cz.msebera.android.httpclient.HttpEntity deserialize(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.HttpMessage) -> deserialize
cz.msebera.android.httpclient.impl.entity.EntitySerializer -> cz.msebera.android.httpclient.impl.entity.EntitySerializer:
    cz.msebera.android.httpclient.entity.ContentLengthStrategy lenStrategy -> lenStrategy
    java.io.OutputStream doSerialize(cz.msebera.android.httpclient.io.SessionOutputBuffer,cz.msebera.android.httpclient.HttpMessage) -> doSerialize
    void serialize(cz.msebera.android.httpclient.io.SessionOutputBuffer,cz.msebera.android.httpclient.HttpMessage,cz.msebera.android.httpclient.HttpEntity) -> serialize
cz.msebera.android.httpclient.impl.entity.LaxContentLengthStrategy -> cz.msebera.android.httpclient.impl.entity.LaxContentLengthStrategy:
    cz.msebera.android.httpclient.impl.entity.LaxContentLengthStrategy INSTANCE -> INSTANCE
    int implicitLen -> implicitLen
    long determineLength(cz.msebera.android.httpclient.HttpMessage) -> determineLength
cz.msebera.android.httpclient.impl.entity.StrictContentLengthStrategy -> cz.msebera.android.httpclient.impl.entity.StrictContentLengthStrategy:
    cz.msebera.android.httpclient.impl.entity.StrictContentLengthStrategy INSTANCE -> INSTANCE
    int implicitLen -> implicitLen
    long determineLength(cz.msebera.android.httpclient.HttpMessage) -> determineLength
cz.msebera.android.httpclient.impl.execchain.BackoffStrategyExec -> cz.msebera.android.httpclient.impl.execchain.BackoffStrategyExec:
    cz.msebera.android.httpclient.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    cz.msebera.android.httpclient.client.ConnectionBackoffStrategy connectionBackoffStrategy -> connectionBackoffStrategy
    cz.msebera.android.httpclient.client.BackoffManager backoffManager -> backoffManager
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware) -> execute
cz.msebera.android.httpclient.impl.execchain.ClientExecChain -> cz.msebera.android.httpclient.impl.execchain.ClientExecChain:
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware) -> execute
cz.msebera.android.httpclient.impl.execchain.ConnectionHolder -> cz.msebera.android.httpclient.impl.execchain.ConnectionHolder:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.conn.HttpClientConnectionManager manager -> manager
    cz.msebera.android.httpclient.HttpClientConnection managedConn -> managedConn
    boolean reusable -> reusable
    java.lang.Object state -> state
    long validDuration -> validDuration
    java.util.concurrent.TimeUnit tunit -> tunit
    boolean released -> released
    boolean isReusable() -> isReusable
    void markReusable() -> markReusable
    void markNonReusable() -> markNonReusable
    void setState(java.lang.Object) -> setState
    void setValidFor(long,java.util.concurrent.TimeUnit) -> setValidFor
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
    boolean cancel() -> cancel
    boolean isReleased() -> isReleased
    void close() -> close
cz.msebera.android.httpclient.impl.execchain.HttpResponseProxy -> cz.msebera.android.httpclient.impl.execchain.HttpResponseProxy:
    cz.msebera.android.httpclient.HttpResponse original -> original
    cz.msebera.android.httpclient.impl.execchain.ConnectionHolder connHolder -> connHolder
    void close() -> close
    cz.msebera.android.httpclient.StatusLine getStatusLine() -> getStatusLine
    void setStatusLine(cz.msebera.android.httpclient.StatusLine) -> setStatusLine
    void setStatusLine(cz.msebera.android.httpclient.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(cz.msebera.android.httpclient.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    cz.msebera.android.httpclient.HttpEntity getEntity() -> getEntity
    void setEntity(cz.msebera.android.httpclient.HttpEntity) -> setEntity
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
    cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    boolean containsHeader(java.lang.String) -> containsHeader
    cz.msebera.android.httpclient.Header[] getHeaders(java.lang.String) -> getHeaders
    cz.msebera.android.httpclient.Header getFirstHeader(java.lang.String) -> getFirstHeader
    cz.msebera.android.httpclient.Header getLastHeader(java.lang.String) -> getLastHeader
    cz.msebera.android.httpclient.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(cz.msebera.android.httpclient.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(cz.msebera.android.httpclient.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(cz.msebera.android.httpclient.Header[]) -> setHeaders
    void removeHeader(cz.msebera.android.httpclient.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    cz.msebera.android.httpclient.HeaderIterator headerIterator() -> headerIterator
    cz.msebera.android.httpclient.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
    void setParams(cz.msebera.android.httpclient.params.HttpParams) -> setParams
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.execchain.MainClientExec -> cz.msebera.android.httpclient.impl.execchain.MainClientExec:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.protocol.HttpRequestExecutor requestExecutor -> requestExecutor
    cz.msebera.android.httpclient.conn.HttpClientConnectionManager connManager -> connManager
    cz.msebera.android.httpclient.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    cz.msebera.android.httpclient.protocol.HttpProcessor proxyHttpProcessor -> proxyHttpProcessor
    cz.msebera.android.httpclient.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    cz.msebera.android.httpclient.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    cz.msebera.android.httpclient.impl.auth.HttpAuthenticator authenticator -> authenticator
    cz.msebera.android.httpclient.client.UserTokenHandler userTokenHandler -> userTokenHandler
    cz.msebera.android.httpclient.conn.routing.HttpRouteDirector routeDirector -> routeDirector
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware) -> execute
    void establishRoute(cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.protocol.HttpClientContext) -> establishRoute
    boolean createTunnelToTarget(cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.client.protocol.HttpClientContext) -> createTunnelToTarget
    boolean createTunnelToProxy(cz.msebera.android.httpclient.conn.routing.HttpRoute,int,cz.msebera.android.httpclient.client.protocol.HttpClientContext) -> createTunnelToProxy
    boolean needAuthentication(cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.auth.AuthState,cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.client.protocol.HttpClientContext) -> needAuthentication
cz.msebera.android.httpclient.impl.execchain.MinimalClientExec -> cz.msebera.android.httpclient.impl.execchain.MinimalClientExec:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.protocol.HttpRequestExecutor requestExecutor -> requestExecutor
    cz.msebera.android.httpclient.conn.HttpClientConnectionManager connManager -> connManager
    cz.msebera.android.httpclient.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    cz.msebera.android.httpclient.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    cz.msebera.android.httpclient.protocol.HttpProcessor httpProcessor -> httpProcessor
    void rewriteRequestURI(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.conn.routing.HttpRoute) -> rewriteRequestURI
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware) -> execute
cz.msebera.android.httpclient.impl.execchain.ProtocolExec -> cz.msebera.android.httpclient.impl.execchain.ProtocolExec:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    cz.msebera.android.httpclient.protocol.HttpProcessor httpProcessor -> httpProcessor
    void rewriteRequestURI(cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.conn.routing.HttpRoute) -> rewriteRequestURI
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware) -> execute
cz.msebera.android.httpclient.impl.execchain.RedirectExec -> cz.msebera.android.httpclient.impl.execchain.RedirectExec:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    cz.msebera.android.httpclient.client.RedirectStrategy redirectStrategy -> redirectStrategy
    cz.msebera.android.httpclient.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware) -> execute
cz.msebera.android.httpclient.impl.execchain.RequestAbortedException -> cz.msebera.android.httpclient.impl.execchain.RequestAbortedException:
    long serialVersionUID -> serialVersionUID
cz.msebera.android.httpclient.impl.execchain.RequestEntityProxy -> cz.msebera.android.httpclient.impl.execchain.RequestEntityProxy:
    cz.msebera.android.httpclient.HttpEntity original -> original
    boolean consumed -> consumed
    void enhance(cz.msebera.android.httpclient.HttpEntityEnclosingRequest) -> enhance
    boolean isEnhanced(cz.msebera.android.httpclient.HttpEntity) -> isEnhanced
    boolean isRepeatable(cz.msebera.android.httpclient.HttpRequest) -> isRepeatable
    cz.msebera.android.httpclient.HttpEntity getOriginal() -> getOriginal
    boolean isConsumed() -> isConsumed
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    cz.msebera.android.httpclient.Header getContentType() -> getContentType
    cz.msebera.android.httpclient.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.execchain.ResponseEntityProxy -> cz.msebera.android.httpclient.impl.execchain.ResponseEntityProxy:
    cz.msebera.android.httpclient.impl.execchain.ConnectionHolder connHolder -> connHolder
    void enchance(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.impl.execchain.ConnectionHolder) -> enchance
    void cleanup() -> cleanup
    void releaseConnection() -> releaseConnection
    boolean isRepeatable() -> isRepeatable
    java.io.InputStream getContent() -> getContent
    void consumeContent() -> consumeContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.impl.execchain.RetryExec -> cz.msebera.android.httpclient.impl.execchain.RetryExec:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    cz.msebera.android.httpclient.client.HttpRequestRetryHandler retryHandler -> retryHandler
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware) -> execute
cz.msebera.android.httpclient.impl.execchain.ServiceUnavailableRetryExec -> cz.msebera.android.httpclient.impl.execchain.ServiceUnavailableRetryExec:
    cz.msebera.android.httpclient.extras.HttpClientAndroidLog log -> log
    cz.msebera.android.httpclient.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    cz.msebera.android.httpclient.client.ServiceUnavailableRetryStrategy retryStrategy -> retryStrategy
    cz.msebera.android.httpclient.client.methods.CloseableHttpResponse execute(cz.msebera.android.httpclient.conn.routing.HttpRoute,cz.msebera.android.httpclient.client.methods.HttpRequestWrapper,cz.msebera.android.httpclient.client.protocol.HttpClientContext,cz.msebera.android.httpclient.client.methods.HttpExecutionAware) -> execute
cz.msebera.android.httpclient.impl.execchain.TunnelRefusedException -> cz.msebera.android.httpclient.impl.execchain.TunnelRefusedException:
    long serialVersionUID -> serialVersionUID
    cz.msebera.android.httpclient.HttpResponse response -> response
    cz.msebera.android.httpclient.HttpResponse getResponse() -> getResponse
cz.msebera.android.httpclient.impl.io.AbstractMessageParser -> cz.msebera.android.httpclient.impl.io.AbstractMessageParser:
    int HEAD_LINE -> HEAD_LINE
    int HEADERS -> HEADERS
    cz.msebera.android.httpclient.io.SessionInputBuffer sessionBuffer -> sessionBuffer
    cz.msebera.android.httpclient.config.MessageConstraints messageConstraints -> messageConstraints
    java.util.List headerLines -> headerLines
    cz.msebera.android.httpclient.message.LineParser lineParser -> lineParser
    int state -> state
    cz.msebera.android.httpclient.HttpMessage message -> message
    cz.msebera.android.httpclient.Header[] parseHeaders(cz.msebera.android.httpclient.io.SessionInputBuffer,int,int,cz.msebera.android.httpclient.message.LineParser) -> parseHeaders
    cz.msebera.android.httpclient.Header[] parseHeaders(cz.msebera.android.httpclient.io.SessionInputBuffer,int,int,cz.msebera.android.httpclient.message.LineParser,java.util.List) -> parseHeaders
    cz.msebera.android.httpclient.HttpMessage parseHead(cz.msebera.android.httpclient.io.SessionInputBuffer) -> parseHead
    cz.msebera.android.httpclient.HttpMessage parse() -> parse
cz.msebera.android.httpclient.impl.io.AbstractMessageWriter -> cz.msebera.android.httpclient.impl.io.AbstractMessageWriter:
    cz.msebera.android.httpclient.io.SessionOutputBuffer sessionBuffer -> sessionBuffer
    cz.msebera.android.httpclient.util.CharArrayBuffer lineBuf -> lineBuf
    cz.msebera.android.httpclient.message.LineFormatter lineFormatter -> lineFormatter
    void writeHeadLine(cz.msebera.android.httpclient.HttpMessage) -> writeHeadLine
    void write(cz.msebera.android.httpclient.HttpMessage) -> write
cz.msebera.android.httpclient.impl.io.AbstractSessionInputBuffer -> cz.msebera.android.httpclient.impl.io.AbstractSessionInputBuffer:
    java.io.InputStream instream -> instream
    byte[] buffer -> buffer
    cz.msebera.android.httpclient.util.ByteArrayBuffer linebuffer -> linebuffer
    java.nio.charset.Charset charset -> charset
    boolean ascii -> ascii
    int maxLineLen -> maxLineLen
    int minChunkLimit -> minChunkLimit
    cz.msebera.android.httpclient.impl.io.HttpTransportMetricsImpl metrics -> metrics
    java.nio.charset.CodingErrorAction onMalformedCharAction -> onMalformedCharAction
    java.nio.charset.CodingErrorAction onUnmappableCharAction -> onUnmappableCharAction
    int bufferpos -> bufferpos
    int bufferlen -> bufferlen
    java.nio.charset.CharsetDecoder decoder -> decoder
    java.nio.CharBuffer cbuf -> cbuf
    void init(java.io.InputStream,int,cz.msebera.android.httpclient.params.HttpParams) -> init
    cz.msebera.android.httpclient.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> createTransportMetrics
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    int fillBuffer() -> fillBuffer
    boolean hasBufferedData() -> hasBufferedData
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int locateLF() -> locateLF
    int readLine(cz.msebera.android.httpclient.util.CharArrayBuffer) -> readLine
    int lineFromLineBuffer(cz.msebera.android.httpclient.util.CharArrayBuffer) -> lineFromLineBuffer
    int lineFromReadBuffer(cz.msebera.android.httpclient.util.CharArrayBuffer,int) -> lineFromReadBuffer
    int appendDecoded(cz.msebera.android.httpclient.util.CharArrayBuffer,java.nio.ByteBuffer) -> appendDecoded
    int handleDecodingResult(java.nio.charset.CoderResult,cz.msebera.android.httpclient.util.CharArrayBuffer,java.nio.ByteBuffer) -> handleDecodingResult
    java.lang.String readLine() -> readLine
    cz.msebera.android.httpclient.io.HttpTransportMetrics getMetrics() -> getMetrics
cz.msebera.android.httpclient.impl.io.AbstractSessionOutputBuffer -> cz.msebera.android.httpclient.impl.io.AbstractSessionOutputBuffer:
    byte[] CRLF -> CRLF
    java.io.OutputStream outstream -> outstream
    cz.msebera.android.httpclient.util.ByteArrayBuffer buffer -> buffer
    java.nio.charset.Charset charset -> charset
    boolean ascii -> ascii
    int minChunkLimit -> minChunkLimit
    cz.msebera.android.httpclient.impl.io.HttpTransportMetricsImpl metrics -> metrics
    java.nio.charset.CodingErrorAction onMalformedCharAction -> onMalformedCharAction
    java.nio.charset.CodingErrorAction onUnmappableCharAction -> onUnmappableCharAction
    java.nio.charset.CharsetEncoder encoder -> encoder
    java.nio.ByteBuffer bbuf -> bbuf
    void init(java.io.OutputStream,int,cz.msebera.android.httpclient.params.HttpParams) -> init
    cz.msebera.android.httpclient.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> createTransportMetrics
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    void flushBuffer() -> flushBuffer
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(cz.msebera.android.httpclient.util.CharArrayBuffer) -> writeLine
    void writeEncoded(java.nio.CharBuffer) -> writeEncoded
    void handleEncodingResult(java.nio.charset.CoderResult) -> handleEncodingResult
    cz.msebera.android.httpclient.io.HttpTransportMetrics getMetrics() -> getMetrics
cz.msebera.android.httpclient.impl.io.ChunkedInputStream -> cz.msebera.android.httpclient.impl.io.ChunkedInputStream:
    int CHUNK_LEN -> CHUNK_LEN
    int CHUNK_DATA -> CHUNK_DATA
    int CHUNK_CRLF -> CHUNK_CRLF
    int BUFFER_SIZE -> BUFFER_SIZE
    cz.msebera.android.httpclient.io.SessionInputBuffer in -> in
    cz.msebera.android.httpclient.util.CharArrayBuffer buffer -> buffer
    int state -> state
    int chunkSize -> chunkSize
    int pos -> pos
    boolean eof -> eof
    boolean closed -> closed
    cz.msebera.android.httpclient.Header[] footers -> footers
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    void nextChunk() -> nextChunk
    int getChunkSize() -> getChunkSize
    void parseTrailerHeaders() -> parseTrailerHeaders
    void close() -> close
    cz.msebera.android.httpclient.Header[] getFooters() -> getFooters
cz.msebera.android.httpclient.impl.io.ChunkedOutputStream -> cz.msebera.android.httpclient.impl.io.ChunkedOutputStream:
    cz.msebera.android.httpclient.io.SessionOutputBuffer out -> out
    byte[] cache -> cache
    int cachePosition -> cachePosition
    boolean wroteLastChunk -> wroteLastChunk
    boolean closed -> closed
    void flushCache() -> flushCache
    void flushCacheWithAppend(byte[],int,int) -> flushCacheWithAppend
    void writeClosingChunk() -> writeClosingChunk
    void finish() -> finish
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
cz.msebera.android.httpclient.impl.io.ContentLengthInputStream -> cz.msebera.android.httpclient.impl.io.ContentLengthInputStream:
    int BUFFER_SIZE -> BUFFER_SIZE
    long contentLength -> contentLength
    long pos -> pos
    boolean closed -> closed
    cz.msebera.android.httpclient.io.SessionInputBuffer in -> in
    void close() -> close
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    long skip(long) -> skip
cz.msebera.android.httpclient.impl.io.ContentLengthOutputStream -> cz.msebera.android.httpclient.impl.io.ContentLengthOutputStream:
    cz.msebera.android.httpclient.io.SessionOutputBuffer out -> out
    long contentLength -> contentLength
    long total -> total
    boolean closed -> closed
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
cz.msebera.android.httpclient.impl.io.DefaultHttpRequestParser -> cz.msebera.android.httpclient.impl.io.DefaultHttpRequestParser:
    cz.msebera.android.httpclient.HttpRequestFactory requestFactory -> requestFactory
    cz.msebera.android.httpclient.util.CharArrayBuffer lineBuf -> lineBuf
    cz.msebera.android.httpclient.HttpRequest parseHead(cz.msebera.android.httpclient.io.SessionInputBuffer) -> parseHead
    cz.msebera.android.httpclient.HttpMessage parseHead(cz.msebera.android.httpclient.io.SessionInputBuffer) -> parseHead
cz.msebera.android.httpclient.impl.io.DefaultHttpRequestParserFactory -> cz.msebera.android.httpclient.impl.io.DefaultHttpRequestParserFactory:
    cz.msebera.android.httpclient.impl.io.DefaultHttpRequestParserFactory INSTANCE -> INSTANCE
    cz.msebera.android.httpclient.message.LineParser lineParser -> lineParser
    cz.msebera.android.httpclient.HttpRequestFactory requestFactory -> requestFactory
    cz.msebera.android.httpclient.io.HttpMessageParser create(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.config.MessageConstraints) -> create
cz.msebera.android.httpclient.impl.io.DefaultHttpRequestWriter -> cz.msebera.android.httpclient.impl.io.DefaultHttpRequestWriter:
    void writeHeadLine(cz.msebera.android.httpclient.HttpRequest) -> writeHeadLine
    void writeHeadLine(cz.msebera.android.httpclient.HttpMessage) -> writeHeadLine
cz.msebera.android.httpclient.impl.io.DefaultHttpRequestWriterFactory -> cz.msebera.android.httpclient.impl.io.DefaultHttpRequestWriterFactory:
    cz.msebera.android.httpclient.impl.io.DefaultHttpRequestWriterFactory INSTANCE -> INSTANCE
    cz.msebera.android.httpclient.message.LineFormatter lineFormatter -> lineFormatter
    cz.msebera.android.httpclient.io.HttpMessageWriter create(cz.msebera.android.httpclient.io.SessionOutputBuffer) -> create
cz.msebera.android.httpclient.impl.io.DefaultHttpResponseParser -> cz.msebera.android.httpclient.impl.io.DefaultHttpResponseParser:
    cz.msebera.android.httpclient.HttpResponseFactory responseFactory -> responseFactory
    cz.msebera.android.httpclient.util.CharArrayBuffer lineBuf -> lineBuf
    cz.msebera.android.httpclient.HttpResponse parseHead(cz.msebera.android.httpclient.io.SessionInputBuffer) -> parseHead
    cz.msebera.android.httpclient.HttpMessage parseHead(cz.msebera.android.httpclient.io.SessionInputBuffer) -> parseHead
cz.msebera.android.httpclient.impl.io.DefaultHttpResponseParserFactory -> cz.msebera.android.httpclient.impl.io.DefaultHttpResponseParserFactory:
    cz.msebera.android.httpclient.impl.io.DefaultHttpResponseParserFactory INSTANCE -> INSTANCE
    cz.msebera.android.httpclient.message.LineParser lineParser -> lineParser
    cz.msebera.android.httpclient.HttpResponseFactory responseFactory -> responseFactory
    cz.msebera.android.httpclient.io.HttpMessageParser create(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.config.MessageConstraints) -> create
cz.msebera.android.httpclient.impl.io.DefaultHttpResponseWriter -> cz.msebera.android.httpclient.impl.io.DefaultHttpResponseWriter:
    void writeHeadLine(cz.msebera.android.httpclient.HttpResponse) -> writeHeadLine
    void writeHeadLine(cz.msebera.android.httpclient.HttpMessage) -> writeHeadLine
cz.msebera.android.httpclient.impl.io.DefaultHttpResponseWriterFactory -> cz.msebera.android.httpclient.impl.io.DefaultHttpResponseWriterFactory:
    cz.msebera.android.httpclient.impl.io.DefaultHttpResponseWriterFactory INSTANCE -> INSTANCE
    cz.msebera.android.httpclient.message.LineFormatter lineFormatter -> lineFormatter
    cz.msebera.android.httpclient.io.HttpMessageWriter create(cz.msebera.android.httpclient.io.SessionOutputBuffer) -> create
cz.msebera.android.httpclient.impl.io.HttpRequestParser -> cz.msebera.android.httpclient.impl.io.HttpRequestParser:
    cz.msebera.android.httpclient.HttpRequestFactory requestFactory -> requestFactory
    cz.msebera.android.httpclient.util.CharArrayBuffer lineBuf -> lineBuf
    cz.msebera.android.httpclient.HttpMessage parseHead(cz.msebera.android.httpclient.io.SessionInputBuffer) -> parseHead
cz.msebera.android.httpclient.impl.io.HttpRequestWriter -> cz.msebera.android.httpclient.impl.io.HttpRequestWriter:
    void writeHeadLine(cz.msebera.android.httpclient.HttpRequest) -> writeHeadLine
    void writeHeadLine(cz.msebera.android.httpclient.HttpMessage) -> writeHeadLine
cz.msebera.android.httpclient.impl.io.HttpResponseParser -> cz.msebera.android.httpclient.impl.io.HttpResponseParser:
    cz.msebera.android.httpclient.HttpResponseFactory responseFactory -> responseFactory
    cz.msebera.android.httpclient.util.CharArrayBuffer lineBuf -> lineBuf
    cz.msebera.android.httpclient.HttpMessage parseHead(cz.msebera.android.httpclient.io.SessionInputBuffer) -> parseHead
cz.msebera.android.httpclient.impl.io.HttpResponseWriter -> cz.msebera.android.httpclient.impl.io.HttpResponseWriter:
    void writeHeadLine(cz.msebera.android.httpclient.HttpResponse) -> writeHeadLine
    void writeHeadLine(cz.msebera.android.httpclient.HttpMessage) -> writeHeadLine
cz.msebera.android.httpclient.impl.io.HttpTransportMetricsImpl -> cz.msebera.android.httpclient.impl.io.HttpTransportMetricsImpl:
    long bytesTransferred -> bytesTransferred
    long getBytesTransferred() -> getBytesTransferred
    void setBytesTransferred(long) -> setBytesTransferred
    void incrementBytesTransferred(long) -> incrementBytesTransferred
    void reset() -> reset
cz.msebera.android.httpclient.impl.io.IdentityInputStream -> cz.msebera.android.httpclient.impl.io.IdentityInputStream:
    cz.msebera.android.httpclient.io.SessionInputBuffer in -> in
    boolean closed -> closed
    int available() -> available
    void close() -> close
    int read() -> read
    int read(byte[],int,int) -> read
cz.msebera.android.httpclient.impl.io.IdentityOutputStream -> cz.msebera.android.httpclient.impl.io.IdentityOutputStream:
    cz.msebera.android.httpclient.io.SessionOutputBuffer out -> out
    boolean closed -> closed
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
cz.msebera.android.httpclient.impl.io.SessionInputBufferImpl -> cz.msebera.android.httpclient.impl.io.SessionInputBufferImpl:
    cz.msebera.android.httpclient.impl.io.HttpTransportMetricsImpl metrics -> metrics
    byte[] buffer -> buffer
    cz.msebera.android.httpclient.util.ByteArrayBuffer linebuffer -> linebuffer
    int minChunkLimit -> minChunkLimit
    cz.msebera.android.httpclient.config.MessageConstraints constraints -> constraints
    java.nio.charset.CharsetDecoder decoder -> decoder
    java.io.InputStream instream -> instream
    int bufferpos -> bufferpos
    int bufferlen -> bufferlen
    java.nio.CharBuffer cbuf -> cbuf
    void bind(java.io.InputStream) -> bind
    boolean isBound() -> isBound
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    int streamRead(byte[],int,int) -> streamRead
    int fillBuffer() -> fillBuffer
    boolean hasBufferedData() -> hasBufferedData
    void clear() -> clear
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int locateLF() -> locateLF
    int readLine(cz.msebera.android.httpclient.util.CharArrayBuffer) -> readLine
    int lineFromLineBuffer(cz.msebera.android.httpclient.util.CharArrayBuffer) -> lineFromLineBuffer
    int lineFromReadBuffer(cz.msebera.android.httpclient.util.CharArrayBuffer,int) -> lineFromReadBuffer
    int appendDecoded(cz.msebera.android.httpclient.util.CharArrayBuffer,java.nio.ByteBuffer) -> appendDecoded
    int handleDecodingResult(java.nio.charset.CoderResult,cz.msebera.android.httpclient.util.CharArrayBuffer,java.nio.ByteBuffer) -> handleDecodingResult
    java.lang.String readLine() -> readLine
    boolean isDataAvailable(int) -> isDataAvailable
    cz.msebera.android.httpclient.io.HttpTransportMetrics getMetrics() -> getMetrics
cz.msebera.android.httpclient.impl.io.SessionOutputBufferImpl -> cz.msebera.android.httpclient.impl.io.SessionOutputBufferImpl:
    byte[] CRLF -> CRLF
    cz.msebera.android.httpclient.impl.io.HttpTransportMetricsImpl metrics -> metrics
    cz.msebera.android.httpclient.util.ByteArrayBuffer buffer -> buffer
    int fragementSizeHint -> fragementSizeHint
    java.nio.charset.CharsetEncoder encoder -> encoder
    java.io.OutputStream outstream -> outstream
    java.nio.ByteBuffer bbuf -> bbuf
    void bind(java.io.OutputStream) -> bind
    boolean isBound() -> isBound
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    void streamWrite(byte[],int,int) -> streamWrite
    void flushStream() -> flushStream
    void flushBuffer() -> flushBuffer
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(cz.msebera.android.httpclient.util.CharArrayBuffer) -> writeLine
    void writeEncoded(java.nio.CharBuffer) -> writeEncoded
    void handleEncodingResult(java.nio.charset.CoderResult) -> handleEncodingResult
    cz.msebera.android.httpclient.io.HttpTransportMetrics getMetrics() -> getMetrics
cz.msebera.android.httpclient.impl.io.SocketInputBuffer -> cz.msebera.android.httpclient.impl.io.SocketInputBuffer:
    java.net.Socket socket -> socket
    boolean eof -> eof
    int fillBuffer() -> fillBuffer
    boolean isDataAvailable(int) -> isDataAvailable
    boolean isEof() -> isEof
cz.msebera.android.httpclient.impl.io.SocketOutputBuffer -> cz.msebera.android.httpclient.impl.io.SocketOutputBuffer:
cz.msebera.android.httpclient.impl.pool.BasicConnFactory -> cz.msebera.android.httpclient.impl.pool.BasicConnFactory:
    javax.net.SocketFactory plainfactory -> plainfactory
    javax.net.ssl.SSLSocketFactory sslfactory -> sslfactory
    int connectTimeout -> connectTimeout
    cz.msebera.android.httpclient.config.SocketConfig sconfig -> sconfig
    cz.msebera.android.httpclient.HttpConnectionFactory connFactory -> connFactory
    cz.msebera.android.httpclient.HttpClientConnection create(java.net.Socket,cz.msebera.android.httpclient.params.HttpParams) -> create
    cz.msebera.android.httpclient.HttpClientConnection create(cz.msebera.android.httpclient.HttpHost) -> create
    java.lang.Object create(java.lang.Object) -> create
cz.msebera.android.httpclient.impl.pool.BasicConnPool -> cz.msebera.android.httpclient.impl.pool.BasicConnPool:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    cz.msebera.android.httpclient.impl.pool.BasicPoolEntry createEntry(cz.msebera.android.httpclient.HttpHost,cz.msebera.android.httpclient.HttpClientConnection) -> createEntry
    cz.msebera.android.httpclient.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
cz.msebera.android.httpclient.impl.pool.BasicPoolEntry -> cz.msebera.android.httpclient.impl.pool.BasicPoolEntry:
    void close() -> close
    boolean isClosed() -> isClosed
cz.msebera.android.httpclient.io.BufferInfo -> cz.msebera.android.httpclient.io.BufferInfo:
    int length() -> length
    int capacity() -> capacity
    int available() -> available
cz.msebera.android.httpclient.io.EofSensor -> cz.msebera.android.httpclient.io.EofSensor:
    boolean isEof() -> isEof
cz.msebera.android.httpclient.io.HttpMessageParser -> cz.msebera.android.httpclient.io.HttpMessageParser:
    cz.msebera.android.httpclient.HttpMessage parse() -> parse
cz.msebera.android.httpclient.io.HttpMessageParserFactory -> cz.msebera.android.httpclient.io.HttpMessageParserFactory:
    cz.msebera.android.httpclient.io.HttpMessageParser create(cz.msebera.android.httpclient.io.SessionInputBuffer,cz.msebera.android.httpclient.config.MessageConstraints) -> create
cz.msebera.android.httpclient.io.HttpMessageWriter -> cz.msebera.android.httpclient.io.HttpMessageWriter:
    void write(cz.msebera.android.httpclient.HttpMessage) -> write
cz.msebera.android.httpclient.io.HttpMessageWriterFactory -> cz.msebera.android.httpclient.io.HttpMessageWriterFactory:
    cz.msebera.android.httpclient.io.HttpMessageWriter create(cz.msebera.android.httpclient.io.SessionOutputBuffer) -> create
cz.msebera.android.httpclient.io.HttpTransportMetrics -> cz.msebera.android.httpclient.io.HttpTransportMetrics:
    long getBytesTransferred() -> getBytesTransferred
    void reset() -> reset
cz.msebera.android.httpclient.io.SessionInputBuffer -> cz.msebera.android.httpclient.io.SessionInputBuffer:
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int read() -> read
    int readLine(cz.msebera.android.httpclient.util.CharArrayBuffer) -> readLine
    java.lang.String readLine() -> readLine
    boolean isDataAvailable(int) -> isDataAvailable
    cz.msebera.android.httpclient.io.HttpTransportMetrics getMetrics() -> getMetrics
cz.msebera.android.httpclient.io.SessionOutputBuffer -> cz.msebera.android.httpclient.io.SessionOutputBuffer:
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(cz.msebera.android.httpclient.util.CharArrayBuffer) -> writeLine
    void flush() -> flush
    cz.msebera.android.httpclient.io.HttpTransportMetrics getMetrics() -> getMetrics
cz.msebera.android.httpclient.message.AbstractHttpMessage -> cz.msebera.android.httpclient.message.AbstractHttpMessage:
    cz.msebera.android.httpclient.message.HeaderGroup headergroup -> headergroup
    cz.msebera.android.httpclient.params.HttpParams params -> params
    boolean containsHeader(java.lang.String) -> containsHeader
    cz.msebera.android.httpclient.Header[] getHeaders(java.lang.String) -> getHeaders
    cz.msebera.android.httpclient.Header getFirstHeader(java.lang.String) -> getFirstHeader
    cz.msebera.android.httpclient.Header getLastHeader(java.lang.String) -> getLastHeader
    cz.msebera.android.httpclient.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(cz.msebera.android.httpclient.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(cz.msebera.android.httpclient.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(cz.msebera.android.httpclient.Header[]) -> setHeaders
    void removeHeader(cz.msebera.android.httpclient.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    cz.msebera.android.httpclient.HeaderIterator headerIterator() -> headerIterator
    cz.msebera.android.httpclient.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
    void setParams(cz.msebera.android.httpclient.params.HttpParams) -> setParams
cz.msebera.android.httpclient.message.BasicHeader -> cz.msebera.android.httpclient.message.BasicHeader:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    cz.msebera.android.httpclient.HeaderElement[] getElements() -> getElements
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.message.BasicHeaderElement -> cz.msebera.android.httpclient.message.BasicHeaderElement:
    java.lang.String name -> name
    java.lang.String value -> value
    cz.msebera.android.httpclient.NameValuePair[] parameters -> parameters
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    cz.msebera.android.httpclient.NameValuePair[] getParameters() -> getParameters
    int getParameterCount() -> getParameterCount
    cz.msebera.android.httpclient.NameValuePair getParameter(int) -> getParameter
    cz.msebera.android.httpclient.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.message.BasicHeaderElementIterator -> cz.msebera.android.httpclient.message.BasicHeaderElementIterator:
    cz.msebera.android.httpclient.HeaderIterator headerIt -> headerIt
    cz.msebera.android.httpclient.message.HeaderValueParser parser -> parser
    cz.msebera.android.httpclient.HeaderElement currentElement -> currentElement
    cz.msebera.android.httpclient.util.CharArrayBuffer buffer -> buffer
    cz.msebera.android.httpclient.message.ParserCursor cursor -> cursor
    void bufferHeaderValue() -> bufferHeaderValue
    void parseNextElement() -> parseNextElement
    boolean hasNext() -> hasNext
    cz.msebera.android.httpclient.HeaderElement nextElement() -> nextElement
    java.lang.Object next() -> next
    void remove() -> remove
cz.msebera.android.httpclient.message.BasicHeaderIterator -> cz.msebera.android.httpclient.message.BasicHeaderIterator:
    cz.msebera.android.httpclient.Header[] allHeaders -> allHeaders
    int currentIndex -> currentIndex
    java.lang.String headerName -> headerName
    int findNext(int) -> findNext
    boolean filterHeader(int) -> filterHeader
    boolean hasNext() -> hasNext
    cz.msebera.android.httpclient.Header nextHeader() -> nextHeader
    java.lang.Object next() -> next
    void remove() -> remove
cz.msebera.android.httpclient.message.BasicHeaderValueFormatter -> cz.msebera.android.httpclient.message.BasicHeaderValueFormatter:
    cz.msebera.android.httpclient.message.BasicHeaderValueFormatter DEFAULT -> DEFAULT
    cz.msebera.android.httpclient.message.BasicHeaderValueFormatter INSTANCE -> INSTANCE
    java.lang.String SEPARATORS -> SEPARATORS
    java.lang.String UNSAFE_CHARS -> UNSAFE_CHARS
    java.lang.String formatElements(cz.msebera.android.httpclient.HeaderElement[],boolean,cz.msebera.android.httpclient.message.HeaderValueFormatter) -> formatElements
    cz.msebera.android.httpclient.util.CharArrayBuffer formatElements(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.HeaderElement[],boolean) -> formatElements
    int estimateElementsLen(cz.msebera.android.httpclient.HeaderElement[]) -> estimateElementsLen
    java.lang.String formatHeaderElement(cz.msebera.android.httpclient.HeaderElement,boolean,cz.msebera.android.httpclient.message.HeaderValueFormatter) -> formatHeaderElement
    cz.msebera.android.httpclient.util.CharArrayBuffer formatHeaderElement(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.HeaderElement,boolean) -> formatHeaderElement
    int estimateHeaderElementLen(cz.msebera.android.httpclient.HeaderElement) -> estimateHeaderElementLen
    java.lang.String formatParameters(cz.msebera.android.httpclient.NameValuePair[],boolean,cz.msebera.android.httpclient.message.HeaderValueFormatter) -> formatParameters
    cz.msebera.android.httpclient.util.CharArrayBuffer formatParameters(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.NameValuePair[],boolean) -> formatParameters
    int estimateParametersLen(cz.msebera.android.httpclient.NameValuePair[]) -> estimateParametersLen
    java.lang.String formatNameValuePair(cz.msebera.android.httpclient.NameValuePair,boolean,cz.msebera.android.httpclient.message.HeaderValueFormatter) -> formatNameValuePair
    cz.msebera.android.httpclient.util.CharArrayBuffer formatNameValuePair(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.NameValuePair,boolean) -> formatNameValuePair
    int estimateNameValuePairLen(cz.msebera.android.httpclient.NameValuePair) -> estimateNameValuePairLen
    void doFormatValue(cz.msebera.android.httpclient.util.CharArrayBuffer,java.lang.String,boolean) -> doFormatValue
    boolean isSeparator(char) -> isSeparator
    boolean isUnsafe(char) -> isUnsafe
cz.msebera.android.httpclient.message.BasicHeaderValueParser -> cz.msebera.android.httpclient.message.BasicHeaderValueParser:
    cz.msebera.android.httpclient.message.BasicHeaderValueParser DEFAULT -> DEFAULT
    cz.msebera.android.httpclient.message.BasicHeaderValueParser INSTANCE -> INSTANCE
    char PARAM_DELIMITER -> PARAM_DELIMITER
    char ELEM_DELIMITER -> ELEM_DELIMITER
    char[] ALL_DELIMITERS -> ALL_DELIMITERS
    cz.msebera.android.httpclient.HeaderElement[] parseElements(java.lang.String,cz.msebera.android.httpclient.message.HeaderValueParser) -> parseElements
    cz.msebera.android.httpclient.HeaderElement[] parseElements(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseElements
    cz.msebera.android.httpclient.HeaderElement parseHeaderElement(java.lang.String,cz.msebera.android.httpclient.message.HeaderValueParser) -> parseHeaderElement
    cz.msebera.android.httpclient.HeaderElement parseHeaderElement(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseHeaderElement
    cz.msebera.android.httpclient.HeaderElement createHeaderElement(java.lang.String,java.lang.String,cz.msebera.android.httpclient.NameValuePair[]) -> createHeaderElement
    cz.msebera.android.httpclient.NameValuePair[] parseParameters(java.lang.String,cz.msebera.android.httpclient.message.HeaderValueParser) -> parseParameters
    cz.msebera.android.httpclient.NameValuePair[] parseParameters(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseParameters
    cz.msebera.android.httpclient.NameValuePair parseNameValuePair(java.lang.String,cz.msebera.android.httpclient.message.HeaderValueParser) -> parseNameValuePair
    cz.msebera.android.httpclient.NameValuePair parseNameValuePair(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseNameValuePair
    boolean isOneOf(char,char[]) -> isOneOf
    cz.msebera.android.httpclient.NameValuePair parseNameValuePair(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor,char[]) -> parseNameValuePair
    cz.msebera.android.httpclient.NameValuePair createNameValuePair(java.lang.String,java.lang.String) -> createNameValuePair
cz.msebera.android.httpclient.message.BasicHttpEntityEnclosingRequest -> cz.msebera.android.httpclient.message.BasicHttpEntityEnclosingRequest:
    cz.msebera.android.httpclient.HttpEntity entity -> entity
    cz.msebera.android.httpclient.HttpEntity getEntity() -> getEntity
    void setEntity(cz.msebera.android.httpclient.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
cz.msebera.android.httpclient.message.BasicHttpRequest -> cz.msebera.android.httpclient.message.BasicHttpRequest:
    java.lang.String method -> method
    java.lang.String uri -> uri
    cz.msebera.android.httpclient.RequestLine requestline -> requestline
    cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    cz.msebera.android.httpclient.RequestLine getRequestLine() -> getRequestLine
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.message.BasicHttpResponse -> cz.msebera.android.httpclient.message.BasicHttpResponse:
    cz.msebera.android.httpclient.StatusLine statusline -> statusline
    cz.msebera.android.httpclient.ProtocolVersion ver -> ver
    int code -> code
    java.lang.String reasonPhrase -> reasonPhrase
    cz.msebera.android.httpclient.HttpEntity entity -> entity
    cz.msebera.android.httpclient.ReasonPhraseCatalog reasonCatalog -> reasonCatalog
    java.util.Locale locale -> locale
    cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    cz.msebera.android.httpclient.StatusLine getStatusLine() -> getStatusLine
    cz.msebera.android.httpclient.HttpEntity getEntity() -> getEntity
    java.util.Locale getLocale() -> getLocale
    void setStatusLine(cz.msebera.android.httpclient.StatusLine) -> setStatusLine
    void setStatusLine(cz.msebera.android.httpclient.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(cz.msebera.android.httpclient.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    void setEntity(cz.msebera.android.httpclient.HttpEntity) -> setEntity
    void setLocale(java.util.Locale) -> setLocale
    java.lang.String getReason(int) -> getReason
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.message.BasicLineFormatter -> cz.msebera.android.httpclient.message.BasicLineFormatter:
    cz.msebera.android.httpclient.message.BasicLineFormatter DEFAULT -> DEFAULT
    cz.msebera.android.httpclient.message.BasicLineFormatter INSTANCE -> INSTANCE
    cz.msebera.android.httpclient.util.CharArrayBuffer initBuffer(cz.msebera.android.httpclient.util.CharArrayBuffer) -> initBuffer
    java.lang.String formatProtocolVersion(cz.msebera.android.httpclient.ProtocolVersion,cz.msebera.android.httpclient.message.LineFormatter) -> formatProtocolVersion
    cz.msebera.android.httpclient.util.CharArrayBuffer appendProtocolVersion(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.ProtocolVersion) -> appendProtocolVersion
    int estimateProtocolVersionLen(cz.msebera.android.httpclient.ProtocolVersion) -> estimateProtocolVersionLen
    java.lang.String formatRequestLine(cz.msebera.android.httpclient.RequestLine,cz.msebera.android.httpclient.message.LineFormatter) -> formatRequestLine
    cz.msebera.android.httpclient.util.CharArrayBuffer formatRequestLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.RequestLine) -> formatRequestLine
    void doFormatRequestLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.RequestLine) -> doFormatRequestLine
    java.lang.String formatStatusLine(cz.msebera.android.httpclient.StatusLine,cz.msebera.android.httpclient.message.LineFormatter) -> formatStatusLine
    cz.msebera.android.httpclient.util.CharArrayBuffer formatStatusLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.StatusLine) -> formatStatusLine
    void doFormatStatusLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.StatusLine) -> doFormatStatusLine
    java.lang.String formatHeader(cz.msebera.android.httpclient.Header,cz.msebera.android.httpclient.message.LineFormatter) -> formatHeader
    cz.msebera.android.httpclient.util.CharArrayBuffer formatHeader(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.Header) -> formatHeader
    void doFormatHeader(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.Header) -> doFormatHeader
cz.msebera.android.httpclient.message.BasicLineParser -> cz.msebera.android.httpclient.message.BasicLineParser:
    cz.msebera.android.httpclient.message.BasicLineParser DEFAULT -> DEFAULT
    cz.msebera.android.httpclient.message.BasicLineParser INSTANCE -> INSTANCE
    cz.msebera.android.httpclient.ProtocolVersion protocol -> protocol
    cz.msebera.android.httpclient.ProtocolVersion parseProtocolVersion(java.lang.String,cz.msebera.android.httpclient.message.LineParser) -> parseProtocolVersion
    cz.msebera.android.httpclient.ProtocolVersion parseProtocolVersion(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseProtocolVersion
    cz.msebera.android.httpclient.ProtocolVersion createProtocolVersion(int,int) -> createProtocolVersion
    boolean hasProtocolVersion(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> hasProtocolVersion
    cz.msebera.android.httpclient.RequestLine parseRequestLine(java.lang.String,cz.msebera.android.httpclient.message.LineParser) -> parseRequestLine
    cz.msebera.android.httpclient.RequestLine parseRequestLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseRequestLine
    cz.msebera.android.httpclient.RequestLine createRequestLine(java.lang.String,java.lang.String,cz.msebera.android.httpclient.ProtocolVersion) -> createRequestLine
    cz.msebera.android.httpclient.StatusLine parseStatusLine(java.lang.String,cz.msebera.android.httpclient.message.LineParser) -> parseStatusLine
    cz.msebera.android.httpclient.StatusLine parseStatusLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseStatusLine
    cz.msebera.android.httpclient.StatusLine createStatusLine(cz.msebera.android.httpclient.ProtocolVersion,int,java.lang.String) -> createStatusLine
    cz.msebera.android.httpclient.Header parseHeader(java.lang.String,cz.msebera.android.httpclient.message.LineParser) -> parseHeader
    cz.msebera.android.httpclient.Header parseHeader(cz.msebera.android.httpclient.util.CharArrayBuffer) -> parseHeader
    void skipWhitespace(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> skipWhitespace
cz.msebera.android.httpclient.message.BasicListHeaderIterator -> cz.msebera.android.httpclient.message.BasicListHeaderIterator:
    java.util.List allHeaders -> allHeaders
    int currentIndex -> currentIndex
    int lastIndex -> lastIndex
    java.lang.String headerName -> headerName
    int findNext(int) -> findNext
    boolean filterHeader(int) -> filterHeader
    boolean hasNext() -> hasNext
    cz.msebera.android.httpclient.Header nextHeader() -> nextHeader
    java.lang.Object next() -> next
    void remove() -> remove
cz.msebera.android.httpclient.message.BasicNameValuePair -> cz.msebera.android.httpclient.message.BasicNameValuePair:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.message.BasicRequestLine -> cz.msebera.android.httpclient.message.BasicRequestLine:
    long serialVersionUID -> serialVersionUID
    cz.msebera.android.httpclient.ProtocolVersion protoversion -> protoversion
    java.lang.String method -> method
    java.lang.String uri -> uri
    java.lang.String getMethod() -> getMethod
    cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.message.BasicStatusLine -> cz.msebera.android.httpclient.message.BasicStatusLine:
    long serialVersionUID -> serialVersionUID
    cz.msebera.android.httpclient.ProtocolVersion protoVersion -> protoVersion
    int statusCode -> statusCode
    java.lang.String reasonPhrase -> reasonPhrase
    int getStatusCode() -> getStatusCode
    cz.msebera.android.httpclient.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.message.BasicTokenIterator -> cz.msebera.android.httpclient.message.BasicTokenIterator:
    java.lang.String HTTP_SEPARATORS -> HTTP_SEPARATORS
    cz.msebera.android.httpclient.HeaderIterator headerIt -> headerIt
    java.lang.String currentHeader -> currentHeader
    java.lang.String currentToken -> currentToken
    int searchPos -> searchPos
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> nextToken
    java.lang.Object next() -> next
    void remove() -> remove
    int findNext(int) -> findNext
    java.lang.String createToken(java.lang.String,int,int) -> createToken
    int findTokenStart(int) -> findTokenStart
    int findTokenSeparator(int) -> findTokenSeparator
    int findTokenEnd(int) -> findTokenEnd
    boolean isTokenSeparator(char) -> isTokenSeparator
    boolean isWhitespace(char) -> isWhitespace
    boolean isTokenChar(char) -> isTokenChar
    boolean isHttpSeparator(char) -> isHttpSeparator
cz.msebera.android.httpclient.message.BufferedHeader -> cz.msebera.android.httpclient.message.BufferedHeader:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    cz.msebera.android.httpclient.util.CharArrayBuffer buffer -> buffer
    int valuePos -> valuePos
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    cz.msebera.android.httpclient.HeaderElement[] getElements() -> getElements
    int getValuePos() -> getValuePos
    cz.msebera.android.httpclient.util.CharArrayBuffer getBuffer() -> getBuffer
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.message.HeaderGroup -> cz.msebera.android.httpclient.message.HeaderGroup:
    long serialVersionUID -> serialVersionUID
    java.util.List headers -> headers
    void clear() -> clear
    void addHeader(cz.msebera.android.httpclient.Header) -> addHeader
    void removeHeader(cz.msebera.android.httpclient.Header) -> removeHeader
    void updateHeader(cz.msebera.android.httpclient.Header) -> updateHeader
    void setHeaders(cz.msebera.android.httpclient.Header[]) -> setHeaders
    cz.msebera.android.httpclient.Header getCondensedHeader(java.lang.String) -> getCondensedHeader
    cz.msebera.android.httpclient.Header[] getHeaders(java.lang.String) -> getHeaders
    cz.msebera.android.httpclient.Header getFirstHeader(java.lang.String) -> getFirstHeader
    cz.msebera.android.httpclient.Header getLastHeader(java.lang.String) -> getLastHeader
    cz.msebera.android.httpclient.Header[] getAllHeaders() -> getAllHeaders
    boolean containsHeader(java.lang.String) -> containsHeader
    cz.msebera.android.httpclient.HeaderIterator iterator() -> iterator
    cz.msebera.android.httpclient.HeaderIterator iterator(java.lang.String) -> iterator
    cz.msebera.android.httpclient.message.HeaderGroup copy() -> copy
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.message.HeaderValueFormatter -> cz.msebera.android.httpclient.message.HeaderValueFormatter:
    cz.msebera.android.httpclient.util.CharArrayBuffer formatElements(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.HeaderElement[],boolean) -> formatElements
    cz.msebera.android.httpclient.util.CharArrayBuffer formatHeaderElement(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.HeaderElement,boolean) -> formatHeaderElement
    cz.msebera.android.httpclient.util.CharArrayBuffer formatParameters(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.NameValuePair[],boolean) -> formatParameters
    cz.msebera.android.httpclient.util.CharArrayBuffer formatNameValuePair(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.NameValuePair,boolean) -> formatNameValuePair
cz.msebera.android.httpclient.message.HeaderValueParser -> cz.msebera.android.httpclient.message.HeaderValueParser:
    cz.msebera.android.httpclient.HeaderElement[] parseElements(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseElements
    cz.msebera.android.httpclient.HeaderElement parseHeaderElement(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseHeaderElement
    cz.msebera.android.httpclient.NameValuePair[] parseParameters(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseParameters
    cz.msebera.android.httpclient.NameValuePair parseNameValuePair(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseNameValuePair
cz.msebera.android.httpclient.message.LineFormatter -> cz.msebera.android.httpclient.message.LineFormatter:
    cz.msebera.android.httpclient.util.CharArrayBuffer appendProtocolVersion(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.ProtocolVersion) -> appendProtocolVersion
    cz.msebera.android.httpclient.util.CharArrayBuffer formatRequestLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.RequestLine) -> formatRequestLine
    cz.msebera.android.httpclient.util.CharArrayBuffer formatStatusLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.StatusLine) -> formatStatusLine
    cz.msebera.android.httpclient.util.CharArrayBuffer formatHeader(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.Header) -> formatHeader
cz.msebera.android.httpclient.message.LineParser -> cz.msebera.android.httpclient.message.LineParser:
    cz.msebera.android.httpclient.ProtocolVersion parseProtocolVersion(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseProtocolVersion
    boolean hasProtocolVersion(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> hasProtocolVersion
    cz.msebera.android.httpclient.RequestLine parseRequestLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseRequestLine
    cz.msebera.android.httpclient.StatusLine parseStatusLine(cz.msebera.android.httpclient.util.CharArrayBuffer,cz.msebera.android.httpclient.message.ParserCursor) -> parseStatusLine
    cz.msebera.android.httpclient.Header parseHeader(cz.msebera.android.httpclient.util.CharArrayBuffer) -> parseHeader
cz.msebera.android.httpclient.message.ParserCursor -> cz.msebera.android.httpclient.message.ParserCursor:
    int lowerBound -> lowerBound
    int upperBound -> upperBound
    int pos -> pos
    int getLowerBound() -> getLowerBound
    int getUpperBound() -> getUpperBound
    int getPos() -> getPos
    void updatePos(int) -> updatePos
    boolean atEnd() -> atEnd
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.params.AbstractHttpParams -> cz.msebera.android.httpclient.params.AbstractHttpParams:
    long getLongParameter(java.lang.String,long) -> getLongParameter
    cz.msebera.android.httpclient.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    cz.msebera.android.httpclient.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    cz.msebera.android.httpclient.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    cz.msebera.android.httpclient.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
    java.util.Set getNames() -> getNames
cz.msebera.android.httpclient.params.BasicHttpParams -> cz.msebera.android.httpclient.params.BasicHttpParams:
    long serialVersionUID -> serialVersionUID
    java.util.Map parameters -> parameters
    java.lang.Object getParameter(java.lang.String) -> getParameter
    cz.msebera.android.httpclient.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    void clear() -> clear
    cz.msebera.android.httpclient.params.HttpParams copy() -> copy
    java.lang.Object clone() -> clone
    void copyParams(cz.msebera.android.httpclient.params.HttpParams) -> copyParams
    java.util.Set getNames() -> getNames
cz.msebera.android.httpclient.params.CoreConnectionPNames -> cz.msebera.android.httpclient.params.CoreConnectionPNames:
    java.lang.String SO_TIMEOUT -> SO_TIMEOUT
    java.lang.String TCP_NODELAY -> TCP_NODELAY
    java.lang.String SOCKET_BUFFER_SIZE -> SOCKET_BUFFER_SIZE
    java.lang.String SO_LINGER -> SO_LINGER
    java.lang.String SO_REUSEADDR -> SO_REUSEADDR
    java.lang.String CONNECTION_TIMEOUT -> CONNECTION_TIMEOUT
    java.lang.String STALE_CONNECTION_CHECK -> STALE_CONNECTION_CHECK
    java.lang.String MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    java.lang.String MAX_HEADER_COUNT -> MAX_HEADER_COUNT
    java.lang.String MIN_CHUNK_LIMIT -> MIN_CHUNK_LIMIT
    java.lang.String SO_KEEPALIVE -> SO_KEEPALIVE
cz.msebera.android.httpclient.params.CoreProtocolPNames -> cz.msebera.android.httpclient.params.CoreProtocolPNames:
    java.lang.String PROTOCOL_VERSION -> PROTOCOL_VERSION
    java.lang.String HTTP_ELEMENT_CHARSET -> HTTP_ELEMENT_CHARSET
    java.lang.String HTTP_CONTENT_CHARSET -> HTTP_CONTENT_CHARSET
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String ORIGIN_SERVER -> ORIGIN_SERVER
    java.lang.String STRICT_TRANSFER_ENCODING -> STRICT_TRANSFER_ENCODING
    java.lang.String USE_EXPECT_CONTINUE -> USE_EXPECT_CONTINUE
    java.lang.String WAIT_FOR_CONTINUE -> WAIT_FOR_CONTINUE
    java.lang.String HTTP_MALFORMED_INPUT_ACTION -> HTTP_MALFORMED_INPUT_ACTION
    java.lang.String HTTP_UNMAPPABLE_INPUT_ACTION -> HTTP_UNMAPPABLE_INPUT_ACTION
cz.msebera.android.httpclient.params.DefaultedHttpParams -> cz.msebera.android.httpclient.params.DefaultedHttpParams:
    cz.msebera.android.httpclient.params.HttpParams local -> local
    cz.msebera.android.httpclient.params.HttpParams defaults -> defaults
    cz.msebera.android.httpclient.params.HttpParams copy() -> copy
    java.lang.Object getParameter(java.lang.String) -> getParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    cz.msebera.android.httpclient.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    cz.msebera.android.httpclient.params.HttpParams getDefaults() -> getDefaults
    java.util.Set getNames() -> getNames
    java.util.Set getDefaultNames() -> getDefaultNames
    java.util.Set getLocalNames() -> getLocalNames
    java.util.Set getNames(cz.msebera.android.httpclient.params.HttpParams) -> getNames
cz.msebera.android.httpclient.params.HttpAbstractParamBean -> cz.msebera.android.httpclient.params.HttpAbstractParamBean:
    cz.msebera.android.httpclient.params.HttpParams params -> params
cz.msebera.android.httpclient.params.HttpConnectionParamBean -> cz.msebera.android.httpclient.params.HttpConnectionParamBean:
    void setSoTimeout(int) -> setSoTimeout
    void setTcpNoDelay(boolean) -> setTcpNoDelay
    void setSocketBufferSize(int) -> setSocketBufferSize
    void setLinger(int) -> setLinger
    void setConnectionTimeout(int) -> setConnectionTimeout
    void setStaleCheckingEnabled(boolean) -> setStaleCheckingEnabled
cz.msebera.android.httpclient.params.HttpConnectionParams -> cz.msebera.android.httpclient.params.HttpConnectionParams:
    int getSoTimeout(cz.msebera.android.httpclient.params.HttpParams) -> getSoTimeout
    void setSoTimeout(cz.msebera.android.httpclient.params.HttpParams,int) -> setSoTimeout
    boolean getSoReuseaddr(cz.msebera.android.httpclient.params.HttpParams) -> getSoReuseaddr
    void setSoReuseaddr(cz.msebera.android.httpclient.params.HttpParams,boolean) -> setSoReuseaddr
    boolean getTcpNoDelay(cz.msebera.android.httpclient.params.HttpParams) -> getTcpNoDelay
    void setTcpNoDelay(cz.msebera.android.httpclient.params.HttpParams,boolean) -> setTcpNoDelay
    int getSocketBufferSize(cz.msebera.android.httpclient.params.HttpParams) -> getSocketBufferSize
    void setSocketBufferSize(cz.msebera.android.httpclient.params.HttpParams,int) -> setSocketBufferSize
    int getLinger(cz.msebera.android.httpclient.params.HttpParams) -> getLinger
    void setLinger(cz.msebera.android.httpclient.params.HttpParams,int) -> setLinger
    int getConnectionTimeout(cz.msebera.android.httpclient.params.HttpParams) -> getConnectionTimeout
    void setConnectionTimeout(cz.msebera.android.httpclient.params.HttpParams,int) -> setConnectionTimeout
    boolean isStaleCheckingEnabled(cz.msebera.android.httpclient.params.HttpParams) -> isStaleCheckingEnabled
    void setStaleCheckingEnabled(cz.msebera.android.httpclient.params.HttpParams,boolean) -> setStaleCheckingEnabled
    boolean getSoKeepalive(cz.msebera.android.httpclient.params.HttpParams) -> getSoKeepalive
    void setSoKeepalive(cz.msebera.android.httpclient.params.HttpParams,boolean) -> setSoKeepalive
cz.msebera.android.httpclient.params.HttpParamConfig -> cz.msebera.android.httpclient.params.HttpParamConfig:
    cz.msebera.android.httpclient.config.SocketConfig getSocketConfig(cz.msebera.android.httpclient.params.HttpParams) -> getSocketConfig
    cz.msebera.android.httpclient.config.MessageConstraints getMessageConstraints(cz.msebera.android.httpclient.params.HttpParams) -> getMessageConstraints
    cz.msebera.android.httpclient.config.ConnectionConfig getConnectionConfig(cz.msebera.android.httpclient.params.HttpParams) -> getConnectionConfig
cz.msebera.android.httpclient.params.HttpParams -> cz.msebera.android.httpclient.params.HttpParams:
    java.lang.Object getParameter(java.lang.String) -> getParameter
    cz.msebera.android.httpclient.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    cz.msebera.android.httpclient.params.HttpParams copy() -> copy
    boolean removeParameter(java.lang.String) -> removeParameter
    long getLongParameter(java.lang.String,long) -> getLongParameter
    cz.msebera.android.httpclient.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    cz.msebera.android.httpclient.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    cz.msebera.android.httpclient.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    cz.msebera.android.httpclient.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
cz.msebera.android.httpclient.params.HttpParamsNames -> cz.msebera.android.httpclient.params.HttpParamsNames:
    java.util.Set getNames() -> getNames
cz.msebera.android.httpclient.params.HttpProtocolParamBean -> cz.msebera.android.httpclient.params.HttpProtocolParamBean:
    void setHttpElementCharset(java.lang.String) -> setHttpElementCharset
    void setContentCharset(java.lang.String) -> setContentCharset
    void setVersion(cz.msebera.android.httpclient.HttpVersion) -> setVersion
    void setUserAgent(java.lang.String) -> setUserAgent
    void setUseExpectContinue(boolean) -> setUseExpectContinue
cz.msebera.android.httpclient.params.HttpProtocolParams -> cz.msebera.android.httpclient.params.HttpProtocolParams:
    java.lang.String getHttpElementCharset(cz.msebera.android.httpclient.params.HttpParams) -> getHttpElementCharset
    void setHttpElementCharset(cz.msebera.android.httpclient.params.HttpParams,java.lang.String) -> setHttpElementCharset
    java.lang.String getContentCharset(cz.msebera.android.httpclient.params.HttpParams) -> getContentCharset
    void setContentCharset(cz.msebera.android.httpclient.params.HttpParams,java.lang.String) -> setContentCharset
    cz.msebera.android.httpclient.ProtocolVersion getVersion(cz.msebera.android.httpclient.params.HttpParams) -> getVersion
    void setVersion(cz.msebera.android.httpclient.params.HttpParams,cz.msebera.android.httpclient.ProtocolVersion) -> setVersion
    java.lang.String getUserAgent(cz.msebera.android.httpclient.params.HttpParams) -> getUserAgent
    void setUserAgent(cz.msebera.android.httpclient.params.HttpParams,java.lang.String) -> setUserAgent
    boolean useExpectContinue(cz.msebera.android.httpclient.params.HttpParams) -> useExpectContinue
    void setUseExpectContinue(cz.msebera.android.httpclient.params.HttpParams,boolean) -> setUseExpectContinue
    java.nio.charset.CodingErrorAction getMalformedInputAction(cz.msebera.android.httpclient.params.HttpParams) -> getMalformedInputAction
    void setMalformedInputAction(cz.msebera.android.httpclient.params.HttpParams,java.nio.charset.CodingErrorAction) -> setMalformedInputAction
    java.nio.charset.CodingErrorAction getUnmappableInputAction(cz.msebera.android.httpclient.params.HttpParams) -> getUnmappableInputAction
    void setUnmappableInputAction(cz.msebera.android.httpclient.params.HttpParams,java.nio.charset.CodingErrorAction) -> setUnmappableInputAction
cz.msebera.android.httpclient.params.SyncBasicHttpParams -> cz.msebera.android.httpclient.params.SyncBasicHttpParams:
    long serialVersionUID -> serialVersionUID
    boolean removeParameter(java.lang.String) -> removeParameter
    cz.msebera.android.httpclient.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    java.lang.Object getParameter(java.lang.String) -> getParameter
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    void clear() -> clear
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.pool.AbstractConnPool -> cz.msebera.android.httpclient.pool.AbstractConnPool:
    java.util.concurrent.locks.Lock lock -> lock
    cz.msebera.android.httpclient.pool.ConnFactory connFactory -> connFactory
    java.util.Map routeToPool -> routeToPool
    java.util.Set leased -> leased
    java.util.LinkedList available -> available
    java.util.LinkedList pending -> pending
    java.util.Map maxPerRoute -> maxPerRoute
    boolean isShutDown -> isShutDown
    int defaultMaxPerRoute -> defaultMaxPerRoute
    int maxTotal -> maxTotal
    cz.msebera.android.httpclient.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
    void onLease(cz.msebera.android.httpclient.pool.PoolEntry) -> onLease
    void onRelease(cz.msebera.android.httpclient.pool.PoolEntry) -> onRelease
    boolean isShutdown() -> isShutdown
    void shutdown() -> shutdown
    cz.msebera.android.httpclient.pool.RouteSpecificPool getPool(java.lang.Object) -> getPool
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object,cz.msebera.android.httpclient.concurrent.FutureCallback) -> lease
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object) -> lease
    cz.msebera.android.httpclient.pool.PoolEntry getPoolEntryBlocking(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,cz.msebera.android.httpclient.pool.PoolEntryFuture) -> getPoolEntryBlocking
    void release(cz.msebera.android.httpclient.pool.PoolEntry,boolean) -> release
    int getMax(java.lang.Object) -> getMax
    void setMaxTotal(int) -> setMaxTotal
    int getMaxTotal() -> getMaxTotal
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    cz.msebera.android.httpclient.pool.PoolStats getTotalStats() -> getTotalStats
    cz.msebera.android.httpclient.pool.PoolStats getStats(java.lang.Object) -> getStats
    void enumAvailable(cz.msebera.android.httpclient.pool.PoolEntryCallback) -> enumAvailable
    void enumLeased(cz.msebera.android.httpclient.pool.PoolEntryCallback) -> enumLeased
    void purgePoolMap() -> purgePoolMap
    void closeIdle(long,java.util.concurrent.TimeUnit) -> closeIdle
    void closeExpired() -> closeExpired
    java.lang.String toString() -> toString
    void release(java.lang.Object,boolean) -> release
    cz.msebera.android.httpclient.pool.PoolEntry access$000(cz.msebera.android.httpclient.pool.AbstractConnPool,java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,cz.msebera.android.httpclient.pool.PoolEntryFuture) -> access$000
cz.msebera.android.httpclient.pool.AbstractConnPool$1 -> cz.msebera.android.httpclient.pool.AbstractConnPool$1:
    java.lang.Object val$route -> val$route
    cz.msebera.android.httpclient.pool.AbstractConnPool this$0 -> this$0
    cz.msebera.android.httpclient.pool.PoolEntry createEntry(java.lang.Object) -> createEntry
cz.msebera.android.httpclient.pool.AbstractConnPool$2 -> cz.msebera.android.httpclient.pool.AbstractConnPool$2:
    java.lang.Object val$route -> val$route
    java.lang.Object val$state -> val$state
    cz.msebera.android.httpclient.pool.AbstractConnPool this$0 -> this$0
    cz.msebera.android.httpclient.pool.PoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    java.lang.Object getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
cz.msebera.android.httpclient.pool.AbstractConnPool$3 -> cz.msebera.android.httpclient.pool.AbstractConnPool$3:
    long val$deadline -> val$deadline
    cz.msebera.android.httpclient.pool.AbstractConnPool this$0 -> this$0
    void process(cz.msebera.android.httpclient.pool.PoolEntry) -> process
cz.msebera.android.httpclient.pool.AbstractConnPool$4 -> cz.msebera.android.httpclient.pool.AbstractConnPool$4:
    long val$now -> val$now
    cz.msebera.android.httpclient.pool.AbstractConnPool this$0 -> this$0
    void process(cz.msebera.android.httpclient.pool.PoolEntry) -> process
cz.msebera.android.httpclient.pool.ConnFactory -> cz.msebera.android.httpclient.pool.ConnFactory:
    java.lang.Object create(java.lang.Object) -> create
cz.msebera.android.httpclient.pool.ConnPool -> cz.msebera.android.httpclient.pool.ConnPool:
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object,cz.msebera.android.httpclient.concurrent.FutureCallback) -> lease
    void release(java.lang.Object,boolean) -> release
cz.msebera.android.httpclient.pool.ConnPoolControl -> cz.msebera.android.httpclient.pool.ConnPoolControl:
    void setMaxTotal(int) -> setMaxTotal
    int getMaxTotal() -> getMaxTotal
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    cz.msebera.android.httpclient.pool.PoolStats getTotalStats() -> getTotalStats
    cz.msebera.android.httpclient.pool.PoolStats getStats(java.lang.Object) -> getStats
cz.msebera.android.httpclient.pool.PoolEntry -> cz.msebera.android.httpclient.pool.PoolEntry:
    java.lang.String id -> id
    java.lang.Object route -> route
    java.lang.Object conn -> conn
    long created -> created
    long validUnit -> validUnit
    long updated -> updated
    long expiry -> expiry
    java.lang.Object state -> state
    java.lang.String getId() -> getId
    java.lang.Object getRoute() -> getRoute
    java.lang.Object getConnection() -> getConnection
    long getCreated() -> getCreated
    long getValidUnit() -> getValidUnit
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
    long getUpdated() -> getUpdated
    long getExpiry() -> getExpiry
    void updateExpiry(long,java.util.concurrent.TimeUnit) -> updateExpiry
    boolean isExpired(long) -> isExpired
    void close() -> close
    boolean isClosed() -> isClosed
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.pool.PoolEntryCallback -> cz.msebera.android.httpclient.pool.PoolEntryCallback:
    void process(cz.msebera.android.httpclient.pool.PoolEntry) -> process
cz.msebera.android.httpclient.pool.PoolEntryFuture -> cz.msebera.android.httpclient.pool.PoolEntryFuture:
    java.util.concurrent.locks.Lock lock -> lock
    cz.msebera.android.httpclient.concurrent.FutureCallback callback -> callback
    java.util.concurrent.locks.Condition condition -> condition
    boolean cancelled -> cancelled
    boolean completed -> completed
    java.lang.Object result -> result
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    boolean await(java.util.Date) -> await
    void wakeup() -> wakeup
cz.msebera.android.httpclient.pool.PoolStats -> cz.msebera.android.httpclient.pool.PoolStats:
    int leased -> leased
    int pending -> pending
    int available -> available
    int max -> max
    int getLeased() -> getLeased
    int getPending() -> getPending
    int getAvailable() -> getAvailable
    int getMax() -> getMax
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.pool.RouteSpecificPool -> cz.msebera.android.httpclient.pool.RouteSpecificPool:
    java.lang.Object route -> route
    java.util.Set leased -> leased
    java.util.LinkedList available -> available
    java.util.LinkedList pending -> pending
    cz.msebera.android.httpclient.pool.PoolEntry createEntry(java.lang.Object) -> createEntry
    java.lang.Object getRoute() -> getRoute
    int getLeasedCount() -> getLeasedCount
    int getPendingCount() -> getPendingCount
    int getAvailableCount() -> getAvailableCount
    int getAllocatedCount() -> getAllocatedCount
    cz.msebera.android.httpclient.pool.PoolEntry getFree(java.lang.Object) -> getFree
    cz.msebera.android.httpclient.pool.PoolEntry getLastUsed() -> getLastUsed
    boolean remove(cz.msebera.android.httpclient.pool.PoolEntry) -> remove
    void free(cz.msebera.android.httpclient.pool.PoolEntry,boolean) -> free
    cz.msebera.android.httpclient.pool.PoolEntry add(java.lang.Object) -> add
    void queue(cz.msebera.android.httpclient.pool.PoolEntryFuture) -> queue
    cz.msebera.android.httpclient.pool.PoolEntryFuture nextPending() -> nextPending
    void unqueue(cz.msebera.android.httpclient.pool.PoolEntryFuture) -> unqueue
    void shutdown() -> shutdown
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.protocol.BasicHttpContext -> cz.msebera.android.httpclient.protocol.BasicHttpContext:
    cz.msebera.android.httpclient.protocol.HttpContext parentContext -> parentContext
    java.util.Map map -> map
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void clear() -> clear
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.protocol.BasicHttpProcessor -> cz.msebera.android.httpclient.protocol.BasicHttpProcessor:
    java.util.List requestInterceptors -> requestInterceptors
    java.util.List responseInterceptors -> responseInterceptors
    void addRequestInterceptor(cz.msebera.android.httpclient.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(cz.msebera.android.httpclient.HttpRequestInterceptor,int) -> addRequestInterceptor
    void addResponseInterceptor(cz.msebera.android.httpclient.HttpResponseInterceptor,int) -> addResponseInterceptor
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void addInterceptor(cz.msebera.android.httpclient.HttpRequestInterceptor) -> addInterceptor
    void addInterceptor(cz.msebera.android.httpclient.HttpRequestInterceptor,int) -> addInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    cz.msebera.android.httpclient.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void addResponseInterceptor(cz.msebera.android.httpclient.HttpResponseInterceptor) -> addResponseInterceptor
    void addInterceptor(cz.msebera.android.httpclient.HttpResponseInterceptor) -> addInterceptor
    void addInterceptor(cz.msebera.android.httpclient.HttpResponseInterceptor,int) -> addInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    cz.msebera.android.httpclient.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void setInterceptors(java.util.List) -> setInterceptors
    void clearInterceptors() -> clearInterceptors
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
    void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
    void copyInterceptors(cz.msebera.android.httpclient.protocol.BasicHttpProcessor) -> copyInterceptors
    cz.msebera.android.httpclient.protocol.BasicHttpProcessor copy() -> copy
    java.lang.Object clone() -> clone
cz.msebera.android.httpclient.protocol.ChainBuilder -> cz.msebera.android.httpclient.protocol.ChainBuilder:
    java.util.LinkedList list -> list
    java.util.Map uniqueClasses -> uniqueClasses
    void ensureUnique(java.lang.Object) -> ensureUnique
    cz.msebera.android.httpclient.protocol.ChainBuilder addFirst(java.lang.Object) -> addFirst
    cz.msebera.android.httpclient.protocol.ChainBuilder addLast(java.lang.Object) -> addLast
    cz.msebera.android.httpclient.protocol.ChainBuilder addAllFirst(java.util.Collection) -> addAllFirst
    cz.msebera.android.httpclient.protocol.ChainBuilder addAllFirst(java.lang.Object[]) -> addAllFirst
    cz.msebera.android.httpclient.protocol.ChainBuilder addAllLast(java.util.Collection) -> addAllLast
    cz.msebera.android.httpclient.protocol.ChainBuilder addAllLast(java.lang.Object[]) -> addAllLast
    java.util.LinkedList build() -> build
cz.msebera.android.httpclient.protocol.DefaultedHttpContext -> cz.msebera.android.httpclient.protocol.DefaultedHttpContext:
    cz.msebera.android.httpclient.protocol.HttpContext local -> local
    cz.msebera.android.httpclient.protocol.HttpContext defaults -> defaults
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    cz.msebera.android.httpclient.protocol.HttpContext getDefaults() -> getDefaults
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.protocol.ExecutionContext -> cz.msebera.android.httpclient.protocol.ExecutionContext:
    java.lang.String HTTP_CONNECTION -> HTTP_CONNECTION
    java.lang.String HTTP_REQUEST -> HTTP_REQUEST
    java.lang.String HTTP_RESPONSE -> HTTP_RESPONSE
    java.lang.String HTTP_TARGET_HOST -> HTTP_TARGET_HOST
    java.lang.String HTTP_PROXY_HOST -> HTTP_PROXY_HOST
    java.lang.String HTTP_REQ_SENT -> HTTP_REQ_SENT
cz.msebera.android.httpclient.protocol.HTTP -> cz.msebera.android.httpclient.protocol.HTTP:
    int CR -> CR
    int LF -> LF
    int SP -> SP
    int HT -> HT
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String CONTENT_LEN -> CONTENT_LEN
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String EXPECT_DIRECTIVE -> EXPECT_DIRECTIVE
    java.lang.String CONN_DIRECTIVE -> CONN_DIRECTIVE
    java.lang.String TARGET_HOST -> TARGET_HOST
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String DATE_HEADER -> DATE_HEADER
    java.lang.String SERVER_HEADER -> SERVER_HEADER
    java.lang.String EXPECT_CONTINUE -> EXPECT_CONTINUE
    java.lang.String CONN_CLOSE -> CONN_CLOSE
    java.lang.String CONN_KEEP_ALIVE -> CONN_KEEP_ALIVE
    java.lang.String CHUNK_CODING -> CHUNK_CODING
    java.lang.String IDENTITY_CODING -> IDENTITY_CODING
    java.nio.charset.Charset DEF_CONTENT_CHARSET -> DEF_CONTENT_CHARSET
    java.nio.charset.Charset DEF_PROTOCOL_CHARSET -> DEF_PROTOCOL_CHARSET
    java.lang.String UTF_8 -> UTF_8
    java.lang.String UTF_16 -> UTF_16
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String ASCII -> ASCII
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String DEFAULT_CONTENT_CHARSET -> DEFAULT_CONTENT_CHARSET
    java.lang.String DEFAULT_PROTOCOL_CHARSET -> DEFAULT_PROTOCOL_CHARSET
    java.lang.String OCTET_STREAM_TYPE -> OCTET_STREAM_TYPE
    java.lang.String PLAIN_TEXT_TYPE -> PLAIN_TEXT_TYPE
    java.lang.String CHARSET_PARAM -> CHARSET_PARAM
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    boolean isWhitespace(char) -> isWhitespace
cz.msebera.android.httpclient.protocol.HttpContext -> cz.msebera.android.httpclient.protocol.HttpContext:
    java.lang.String RESERVED_PREFIX -> RESERVED_PREFIX
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
cz.msebera.android.httpclient.protocol.HttpCoreContext -> cz.msebera.android.httpclient.protocol.HttpCoreContext:
    java.lang.String HTTP_CONNECTION -> HTTP_CONNECTION
    java.lang.String HTTP_REQUEST -> HTTP_REQUEST
    java.lang.String HTTP_RESPONSE -> HTTP_RESPONSE
    java.lang.String HTTP_TARGET_HOST -> HTTP_TARGET_HOST
    java.lang.String HTTP_REQ_SENT -> HTTP_REQ_SENT
    cz.msebera.android.httpclient.protocol.HttpContext context -> context
    cz.msebera.android.httpclient.protocol.HttpCoreContext create() -> create
    cz.msebera.android.httpclient.protocol.HttpCoreContext adapt(cz.msebera.android.httpclient.protocol.HttpContext) -> adapt
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    java.lang.Object getAttribute(java.lang.String,java.lang.Class) -> getAttribute
    cz.msebera.android.httpclient.HttpConnection getConnection(java.lang.Class) -> getConnection
    cz.msebera.android.httpclient.HttpConnection getConnection() -> getConnection
    cz.msebera.android.httpclient.HttpRequest getRequest() -> getRequest
    boolean isRequestSent() -> isRequestSent
    cz.msebera.android.httpclient.HttpResponse getResponse() -> getResponse
    void setTargetHost(cz.msebera.android.httpclient.HttpHost) -> setTargetHost
    cz.msebera.android.httpclient.HttpHost getTargetHost() -> getTargetHost
cz.msebera.android.httpclient.protocol.HttpDateGenerator -> cz.msebera.android.httpclient.protocol.HttpDateGenerator:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.util.TimeZone GMT -> GMT
    java.text.DateFormat dateformat -> dateformat
    long dateAsLong -> dateAsLong
    java.lang.String dateAsText -> dateAsText
    java.lang.String getCurrentDate() -> getCurrentDate
cz.msebera.android.httpclient.protocol.HttpExpectationVerifier -> cz.msebera.android.httpclient.protocol.HttpExpectationVerifier:
    void verify(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> verify
cz.msebera.android.httpclient.protocol.HttpProcessor -> cz.msebera.android.httpclient.protocol.HttpProcessor:
cz.msebera.android.httpclient.protocol.HttpProcessorBuilder -> cz.msebera.android.httpclient.protocol.HttpProcessorBuilder:
    cz.msebera.android.httpclient.protocol.ChainBuilder requestChainBuilder -> requestChainBuilder
    cz.msebera.android.httpclient.protocol.ChainBuilder responseChainBuilder -> responseChainBuilder
    cz.msebera.android.httpclient.protocol.HttpProcessorBuilder create() -> create
    cz.msebera.android.httpclient.protocol.ChainBuilder getRequestChainBuilder() -> getRequestChainBuilder
    cz.msebera.android.httpclient.protocol.ChainBuilder getResponseChainBuilder() -> getResponseChainBuilder
    cz.msebera.android.httpclient.protocol.HttpProcessorBuilder addFirst(cz.msebera.android.httpclient.HttpRequestInterceptor) -> addFirst
    cz.msebera.android.httpclient.protocol.HttpProcessorBuilder addLast(cz.msebera.android.httpclient.HttpRequestInterceptor) -> addLast
    cz.msebera.android.httpclient.protocol.HttpProcessorBuilder add(cz.msebera.android.httpclient.HttpRequestInterceptor) -> add
    cz.msebera.android.httpclient.protocol.HttpProcessorBuilder addAllFirst(cz.msebera.android.httpclient.HttpRequestInterceptor[]) -> addAllFirst
    cz.msebera.android.httpclient.protocol.HttpProcessorBuilder addAllLast(cz.msebera.android.httpclient.HttpRequestInterceptor[]) -> addAllLast
    cz.msebera.android.httpclient.protocol.HttpProcessorBuilder addAll(cz.msebera.android.httpclient.HttpRequestInterceptor[]) -> addAll
    cz.msebera.android.httpclient.protocol.HttpProcessorBuilder addFirst(cz.msebera.android.httpclient.HttpResponseInterceptor) -> addFirst
    cz.msebera.android.httpclient.protocol.HttpProcessorBuilder addLast(cz.msebera.android.httpclient.HttpResponseInterceptor) -> addLast
    cz.msebera.android.httpclient.protocol.HttpProcessorBuilder add(cz.msebera.android.httpclient.HttpResponseInterceptor) -> add
    cz.msebera.android.httpclient.protocol.HttpProcessorBuilder addAllFirst(cz.msebera.android.httpclient.HttpResponseInterceptor[]) -> addAllFirst
    cz.msebera.android.httpclient.protocol.HttpProcessorBuilder addAllLast(cz.msebera.android.httpclient.HttpResponseInterceptor[]) -> addAllLast
    cz.msebera.android.httpclient.protocol.HttpProcessorBuilder addAll(cz.msebera.android.httpclient.HttpResponseInterceptor[]) -> addAll
    cz.msebera.android.httpclient.protocol.HttpProcessor build() -> build
cz.msebera.android.httpclient.protocol.HttpRequestExecutor -> cz.msebera.android.httpclient.protocol.HttpRequestExecutor:
    int DEFAULT_WAIT_FOR_CONTINUE -> DEFAULT_WAIT_FOR_CONTINUE
    int waitForContinue -> waitForContinue
    boolean canResponseHaveBody(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse) -> canResponseHaveBody
    cz.msebera.android.httpclient.HttpResponse execute(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.protocol.HttpContext) -> execute
    void closeConnection(cz.msebera.android.httpclient.HttpClientConnection) -> closeConnection
    void preProcess(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpProcessor,cz.msebera.android.httpclient.protocol.HttpContext) -> preProcess
    cz.msebera.android.httpclient.HttpResponse doSendRequest(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.protocol.HttpContext) -> doSendRequest
    cz.msebera.android.httpclient.HttpResponse doReceiveResponse(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpClientConnection,cz.msebera.android.httpclient.protocol.HttpContext) -> doReceiveResponse
    void postProcess(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpProcessor,cz.msebera.android.httpclient.protocol.HttpContext) -> postProcess
cz.msebera.android.httpclient.protocol.HttpRequestHandler -> cz.msebera.android.httpclient.protocol.HttpRequestHandler:
    void handle(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> handle
cz.msebera.android.httpclient.protocol.HttpRequestHandlerMapper -> cz.msebera.android.httpclient.protocol.HttpRequestHandlerMapper:
    cz.msebera.android.httpclient.protocol.HttpRequestHandler lookup(cz.msebera.android.httpclient.HttpRequest) -> lookup
cz.msebera.android.httpclient.protocol.HttpRequestHandlerRegistry -> cz.msebera.android.httpclient.protocol.HttpRequestHandlerRegistry:
    cz.msebera.android.httpclient.protocol.UriPatternMatcher matcher -> matcher
    void register(java.lang.String,cz.msebera.android.httpclient.protocol.HttpRequestHandler) -> register
    void unregister(java.lang.String) -> unregister
    void setHandlers(java.util.Map) -> setHandlers
    java.util.Map getHandlers() -> getHandlers
    cz.msebera.android.httpclient.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
cz.msebera.android.httpclient.protocol.HttpRequestHandlerResolver -> cz.msebera.android.httpclient.protocol.HttpRequestHandlerResolver:
    cz.msebera.android.httpclient.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
cz.msebera.android.httpclient.protocol.HttpRequestInterceptorList -> cz.msebera.android.httpclient.protocol.HttpRequestInterceptorList:
    void addRequestInterceptor(cz.msebera.android.httpclient.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(cz.msebera.android.httpclient.HttpRequestInterceptor,int) -> addRequestInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    cz.msebera.android.httpclient.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
cz.msebera.android.httpclient.protocol.HttpResponseInterceptorList -> cz.msebera.android.httpclient.protocol.HttpResponseInterceptorList:
    void addResponseInterceptor(cz.msebera.android.httpclient.HttpResponseInterceptor) -> addResponseInterceptor
    void addResponseInterceptor(cz.msebera.android.httpclient.HttpResponseInterceptor,int) -> addResponseInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    cz.msebera.android.httpclient.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
cz.msebera.android.httpclient.protocol.HttpService -> cz.msebera.android.httpclient.protocol.HttpService:
    cz.msebera.android.httpclient.params.HttpParams params -> params
    cz.msebera.android.httpclient.protocol.HttpProcessor processor -> processor
    cz.msebera.android.httpclient.protocol.HttpRequestHandlerMapper handlerMapper -> handlerMapper
    cz.msebera.android.httpclient.ConnectionReuseStrategy connStrategy -> connStrategy
    cz.msebera.android.httpclient.HttpResponseFactory responseFactory -> responseFactory
    cz.msebera.android.httpclient.protocol.HttpExpectationVerifier expectationVerifier -> expectationVerifier
    void setHttpProcessor(cz.msebera.android.httpclient.protocol.HttpProcessor) -> setHttpProcessor
    void setConnReuseStrategy(cz.msebera.android.httpclient.ConnectionReuseStrategy) -> setConnReuseStrategy
    void setResponseFactory(cz.msebera.android.httpclient.HttpResponseFactory) -> setResponseFactory
    void setParams(cz.msebera.android.httpclient.params.HttpParams) -> setParams
    void setHandlerResolver(cz.msebera.android.httpclient.protocol.HttpRequestHandlerResolver) -> setHandlerResolver
    void setExpectationVerifier(cz.msebera.android.httpclient.protocol.HttpExpectationVerifier) -> setExpectationVerifier
    cz.msebera.android.httpclient.params.HttpParams getParams() -> getParams
    void handleRequest(cz.msebera.android.httpclient.HttpServerConnection,cz.msebera.android.httpclient.protocol.HttpContext) -> handleRequest
    void handleException(cz.msebera.android.httpclient.HttpException,cz.msebera.android.httpclient.HttpResponse) -> handleException
    void doService(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> doService
cz.msebera.android.httpclient.protocol.HttpService$HttpRequestHandlerResolverAdapter -> cz.msebera.android.httpclient.protocol.HttpService$HttpRequestHandlerResolverAdapter:
    cz.msebera.android.httpclient.protocol.HttpRequestHandlerResolver resolver -> resolver
    cz.msebera.android.httpclient.protocol.HttpRequestHandler lookup(cz.msebera.android.httpclient.HttpRequest) -> lookup
cz.msebera.android.httpclient.protocol.ImmutableHttpProcessor -> cz.msebera.android.httpclient.protocol.ImmutableHttpProcessor:
    cz.msebera.android.httpclient.HttpRequestInterceptor[] requestInterceptors -> requestInterceptors
    cz.msebera.android.httpclient.HttpResponseInterceptor[] responseInterceptors -> responseInterceptors
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
    void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.RequestConnControl -> cz.msebera.android.httpclient.protocol.RequestConnControl:
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.RequestContent -> cz.msebera.android.httpclient.protocol.RequestContent:
    boolean overwrite -> overwrite
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.RequestDate -> cz.msebera.android.httpclient.protocol.RequestDate:
    cz.msebera.android.httpclient.protocol.HttpDateGenerator DATE_GENERATOR -> DATE_GENERATOR
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.RequestExpectContinue -> cz.msebera.android.httpclient.protocol.RequestExpectContinue:
    boolean activeByDefault -> activeByDefault
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.RequestTargetHost -> cz.msebera.android.httpclient.protocol.RequestTargetHost:
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.RequestUserAgent -> cz.msebera.android.httpclient.protocol.RequestUserAgent:
    java.lang.String userAgent -> userAgent
    void process(cz.msebera.android.httpclient.HttpRequest,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.ResponseConnControl -> cz.msebera.android.httpclient.protocol.ResponseConnControl:
    void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.ResponseContent -> cz.msebera.android.httpclient.protocol.ResponseContent:
    boolean overwrite -> overwrite
    void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.ResponseDate -> cz.msebera.android.httpclient.protocol.ResponseDate:
    cz.msebera.android.httpclient.protocol.HttpDateGenerator DATE_GENERATOR -> DATE_GENERATOR
    void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.ResponseServer -> cz.msebera.android.httpclient.protocol.ResponseServer:
    java.lang.String originServer -> originServer
    void process(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.protocol.HttpContext) -> process
cz.msebera.android.httpclient.protocol.SyncBasicHttpContext -> cz.msebera.android.httpclient.protocol.SyncBasicHttpContext:
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void clear() -> clear
cz.msebera.android.httpclient.protocol.UriHttpRequestHandlerMapper -> cz.msebera.android.httpclient.protocol.UriHttpRequestHandlerMapper:
    cz.msebera.android.httpclient.protocol.UriPatternMatcher matcher -> matcher
    void register(java.lang.String,cz.msebera.android.httpclient.protocol.HttpRequestHandler) -> register
    void unregister(java.lang.String) -> unregister
    java.lang.String getRequestPath(cz.msebera.android.httpclient.HttpRequest) -> getRequestPath
    cz.msebera.android.httpclient.protocol.HttpRequestHandler lookup(cz.msebera.android.httpclient.HttpRequest) -> lookup
cz.msebera.android.httpclient.protocol.UriPatternMatcher -> cz.msebera.android.httpclient.protocol.UriPatternMatcher:
    java.util.Map map -> map
    void register(java.lang.String,java.lang.Object) -> register
    void unregister(java.lang.String) -> unregister
    void setHandlers(java.util.Map) -> setHandlers
    void setObjects(java.util.Map) -> setObjects
    java.util.Map getObjects() -> getObjects
    java.lang.Object lookup(java.lang.String) -> lookup
    boolean matchUriRequestPattern(java.lang.String,java.lang.String) -> matchUriRequestPattern
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.util.Args -> cz.msebera.android.httpclient.util.Args:
    void check(boolean,java.lang.String) -> check
    void check(boolean,java.lang.String,java.lang.Object[]) -> check
    java.lang.Object notNull(java.lang.Object,java.lang.String) -> notNull
    java.lang.CharSequence notEmpty(java.lang.CharSequence,java.lang.String) -> notEmpty
    java.lang.CharSequence notBlank(java.lang.CharSequence,java.lang.String) -> notBlank
    java.util.Collection notEmpty(java.util.Collection,java.lang.String) -> notEmpty
    int positive(int,java.lang.String) -> positive
    long positive(long,java.lang.String) -> positive
    int notNegative(int,java.lang.String) -> notNegative
    long notNegative(long,java.lang.String) -> notNegative
cz.msebera.android.httpclient.util.Asserts -> cz.msebera.android.httpclient.util.Asserts:
    void check(boolean,java.lang.String) -> check
    void check(boolean,java.lang.String,java.lang.Object[]) -> check
    void notNull(java.lang.Object,java.lang.String) -> notNull
    void notEmpty(java.lang.CharSequence,java.lang.String) -> notEmpty
    void notBlank(java.lang.CharSequence,java.lang.String) -> notBlank
cz.msebera.android.httpclient.util.ByteArrayBuffer -> cz.msebera.android.httpclient.util.ByteArrayBuffer:
    long serialVersionUID -> serialVersionUID
    byte[] buffer -> buffer
    int len -> len
    void expand(int) -> expand
    void append(byte[],int,int) -> append
    void append(int) -> append
    void append(char[],int,int) -> append
    void append(cz.msebera.android.httpclient.util.CharArrayBuffer,int,int) -> append
    void clear() -> clear
    byte[] toByteArray() -> toByteArray
    int byteAt(int) -> byteAt
    int capacity() -> capacity
    int length() -> length
    void ensureCapacity(int) -> ensureCapacity
    byte[] buffer() -> buffer
    void setLength(int) -> setLength
    boolean isEmpty() -> isEmpty
    boolean isFull() -> isFull
    int indexOf(byte,int,int) -> indexOf
    int indexOf(byte) -> indexOf
cz.msebera.android.httpclient.util.CharArrayBuffer -> cz.msebera.android.httpclient.util.CharArrayBuffer:
    long serialVersionUID -> serialVersionUID
    char[] buffer -> buffer
    int len -> len
    void expand(int) -> expand
    void append(char[],int,int) -> append
    void append(java.lang.String) -> append
    void append(cz.msebera.android.httpclient.util.CharArrayBuffer,int,int) -> append
    void append(cz.msebera.android.httpclient.util.CharArrayBuffer) -> append
    void append(char) -> append
    void append(byte[],int,int) -> append
    void append(cz.msebera.android.httpclient.util.ByteArrayBuffer,int,int) -> append
    void append(java.lang.Object) -> append
    void clear() -> clear
    char[] toCharArray() -> toCharArray
    char charAt(int) -> charAt
    char[] buffer() -> buffer
    int capacity() -> capacity
    int length() -> length
    void ensureCapacity(int) -> ensureCapacity
    void setLength(int) -> setLength
    boolean isEmpty() -> isEmpty
    boolean isFull() -> isFull
    int indexOf(int,int,int) -> indexOf
    int indexOf(int) -> indexOf
    java.lang.String substring(int,int) -> substring
    java.lang.String substringTrimmed(int,int) -> substringTrimmed
    java.lang.String toString() -> toString
cz.msebera.android.httpclient.util.CharsetUtils -> cz.msebera.android.httpclient.util.CharsetUtils:
    java.nio.charset.Charset lookup(java.lang.String) -> lookup
    java.nio.charset.Charset get(java.lang.String) -> get
cz.msebera.android.httpclient.util.EncodingUtils -> cz.msebera.android.httpclient.util.EncodingUtils:
    java.lang.String getString(byte[],int,int,java.lang.String) -> getString
    java.lang.String getString(byte[],java.lang.String) -> getString
    byte[] getBytes(java.lang.String,java.lang.String) -> getBytes
    byte[] getAsciiBytes(java.lang.String) -> getAsciiBytes
    java.lang.String getAsciiString(byte[],int,int) -> getAsciiString
    java.lang.String getAsciiString(byte[]) -> getAsciiString
cz.msebera.android.httpclient.util.EntityUtils -> cz.msebera.android.httpclient.util.EntityUtils:
    void consumeQuietly(cz.msebera.android.httpclient.HttpEntity) -> consumeQuietly
    void consume(cz.msebera.android.httpclient.HttpEntity) -> consume
    void updateEntity(cz.msebera.android.httpclient.HttpResponse,cz.msebera.android.httpclient.HttpEntity) -> updateEntity
    byte[] toByteArray(cz.msebera.android.httpclient.HttpEntity) -> toByteArray
    java.lang.String getContentCharSet(cz.msebera.android.httpclient.HttpEntity) -> getContentCharSet
    java.lang.String getContentMimeType(cz.msebera.android.httpclient.HttpEntity) -> getContentMimeType
    java.lang.String toString(cz.msebera.android.httpclient.HttpEntity,java.nio.charset.Charset) -> toString
    java.lang.String toString(cz.msebera.android.httpclient.HttpEntity,java.lang.String) -> toString
    java.lang.String toString(cz.msebera.android.httpclient.HttpEntity) -> toString
cz.msebera.android.httpclient.util.ExceptionUtils -> cz.msebera.android.httpclient.util.ExceptionUtils:
    java.lang.reflect.Method INIT_CAUSE_METHOD -> INIT_CAUSE_METHOD
    java.lang.reflect.Method getInitCauseMethod() -> getInitCauseMethod
    void initCause(java.lang.Throwable,java.lang.Throwable) -> initCause
cz.msebera.android.httpclient.util.LangUtils -> cz.msebera.android.httpclient.util.LangUtils:
    int HASH_SEED -> HASH_SEED
    int HASH_OFFSET -> HASH_OFFSET
    int hashCode(int,int) -> hashCode
    int hashCode(int,boolean) -> hashCode
    int hashCode(int,java.lang.Object) -> hashCode
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    boolean equals(java.lang.Object[],java.lang.Object[]) -> equals
cz.msebera.android.httpclient.util.NetUtils -> cz.msebera.android.httpclient.util.NetUtils:
    void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
cz.msebera.android.httpclient.util.TextUtils -> cz.msebera.android.httpclient.util.TextUtils:
    boolean isEmpty(java.lang.CharSequence) -> isEmpty
    boolean isBlank(java.lang.CharSequence) -> isBlank
cz.msebera.android.httpclient.util.VersionInfo -> cz.msebera.android.httpclient.util.VersionInfo:
    java.lang.String UNAVAILABLE -> UNAVAILABLE
    java.lang.String VERSION_PROPERTY_FILE -> VERSION_PROPERTY_FILE
    java.lang.String PROPERTY_MODULE -> PROPERTY_MODULE
    java.lang.String PROPERTY_RELEASE -> PROPERTY_RELEASE
    java.lang.String PROPERTY_TIMESTAMP -> PROPERTY_TIMESTAMP
    java.lang.String infoPackage -> infoPackage
    java.lang.String infoModule -> infoModule
    java.lang.String infoRelease -> infoRelease
    java.lang.String infoTimestamp -> infoTimestamp
    java.lang.String infoClassloader -> infoClassloader
    java.lang.String getPackage() -> getPackage
    java.lang.String getModule() -> getModule
    java.lang.String getRelease() -> getRelease
    java.lang.String getTimestamp() -> getTimestamp
    java.lang.String getClassloader() -> getClassloader
    java.lang.String toString() -> toString
    cz.msebera.android.httpclient.util.VersionInfo[] loadVersionInfo(java.lang.String[],java.lang.ClassLoader) -> loadVersionInfo
    cz.msebera.android.httpclient.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader) -> loadVersionInfo
    cz.msebera.android.httpclient.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader) -> fromMap
    java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class) -> getUserAgent
